// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssz/sszProto.proto

package protobuf.clazz.ssz_xp;

public final class Ssz_xpRsp {
  private Ssz_xpRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_id = 1;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional int32 game_type_index = 4;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameTypeIndex();

    // optional int32 game_rule_index = 2;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameRuleIndex();
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameRuleIndex();

    // repeated int32 game_rule_index_ex = 12;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameRuleIndexExList();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexExCount();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexEx(int index);

    // optional string game_rule_des = 3;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    boolean hasGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    java.lang.String getGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameRuleDesBytes();

    // optional int32 game_round = 5;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    int getGameRound();

    // optional int32 cur_round = 6;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    int getCurRound();

    // optional int32 game_status = 7;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    int getGameStatus();

    // optional int64 create_player_id = 8;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    boolean hasCreatePlayerId();
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    long getCreatePlayerId();

    // optional int32 begin_left_card = 9;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    boolean hasBeginLeftCard();
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    int getBeginLeftCard();

    // optional int32 _banker_player = 10;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional string create_name = 11;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    boolean hasCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    java.lang.String getCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateNameBytes();

    // optional int32 cell_score = 13;
    /**
     * <code>optional int32 cell_score = 13;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 13;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();
  }
  /**
   * Protobuf type {@code ssz.RoomInfoSsz}
   *
   * <pre>
   *房间信息
   * </pre>
   */
  public static final class RoomInfoSsz extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoSszOrBuilder {
    // Use RoomInfoSsz.newBuilder() to construct.
    private RoomInfoSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoSsz defaultInstance;
    public static RoomInfoSsz getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              gameRuleIndex_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              gameRuleDes_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              curRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gameStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createPlayerId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              beginLeftCard_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              BankerPlayer_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              createName_ = input.readBytes();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameRuleIndexEx_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              cellScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomInfoSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomInfoSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoSsz> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoSsz>() {
      public RoomInfoSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_id = 1;
    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 game_type_index = 4;
    public static final int GAME_TYPE_INDEX_FIELD_NUMBER = 4;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 game_rule_index = 2;
    public static final int GAME_RULE_INDEX_FIELD_NUMBER = 2;
    private int gameRuleIndex_;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameRuleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameRuleIndex() {
      return gameRuleIndex_;
    }

    // repeated int32 game_rule_index_ex = 12;
    public static final int GAME_RULE_INDEX_EX_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> gameRuleIndexEx_;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameRuleIndexExList() {
      return gameRuleIndexEx_;
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexExCount() {
      return gameRuleIndexEx_.size();
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexEx(int index) {
      return gameRuleIndexEx_.get(index);
    }

    // optional string game_rule_des = 3;
    public static final int GAME_RULE_DES_FIELD_NUMBER = 3;
    private java.lang.Object gameRuleDes_;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public boolean hasGameRuleDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public java.lang.String getGameRuleDes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameRuleDes_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameRuleDesBytes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameRuleDes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round = 5;
    public static final int GAME_ROUND_FIELD_NUMBER = 5;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 cur_round = 6;
    public static final int CUR_ROUND_FIELD_NUMBER = 6;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_status = 7;
    public static final int GAME_STATUS_FIELD_NUMBER = 7;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int64 create_player_id = 8;
    public static final int CREATE_PLAYER_ID_FIELD_NUMBER = 8;
    private long createPlayerId_;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public boolean hasCreatePlayerId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public long getCreatePlayerId() {
      return createPlayerId_;
    }

    // optional int32 begin_left_card = 9;
    public static final int BEGIN_LEFT_CARD_FIELD_NUMBER = 9;
    private int beginLeftCard_;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public boolean hasBeginLeftCard() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public int getBeginLeftCard() {
      return beginLeftCard_;
    }

    // optional int32 _banker_player = 10;
    public static final int _BANKER_PLAYER_FIELD_NUMBER = 10;
    private int BankerPlayer_;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return BankerPlayer_;
    }

    // optional string create_name = 11;
    public static final int CREATE_NAME_FIELD_NUMBER = 11;
    private java.lang.Object createName_;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public boolean hasCreateName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public java.lang.String getCreateName() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateNameBytes() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 cell_score = 13;
    public static final int CELL_SCORE_FIELD_NUMBER = 13;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 13;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 cell_score = 13;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    private void initFields() {
      roomId_ = 0;
      gameTypeIndex_ = 0;
      gameRuleIndex_ = 0;
      gameRuleIndexEx_ = java.util.Collections.emptyList();
      gameRuleDes_ = "";
      gameRound_ = 0;
      curRound_ = 0;
      gameStatus_ = 0;
      createPlayerId_ = 0L;
      beginLeftCard_ = 0;
      BankerPlayer_ = 0;
      createName_ = "";
      cellScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCreateNameBytes());
      }
      for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
        output.writeInt32(12, gameRuleIndexEx_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, cellScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCreateNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameRuleIndexEx_.get(i));
        }
        size += dataSize;
        size += 1 * getGameRuleIndexExList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, cellScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.RoomInfoSsz}
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomInfoSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomInfoSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRuleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRuleDes_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        createPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        beginLeftCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        BankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createName_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomInfoSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRuleIndex_ = gameRuleIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameRuleIndexEx_ = gameRuleIndexEx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameRuleDes_ = gameRuleDes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createPlayerId_ = createPlayerId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.beginLeftCard_ = beginLeftCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.BankerPlayer_ = BankerPlayer_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.createName_ = createName_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.cellScore_ = cellScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasGameRuleIndex()) {
          setGameRuleIndex(other.getGameRuleIndex());
        }
        if (!other.gameRuleIndexEx_.isEmpty()) {
          if (gameRuleIndexEx_.isEmpty()) {
            gameRuleIndexEx_ = other.gameRuleIndexEx_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameRuleIndexExIsMutable();
            gameRuleIndexEx_.addAll(other.gameRuleIndexEx_);
          }
          onChanged();
        }
        if (other.hasGameRuleDes()) {
          bitField0_ |= 0x00000010;
          gameRuleDes_ = other.gameRuleDes_;
          onChanged();
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasCreatePlayerId()) {
          setCreatePlayerId(other.getCreatePlayerId());
        }
        if (other.hasBeginLeftCard()) {
          setBeginLeftCard(other.getBeginLeftCard());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCreateName()) {
          bitField0_ |= 0x00000800;
          createName_ = other.createName_;
          onChanged();
        }
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_id = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_type_index = 4;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_rule_index = 2;
      private int gameRuleIndex_ ;
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameRuleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameRuleIndex() {
        return gameRuleIndex_;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameRuleIndex(int value) {
        bitField0_ |= 0x00000004;
        gameRuleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameRuleIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 game_rule_index_ex = 12;
      private java.util.List<java.lang.Integer> gameRuleIndexEx_ = java.util.Collections.emptyList();
      private void ensureGameRuleIndexExIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>(gameRuleIndexEx_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameRuleIndexExList() {
        return java.util.Collections.unmodifiableList(gameRuleIndexEx_);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexExCount() {
        return gameRuleIndexEx_.size();
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexEx(int index) {
        return gameRuleIndexEx_.get(index);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder setGameRuleIndexEx(
          int index, int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addGameRuleIndexEx(int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addAllGameRuleIndexEx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameRuleIndexExIsMutable();
        super.addAll(values, gameRuleIndexEx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder clearGameRuleIndexEx() {
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional string game_rule_des = 3;
      private java.lang.Object gameRuleDes_ = "";
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public boolean hasGameRuleDes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public java.lang.String getGameRuleDes() {
        java.lang.Object ref = gameRuleDes_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameRuleDes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameRuleDesBytes() {
        java.lang.Object ref = gameRuleDes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameRuleDes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder clearGameRuleDes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRuleDes_ = getDefaultInstance().getGameRuleDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round = 5;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000020;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_round = 6;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000040;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 7;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000080;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int64 create_player_id = 8;
      private long createPlayerId_ ;
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public boolean hasCreatePlayerId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public long getCreatePlayerId() {
        return createPlayerId_;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder setCreatePlayerId(long value) {
        bitField0_ |= 0x00000100;
        createPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder clearCreatePlayerId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        createPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 begin_left_card = 9;
      private int beginLeftCard_ ;
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public boolean hasBeginLeftCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public int getBeginLeftCard() {
        return beginLeftCard_;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder setBeginLeftCard(int value) {
        bitField0_ |= 0x00000200;
        beginLeftCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder clearBeginLeftCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        beginLeftCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 _banker_player = 10;
      private int BankerPlayer_ ;
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return BankerPlayer_;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000400;
        BankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        BankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional string create_name = 11;
      private java.lang.Object createName_ = "";
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public boolean hasCreateName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public java.lang.String getCreateName() {
        java.lang.Object ref = createName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateNameBytes() {
        java.lang.Object ref = createName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder clearCreateName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createName_ = getDefaultInstance().getCreateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }

      // optional int32 cell_score = 13;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 13;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 cell_score = 13;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 13;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00001000;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 13;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00001000);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.RoomInfoSsz)
    }

    static {
      defaultInstance = new RoomInfoSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.RoomInfoSsz)
  }

  public interface RoomPlayerResponseSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code ssz.RoomPlayerResponseSsz}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseSsz extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseSszOrBuilder {
    // Use RoomPlayerResponseSsz.newBuilder() to construct.
    private RoomPlayerResponseSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseSsz defaultInstance;
    public static RoomPlayerResponseSsz getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomPlayerResponseSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomPlayerResponseSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseSsz> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseSsz>() {
      public RoomPlayerResponseSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.RoomPlayerResponseSsz}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomPlayerResponseSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomPlayerResponseSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_RoomPlayerResponseSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.RoomPlayerResponseSsz)
    }

    static {
      defaultInstance = new RoomPlayerResponseSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.RoomPlayerResponseSsz)
  }

  public interface PukeGameEndSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .ssz.RoomInfoSsz room_info = 1;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 first_score = 6;
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstScoreList();
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    int getFirstScoreCount();
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    int getFirstScore(int index);

    // repeated int32 second_score = 7;
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getSecondScoreList();
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    int getSecondScoreCount();
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    int getSecondScore(int index);

    // repeated int32 three_score = 8;
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getThreeScoreList();
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    int getThreeScoreCount();
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    int getThreeScore(int index);

    // repeated int32 end_score = 9;
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 10;
    /**
     * <code>optional int32 player_num = 10;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 10;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 11;
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .ssz.RoomPlayerResponseSsz players = 12;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> 
        getPlayersList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index);
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 banker_player = 19;
    /**
     * <code>optional int32 banker_player = 19;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 19;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    int getBankerPlayer();

    // repeated int32 all_end_score = 13;
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated int32 end_score_max = 14;
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreMaxList();
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMaxCount();
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMax(int index);

    // repeated int32 win_num = 15;
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinNumList();
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNumCount();
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNum(int index);

    // repeated int32 lose_num = 16;
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoseNumList();
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNumCount();
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNum(int index);

    // repeated int32 draw_num = 17;
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getDrawNumList();
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getDrawNumCount();
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getDrawNum(int index);

    // repeated int32 jetton_score = 18;
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    int getJettonScore(int index);
  }
  /**
   * Protobuf type {@code ssz.PukeGameEndSsz}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndSsz extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndSszOrBuilder {
    // Use PukeGameEndSsz.newBuilder() to construct.
    private PukeGameEndSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndSsz defaultInstance;
    public static PukeGameEndSsz getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                firstScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              firstScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                firstScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                secondScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              secondScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                secondScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                secondScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                threeScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              threeScore_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                threeScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                threeScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>();
                mutable_bitField0_ |= 0x00000800;
              }
              players_.add(input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              endScoreMax_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScoreMax_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              winNum_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              loseNum_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                loseNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                drawNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              drawNum_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                drawNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                drawNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00000020;
              bankerPlayer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          firstScore_ = java.util.Collections.unmodifiableList(firstScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          secondScore_ = java.util.Collections.unmodifiableList(secondScore_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          threeScore_ = java.util.Collections.unmodifiableList(threeScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          drawNum_ = java.util.Collections.unmodifiableList(drawNum_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_PukeGameEndSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_PukeGameEndSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndSsz> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndSsz>() {
      public PukeGameEndSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .ssz.RoomInfoSsz room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 first_score = 6;
    public static final int FIRST_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> firstScore_;
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstScoreList() {
      return firstScore_;
    }
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    public int getFirstScoreCount() {
      return firstScore_.size();
    }
    /**
     * <code>repeated int32 first_score = 6;</code>
     *
     * <pre>
     *第一道分数
     * </pre>
     */
    public int getFirstScore(int index) {
      return firstScore_.get(index);
    }

    // repeated int32 second_score = 7;
    public static final int SECOND_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> secondScore_;
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSecondScoreList() {
      return secondScore_;
    }
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    public int getSecondScoreCount() {
      return secondScore_.size();
    }
    /**
     * <code>repeated int32 second_score = 7;</code>
     *
     * <pre>
     *第二道分数
     * </pre>
     */
    public int getSecondScore(int index) {
      return secondScore_.get(index);
    }

    // repeated int32 three_score = 8;
    public static final int THREE_SCORE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> threeScore_;
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getThreeScoreList() {
      return threeScore_;
    }
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    public int getThreeScoreCount() {
      return threeScore_.size();
    }
    /**
     * <code>repeated int32 three_score = 8;</code>
     *
     * <pre>
     *第三道分数
     * </pre>
     */
    public int getThreeScore(int index) {
      return threeScore_.get(index);
    }

    // repeated int32 end_score = 9;
    public static final int END_SCORE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 9;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 10;
    public static final int PLAYER_NUM_FIELD_NUMBER = 10;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 10;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 10;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 11;
    public static final int REASON_FIELD_NUMBER = 11;
    private int reason_;
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .ssz.RoomPlayerResponseSsz players = 12;
    public static final int PLAYERS_FIELD_NUMBER = 12;
    private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 banker_player = 19;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 19;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 19;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 banker_player = 19;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // repeated int32 all_end_score = 13;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated int32 end_score_max = 14;
    public static final int END_SCORE_MAX_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> endScoreMax_;
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreMaxList() {
      return endScoreMax_;
    }
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMaxCount() {
      return endScoreMax_.size();
    }
    /**
     * <code>repeated int32 end_score_max = 14;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMax(int index) {
      return endScoreMax_.get(index);
    }

    // repeated int32 win_num = 15;
    public static final int WIN_NUM_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> winNum_;
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinNumList() {
      return winNum_;
    }
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNumCount() {
      return winNum_.size();
    }
    /**
     * <code>repeated int32 win_num = 15;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNum(int index) {
      return winNum_.get(index);
    }

    // repeated int32 lose_num = 16;
    public static final int LOSE_NUM_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> loseNum_;
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoseNumList() {
      return loseNum_;
    }
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNumCount() {
      return loseNum_.size();
    }
    /**
     * <code>repeated int32 lose_num = 16;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNum(int index) {
      return loseNum_.get(index);
    }

    // repeated int32 draw_num = 17;
    public static final int DRAW_NUM_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> drawNum_;
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDrawNumList() {
      return drawNum_;
    }
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getDrawNumCount() {
      return drawNum_.size();
    }
    /**
     * <code>repeated int32 draw_num = 17;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getDrawNum(int index) {
      return drawNum_.get(index);
    }

    // repeated int32 jetton_score = 18;
    public static final int JETTON_SCORE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 18;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      firstScore_ = java.util.Collections.emptyList();
      secondScore_ = java.util.Collections.emptyList();
      threeScore_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      bankerPlayer_ = 0;
      allEndScore_ = java.util.Collections.emptyList();
      endScoreMax_ = java.util.Collections.emptyList();
      winNum_ = java.util.Collections.emptyList();
      loseNum_ = java.util.Collections.emptyList();
      drawNum_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < firstScore_.size(); i++) {
        output.writeInt32(6, firstScore_.get(i));
      }
      for (int i = 0; i < secondScore_.size(); i++) {
        output.writeInt32(7, secondScore_.get(i));
      }
      for (int i = 0; i < threeScore_.size(); i++) {
        output.writeInt32(8, threeScore_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(9, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(10, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(11, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(12, players_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(13, allEndScore_.get(i));
      }
      for (int i = 0; i < endScoreMax_.size(); i++) {
        output.writeInt32(14, endScoreMax_.get(i));
      }
      for (int i = 0; i < winNum_.size(); i++) {
        output.writeInt32(15, winNum_.get(i));
      }
      for (int i = 0; i < loseNum_.size(); i++) {
        output.writeInt32(16, loseNum_.get(i));
      }
      for (int i = 0; i < drawNum_.size(); i++) {
        output.writeInt32(17, drawNum_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(18, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(19, bankerPlayer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstScore_.get(i));
        }
        size += dataSize;
        size += 1 * getFirstScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < secondScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(secondScore_.get(i));
        }
        size += dataSize;
        size += 1 * getSecondScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < threeScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(threeScore_.get(i));
        }
        size += dataSize;
        size += 1 * getThreeScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScoreMax_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScoreMax_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreMaxList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winNum_.get(i));
        }
        size += dataSize;
        size += 1 * getWinNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loseNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loseNum_.get(i));
        }
        size += dataSize;
        size += 2 * getLoseNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < drawNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(drawNum_.get(i));
        }
        size += dataSize;
        size += 2 * getDrawNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 2 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, bankerPlayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.PukeGameEndSsz}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_PukeGameEndSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_PukeGameEndSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        firstScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        secondScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        threeScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          playersBuilder_.clear();
        }
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        drawNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_PukeGameEndSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          firstScore_ = java.util.Collections.unmodifiableList(firstScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.firstScore_ = firstScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          secondScore_ = java.util.Collections.unmodifiableList(secondScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.secondScore_ = secondScore_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          threeScore_ = java.util.Collections.unmodifiableList(threeScore_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.threeScore_ = threeScore_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.allEndScore_ = allEndScore_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.endScoreMax_ = endScoreMax_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.winNum_ = winNum_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.loseNum_ = loseNum_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          drawNum_ = java.util.Collections.unmodifiableList(drawNum_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.drawNum_ = drawNum_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.firstScore_.isEmpty()) {
          if (firstScore_.isEmpty()) {
            firstScore_ = other.firstScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFirstScoreIsMutable();
            firstScore_.addAll(other.firstScore_);
          }
          onChanged();
        }
        if (!other.secondScore_.isEmpty()) {
          if (secondScore_.isEmpty()) {
            secondScore_ = other.secondScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSecondScoreIsMutable();
            secondScore_.addAll(other.secondScore_);
          }
          onChanged();
        }
        if (!other.threeScore_.isEmpty()) {
          if (threeScore_.isEmpty()) {
            threeScore_ = other.threeScore_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureThreeScoreIsMutable();
            threeScore_.addAll(other.threeScore_);
          }
          onChanged();
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000800);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (!other.endScoreMax_.isEmpty()) {
          if (endScoreMax_.isEmpty()) {
            endScoreMax_ = other.endScoreMax_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureEndScoreMaxIsMutable();
            endScoreMax_.addAll(other.endScoreMax_);
          }
          onChanged();
        }
        if (!other.winNum_.isEmpty()) {
          if (winNum_.isEmpty()) {
            winNum_ = other.winNum_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureWinNumIsMutable();
            winNum_.addAll(other.winNum_);
          }
          onChanged();
        }
        if (!other.loseNum_.isEmpty()) {
          if (loseNum_.isEmpty()) {
            loseNum_ = other.loseNum_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureLoseNumIsMutable();
            loseNum_.addAll(other.loseNum_);
          }
          onChanged();
        }
        if (!other.drawNum_.isEmpty()) {
          if (drawNum_.isEmpty()) {
            drawNum_ = other.drawNum_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDrawNumIsMutable();
            drawNum_.addAll(other.drawNum_);
          }
          onChanged();
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.PukeGameEndSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .ssz.RoomInfoSsz room_info = 1;
      private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 first_score = 6;
      private java.util.List<java.lang.Integer> firstScore_ = java.util.Collections.emptyList();
      private void ensureFirstScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          firstScore_ = new java.util.ArrayList<java.lang.Integer>(firstScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstScoreList() {
        return java.util.Collections.unmodifiableList(firstScore_);
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public int getFirstScoreCount() {
        return firstScore_.size();
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public int getFirstScore(int index) {
        return firstScore_.get(index);
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public Builder setFirstScore(
          int index, int value) {
        ensureFirstScoreIsMutable();
        firstScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public Builder addFirstScore(int value) {
        ensureFirstScoreIsMutable();
        firstScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public Builder addAllFirstScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstScoreIsMutable();
        super.addAll(values, firstScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 first_score = 6;</code>
       *
       * <pre>
       *第一道分数
       * </pre>
       */
      public Builder clearFirstScore() {
        firstScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 second_score = 7;
      private java.util.List<java.lang.Integer> secondScore_ = java.util.Collections.emptyList();
      private void ensureSecondScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          secondScore_ = new java.util.ArrayList<java.lang.Integer>(secondScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSecondScoreList() {
        return java.util.Collections.unmodifiableList(secondScore_);
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public int getSecondScoreCount() {
        return secondScore_.size();
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public int getSecondScore(int index) {
        return secondScore_.get(index);
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public Builder setSecondScore(
          int index, int value) {
        ensureSecondScoreIsMutable();
        secondScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public Builder addSecondScore(int value) {
        ensureSecondScoreIsMutable();
        secondScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public Builder addAllSecondScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSecondScoreIsMutable();
        super.addAll(values, secondScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 second_score = 7;</code>
       *
       * <pre>
       *第二道分数
       * </pre>
       */
      public Builder clearSecondScore() {
        secondScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 three_score = 8;
      private java.util.List<java.lang.Integer> threeScore_ = java.util.Collections.emptyList();
      private void ensureThreeScoreIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          threeScore_ = new java.util.ArrayList<java.lang.Integer>(threeScore_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getThreeScoreList() {
        return java.util.Collections.unmodifiableList(threeScore_);
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public int getThreeScoreCount() {
        return threeScore_.size();
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public int getThreeScore(int index) {
        return threeScore_.get(index);
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public Builder setThreeScore(
          int index, int value) {
        ensureThreeScoreIsMutable();
        threeScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public Builder addThreeScore(int value) {
        ensureThreeScoreIsMutable();
        threeScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public Builder addAllThreeScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureThreeScoreIsMutable();
        super.addAll(values, threeScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 three_score = 8;</code>
       *
       * <pre>
       *第三道分数
       * </pre>
       */
      public Builder clearThreeScore() {
        threeScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 end_score = 9;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 9;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 player_num = 10;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 10;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 player_num = 10;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 10;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000200;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 10;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 11;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000400;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000400);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .ssz.RoomPlayerResponseSsz players = 12;
      private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>(players_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> playersBuilder_;

      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder addPlayers(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 12;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 banker_player = 19;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 19;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 banker_player = 19;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 19;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00001000;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 19;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00001000);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 13;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 end_score_max = 14;
      private java.util.List<java.lang.Integer> endScoreMax_ = java.util.Collections.emptyList();
      private void ensureEndScoreMaxIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = new java.util.ArrayList<java.lang.Integer>(endScoreMax_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreMaxList() {
        return java.util.Collections.unmodifiableList(endScoreMax_);
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMaxCount() {
        return endScoreMax_.size();
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMax(int index) {
        return endScoreMax_.get(index);
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder setEndScoreMax(
          int index, int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addEndScoreMax(int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addAllEndScoreMax(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreMaxIsMutable();
        super.addAll(values, endScoreMax_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 14;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder clearEndScoreMax() {
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 win_num = 15;
      private java.util.List<java.lang.Integer> winNum_ = java.util.Collections.emptyList();
      private void ensureWinNumIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = new java.util.ArrayList<java.lang.Integer>(winNum_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinNumList() {
        return java.util.Collections.unmodifiableList(winNum_);
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNumCount() {
        return winNum_.size();
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNum(int index) {
        return winNum_.get(index);
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder setWinNum(
          int index, int value) {
        ensureWinNumIsMutable();
        winNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addWinNum(int value) {
        ensureWinNumIsMutable();
        winNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addAllWinNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinNumIsMutable();
        super.addAll(values, winNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 15;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder clearWinNum() {
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 lose_num = 16;
      private java.util.List<java.lang.Integer> loseNum_ = java.util.Collections.emptyList();
      private void ensureLoseNumIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = new java.util.ArrayList<java.lang.Integer>(loseNum_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoseNumList() {
        return java.util.Collections.unmodifiableList(loseNum_);
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNumCount() {
        return loseNum_.size();
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNum(int index) {
        return loseNum_.get(index);
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder setLoseNum(
          int index, int value) {
        ensureLoseNumIsMutable();
        loseNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addLoseNum(int value) {
        ensureLoseNumIsMutable();
        loseNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addAllLoseNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoseNumIsMutable();
        super.addAll(values, loseNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 16;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder clearLoseNum() {
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 draw_num = 17;
      private java.util.List<java.lang.Integer> drawNum_ = java.util.Collections.emptyList();
      private void ensureDrawNumIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          drawNum_ = new java.util.ArrayList<java.lang.Integer>(drawNum_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDrawNumList() {
        return java.util.Collections.unmodifiableList(drawNum_);
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getDrawNumCount() {
        return drawNum_.size();
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getDrawNum(int index) {
        return drawNum_.get(index);
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder setDrawNum(
          int index, int value) {
        ensureDrawNumIsMutable();
        drawNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addDrawNum(int value) {
        ensureDrawNumIsMutable();
        drawNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addAllDrawNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDrawNumIsMutable();
        super.addAll(values, drawNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 draw_num = 17;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder clearDrawNum() {
        drawNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 18;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 18;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.PukeGameEndSsz)
    }

    static {
      defaultInstance = new PukeGameEndSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.PukeGameEndSsz)
  }

  public interface TableResponseSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 cell_score = 3;
    /**
     * <code>optional int32 cell_score = 3;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 3;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();

    // optional .ssz.RoomInfoSsz room_info = 4;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder();

    // repeated .ssz.RoomPlayerResponseSsz players = 5;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> 
        getPlayersList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index);
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 card_count = 6;
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 7;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional int32 display_time = 8;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 jetton_score = 9;
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 game_status = 10;
    /**
     * <code>optional int32 game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    int getGameStatus();

    // repeated bool _can_call_banker = 11;
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    java.util.List<java.lang.Boolean> getCanCallBankerList();
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    int getCanCallBankerCount();
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    boolean getCanCallBanker(int index);

    // repeated bool _is_open_card = 12;
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsOpenCardList();
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    int getIsOpenCardCount();
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    boolean getIsOpenCard(int index);

    // repeated bool _is_call_banker = 13;
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    java.util.List<java.lang.Boolean> getIsCallBankerList();
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    int getIsCallBankerCount();
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    boolean getIsCallBanker(int index);

    // repeated bool _is_jetton_score = 14;
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    java.util.List<java.lang.Boolean> getIsJettonScoreList();
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    int getIsJettonScoreCount();
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    boolean getIsJettonScore(int index);
  }
  /**
   * Protobuf type {@code ssz.TableResponseSsz}
   */
  public static final class TableResponseSsz extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseSszOrBuilder {
    // Use TableResponseSsz.newBuilder() to construct.
    private TableResponseSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseSsz defaultInstance;
    public static TableResponseSsz getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cellScore_ = input.readInt32();
              break;
            }
            case 34: {
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000040;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              displayTime_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              gameStatus_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000400;
              }
              CanCallBanker_.add(input.readBool());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                CanCallBanker_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                IsOpenCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000800;
              }
              IsOpenCard_.add(input.readBool());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                IsOpenCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                IsOpenCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                IsCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              IsCallBanker_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                IsCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                IsCallBanker_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                IsJettonScore_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              IsJettonScore_.add(input.readBool());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                IsJettonScore_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                IsJettonScore_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          IsOpenCard_ = java.util.Collections.unmodifiableList(IsOpenCard_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          IsCallBanker_ = java.util.Collections.unmodifiableList(IsCallBanker_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          IsJettonScore_ = java.util.Collections.unmodifiableList(IsJettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_TableResponseSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_TableResponseSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseSsz> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseSsz>() {
      public TableResponseSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 cell_score = 3;
    public static final int CELL_SCORE_FIELD_NUMBER = 3;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 3;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 cell_score = 3;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // optional .ssz.RoomInfoSsz room_info = 4;
    public static final int ROOM_INFO_FIELD_NUMBER = 4;
    private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .ssz.RoomPlayerResponseSsz players = 5;
    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 card_count = 6;
    public static final int CARD_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 7;
    public static final int CARDS_DATA_FIELD_NUMBER = 7;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional int32 display_time = 8;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 8;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 jetton_score = 9;
    public static final int JETTON_SCORE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 game_status = 10;
    public static final int GAME_STATUS_FIELD_NUMBER = 10;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // repeated bool _can_call_banker = 11;
    public static final int _CAN_CALL_BANKER_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Boolean> CanCallBanker_;
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getCanCallBankerList() {
      return CanCallBanker_;
    }
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public int getCanCallBankerCount() {
      return CanCallBanker_.size();
    }
    /**
     * <code>repeated bool _can_call_banker = 11;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public boolean getCanCallBanker(int index) {
      return CanCallBanker_.get(index);
    }

    // repeated bool _is_open_card = 12;
    public static final int _IS_OPEN_CARD_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Boolean> IsOpenCard_;
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsOpenCardList() {
      return IsOpenCard_;
    }
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    public int getIsOpenCardCount() {
      return IsOpenCard_.size();
    }
    /**
     * <code>repeated bool _is_open_card = 12;</code>
     *
     * <pre>
     *玩家开牌
     * </pre>
     */
    public boolean getIsOpenCard(int index) {
      return IsOpenCard_.get(index);
    }

    // repeated bool _is_call_banker = 13;
    public static final int _IS_CALL_BANKER_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> IsCallBanker_;
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    public java.util.List<java.lang.Boolean>
        getIsCallBankerList() {
      return IsCallBanker_;
    }
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    public int getIsCallBankerCount() {
      return IsCallBanker_.size();
    }
    /**
     * <code>repeated bool _is_call_banker = 13;</code>
     */
    public boolean getIsCallBanker(int index) {
      return IsCallBanker_.get(index);
    }

    // repeated bool _is_jetton_score = 14;
    public static final int _IS_JETTON_SCORE_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Boolean> IsJettonScore_;
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    public java.util.List<java.lang.Boolean>
        getIsJettonScoreList() {
      return IsJettonScore_;
    }
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    public int getIsJettonScoreCount() {
      return IsJettonScore_.size();
    }
    /**
     * <code>repeated bool _is_jetton_score = 14;</code>
     */
    public boolean getIsJettonScore(int index) {
      return IsJettonScore_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      cellScore_ = 0;
      roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
      gameStatus_ = 0;
      CanCallBanker_ = java.util.Collections.emptyList();
      IsOpenCard_ = java.util.Collections.emptyList();
      IsCallBanker_ = java.util.Collections.emptyList();
      IsJettonScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cellScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(6, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(7, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, displayTime_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(9, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, gameStatus_);
      }
      for (int i = 0; i < CanCallBanker_.size(); i++) {
        output.writeBool(11, CanCallBanker_.get(i));
      }
      for (int i = 0; i < IsOpenCard_.size(); i++) {
        output.writeBool(12, IsOpenCard_.get(i));
      }
      for (int i = 0; i < IsCallBanker_.size(); i++) {
        output.writeBool(13, IsCallBanker_.get(i));
      }
      for (int i = 0; i < IsJettonScore_.size(); i++) {
        output.writeBool(14, IsJettonScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cellScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, gameStatus_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getCanCallBankerList().size();
        size += dataSize;
        size += 1 * getCanCallBankerList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsOpenCardList().size();
        size += dataSize;
        size += 1 * getIsOpenCardList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsCallBankerList().size();
        size += dataSize;
        size += 1 * getIsCallBankerList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsJettonScoreList().size();
        size += dataSize;
        size += 1 * getIsJettonScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.TableResponseSsz}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_TableResponseSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_TableResponseSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          cardsDataBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        IsOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        IsCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        IsJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_TableResponseSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cellScore_ = cellScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gameStatus_ = gameStatus_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.CanCallBanker_ = CanCallBanker_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          IsOpenCard_ = java.util.Collections.unmodifiableList(IsOpenCard_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.IsOpenCard_ = IsOpenCard_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          IsCallBanker_ = java.util.Collections.unmodifiableList(IsCallBanker_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.IsCallBanker_ = IsCallBanker_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          IsJettonScore_ = java.util.Collections.unmodifiableList(IsJettonScore_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.IsJettonScore_ = IsJettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000040);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (!other.CanCallBanker_.isEmpty()) {
          if (CanCallBanker_.isEmpty()) {
            CanCallBanker_ = other.CanCallBanker_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureCanCallBankerIsMutable();
            CanCallBanker_.addAll(other.CanCallBanker_);
          }
          onChanged();
        }
        if (!other.IsOpenCard_.isEmpty()) {
          if (IsOpenCard_.isEmpty()) {
            IsOpenCard_ = other.IsOpenCard_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureIsOpenCardIsMutable();
            IsOpenCard_.addAll(other.IsOpenCard_);
          }
          onChanged();
        }
        if (!other.IsCallBanker_.isEmpty()) {
          if (IsCallBanker_.isEmpty()) {
            IsCallBanker_ = other.IsCallBanker_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureIsCallBankerIsMutable();
            IsCallBanker_.addAll(other.IsCallBanker_);
          }
          onChanged();
        }
        if (!other.IsJettonScore_.isEmpty()) {
          if (IsJettonScore_.isEmpty()) {
            IsJettonScore_ = other.IsJettonScore_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureIsJettonScoreIsMutable();
            IsJettonScore_.addAll(other.IsJettonScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.TableResponseSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cell_score = 3;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 3;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cell_score = 3;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 3;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000004;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 3;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // optional .ssz.RoomInfoSsz room_info = 4;
      private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              roomInfo_ != protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .ssz.RoomPlayerResponseSsz players = 5;
      private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> playersBuilder_;

      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder addPlayers(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 5;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 card_count = 6;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 7;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional int32 display_time = 8;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000080;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 9;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 game_status = 10;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000200;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // repeated bool _can_call_banker = 11;
      private java.util.List<java.lang.Boolean> CanCallBanker_ = java.util.Collections.emptyList();
      private void ensureCanCallBankerIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>(CanCallBanker_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getCanCallBankerList() {
        return java.util.Collections.unmodifiableList(CanCallBanker_);
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public int getCanCallBankerCount() {
        return CanCallBanker_.size();
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public boolean getCanCallBanker(int index) {
        return CanCallBanker_.get(index);
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder setCanCallBanker(
          int index, boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addCanCallBanker(boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addAllCanCallBanker(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureCanCallBankerIsMutable();
        super.addAll(values, CanCallBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 11;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder clearCanCallBanker() {
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated bool _is_open_card = 12;
      private java.util.List<java.lang.Boolean> IsOpenCard_ = java.util.Collections.emptyList();
      private void ensureIsOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          IsOpenCard_ = new java.util.ArrayList<java.lang.Boolean>(IsOpenCard_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsOpenCardList() {
        return java.util.Collections.unmodifiableList(IsOpenCard_);
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public int getIsOpenCardCount() {
        return IsOpenCard_.size();
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public boolean getIsOpenCard(int index) {
        return IsOpenCard_.get(index);
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public Builder setIsOpenCard(
          int index, boolean value) {
        ensureIsOpenCardIsMutable();
        IsOpenCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public Builder addIsOpenCard(boolean value) {
        ensureIsOpenCardIsMutable();
        IsOpenCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public Builder addAllIsOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsOpenCardIsMutable();
        super.addAll(values, IsOpenCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_open_card = 12;</code>
       *
       * <pre>
       *玩家开牌
       * </pre>
       */
      public Builder clearIsOpenCard() {
        IsOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated bool _is_call_banker = 13;
      private java.util.List<java.lang.Boolean> IsCallBanker_ = java.util.Collections.emptyList();
      private void ensureIsCallBankerIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          IsCallBanker_ = new java.util.ArrayList<java.lang.Boolean>(IsCallBanker_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public java.util.List<java.lang.Boolean>
          getIsCallBankerList() {
        return java.util.Collections.unmodifiableList(IsCallBanker_);
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public int getIsCallBankerCount() {
        return IsCallBanker_.size();
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public boolean getIsCallBanker(int index) {
        return IsCallBanker_.get(index);
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public Builder setIsCallBanker(
          int index, boolean value) {
        ensureIsCallBankerIsMutable();
        IsCallBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public Builder addIsCallBanker(boolean value) {
        ensureIsCallBankerIsMutable();
        IsCallBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public Builder addAllIsCallBanker(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsCallBankerIsMutable();
        super.addAll(values, IsCallBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_call_banker = 13;</code>
       */
      public Builder clearIsCallBanker() {
        IsCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated bool _is_jetton_score = 14;
      private java.util.List<java.lang.Boolean> IsJettonScore_ = java.util.Collections.emptyList();
      private void ensureIsJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          IsJettonScore_ = new java.util.ArrayList<java.lang.Boolean>(IsJettonScore_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public java.util.List<java.lang.Boolean>
          getIsJettonScoreList() {
        return java.util.Collections.unmodifiableList(IsJettonScore_);
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public int getIsJettonScoreCount() {
        return IsJettonScore_.size();
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public boolean getIsJettonScore(int index) {
        return IsJettonScore_.get(index);
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public Builder setIsJettonScore(
          int index, boolean value) {
        ensureIsJettonScoreIsMutable();
        IsJettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public Builder addIsJettonScore(boolean value) {
        ensureIsJettonScoreIsMutable();
        IsJettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public Builder addAllIsJettonScore(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsJettonScoreIsMutable();
        super.addAll(values, IsJettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _is_jetton_score = 14;</code>
       */
      public Builder clearIsJettonScore() {
        IsJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.TableResponseSsz)
    }

    static {
      defaultInstance = new TableResponseSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.TableResponseSsz)
  }

  public interface Send_Card_DataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cell_score = 1;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();

    // repeated .Int32ArrayResponse cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_count = 3;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // optional .ssz.RoomInfoSsz room_info = 4;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder();

    // optional int32 banker_player = 5;
    /**
     * <code>optional int32 banker_player = 5;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 5;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 display_time = 6;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code ssz.Send_Card_Data}
   */
  public static final class Send_Card_Data extends
      com.google.protobuf.GeneratedMessage
      implements Send_Card_DataOrBuilder {
    // Use Send_Card_Data.newBuilder() to construct.
    private Send_Card_Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Send_Card_Data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Send_Card_Data defaultInstance;
    public static Send_Card_Data getDefaultInstance() {
      return defaultInstance;
    }

    public Send_Card_Data getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Send_Card_Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cellScore_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_Send_Card_Data_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_Send_Card_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.Builder.class);
    }

    public static com.google.protobuf.Parser<Send_Card_Data> PARSER =
        new com.google.protobuf.AbstractParser<Send_Card_Data>() {
      public Send_Card_Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Send_Card_Data(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Send_Card_Data> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cell_score = 1;
    public static final int CELL_SCORE_FIELD_NUMBER = 1;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // repeated .Int32ArrayResponse cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_count = 3;
    public static final int CARD_COUNT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // optional .ssz.RoomInfoSsz room_info = 4;
    public static final int ROOM_INFO_FIELD_NUMBER = 4;
    private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 banker_player = 5;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 5;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 5;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 banker_player = 5;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 display_time = 6;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 6;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      cellScore_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      bankerPlayer_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cellScore_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(2, cardsData_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(3, cardCount_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, roomInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cellScore_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roomInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.Send_Card_Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_Send_Card_Data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_Send_Card_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsDataBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_Send_Card_Data_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cellScore_ = cellScore_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardCount_ = cardCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data.getDefaultInstance()) return this;
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.Send_Card_Data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cell_score = 1;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000001;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_count = 3;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional .ssz.RoomInfoSsz room_info = 4;
      private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              roomInfo_ != protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 banker_player = 5;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 5;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 banker_player = 5;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 5;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000010;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 5;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 6;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000020;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.Send_Card_Data)
    }

    static {
      defaultInstance = new Send_Card_Data(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.Send_Card_Data)
  }

  public interface GameJettonSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cell_score = 1;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();

    // repeated int32 jetton_score = 2;
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    int getJettonScore(int index);

    // optional .ssz.RoomInfoSsz room_info = 3;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder();

    // optional int32 banker_player = 4;
    /**
     * <code>optional int32 banker_player = 4;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 4;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated .ssz.RoomPlayerResponseSsz players = 6;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> 
        getPlayersList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index);
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ssz.GameJettonSsz}
   */
  public static final class GameJettonSsz extends
      com.google.protobuf.GeneratedMessage
      implements GameJettonSszOrBuilder {
    // Use GameJettonSsz.newBuilder() to construct.
    private GameJettonSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameJettonSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameJettonSsz defaultInstance;
    public static GameJettonSsz getDefaultInstance() {
      return defaultInstance;
    }

    public GameJettonSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameJettonSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cellScore_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>();
                mutable_bitField0_ |= 0x00000020;
              }
              players_.add(input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameJettonSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameJettonSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<GameJettonSsz> PARSER =
        new com.google.protobuf.AbstractParser<GameJettonSsz>() {
      public GameJettonSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameJettonSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameJettonSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cell_score = 1;
    public static final int CELL_SCORE_FIELD_NUMBER = 1;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // repeated int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 2;</code>
     *
     * <pre>
     *可下注分数
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional .ssz.RoomInfoSsz room_info = 3;
    public static final int ROOM_INFO_FIELD_NUMBER = 3;
    private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 banker_player = 4;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 4;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 4;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 banker_player = 4;</code>
     *
     * <pre>
     *庄家玩家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated .ssz.RoomPlayerResponseSsz players = 6;
    public static final int PLAYERS_FIELD_NUMBER = 6;
    private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      cellScore_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
      roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      bankerPlayer_ = 0;
      displayTime_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cellScore_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(2, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, roomInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, displayTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(6, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cellScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, roomInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.GameJettonSsz}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameJettonSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameJettonSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameJettonSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cellScore_ = cellScore_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz.getDefaultInstance()) return this;
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000020);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.GameJettonSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cell_score = 1;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000001;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 2;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 2;</code>
       *
       * <pre>
       *可下注分数
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional .ssz.RoomInfoSsz room_info = 3;
      private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              roomInfo_ != protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 banker_player = 4;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 4;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 banker_player = 4;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 4;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000008;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 4;</code>
       *
       * <pre>
       *庄家玩家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .ssz.RoomPlayerResponseSsz players = 6;
      private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>(players_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> playersBuilder_;

      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder addPlayers(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 6;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ssz.GameJettonSsz)
    }

    static {
      defaultInstance = new GameJettonSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.GameJettonSsz)
  }

  public interface GameCallBankerSszOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cell_score = 1;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();

    // optional .ssz.RoomInfoSsz room_info = 2;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo();
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder();

    // repeated .ssz.RoomPlayerResponseSsz players = 3;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> 
        getPlayersList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index);
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 current_player = 5;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // repeated bool _can_call_banker = 6;
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    java.util.List<java.lang.Boolean> getCanCallBankerList();
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    int getCanCallBankerCount();
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    boolean getCanCallBanker(int index);
  }
  /**
   * Protobuf type {@code ssz.GameCallBankerSsz}
   */
  public static final class GameCallBankerSsz extends
      com.google.protobuf.GeneratedMessage
      implements GameCallBankerSszOrBuilder {
    // Use GameCallBankerSsz.newBuilder() to construct.
    private GameCallBankerSsz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameCallBankerSsz(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameCallBankerSsz defaultInstance;
    public static GameCallBankerSsz getDefaultInstance() {
      return defaultInstance;
    }

    public GameCallBankerSsz getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameCallBankerSsz(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cellScore_ = input.readInt32();
              break;
            }
            case 18: {
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              displayTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              CanCallBanker_.add(input.readBool());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                CanCallBanker_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameCallBankerSsz_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameCallBankerSsz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.Builder.class);
    }

    public static com.google.protobuf.Parser<GameCallBankerSsz> PARSER =
        new com.google.protobuf.AbstractParser<GameCallBankerSsz>() {
      public GameCallBankerSsz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameCallBankerSsz(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameCallBankerSsz> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cell_score = 1;
    public static final int CELL_SCORE_FIELD_NUMBER = 1;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // optional .ssz.RoomInfoSsz room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_;
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .ssz.RoomPlayerResponseSsz players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_;
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
     */
    public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 current_player = 5;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 5;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // repeated bool _can_call_banker = 6;
    public static final int _CAN_CALL_BANKER_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Boolean> CanCallBanker_;
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getCanCallBankerList() {
      return CanCallBanker_;
    }
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public int getCanCallBankerCount() {
      return CanCallBanker_.size();
    }
    /**
     * <code>repeated bool _can_call_banker = 6;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public boolean getCanCallBanker(int index) {
      return CanCallBanker_.get(index);
    }

    private void initFields() {
      cellScore_ = 0;
      roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      currentPlayer_ = 0;
      CanCallBanker_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cellScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, currentPlayer_);
      }
      for (int i = 0; i < CanCallBanker_.size(); i++) {
        output.writeBool(6, CanCallBanker_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cellScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, currentPlayer_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getCanCallBankerList().size();
        size += dataSize;
        size += 1 * getCanCallBankerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.GameCallBankerSsz}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSszOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameCallBankerSsz_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameCallBankerSsz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_GameCallBankerSsz_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cellScore_ = cellScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.CanCallBanker_ = CanCallBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz.getDefaultInstance()) return this;
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (!other.CanCallBanker_.isEmpty()) {
          if (CanCallBanker_.isEmpty()) {
            CanCallBanker_ = other.CanCallBanker_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCanCallBankerIsMutable();
            CanCallBanker_.addAll(other.CanCallBanker_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.GameCallBankerSsz) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cell_score = 1;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000001;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // optional .ssz.RoomInfoSsz room_info = 2;
      private protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              roomInfo_ != protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .ssz.RoomInfoSsz room_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomInfoSszOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .ssz.RoomPlayerResponseSsz players = 3;
      private java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> playersBuilder_;

      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.getDefaultInstance());
      }
      /**
       * <code>repeated .ssz.RoomPlayerResponseSsz players = 3;</code>
       */
      public java.util.List<protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSsz.Builder, protobuf.clazz.ssz_xp.Ssz_xpRsp.RoomPlayerResponseSszOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 5;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000010;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated bool _can_call_banker = 6;
      private java.util.List<java.lang.Boolean> CanCallBanker_ = java.util.Collections.emptyList();
      private void ensureCanCallBankerIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>(CanCallBanker_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getCanCallBankerList() {
        return java.util.Collections.unmodifiableList(CanCallBanker_);
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public int getCanCallBankerCount() {
        return CanCallBanker_.size();
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public boolean getCanCallBanker(int index) {
        return CanCallBanker_.get(index);
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder setCanCallBanker(
          int index, boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addCanCallBanker(boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addAllCanCallBanker(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureCanCallBankerIsMutable();
        super.addAll(values, CanCallBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 6;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder clearCanCallBanker() {
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.GameCallBankerSsz)
    }

    static {
      defaultInstance = new GameCallBankerSsz(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.GameCallBankerSsz)
  }

  public interface CallBankerResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 call_banker = 1;
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    boolean hasCallBanker();
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    int getCallBanker();

    // optional int32 opreate_seat_index = 2;
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    int getOpreateSeatIndex();

    // optional int32 banker_seat_index = 3;
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     */
    boolean hasBankerSeatIndex();
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     */
    int getBankerSeatIndex();

    // optional int32 current_seat_index = 4;
    /**
     * <code>optional int32 current_seat_index = 4;</code>
     */
    boolean hasCurrentSeatIndex();
    /**
     * <code>optional int32 current_seat_index = 4;</code>
     */
    int getCurrentSeatIndex();

    // repeated bool _can_call_banker = 5;
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    java.util.List<java.lang.Boolean> getCanCallBankerList();
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    int getCanCallBankerCount();
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    boolean getCanCallBanker(int index);
  }
  /**
   * Protobuf type {@code ssz.CallBankerResult}
   *
   * <pre>
   *叫庄响应
   * </pre>
   */
  public static final class CallBankerResult extends
      com.google.protobuf.GeneratedMessage
      implements CallBankerResultOrBuilder {
    // Use CallBankerResult.newBuilder() to construct.
    private CallBankerResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CallBankerResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CallBankerResult defaultInstance;
    public static CallBankerResult getDefaultInstance() {
      return defaultInstance;
    }

    public CallBankerResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CallBankerResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              callBanker_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bankerSeatIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              currentSeatIndex_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000010;
              }
              CanCallBanker_.add(input.readBool());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                CanCallBanker_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_CallBankerResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_CallBankerResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CallBankerResult> PARSER =
        new com.google.protobuf.AbstractParser<CallBankerResult>() {
      public CallBankerResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallBankerResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CallBankerResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 call_banker = 1;
    public static final int CALL_BANKER_FIELD_NUMBER = 1;
    private int callBanker_;
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    public boolean hasCallBanker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    public int getCallBanker() {
      return callBanker_;
    }

    // optional int32 opreate_seat_index = 2;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 2;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    // optional int32 banker_seat_index = 3;
    public static final int BANKER_SEAT_INDEX_FIELD_NUMBER = 3;
    private int bankerSeatIndex_;
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     */
    public boolean hasBankerSeatIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     */
    public int getBankerSeatIndex() {
      return bankerSeatIndex_;
    }

    // optional int32 current_seat_index = 4;
    public static final int CURRENT_SEAT_INDEX_FIELD_NUMBER = 4;
    private int currentSeatIndex_;
    /**
     * <code>optional int32 current_seat_index = 4;</code>
     */
    public boolean hasCurrentSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 current_seat_index = 4;</code>
     */
    public int getCurrentSeatIndex() {
      return currentSeatIndex_;
    }

    // repeated bool _can_call_banker = 5;
    public static final int _CAN_CALL_BANKER_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Boolean> CanCallBanker_;
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getCanCallBankerList() {
      return CanCallBanker_;
    }
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public int getCanCallBankerCount() {
      return CanCallBanker_.size();
    }
    /**
     * <code>repeated bool _can_call_banker = 5;</code>
     *
     * <pre>
     *玩家能否抢庄
     * </pre>
     */
    public boolean getCanCallBanker(int index) {
      return CanCallBanker_.get(index);
    }

    private void initFields() {
      callBanker_ = 0;
      opreateSeatIndex_ = 0;
      bankerSeatIndex_ = 0;
      currentSeatIndex_ = 0;
      CanCallBanker_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, callBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, bankerSeatIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, currentSeatIndex_);
      }
      for (int i = 0; i < CanCallBanker_.size(); i++) {
        output.writeBool(5, CanCallBanker_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, callBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bankerSeatIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, currentSeatIndex_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getCanCallBankerList().size();
        size += dataSize;
        size += 1 * getCanCallBankerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.CallBankerResult}
     *
     * <pre>
     *叫庄响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_CallBankerResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_CallBankerResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_CallBankerResult_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callBanker_ = callBanker_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerSeatIndex_ = bankerSeatIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currentSeatIndex_ = currentSeatIndex_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          CanCallBanker_ = java.util.Collections.unmodifiableList(CanCallBanker_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.CanCallBanker_ = CanCallBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult.getDefaultInstance()) return this;
        if (other.hasCallBanker()) {
          setCallBanker(other.getCallBanker());
        }
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        if (other.hasBankerSeatIndex()) {
          setBankerSeatIndex(other.getBankerSeatIndex());
        }
        if (other.hasCurrentSeatIndex()) {
          setCurrentSeatIndex(other.getCurrentSeatIndex());
        }
        if (!other.CanCallBanker_.isEmpty()) {
          if (CanCallBanker_.isEmpty()) {
            CanCallBanker_ = other.CanCallBanker_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCanCallBankerIsMutable();
            CanCallBanker_.addAll(other.CanCallBanker_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.CallBankerResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 call_banker = 1;
      private int callBanker_ ;
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public boolean hasCallBanker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public int getCallBanker() {
        return callBanker_;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public Builder setCallBanker(int value) {
        bitField0_ |= 0x00000001;
        callBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public Builder clearCallBanker() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callBanker_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opreate_seat_index = 2;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_seat_index = 3;
      private int bankerSeatIndex_ ;
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       */
      public boolean hasBankerSeatIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       */
      public int getBankerSeatIndex() {
        return bankerSeatIndex_;
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       */
      public Builder setBankerSeatIndex(int value) {
        bitField0_ |= 0x00000004;
        bankerSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       */
      public Builder clearBankerSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_seat_index = 4;
      private int currentSeatIndex_ ;
      /**
       * <code>optional int32 current_seat_index = 4;</code>
       */
      public boolean hasCurrentSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 current_seat_index = 4;</code>
       */
      public int getCurrentSeatIndex() {
        return currentSeatIndex_;
      }
      /**
       * <code>optional int32 current_seat_index = 4;</code>
       */
      public Builder setCurrentSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        currentSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_seat_index = 4;</code>
       */
      public Builder clearCurrentSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated bool _can_call_banker = 5;
      private java.util.List<java.lang.Boolean> CanCallBanker_ = java.util.Collections.emptyList();
      private void ensureCanCallBankerIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          CanCallBanker_ = new java.util.ArrayList<java.lang.Boolean>(CanCallBanker_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getCanCallBankerList() {
        return java.util.Collections.unmodifiableList(CanCallBanker_);
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public int getCanCallBankerCount() {
        return CanCallBanker_.size();
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public boolean getCanCallBanker(int index) {
        return CanCallBanker_.get(index);
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder setCanCallBanker(
          int index, boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addCanCallBanker(boolean value) {
        ensureCanCallBankerIsMutable();
        CanCallBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder addAllCanCallBanker(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureCanCallBankerIsMutable();
        super.addAll(values, CanCallBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool _can_call_banker = 5;</code>
       *
       * <pre>
       *玩家能否抢庄
       * </pre>
       */
      public Builder clearCanCallBanker() {
        CanCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.CallBankerResult)
    }

    static {
      defaultInstance = new CallBankerResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.CallBankerResult)
  }

  public interface JettonResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_score = 1;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    int getJettonScore();

    // optional int32 opreate_seat_index = 2;
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    int getOpreateSeatIndex();
  }
  /**
   * Protobuf type {@code ssz.JettonResult}
   *
   * <pre>
   *冲分响应
   * </pre>
   */
  public static final class JettonResult extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultOrBuilder {
    // Use JettonResult.newBuilder() to construct.
    private JettonResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResult defaultInstance;
    public static JettonResult getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonScore_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_JettonResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_JettonResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResult> PARSER =
        new com.google.protobuf.AbstractParser<JettonResult>() {
      public JettonResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_score = 1;
    public static final int JETTON_SCORE_FIELD_NUMBER = 1;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // optional int32 opreate_seat_index = 2;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 2;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_seat_index = 2;</code>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    private void initFields() {
      jettonScore_ = 0;
      opreateSeatIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opreateSeatIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opreateSeatIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.JettonResult}
     *
     * <pre>
     *冲分响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_JettonResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_JettonResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_JettonResult_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult.getDefaultInstance()) return this;
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.JettonResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_score = 1;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000001;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opreate_seat_index = 2;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 2;</code>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.JettonResult)
    }

    static {
      defaultInstance = new JettonResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.JettonResult)
  }

  public interface SSZ_OpenCardResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_seat_index = 1;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreateSeatIndex();
  }
  /**
   * Protobuf type {@code ssz.SSZ_OpenCardResult}
   *
   * <pre>
   *开牌响应
   * </pre>
   */
  public static final class SSZ_OpenCardResult extends
      com.google.protobuf.GeneratedMessage
      implements SSZ_OpenCardResultOrBuilder {
    // Use SSZ_OpenCardResult.newBuilder() to construct.
    private SSZ_OpenCardResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSZ_OpenCardResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSZ_OpenCardResult defaultInstance;
    public static SSZ_OpenCardResult getDefaultInstance() {
      return defaultInstance;
    }

    public SSZ_OpenCardResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSZ_OpenCardResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.Builder.class);
    }

    public static com.google.protobuf.Parser<SSZ_OpenCardResult> PARSER =
        new com.google.protobuf.AbstractParser<SSZ_OpenCardResult>() {
      public SSZ_OpenCardResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSZ_OpenCardResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSZ_OpenCardResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_seat_index = 1;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 1;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    private void initFields() {
      opreateSeatIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateSeatIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateSeatIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.SSZ_OpenCardResult}
     *
     * <pre>
     *开牌响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardResult_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult.getDefaultInstance()) return this;
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_seat_index = 1;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.SSZ_OpenCardResult)
    }

    static {
      defaultInstance = new SSZ_OpenCardResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.SSZ_OpenCardResult)
  }

  public interface SSZ_CallBankerRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 call_banker = 1;
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    boolean hasCallBanker();
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    int getCallBanker();
  }
  /**
   * Protobuf type {@code ssz.SSZ_CallBankerRequest}
   *
   * <pre>
   *叫庄请求
   * </pre>
   */
  public static final class SSZ_CallBankerRequest extends
      com.google.protobuf.GeneratedMessage
      implements SSZ_CallBankerRequestOrBuilder {
    // Use SSZ_CallBankerRequest.newBuilder() to construct.
    private SSZ_CallBankerRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSZ_CallBankerRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSZ_CallBankerRequest defaultInstance;
    public static SSZ_CallBankerRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SSZ_CallBankerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSZ_CallBankerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              callBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_CallBankerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_CallBankerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SSZ_CallBankerRequest> PARSER =
        new com.google.protobuf.AbstractParser<SSZ_CallBankerRequest>() {
      public SSZ_CallBankerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSZ_CallBankerRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSZ_CallBankerRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 call_banker = 1;
    public static final int CALL_BANKER_FIELD_NUMBER = 1;
    private int callBanker_;
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    public boolean hasCallBanker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 call_banker = 1;</code>
     */
    public int getCallBanker() {
      return callBanker_;
    }

    private void initFields() {
      callBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, callBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, callBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.SSZ_CallBankerRequest}
     *
     * <pre>
     *叫庄请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_CallBankerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_CallBankerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_CallBankerRequest_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callBanker_ = callBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest.getDefaultInstance()) return this;
        if (other.hasCallBanker()) {
          setCallBanker(other.getCallBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_CallBankerRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 call_banker = 1;
      private int callBanker_ ;
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public boolean hasCallBanker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public int getCallBanker() {
        return callBanker_;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public Builder setCallBanker(int value) {
        bitField0_ |= 0x00000001;
        callBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       */
      public Builder clearCallBanker() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.SSZ_CallBankerRequest)
    }

    static {
      defaultInstance = new SSZ_CallBankerRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.SSZ_CallBankerRequest)
  }

  public interface SSZ_JettonRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_score = 1;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code ssz.SSZ_JettonRequest}
   *
   * <pre>
   *冲分请求
   * </pre>
   */
  public static final class SSZ_JettonRequest extends
      com.google.protobuf.GeneratedMessage
      implements SSZ_JettonRequestOrBuilder {
    // Use SSZ_JettonRequest.newBuilder() to construct.
    private SSZ_JettonRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSZ_JettonRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSZ_JettonRequest defaultInstance;
    public static SSZ_JettonRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SSZ_JettonRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSZ_JettonRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_JettonRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_JettonRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SSZ_JettonRequest> PARSER =
        new com.google.protobuf.AbstractParser<SSZ_JettonRequest>() {
      public SSZ_JettonRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSZ_JettonRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSZ_JettonRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_score = 1;
    public static final int JETTON_SCORE_FIELD_NUMBER = 1;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_score = 1;</code>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.SSZ_JettonRequest}
     *
     * <pre>
     *冲分请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_JettonRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_JettonRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_JettonRequest_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest.getDefaultInstance()) return this;
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_JettonRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_score = 1;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000001;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.SSZ_JettonRequest)
    }

    static {
      defaultInstance = new SSZ_JettonRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.SSZ_JettonRequest)
  }

  public interface SSZ_OpenCardRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 cards_data = 1;
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 card_count = 2;
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount();
  }
  /**
   * Protobuf type {@code ssz.SSZ_OpenCardRequest}
   *
   * <pre>
   *开牌请求
   * </pre>
   */
  public static final class SSZ_OpenCardRequest extends
      com.google.protobuf.GeneratedMessage
      implements SSZ_OpenCardRequestOrBuilder {
    // Use SSZ_OpenCardRequest.newBuilder() to construct.
    private SSZ_OpenCardRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSZ_OpenCardRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSZ_OpenCardRequest defaultInstance;
    public static SSZ_OpenCardRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SSZ_OpenCardRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSZ_OpenCardRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              cardCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SSZ_OpenCardRequest> PARSER =
        new com.google.protobuf.AbstractParser<SSZ_OpenCardRequest>() {
      public SSZ_OpenCardRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSZ_OpenCardRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSZ_OpenCardRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 card_count = 2;
    public static final int CARD_COUNT_FIELD_NUMBER = 2;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(1, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, cardCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssz.SSZ_OpenCardRequest}
     *
     * <pre>
     *开牌请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.class, protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.Builder.class);
      }

      // Construct using protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.internal_static_ssz_SSZ_OpenCardRequest_descriptor;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest getDefaultInstanceForType() {
        return protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.getDefaultInstance();
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest build() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest buildPartial() {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest result = new protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardCount_ = cardCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest) {
          return mergeFrom((protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest other) {
        if (other == protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest.getDefaultInstance()) return this;
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.ssz_xp.Ssz_xpRsp.SSZ_OpenCardRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 cards_data = 1;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 card_count = 2;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000002;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ssz.SSZ_OpenCardRequest)
    }

    static {
      defaultInstance = new SSZ_OpenCardRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ssz.SSZ_OpenCardRequest)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_RoomInfoSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_RoomInfoSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_RoomPlayerResponseSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_RoomPlayerResponseSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_PukeGameEndSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_PukeGameEndSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_TableResponseSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_TableResponseSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_Send_Card_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_Send_Card_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_GameJettonSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_GameJettonSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_GameCallBankerSsz_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_GameCallBankerSsz_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_CallBankerResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_CallBankerResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_JettonResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_JettonResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_SSZ_OpenCardResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_SSZ_OpenCardResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_SSZ_CallBankerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_SSZ_CallBankerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_SSZ_JettonRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_SSZ_JettonRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssz_SSZ_OpenCardRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssz_SSZ_OpenCardRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ssz/sszProto.proto\022\003ssz\032\024basic/protoco" +
      "l.proto\"\263\002\n\013RoomInfoSsz\022\017\n\007room_id\030\001 \001(\005" +
      "\022\027\n\017game_type_index\030\004 \001(\005\022\027\n\017game_rule_i" +
      "ndex\030\002 \001(\005\022\032\n\022game_rule_index_ex\030\014 \003(\005\022\025" +
      "\n\rgame_rule_des\030\003 \001(\t\022\022\n\ngame_round\030\005 \001(" +
      "\005\022\021\n\tcur_round\030\006 \001(\005\022\023\n\013game_status\030\007 \001(" +
      "\005\022\030\n\020create_player_id\030\010 \001(\003\022\027\n\017begin_lef" +
      "t_card\030\t \001(\005\022\026\n\016_banker_player\030\n \001(\005\022\023\n\013" +
      "create_name\030\013 \001(\t\022\022\n\ncell_score\030\r \001(\005\"\230\002" +
      "\n\025RoomPlayerResponseSsz\022\022\n\naccount_id\030\001 ",
      "\001(\003\022\021\n\tuser_name\030\002 \001(\t\022\024\n\014head_img_url\030\003" +
      " \001(\t\022\022\n\nseat_index\030\004 \001(\005\022\n\n\002ip\030\005 \001(\t\022\016\n\006" +
      "online\030\006 \001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005score\030\010 \001(\002" +
      "\022\r\n\005ready\030\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022%\n\rloca" +
      "tionInfor\030\013 \001(\0132\016.LocationInfor\022\022\n\nis_tr" +
      "ustee\030\014 \001(\010\022\r\n\005money\030\r \001(\003\022\014\n\004gold\030\016 \001(\003" +
      "\"\315\003\n\016PukeGameEndSsz\022#\n\troom_info\030\001 \001(\0132\020" +
      ".ssz.RoomInfoSsz\022\021\n\tcur_round\030\002 \001(\005\022\022\n\ng" +
      "ame_round\030\003 \001(\005\022\022\n\ncard_count\030\004 \003(\005\022\'\n\nc" +
      "ards_data\030\005 \003(\0132\023.Int32ArrayResponse\022\023\n\013",
      "first_score\030\006 \003(\005\022\024\n\014second_score\030\007 \003(\005\022" +
      "\023\n\013three_score\030\010 \003(\005\022\021\n\tend_score\030\t \003(\005\022" +
      "\022\n\nplayer_num\030\n \001(\005\022\016\n\006reason\030\013 \001(\005\022+\n\007p" +
      "layers\030\014 \003(\0132\032.ssz.RoomPlayerResponseSsz" +
      "\022\025\n\rbanker_player\030\023 \001(\005\022\025\n\rall_end_score" +
      "\030\r \003(\005\022\025\n\rend_score_max\030\016 \003(\005\022\017\n\007win_num" +
      "\030\017 \003(\005\022\020\n\010lose_num\030\020 \003(\005\022\020\n\010draw_num\030\021 \003" +
      "(\005\022\024\n\014jetton_score\030\022 \003(\005\"\211\003\n\020TableRespon" +
      "seSsz\022\025\n\rbanker_player\030\001 \001(\005\022\026\n\016current_" +
      "player\030\002 \001(\005\022\022\n\ncell_score\030\003 \001(\005\022#\n\troom",
      "_info\030\004 \001(\0132\020.ssz.RoomInfoSsz\022+\n\007players" +
      "\030\005 \003(\0132\032.ssz.RoomPlayerResponseSsz\022\022\n\nca" +
      "rd_count\030\006 \003(\005\022\'\n\ncards_data\030\007 \003(\0132\023.Int" +
      "32ArrayResponse\022\024\n\014display_time\030\010 \001(\005\022\024\n" +
      "\014jetton_score\030\t \003(\005\022\023\n\013game_status\030\n \001(\005" +
      "\022\030\n\020_can_call_banker\030\013 \003(\010\022\025\n\r_is_open_c" +
      "ard\030\014 \003(\010\022\027\n\017_is_call_banker\030\r \003(\010\022\030\n\020_i" +
      "s_jetton_score\030\016 \003(\010\"\263\001\n\016Send_Card_Data\022" +
      "\022\n\ncell_score\030\001 \001(\005\022\'\n\ncards_data\030\002 \003(\0132" +
      "\023.Int32ArrayResponse\022\022\n\ncard_count\030\003 \003(\005",
      "\022#\n\troom_info\030\004 \001(\0132\020.ssz.RoomInfoSsz\022\025\n" +
      "\rbanker_player\030\005 \001(\005\022\024\n\014display_time\030\006 \001" +
      "(\005\"\270\001\n\rGameJettonSsz\022\022\n\ncell_score\030\001 \001(\005" +
      "\022\024\n\014jetton_score\030\002 \003(\005\022#\n\troom_info\030\003 \001(" +
      "\0132\020.ssz.RoomInfoSsz\022\025\n\rbanker_player\030\004 \001" +
      "(\005\022\024\n\014display_time\030\005 \001(\005\022+\n\007players\030\006 \003(" +
      "\0132\032.ssz.RoomPlayerResponseSsz\"\301\001\n\021GameCa" +
      "llBankerSsz\022\022\n\ncell_score\030\001 \001(\005\022#\n\troom_" +
      "info\030\002 \001(\0132\020.ssz.RoomInfoSsz\022+\n\007players\030" +
      "\003 \003(\0132\032.ssz.RoomPlayerResponseSsz\022\024\n\014dis",
      "play_time\030\004 \001(\005\022\026\n\016current_player\030\005 \001(\005\022" +
      "\030\n\020_can_call_banker\030\006 \003(\010\"\224\001\n\020CallBanker" +
      "Result\022\023\n\013call_banker\030\001 \001(\005\022\032\n\022opreate_s" +
      "eat_index\030\002 \001(\005\022\031\n\021banker_seat_index\030\003 \001" +
      "(\005\022\032\n\022current_seat_index\030\004 \001(\005\022\030\n\020_can_c" +
      "all_banker\030\005 \003(\010\"@\n\014JettonResult\022\024\n\014jett" +
      "on_score\030\001 \001(\005\022\032\n\022opreate_seat_index\030\002 \001" +
      "(\005\"0\n\022SSZ_OpenCardResult\022\032\n\022opreate_seat" +
      "_index\030\001 \001(\005\",\n\025SSZ_CallBankerRequest\022\023\n" +
      "\013call_banker\030\001 \001(\005\")\n\021SSZ_JettonRequest\022",
      "\024\n\014jetton_score\030\001 \001(\005\"=\n\023SSZ_OpenCardReq" +
      "uest\022\022\n\ncards_data\030\001 \003(\005\022\022\n\ncard_count\030\002" +
      " \001(\005B\"\n\025protobuf.clazz.ssz_xpB\tSsz_xpRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ssz_RoomInfoSsz_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ssz_RoomInfoSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_RoomInfoSsz_descriptor,
              new java.lang.String[] { "RoomId", "GameTypeIndex", "GameRuleIndex", "GameRuleIndexEx", "GameRuleDes", "GameRound", "CurRound", "GameStatus", "CreatePlayerId", "BeginLeftCard", "BankerPlayer", "CreateName", "CellScore", });
          internal_static_ssz_RoomPlayerResponseSsz_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ssz_RoomPlayerResponseSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_RoomPlayerResponseSsz_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_ssz_PukeGameEndSsz_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ssz_PukeGameEndSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_PukeGameEndSsz_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "FirstScore", "SecondScore", "ThreeScore", "EndScore", "PlayerNum", "Reason", "Players", "BankerPlayer", "AllEndScore", "EndScoreMax", "WinNum", "LoseNum", "DrawNum", "JettonScore", });
          internal_static_ssz_TableResponseSsz_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ssz_TableResponseSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_TableResponseSsz_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "CellScore", "RoomInfo", "Players", "CardCount", "CardsData", "DisplayTime", "JettonScore", "GameStatus", "CanCallBanker", "IsOpenCard", "IsCallBanker", "IsJettonScore", });
          internal_static_ssz_Send_Card_Data_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ssz_Send_Card_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_Send_Card_Data_descriptor,
              new java.lang.String[] { "CellScore", "CardsData", "CardCount", "RoomInfo", "BankerPlayer", "DisplayTime", });
          internal_static_ssz_GameJettonSsz_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_ssz_GameJettonSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_GameJettonSsz_descriptor,
              new java.lang.String[] { "CellScore", "JettonScore", "RoomInfo", "BankerPlayer", "DisplayTime", "Players", });
          internal_static_ssz_GameCallBankerSsz_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_ssz_GameCallBankerSsz_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_GameCallBankerSsz_descriptor,
              new java.lang.String[] { "CellScore", "RoomInfo", "Players", "DisplayTime", "CurrentPlayer", "CanCallBanker", });
          internal_static_ssz_CallBankerResult_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_ssz_CallBankerResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_CallBankerResult_descriptor,
              new java.lang.String[] { "CallBanker", "OpreateSeatIndex", "BankerSeatIndex", "CurrentSeatIndex", "CanCallBanker", });
          internal_static_ssz_JettonResult_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_ssz_JettonResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_JettonResult_descriptor,
              new java.lang.String[] { "JettonScore", "OpreateSeatIndex", });
          internal_static_ssz_SSZ_OpenCardResult_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_ssz_SSZ_OpenCardResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_SSZ_OpenCardResult_descriptor,
              new java.lang.String[] { "OpreateSeatIndex", });
          internal_static_ssz_SSZ_CallBankerRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_ssz_SSZ_CallBankerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_SSZ_CallBankerRequest_descriptor,
              new java.lang.String[] { "CallBanker", });
          internal_static_ssz_SSZ_JettonRequest_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_ssz_SSZ_JettonRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_SSZ_JettonRequest_descriptor,
              new java.lang.String[] { "JettonScore", });
          internal_static_ssz_SSZ_OpenCardRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_ssz_SSZ_OpenCardRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssz_SSZ_OpenCardRequest_descriptor,
              new java.lang.String[] { "CardsData", "CardCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
