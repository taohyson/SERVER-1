// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deh/dehProto.proto

package protobuf.clazz.deh;

public final class DehRsp {
  private DehRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RefreshPlayerStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 player_index = 1;
    /**
     * <code>optional int32 player_index = 1;</code>
     */
    boolean hasPlayerIndex();
    /**
     * <code>optional int32 player_index = 1;</code>
     */
    int getPlayerIndex();

    // optional int32 status = 2;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code deh.RefreshPlayerStatus}
   *
   * <pre>
   *玩家状态
   * </pre>
   */
  public static final class RefreshPlayerStatus extends
      com.google.protobuf.GeneratedMessage
      implements RefreshPlayerStatusOrBuilder {
    // Use RefreshPlayerStatus.newBuilder() to construct.
    private RefreshPlayerStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshPlayerStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshPlayerStatus defaultInstance;
    public static RefreshPlayerStatus getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshPlayerStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshPlayerStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshPlayerStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshPlayerStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.class, protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshPlayerStatus> PARSER =
        new com.google.protobuf.AbstractParser<RefreshPlayerStatus>() {
      public RefreshPlayerStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshPlayerStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshPlayerStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 player_index = 1;
    public static final int PLAYER_INDEX_FIELD_NUMBER = 1;
    private int playerIndex_;
    /**
     * <code>optional int32 player_index = 1;</code>
     */
    public boolean hasPlayerIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 player_index = 1;</code>
     */
    public int getPlayerIndex() {
      return playerIndex_;
    }

    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      playerIndex_ = 0;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.RefreshPlayerStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.RefreshPlayerStatus}
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.RefreshPlayerStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshPlayerStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshPlayerStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.class, protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshPlayerStatus_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.RefreshPlayerStatus getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.RefreshPlayerStatus build() {
        protobuf.clazz.deh.DehRsp.RefreshPlayerStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.RefreshPlayerStatus buildPartial() {
        protobuf.clazz.deh.DehRsp.RefreshPlayerStatus result = new protobuf.clazz.deh.DehRsp.RefreshPlayerStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerIndex_ = playerIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.RefreshPlayerStatus) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.RefreshPlayerStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.RefreshPlayerStatus other) {
        if (other == protobuf.clazz.deh.DehRsp.RefreshPlayerStatus.getDefaultInstance()) return this;
        if (other.hasPlayerIndex()) {
          setPlayerIndex(other.getPlayerIndex());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.RefreshPlayerStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.RefreshPlayerStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 player_index = 1;
      private int playerIndex_ ;
      /**
       * <code>optional int32 player_index = 1;</code>
       */
      public boolean hasPlayerIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 player_index = 1;</code>
       */
      public int getPlayerIndex() {
        return playerIndex_;
      }
      /**
       * <code>optional int32 player_index = 1;</code>
       */
      public Builder setPlayerIndex(int value) {
        bitField0_ |= 0x00000001;
        playerIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_index = 1;</code>
       */
      public Builder clearPlayerIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 2;
      private int status_ ;
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *玩家状态 0free 1ready 2playing 3.留座离桌 4断线
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.RefreshPlayerStatus)
    }

    static {
      defaultInstance = new RefreshPlayerStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.RefreshPlayerStatus)
  }

  public interface RefreshGameStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 status = 1;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
     * </pre>
     */
    int getStatus();

    // optional int32 displaytime = 2;
    /**
     * <code>optional int32 displaytime = 2;</code>
     */
    boolean hasDisplaytime();
    /**
     * <code>optional int32 displaytime = 2;</code>
     */
    int getDisplaytime();
  }
  /**
   * Protobuf type {@code deh.RefreshGameStatus}
   *
   * <pre>
   *游戏状态
   * </pre>
   */
  public static final class RefreshGameStatus extends
      com.google.protobuf.GeneratedMessage
      implements RefreshGameStatusOrBuilder {
    // Use RefreshGameStatus.newBuilder() to construct.
    private RefreshGameStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshGameStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshGameStatus defaultInstance;
    public static RefreshGameStatus getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshGameStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshGameStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              status_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              displaytime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshGameStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshGameStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.RefreshGameStatus.class, protobuf.clazz.deh.DehRsp.RefreshGameStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshGameStatus> PARSER =
        new com.google.protobuf.AbstractParser<RefreshGameStatus>() {
      public RefreshGameStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshGameStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshGameStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 displaytime = 2;
    public static final int DISPLAYTIME_FIELD_NUMBER = 2;
    private int displaytime_;
    /**
     * <code>optional int32 displaytime = 2;</code>
     */
    public boolean hasDisplaytime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 displaytime = 2;</code>
     */
    public int getDisplaytime() {
      return displaytime_;
    }

    private void initFields() {
      status_ = 0;
      displaytime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, displaytime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displaytime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.RefreshGameStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.RefreshGameStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.RefreshGameStatus}
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.RefreshGameStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshGameStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshGameStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.RefreshGameStatus.class, protobuf.clazz.deh.DehRsp.RefreshGameStatus.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.RefreshGameStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        displaytime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_RefreshGameStatus_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.RefreshGameStatus getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.RefreshGameStatus.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.RefreshGameStatus build() {
        protobuf.clazz.deh.DehRsp.RefreshGameStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.RefreshGameStatus buildPartial() {
        protobuf.clazz.deh.DehRsp.RefreshGameStatus result = new protobuf.clazz.deh.DehRsp.RefreshGameStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displaytime_ = displaytime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.RefreshGameStatus) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.RefreshGameStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.RefreshGameStatus other) {
        if (other == protobuf.clazz.deh.DehRsp.RefreshGameStatus.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDisplaytime()) {
          setDisplaytime(other.getDisplaytime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.RefreshGameStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.RefreshGameStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 status = 1;
      private int status_ ;
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0:啥也不处理，游戏状态 1:等待设置簸簸 2:等待扯牌 3.等待玩家扯牌 4:比头牌 5:比尾牌 6:流局 7:隐藏
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 displaytime = 2;
      private int displaytime_ ;
      /**
       * <code>optional int32 displaytime = 2;</code>
       */
      public boolean hasDisplaytime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 displaytime = 2;</code>
       */
      public int getDisplaytime() {
        return displaytime_;
      }
      /**
       * <code>optional int32 displaytime = 2;</code>
       */
      public Builder setDisplaytime(int value) {
        bitField0_ |= 0x00000002;
        displaytime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 displaytime = 2;</code>
       */
      public Builder clearDisplaytime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displaytime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.RefreshGameStatus)
    }

    static {
      defaultInstance = new RefreshGameStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.RefreshGameStatus)
  }

  public interface Refresh_ColockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 displaytime = 1;
    /**
     * <code>optional int32 displaytime = 1;</code>
     */
    boolean hasDisplaytime();
    /**
     * <code>optional int32 displaytime = 1;</code>
     */
    int getDisplaytime();

    // optional int32 type = 2;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     *1显示，2：隐藏
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     *1显示，2：隐藏
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code deh.Refresh_Colock}
   */
  public static final class Refresh_Colock extends
      com.google.protobuf.GeneratedMessage
      implements Refresh_ColockOrBuilder {
    // Use Refresh_Colock.newBuilder() to construct.
    private Refresh_Colock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Refresh_Colock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Refresh_Colock defaultInstance;
    public static Refresh_Colock getDefaultInstance() {
      return defaultInstance;
    }

    public Refresh_Colock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Refresh_Colock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              displaytime_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Colock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Colock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Refresh_Colock.class, protobuf.clazz.deh.DehRsp.Refresh_Colock.Builder.class);
    }

    public static com.google.protobuf.Parser<Refresh_Colock> PARSER =
        new com.google.protobuf.AbstractParser<Refresh_Colock>() {
      public Refresh_Colock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Refresh_Colock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Refresh_Colock> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 displaytime = 1;
    public static final int DISPLAYTIME_FIELD_NUMBER = 1;
    private int displaytime_;
    /**
     * <code>optional int32 displaytime = 1;</code>
     */
    public boolean hasDisplaytime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 displaytime = 1;</code>
     */
    public int getDisplaytime() {
      return displaytime_;
    }

    // optional int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     *1显示，2：隐藏
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     *1显示，2：隐藏
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      displaytime_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, displaytime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, displaytime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Colock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Refresh_Colock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Refresh_Colock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Refresh_ColockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Colock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Colock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Refresh_Colock.class, protobuf.clazz.deh.DehRsp.Refresh_Colock.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Refresh_Colock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        displaytime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Colock_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Colock getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Refresh_Colock.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Colock build() {
        protobuf.clazz.deh.DehRsp.Refresh_Colock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Colock buildPartial() {
        protobuf.clazz.deh.DehRsp.Refresh_Colock result = new protobuf.clazz.deh.DehRsp.Refresh_Colock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displaytime_ = displaytime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Refresh_Colock) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Refresh_Colock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Refresh_Colock other) {
        if (other == protobuf.clazz.deh.DehRsp.Refresh_Colock.getDefaultInstance()) return this;
        if (other.hasDisplaytime()) {
          setDisplaytime(other.getDisplaytime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Refresh_Colock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Refresh_Colock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 displaytime = 1;
      private int displaytime_ ;
      /**
       * <code>optional int32 displaytime = 1;</code>
       */
      public boolean hasDisplaytime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       */
      public int getDisplaytime() {
        return displaytime_;
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       */
      public Builder setDisplaytime(int value) {
        bitField0_ |= 0x00000001;
        displaytime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       */
      public Builder clearDisplaytime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        displaytime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 2;
      private int type_ ;
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       *1显示，2：隐藏
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       *1显示，2：隐藏
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       *1显示，2：隐藏
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       *1显示，2：隐藏
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Refresh_Colock)
    }

    static {
      defaultInstance = new Refresh_Colock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Refresh_Colock)
  }

  public interface PukeGameEndDehOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .RoomPlayerResponse players = 9;
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 win_sort = 10;
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinSortList();
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    int getWinSortCount();
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    int getWinSort(int index);

    // repeated int32 back_score_chair = 11;
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    java.util.List<java.lang.Integer> getBackScoreChairList();
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    int getBackScoreChairCount();
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    int getBackScoreChair(int index);

    // repeated int32 back_score = 12;
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getBackScoreList();
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    int getBackScoreCount();
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    int getBackScore(int index);

    // repeated int32 winner = 13;
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinnerList();
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    int getWinnerCount();
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    int getWinner(int index);

    // repeated .Int32ArrayResponse card_type = 14;
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardTypeList();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index);
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardTypeOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
        int index);

    // repeated int32 win_mang_chi_index = 15;
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinMangChiIndexList();
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    int getWinMangChiIndexCount();
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    int getWinMangChiIndex(int index);

    // repeated int32 win_mang_chi_score = 21;
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinMangChiScoreList();
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    int getWinMangChiScoreCount();
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    int getWinMangChiScore(int index);

    // repeated int32 mang_pi_score = 16;
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    java.util.List<java.lang.Integer> getMangPiScoreList();
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    int getMangPiScoreCount();
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    int getMangPiScore(int index);

    // repeated int32 end_score_extra_mang_pi = 17;
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreExtraMangPiList();
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    int getEndScoreExtraMangPiCount();
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    int getEndScoreExtraMangPi(int index);

    // repeated int32 xian_qian_score = 22;
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    java.util.List<java.lang.Integer> getXianQianScoreList();
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    int getXianQianScoreCount();
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    int getXianQianScore(int index);

    // repeated int32 all_end_score = 18;
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // optional int64 start_time = 19;
    /**
     * <code>optional int64 start_time = 19;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional int64 start_time = 19;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    long getStartTime();

    // optional int64 end_time = 20;
    /**
     * <code>optional int64 end_time = 20;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int64 end_time = 20;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    long getEndTime();
  }
  /**
   * Protobuf type {@code deh.PukeGameEndDeh}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndDeh extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndDehOrBuilder {
    // Use PukeGameEndDeh.newBuilder() to construct.
    private PukeGameEndDeh(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndDeh(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndDeh defaultInstance;
    public static PukeGameEndDeh getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndDeh getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndDeh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                winSort_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              winSort_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                winSort_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                winSort_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                backScoreChair_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              backScoreChair_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                backScoreChair_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                backScoreChair_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                backScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              backScore_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                backScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                backScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                winner_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              winner_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                winner_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winner_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                cardType_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00002000;
              }
              cardType_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                winMangChiIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              winMangChiIndex_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                winMangChiIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winMangChiIndex_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                mangPiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              mangPiScore_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                mangPiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                mangPiScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                endScoreExtraMangPi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              endScoreExtraMangPi_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                endScoreExtraMangPi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScoreExtraMangPi_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00000020;
              startTime_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000040;
              endTime_ = input.readInt64();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                winMangChiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              winMangChiScore_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                winMangChiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winMangChiScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                xianQianScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              xianQianScore_.add(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                xianQianScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                xianQianScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          winSort_ = java.util.Collections.unmodifiableList(winSort_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          backScoreChair_ = java.util.Collections.unmodifiableList(backScoreChair_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          backScore_ = java.util.Collections.unmodifiableList(backScore_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          winner_ = java.util.Collections.unmodifiableList(winner_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          winMangChiIndex_ = java.util.Collections.unmodifiableList(winMangChiIndex_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          mangPiScore_ = java.util.Collections.unmodifiableList(mangPiScore_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          endScoreExtraMangPi_ = java.util.Collections.unmodifiableList(endScoreExtraMangPi_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          winMangChiScore_ = java.util.Collections.unmodifiableList(winMangChiScore_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          xianQianScore_ = java.util.Collections.unmodifiableList(xianQianScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_PukeGameEndDeh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_PukeGameEndDeh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.PukeGameEndDeh.class, protobuf.clazz.deh.DehRsp.PukeGameEndDeh.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndDeh> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndDeh>() {
      public PukeGameEndDeh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndDeh(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndDeh> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .RoomPlayerResponse players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 win_sort = 10;
    public static final int WIN_SORT_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> winSort_;
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinSortList() {
      return winSort_;
    }
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    public int getWinSortCount() {
      return winSort_.size();
    }
    /**
     * <code>repeated int32 win_sort = 10;</code>
     *
     * <pre>
     *赢家椅子号
     * </pre>
     */
    public int getWinSort(int index) {
      return winSort_.get(index);
    }

    // repeated int32 back_score_chair = 11;
    public static final int BACK_SCORE_CHAIR_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> backScoreChair_;
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBackScoreChairList() {
      return backScoreChair_;
    }
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    public int getBackScoreChairCount() {
      return backScoreChair_.size();
    }
    /**
     * <code>repeated int32 back_score_chair = 11;</code>
     *
     * <pre>
     *返还分数的椅子号
     * </pre>
     */
    public int getBackScoreChair(int index) {
      return backScoreChair_.get(index);
    }

    // repeated int32 back_score = 12;
    public static final int BACK_SCORE_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> backScore_;
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBackScoreList() {
      return backScore_;
    }
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    public int getBackScoreCount() {
      return backScore_.size();
    }
    /**
     * <code>repeated int32 back_score = 12;</code>
     *
     * <pre>
     *返还分数
     * </pre>
     */
    public int getBackScore(int index) {
      return backScore_.get(index);
    }

    // repeated int32 winner = 13;
    public static final int WINNER_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> winner_;
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinnerList() {
      return winner_;
    }
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public int getWinnerCount() {
      return winner_.size();
    }
    /**
     * <code>repeated int32 winner = 13;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public int getWinner(int index) {
      return winner_.get(index);
    }

    // repeated .Int32ArrayResponse card_type = 14;
    public static final int CARD_TYPE_FIELD_NUMBER = 14;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardType_;
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardTypeOrBuilderList() {
      return cardType_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index) {
      return cardType_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 14;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
        int index) {
      return cardType_.get(index);
    }

    // repeated int32 win_mang_chi_index = 15;
    public static final int WIN_MANG_CHI_INDEX_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> winMangChiIndex_;
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinMangChiIndexList() {
      return winMangChiIndex_;
    }
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    public int getWinMangChiIndexCount() {
      return winMangChiIndex_.size();
    }
    /**
     * <code>repeated int32 win_mang_chi_index = 15;</code>
     *
     * <pre>
     *赢芒池玩家
     * </pre>
     */
    public int getWinMangChiIndex(int index) {
      return winMangChiIndex_.get(index);
    }

    // repeated int32 win_mang_chi_score = 21;
    public static final int WIN_MANG_CHI_SCORE_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> winMangChiScore_;
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinMangChiScoreList() {
      return winMangChiScore_;
    }
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    public int getWinMangChiScoreCount() {
      return winMangChiScore_.size();
    }
    /**
     * <code>repeated int32 win_mang_chi_score = 21;</code>
     *
     * <pre>
     *赢芒池分数
     * </pre>
     */
    public int getWinMangChiScore(int index) {
      return winMangChiScore_.get(index);
    }

    // repeated int32 mang_pi_score = 16;
    public static final int MANG_PI_SCORE_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> mangPiScore_;
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMangPiScoreList() {
      return mangPiScore_;
    }
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    public int getMangPiScoreCount() {
      return mangPiScore_.size();
    }
    /**
     * <code>repeated int32 mang_pi_score = 16;</code>
     *
     * <pre>
     *芒皮输赢
     * </pre>
     */
    public int getMangPiScore(int index) {
      return mangPiScore_.get(index);
    }

    // repeated int32 end_score_extra_mang_pi = 17;
    public static final int END_SCORE_EXTRA_MANG_PI_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> endScoreExtraMangPi_;
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreExtraMangPiList() {
      return endScoreExtraMangPi_;
    }
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    public int getEndScoreExtraMangPiCount() {
      return endScoreExtraMangPi_.size();
    }
    /**
     * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
     *
     * <pre>
     *输赢,没算芒皮的输赢
     * </pre>
     */
    public int getEndScoreExtraMangPi(int index) {
      return endScoreExtraMangPi_.get(index);
    }

    // repeated int32 xian_qian_score = 22;
    public static final int XIAN_QIAN_SCORE_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> xianQianScore_;
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXianQianScoreList() {
      return xianQianScore_;
    }
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    public int getXianQianScoreCount() {
      return xianQianScore_.size();
    }
    /**
     * <code>repeated int32 xian_qian_score = 22;</code>
     *
     * <pre>
     *喜钱分
     * </pre>
     */
    public int getXianQianScore(int index) {
      return xianQianScore_.get(index);
    }

    // repeated int32 all_end_score = 18;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 18;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // optional int64 start_time = 19;
    public static final int START_TIME_FIELD_NUMBER = 19;
    private long startTime_;
    /**
     * <code>optional int64 start_time = 19;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 start_time = 19;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // optional int64 end_time = 20;
    public static final int END_TIME_FIELD_NUMBER = 20;
    private long endTime_;
    /**
     * <code>optional int64 end_time = 20;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 end_time = 20;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      winSort_ = java.util.Collections.emptyList();
      backScoreChair_ = java.util.Collections.emptyList();
      backScore_ = java.util.Collections.emptyList();
      winner_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      winMangChiIndex_ = java.util.Collections.emptyList();
      winMangChiScore_ = java.util.Collections.emptyList();
      mangPiScore_ = java.util.Collections.emptyList();
      endScoreExtraMangPi_ = java.util.Collections.emptyList();
      xianQianScore_ = java.util.Collections.emptyList();
      allEndScore_ = java.util.Collections.emptyList();
      startTime_ = 0L;
      endTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      for (int i = 0; i < winSort_.size(); i++) {
        output.writeInt32(10, winSort_.get(i));
      }
      for (int i = 0; i < backScoreChair_.size(); i++) {
        output.writeInt32(11, backScoreChair_.get(i));
      }
      for (int i = 0; i < backScore_.size(); i++) {
        output.writeInt32(12, backScore_.get(i));
      }
      for (int i = 0; i < winner_.size(); i++) {
        output.writeInt32(13, winner_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeMessage(14, cardType_.get(i));
      }
      for (int i = 0; i < winMangChiIndex_.size(); i++) {
        output.writeInt32(15, winMangChiIndex_.get(i));
      }
      for (int i = 0; i < mangPiScore_.size(); i++) {
        output.writeInt32(16, mangPiScore_.get(i));
      }
      for (int i = 0; i < endScoreExtraMangPi_.size(); i++) {
        output.writeInt32(17, endScoreExtraMangPi_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(18, allEndScore_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(19, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(20, endTime_);
      }
      for (int i = 0; i < winMangChiScore_.size(); i++) {
        output.writeInt32(21, winMangChiScore_.get(i));
      }
      for (int i = 0; i < xianQianScore_.size(); i++) {
        output.writeInt32(22, xianQianScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winSort_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winSort_.get(i));
        }
        size += dataSize;
        size += 1 * getWinSortList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < backScoreChair_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(backScoreChair_.get(i));
        }
        size += dataSize;
        size += 1 * getBackScoreChairList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < backScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(backScore_.get(i));
        }
        size += dataSize;
        size += 1 * getBackScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winner_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winner_.get(i));
        }
        size += dataSize;
        size += 1 * getWinnerList().size();
      }
      for (int i = 0; i < cardType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, cardType_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winMangChiIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winMangChiIndex_.get(i));
        }
        size += dataSize;
        size += 1 * getWinMangChiIndexList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mangPiScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(mangPiScore_.get(i));
        }
        size += dataSize;
        size += 2 * getMangPiScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScoreExtraMangPi_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScoreExtraMangPi_.get(i));
        }
        size += dataSize;
        size += 2 * getEndScoreExtraMangPiList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 2 * getAllEndScoreList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, endTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winMangChiScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winMangChiScore_.get(i));
        }
        size += dataSize;
        size += 2 * getWinMangChiScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xianQianScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xianQianScore_.get(i));
        }
        size += dataSize;
        size += 2 * getXianQianScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.PukeGameEndDeh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.PukeGameEndDeh prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.PukeGameEndDeh}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.PukeGameEndDehOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_PukeGameEndDeh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_PukeGameEndDeh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.PukeGameEndDeh.class, protobuf.clazz.deh.DehRsp.PukeGameEndDeh.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.PukeGameEndDeh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
          getCardTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        winSort_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        backScoreChair_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        backScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        winner_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        if (cardTypeBuilder_ == null) {
          cardType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          cardTypeBuilder_.clear();
        }
        winMangChiIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        winMangChiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        mangPiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        endScoreExtraMangPi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        xianQianScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_PukeGameEndDeh_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.PukeGameEndDeh getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.PukeGameEndDeh.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.PukeGameEndDeh build() {
        protobuf.clazz.deh.DehRsp.PukeGameEndDeh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.PukeGameEndDeh buildPartial() {
        protobuf.clazz.deh.DehRsp.PukeGameEndDeh result = new protobuf.clazz.deh.DehRsp.PukeGameEndDeh(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          winSort_ = java.util.Collections.unmodifiableList(winSort_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.winSort_ = winSort_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          backScoreChair_ = java.util.Collections.unmodifiableList(backScoreChair_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.backScoreChair_ = backScoreChair_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          backScore_ = java.util.Collections.unmodifiableList(backScore_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.backScore_ = backScore_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          winner_ = java.util.Collections.unmodifiableList(winner_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.winner_ = winner_;
        if (cardTypeBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            cardType_ = java.util.Collections.unmodifiableList(cardType_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.cardType_ = cardType_;
        } else {
          result.cardType_ = cardTypeBuilder_.build();
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          winMangChiIndex_ = java.util.Collections.unmodifiableList(winMangChiIndex_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.winMangChiIndex_ = winMangChiIndex_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          winMangChiScore_ = java.util.Collections.unmodifiableList(winMangChiScore_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.winMangChiScore_ = winMangChiScore_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          mangPiScore_ = java.util.Collections.unmodifiableList(mangPiScore_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.mangPiScore_ = mangPiScore_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          endScoreExtraMangPi_ = java.util.Collections.unmodifiableList(endScoreExtraMangPi_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.endScoreExtraMangPi_ = endScoreExtraMangPi_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          xianQianScore_ = java.util.Collections.unmodifiableList(xianQianScore_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.xianQianScore_ = xianQianScore_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.allEndScore_ = allEndScore_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.PukeGameEndDeh) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.PukeGameEndDeh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.PukeGameEndDeh other) {
        if (other == protobuf.clazz.deh.DehRsp.PukeGameEndDeh.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.winSort_.isEmpty()) {
          if (winSort_.isEmpty()) {
            winSort_ = other.winSort_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureWinSortIsMutable();
            winSort_.addAll(other.winSort_);
          }
          onChanged();
        }
        if (!other.backScoreChair_.isEmpty()) {
          if (backScoreChair_.isEmpty()) {
            backScoreChair_ = other.backScoreChair_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureBackScoreChairIsMutable();
            backScoreChair_.addAll(other.backScoreChair_);
          }
          onChanged();
        }
        if (!other.backScore_.isEmpty()) {
          if (backScore_.isEmpty()) {
            backScore_ = other.backScore_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureBackScoreIsMutable();
            backScore_.addAll(other.backScore_);
          }
          onChanged();
        }
        if (!other.winner_.isEmpty()) {
          if (winner_.isEmpty()) {
            winner_ = other.winner_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureWinnerIsMutable();
            winner_.addAll(other.winner_);
          }
          onChanged();
        }
        if (cardTypeBuilder_ == null) {
          if (!other.cardType_.isEmpty()) {
            if (cardType_.isEmpty()) {
              cardType_ = other.cardType_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureCardTypeIsMutable();
              cardType_.addAll(other.cardType_);
            }
            onChanged();
          }
        } else {
          if (!other.cardType_.isEmpty()) {
            if (cardTypeBuilder_.isEmpty()) {
              cardTypeBuilder_.dispose();
              cardTypeBuilder_ = null;
              cardType_ = other.cardType_;
              bitField0_ = (bitField0_ & ~0x00002000);
              cardTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardTypeFieldBuilder() : null;
            } else {
              cardTypeBuilder_.addAllMessages(other.cardType_);
            }
          }
        }
        if (!other.winMangChiIndex_.isEmpty()) {
          if (winMangChiIndex_.isEmpty()) {
            winMangChiIndex_ = other.winMangChiIndex_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureWinMangChiIndexIsMutable();
            winMangChiIndex_.addAll(other.winMangChiIndex_);
          }
          onChanged();
        }
        if (!other.winMangChiScore_.isEmpty()) {
          if (winMangChiScore_.isEmpty()) {
            winMangChiScore_ = other.winMangChiScore_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureWinMangChiScoreIsMutable();
            winMangChiScore_.addAll(other.winMangChiScore_);
          }
          onChanged();
        }
        if (!other.mangPiScore_.isEmpty()) {
          if (mangPiScore_.isEmpty()) {
            mangPiScore_ = other.mangPiScore_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureMangPiScoreIsMutable();
            mangPiScore_.addAll(other.mangPiScore_);
          }
          onChanged();
        }
        if (!other.endScoreExtraMangPi_.isEmpty()) {
          if (endScoreExtraMangPi_.isEmpty()) {
            endScoreExtraMangPi_ = other.endScoreExtraMangPi_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureEndScoreExtraMangPiIsMutable();
            endScoreExtraMangPi_.addAll(other.endScoreExtraMangPi_);
          }
          onChanged();
        }
        if (!other.xianQianScore_.isEmpty()) {
          if (xianQianScore_.isEmpty()) {
            xianQianScore_ = other.xianQianScore_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureXianQianScoreIsMutable();
            xianQianScore_.addAll(other.xianQianScore_);
          }
          onChanged();
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.PukeGameEndDeh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.PukeGameEndDeh) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .RoomPlayerResponse players = 9;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 win_sort = 10;
      private java.util.List<java.lang.Integer> winSort_ = java.util.Collections.emptyList();
      private void ensureWinSortIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          winSort_ = new java.util.ArrayList<java.lang.Integer>(winSort_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinSortList() {
        return java.util.Collections.unmodifiableList(winSort_);
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public int getWinSortCount() {
        return winSort_.size();
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public int getWinSort(int index) {
        return winSort_.get(index);
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public Builder setWinSort(
          int index, int value) {
        ensureWinSortIsMutable();
        winSort_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public Builder addWinSort(int value) {
        ensureWinSortIsMutable();
        winSort_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public Builder addAllWinSort(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinSortIsMutable();
        super.addAll(values, winSort_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_sort = 10;</code>
       *
       * <pre>
       *赢家椅子号
       * </pre>
       */
      public Builder clearWinSort() {
        winSort_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 back_score_chair = 11;
      private java.util.List<java.lang.Integer> backScoreChair_ = java.util.Collections.emptyList();
      private void ensureBackScoreChairIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          backScoreChair_ = new java.util.ArrayList<java.lang.Integer>(backScoreChair_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBackScoreChairList() {
        return java.util.Collections.unmodifiableList(backScoreChair_);
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public int getBackScoreChairCount() {
        return backScoreChair_.size();
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public int getBackScoreChair(int index) {
        return backScoreChair_.get(index);
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public Builder setBackScoreChair(
          int index, int value) {
        ensureBackScoreChairIsMutable();
        backScoreChair_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public Builder addBackScoreChair(int value) {
        ensureBackScoreChairIsMutable();
        backScoreChair_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public Builder addAllBackScoreChair(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBackScoreChairIsMutable();
        super.addAll(values, backScoreChair_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score_chair = 11;</code>
       *
       * <pre>
       *返还分数的椅子号
       * </pre>
       */
      public Builder clearBackScoreChair() {
        backScoreChair_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 back_score = 12;
      private java.util.List<java.lang.Integer> backScore_ = java.util.Collections.emptyList();
      private void ensureBackScoreIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          backScore_ = new java.util.ArrayList<java.lang.Integer>(backScore_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBackScoreList() {
        return java.util.Collections.unmodifiableList(backScore_);
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public int getBackScoreCount() {
        return backScore_.size();
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public int getBackScore(int index) {
        return backScore_.get(index);
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public Builder setBackScore(
          int index, int value) {
        ensureBackScoreIsMutable();
        backScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public Builder addBackScore(int value) {
        ensureBackScoreIsMutable();
        backScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public Builder addAllBackScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBackScoreIsMutable();
        super.addAll(values, backScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 back_score = 12;</code>
       *
       * <pre>
       *返还分数
       * </pre>
       */
      public Builder clearBackScore() {
        backScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 winner = 13;
      private java.util.List<java.lang.Integer> winner_ = java.util.Collections.emptyList();
      private void ensureWinnerIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          winner_ = new java.util.ArrayList<java.lang.Integer>(winner_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinnerList() {
        return java.util.Collections.unmodifiableList(winner_);
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public int getWinnerCount() {
        return winner_.size();
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public int getWinner(int index) {
        return winner_.get(index);
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder setWinner(
          int index, int value) {
        ensureWinnerIsMutable();
        winner_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder addWinner(int value) {
        ensureWinnerIsMutable();
        winner_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder addAllWinner(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinnerIsMutable();
        super.addAll(values, winner_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 13;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder clearWinner() {
        winner_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse card_type = 14;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardType_ =
        java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          cardType_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardType_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardTypeBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardTypeList() {
        if (cardTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardType_);
        } else {
          return cardTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardTypeCount() {
        if (cardTypeBuilder_ == null) {
          return cardType_.size();
        } else {
          return cardTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index) {
        if (cardTypeBuilder_ == null) {
          return cardType_.get(index);
        } else {
          return cardTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.set(index, value);
          onChanged();
        } else {
          cardTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.add(value);
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.add(index, value);
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.add(builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          super.addAll(values, cardType_);
          onChanged();
        } else {
          cardTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        if (cardTypeBuilder_ == null) {
          cardType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          cardTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder removeCardType(int index) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.remove(index);
          onChanged();
        } else {
          cardTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardTypeBuilder(
          int index) {
        return getCardTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
          int index) {
        if (cardTypeBuilder_ == null) {
          return cardType_.get(index);  } else {
          return cardTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardTypeOrBuilderList() {
        if (cardTypeBuilder_ != null) {
          return cardTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardType_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardTypeBuilder() {
        return getCardTypeFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardTypeBuilder(
          int index) {
        return getCardTypeFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 14;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardTypeBuilderList() {
        return getCardTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardTypeFieldBuilder() {
        if (cardTypeBuilder_ == null) {
          cardTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardType_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          cardType_ = null;
        }
        return cardTypeBuilder_;
      }

      // repeated int32 win_mang_chi_index = 15;
      private java.util.List<java.lang.Integer> winMangChiIndex_ = java.util.Collections.emptyList();
      private void ensureWinMangChiIndexIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          winMangChiIndex_ = new java.util.ArrayList<java.lang.Integer>(winMangChiIndex_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinMangChiIndexList() {
        return java.util.Collections.unmodifiableList(winMangChiIndex_);
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public int getWinMangChiIndexCount() {
        return winMangChiIndex_.size();
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public int getWinMangChiIndex(int index) {
        return winMangChiIndex_.get(index);
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public Builder setWinMangChiIndex(
          int index, int value) {
        ensureWinMangChiIndexIsMutable();
        winMangChiIndex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public Builder addWinMangChiIndex(int value) {
        ensureWinMangChiIndexIsMutable();
        winMangChiIndex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public Builder addAllWinMangChiIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinMangChiIndexIsMutable();
        super.addAll(values, winMangChiIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_index = 15;</code>
       *
       * <pre>
       *赢芒池玩家
       * </pre>
       */
      public Builder clearWinMangChiIndex() {
        winMangChiIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 win_mang_chi_score = 21;
      private java.util.List<java.lang.Integer> winMangChiScore_ = java.util.Collections.emptyList();
      private void ensureWinMangChiScoreIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          winMangChiScore_ = new java.util.ArrayList<java.lang.Integer>(winMangChiScore_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinMangChiScoreList() {
        return java.util.Collections.unmodifiableList(winMangChiScore_);
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public int getWinMangChiScoreCount() {
        return winMangChiScore_.size();
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public int getWinMangChiScore(int index) {
        return winMangChiScore_.get(index);
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public Builder setWinMangChiScore(
          int index, int value) {
        ensureWinMangChiScoreIsMutable();
        winMangChiScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public Builder addWinMangChiScore(int value) {
        ensureWinMangChiScoreIsMutable();
        winMangChiScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public Builder addAllWinMangChiScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinMangChiScoreIsMutable();
        super.addAll(values, winMangChiScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_mang_chi_score = 21;</code>
       *
       * <pre>
       *赢芒池分数
       * </pre>
       */
      public Builder clearWinMangChiScore() {
        winMangChiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 mang_pi_score = 16;
      private java.util.List<java.lang.Integer> mangPiScore_ = java.util.Collections.emptyList();
      private void ensureMangPiScoreIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          mangPiScore_ = new java.util.ArrayList<java.lang.Integer>(mangPiScore_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMangPiScoreList() {
        return java.util.Collections.unmodifiableList(mangPiScore_);
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public int getMangPiScoreCount() {
        return mangPiScore_.size();
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public int getMangPiScore(int index) {
        return mangPiScore_.get(index);
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public Builder setMangPiScore(
          int index, int value) {
        ensureMangPiScoreIsMutable();
        mangPiScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public Builder addMangPiScore(int value) {
        ensureMangPiScoreIsMutable();
        mangPiScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public Builder addAllMangPiScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMangPiScoreIsMutable();
        super.addAll(values, mangPiScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mang_pi_score = 16;</code>
       *
       * <pre>
       *芒皮输赢
       * </pre>
       */
      public Builder clearMangPiScore() {
        mangPiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 end_score_extra_mang_pi = 17;
      private java.util.List<java.lang.Integer> endScoreExtraMangPi_ = java.util.Collections.emptyList();
      private void ensureEndScoreExtraMangPiIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          endScoreExtraMangPi_ = new java.util.ArrayList<java.lang.Integer>(endScoreExtraMangPi_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreExtraMangPiList() {
        return java.util.Collections.unmodifiableList(endScoreExtraMangPi_);
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public int getEndScoreExtraMangPiCount() {
        return endScoreExtraMangPi_.size();
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public int getEndScoreExtraMangPi(int index) {
        return endScoreExtraMangPi_.get(index);
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public Builder setEndScoreExtraMangPi(
          int index, int value) {
        ensureEndScoreExtraMangPiIsMutable();
        endScoreExtraMangPi_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public Builder addEndScoreExtraMangPi(int value) {
        ensureEndScoreExtraMangPiIsMutable();
        endScoreExtraMangPi_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public Builder addAllEndScoreExtraMangPi(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreExtraMangPiIsMutable();
        super.addAll(values, endScoreExtraMangPi_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_extra_mang_pi = 17;</code>
       *
       * <pre>
       *输赢,没算芒皮的输赢
       * </pre>
       */
      public Builder clearEndScoreExtraMangPi() {
        endScoreExtraMangPi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 xian_qian_score = 22;
      private java.util.List<java.lang.Integer> xianQianScore_ = java.util.Collections.emptyList();
      private void ensureXianQianScoreIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          xianQianScore_ = new java.util.ArrayList<java.lang.Integer>(xianQianScore_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXianQianScoreList() {
        return java.util.Collections.unmodifiableList(xianQianScore_);
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public int getXianQianScoreCount() {
        return xianQianScore_.size();
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public int getXianQianScore(int index) {
        return xianQianScore_.get(index);
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public Builder setXianQianScore(
          int index, int value) {
        ensureXianQianScoreIsMutable();
        xianQianScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public Builder addXianQianScore(int value) {
        ensureXianQianScoreIsMutable();
        xianQianScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public Builder addAllXianQianScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXianQianScoreIsMutable();
        super.addAll(values, xianQianScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xian_qian_score = 22;</code>
       *
       * <pre>
       *喜钱分
       * </pre>
       */
      public Builder clearXianQianScore() {
        xianQianScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 18;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 18;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // optional int64 start_time = 19;
      private long startTime_ ;
      /**
       * <code>optional int64 start_time = 19;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 start_time = 19;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional int64 start_time = 19;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00100000;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 start_time = 19;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 end_time = 20;
      private long endTime_ ;
      /**
       * <code>optional int64 end_time = 20;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 end_time = 20;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int64 end_time = 20;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00200000;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end_time = 20;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00200000);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.PukeGameEndDeh)
    }

    static {
      defaultInstance = new PukeGameEndDeh(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.PukeGameEndDeh)
  }

  public interface TableResponseDEHOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // optional .RoomInfo room_info = 4;
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 5;
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated bool is_give_up = 6;
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsGiveUpList();
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    int getIsGiveUpCount();
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    boolean getIsGiveUp(int index);

    // repeated int32 jetton_score = 7;
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 display_time = 8;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 deh_game_status = 10;
    /**
     * <code>optional int32 deh_game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    boolean hasDehGameStatus();
    /**
     * <code>optional int32 deh_game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    int getDehGameStatus();

    // repeated bool is_bobo = 9;
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsBoboList();
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    int getIsBoboCount();
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    boolean getIsBobo(int index);

    // optional int32 max_bobo_score = 11;
    /**
     * <code>optional int32 max_bobo_score = 11;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    boolean hasMaxBoboScore();
    /**
     * <code>optional int32 max_bobo_score = 11;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    int getMaxBoboScore();

    // optional int32 min_bobo_score = 12;
    /**
     * <code>optional int32 min_bobo_score = 12;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    boolean hasMinBoboScore();
    /**
     * <code>optional int32 min_bobo_score = 12;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    int getMinBoboScore();

    // repeated .Int32ArrayResponse cards_data = 13;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated bool is_open_card = 14;
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsOpenCardList();
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    int getIsOpenCardCount();
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    boolean getIsOpenCard(int index);

    // repeated .Int32ArrayResponse card_type = 15;
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardTypeList();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index);
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardTypeOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
        int index);

    // optional int32 mang_chi_score = 16;
    /**
     * <code>optional int32 mang_chi_score = 16;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    boolean hasMangChiScore();
    /**
     * <code>optional int32 mang_chi_score = 16;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    int getMangChiScore();

    // optional int32 mang_pi = 17;
    /**
     * <code>optional int32 mang_pi = 17;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    boolean hasMangPi();
    /**
     * <code>optional int32 mang_pi = 17;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    int getMangPi();
  }
  /**
   * Protobuf type {@code deh.TableResponseDEH}
   */
  public static final class TableResponseDEH extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseDEHOrBuilder {
    // Use TableResponseDEH.newBuilder() to construct.
    private TableResponseDEH(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseDEH(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseDEH defaultInstance;
    public static TableResponseDEH getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseDEH getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseDEH(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 34: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              isGiveUp_.add(input.readBool());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                isGiveUp_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              displayTime_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                isBobo_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              isBobo_.add(input.readBool());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                isBobo_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                isBobo_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              dehGameStatus_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              maxBoboScore_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              minBoboScore_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00001000;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                isOpenCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              isOpenCard_.add(input.readBool());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                isOpenCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                isOpenCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                cardType_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00004000;
              }
              cardType_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              bitField0_ |= 0x00000100;
              mangChiScore_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000200;
              mangPi_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          isGiveUp_ = java.util.Collections.unmodifiableList(isGiveUp_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          isBobo_ = java.util.Collections.unmodifiableList(isBobo_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          isOpenCard_ = java.util.Collections.unmodifiableList(isOpenCard_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_TableResponseDEH_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_TableResponseDEH_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.TableResponseDEH.class, protobuf.clazz.deh.DehRsp.TableResponseDEH.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseDEH> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseDEH>() {
      public TableResponseDEH parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseDEH(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseDEH> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // optional .RoomInfo room_info = 4;
    public static final int ROOM_INFO_FIELD_NUMBER = 4;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 4;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 5;
    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 5;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated bool is_give_up = 6;
    public static final int IS_GIVE_UP_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Boolean> isGiveUp_;
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsGiveUpList() {
      return isGiveUp_;
    }
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public int getIsGiveUpCount() {
      return isGiveUp_.size();
    }
    /**
     * <code>repeated bool is_give_up = 6;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public boolean getIsGiveUp(int index) {
      return isGiveUp_.get(index);
    }

    // repeated int32 jetton_score = 7;
    public static final int JETTON_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 display_time = 8;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 8;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 deh_game_status = 10;
    public static final int DEH_GAME_STATUS_FIELD_NUMBER = 10;
    private int dehGameStatus_;
    /**
     * <code>optional int32 deh_game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    public boolean hasDehGameStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 deh_game_status = 10;</code>
     *
     * <pre>
     *游戏状态
     * </pre>
     */
    public int getDehGameStatus() {
      return dehGameStatus_;
    }

    // repeated bool is_bobo = 9;
    public static final int IS_BOBO_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Boolean> isBobo_;
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsBoboList() {
      return isBobo_;
    }
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    public int getIsBoboCount() {
      return isBobo_.size();
    }
    /**
     * <code>repeated bool is_bobo = 9;</code>
     *
     * <pre>
     *已经设置簸簸
     * </pre>
     */
    public boolean getIsBobo(int index) {
      return isBobo_.get(index);
    }

    // optional int32 max_bobo_score = 11;
    public static final int MAX_BOBO_SCORE_FIELD_NUMBER = 11;
    private int maxBoboScore_;
    /**
     * <code>optional int32 max_bobo_score = 11;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    public boolean hasMaxBoboScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 max_bobo_score = 11;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    public int getMaxBoboScore() {
      return maxBoboScore_;
    }

    // optional int32 min_bobo_score = 12;
    public static final int MIN_BOBO_SCORE_FIELD_NUMBER = 12;
    private int minBoboScore_;
    /**
     * <code>optional int32 min_bobo_score = 12;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    public boolean hasMinBoboScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 min_bobo_score = 12;</code>
     *
     * <pre>
     *最大簸簸数
     * </pre>
     */
    public int getMinBoboScore() {
      return minBoboScore_;
    }

    // repeated .Int32ArrayResponse cards_data = 13;
    public static final int CARDS_DATA_FIELD_NUMBER = 13;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated bool is_open_card = 14;
    public static final int IS_OPEN_CARD_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Boolean> isOpenCard_;
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsOpenCardList() {
      return isOpenCard_;
    }
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public int getIsOpenCardCount() {
      return isOpenCard_.size();
    }
    /**
     * <code>repeated bool is_open_card = 14;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public boolean getIsOpenCard(int index) {
      return isOpenCard_.get(index);
    }

    // repeated .Int32ArrayResponse card_type = 15;
    public static final int CARD_TYPE_FIELD_NUMBER = 15;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardType_;
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardTypeOrBuilderList() {
      return cardType_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index) {
      return cardType_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
        int index) {
      return cardType_.get(index);
    }

    // optional int32 mang_chi_score = 16;
    public static final int MANG_CHI_SCORE_FIELD_NUMBER = 16;
    private int mangChiScore_;
    /**
     * <code>optional int32 mang_chi_score = 16;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    public boolean hasMangChiScore() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 mang_chi_score = 16;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    public int getMangChiScore() {
      return mangChiScore_;
    }

    // optional int32 mang_pi = 17;
    public static final int MANG_PI_FIELD_NUMBER = 17;
    private int mangPi_;
    /**
     * <code>optional int32 mang_pi = 17;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    public boolean hasMangPi() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 mang_pi = 17;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    public int getMangPi() {
      return mangPi_;
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      isGiveUp_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      dehGameStatus_ = 0;
      isBobo_ = java.util.Collections.emptyList();
      maxBoboScore_ = 0;
      minBoboScore_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      isOpenCard_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      mangChiScore_ = 0;
      mangPi_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      for (int i = 0; i < isGiveUp_.size(); i++) {
        output.writeBool(6, isGiveUp_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(7, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, displayTime_);
      }
      for (int i = 0; i < isBobo_.size(); i++) {
        output.writeBool(9, isBobo_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, dehGameStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, maxBoboScore_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, minBoboScore_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(13, cardsData_.get(i));
      }
      for (int i = 0; i < isOpenCard_.size(); i++) {
        output.writeBool(14, isOpenCard_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeMessage(15, cardType_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(16, mangChiScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(17, mangPi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsGiveUpList().size();
        size += dataSize;
        size += 1 * getIsGiveUpList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, displayTime_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsBoboList().size();
        size += dataSize;
        size += 1 * getIsBoboList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, dehGameStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxBoboScore_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, minBoboScore_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsOpenCardList().size();
        size += dataSize;
        size += 1 * getIsOpenCardList().size();
      }
      for (int i = 0; i < cardType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, cardType_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, mangChiScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, mangPi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.TableResponseDEH parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.TableResponseDEH prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.TableResponseDEH}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.TableResponseDEHOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_TableResponseDEH_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_TableResponseDEH_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.TableResponseDEH.class, protobuf.clazz.deh.DehRsp.TableResponseDEH.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.TableResponseDEH.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
          getCardTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        isGiveUp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        dehGameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        isBobo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        maxBoboScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        minBoboScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          cardsDataBuilder_.clear();
        }
        isOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        if (cardTypeBuilder_ == null) {
          cardType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          cardTypeBuilder_.clear();
        }
        mangChiScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        mangPi_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_TableResponseDEH_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.TableResponseDEH getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.TableResponseDEH.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.TableResponseDEH build() {
        protobuf.clazz.deh.DehRsp.TableResponseDEH result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.TableResponseDEH buildPartial() {
        protobuf.clazz.deh.DehRsp.TableResponseDEH result = new protobuf.clazz.deh.DehRsp.TableResponseDEH(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          isGiveUp_ = java.util.Collections.unmodifiableList(isGiveUp_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.isGiveUp_ = isGiveUp_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dehGameStatus_ = dehGameStatus_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          isBobo_ = java.util.Collections.unmodifiableList(isBobo_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.isBobo_ = isBobo_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxBoboScore_ = maxBoboScore_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.minBoboScore_ = minBoboScore_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          isOpenCard_ = java.util.Collections.unmodifiableList(isOpenCard_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.isOpenCard_ = isOpenCard_;
        if (cardTypeBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            cardType_ = java.util.Collections.unmodifiableList(cardType_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.cardType_ = cardType_;
        } else {
          result.cardType_ = cardTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.mangChiScore_ = mangChiScore_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.mangPi_ = mangPi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.TableResponseDEH) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.TableResponseDEH)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.TableResponseDEH other) {
        if (other == protobuf.clazz.deh.DehRsp.TableResponseDEH.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.isGiveUp_.isEmpty()) {
          if (isGiveUp_.isEmpty()) {
            isGiveUp_ = other.isGiveUp_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureIsGiveUpIsMutable();
            isGiveUp_.addAll(other.isGiveUp_);
          }
          onChanged();
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasDehGameStatus()) {
          setDehGameStatus(other.getDehGameStatus());
        }
        if (!other.isBobo_.isEmpty()) {
          if (isBobo_.isEmpty()) {
            isBobo_ = other.isBobo_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureIsBoboIsMutable();
            isBobo_.addAll(other.isBobo_);
          }
          onChanged();
        }
        if (other.hasMaxBoboScore()) {
          setMaxBoboScore(other.getMaxBoboScore());
        }
        if (other.hasMinBoboScore()) {
          setMinBoboScore(other.getMinBoboScore());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00001000);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.isOpenCard_.isEmpty()) {
          if (isOpenCard_.isEmpty()) {
            isOpenCard_ = other.isOpenCard_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureIsOpenCardIsMutable();
            isOpenCard_.addAll(other.isOpenCard_);
          }
          onChanged();
        }
        if (cardTypeBuilder_ == null) {
          if (!other.cardType_.isEmpty()) {
            if (cardType_.isEmpty()) {
              cardType_ = other.cardType_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureCardTypeIsMutable();
              cardType_.addAll(other.cardType_);
            }
            onChanged();
          }
        } else {
          if (!other.cardType_.isEmpty()) {
            if (cardTypeBuilder_.isEmpty()) {
              cardTypeBuilder_.dispose();
              cardTypeBuilder_ = null;
              cardType_ = other.cardType_;
              bitField0_ = (bitField0_ & ~0x00004000);
              cardTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardTypeFieldBuilder() : null;
            } else {
              cardTypeBuilder_.addAllMessages(other.cardType_);
            }
          }
        }
        if (other.hasMangChiScore()) {
          setMangChiScore(other.getMangChiScore());
        }
        if (other.hasMangPi()) {
          setMangPi(other.getMangPi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.TableResponseDEH parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.TableResponseDEH) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .RoomInfo room_info = 4;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 5;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 5;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated bool is_give_up = 6;
      private java.util.List<java.lang.Boolean> isGiveUp_ = java.util.Collections.emptyList();
      private void ensureIsGiveUpIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>(isGiveUp_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsGiveUpList() {
        return java.util.Collections.unmodifiableList(isGiveUp_);
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public int getIsGiveUpCount() {
        return isGiveUp_.size();
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public boolean getIsGiveUp(int index) {
        return isGiveUp_.get(index);
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder setIsGiveUp(
          int index, boolean value) {
        ensureIsGiveUpIsMutable();
        isGiveUp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder addIsGiveUp(boolean value) {
        ensureIsGiveUpIsMutable();
        isGiveUp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder addAllIsGiveUp(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsGiveUpIsMutable();
        super.addAll(values, isGiveUp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 6;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder clearIsGiveUp() {
        isGiveUp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 7;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 display_time = 8;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000080;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 deh_game_status = 10;
      private int dehGameStatus_ ;
      /**
       * <code>optional int32 deh_game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public boolean hasDehGameStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 deh_game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public int getDehGameStatus() {
        return dehGameStatus_;
      }
      /**
       * <code>optional int32 deh_game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public Builder setDehGameStatus(int value) {
        bitField0_ |= 0x00000100;
        dehGameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deh_game_status = 10;</code>
       *
       * <pre>
       *游戏状态
       * </pre>
       */
      public Builder clearDehGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dehGameStatus_ = 0;
        onChanged();
        return this;
      }

      // repeated bool is_bobo = 9;
      private java.util.List<java.lang.Boolean> isBobo_ = java.util.Collections.emptyList();
      private void ensureIsBoboIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          isBobo_ = new java.util.ArrayList<java.lang.Boolean>(isBobo_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsBoboList() {
        return java.util.Collections.unmodifiableList(isBobo_);
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public int getIsBoboCount() {
        return isBobo_.size();
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public boolean getIsBobo(int index) {
        return isBobo_.get(index);
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public Builder setIsBobo(
          int index, boolean value) {
        ensureIsBoboIsMutable();
        isBobo_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public Builder addIsBobo(boolean value) {
        ensureIsBoboIsMutable();
        isBobo_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public Builder addAllIsBobo(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsBoboIsMutable();
        super.addAll(values, isBobo_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_bobo = 9;</code>
       *
       * <pre>
       *已经设置簸簸
       * </pre>
       */
      public Builder clearIsBobo() {
        isBobo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 max_bobo_score = 11;
      private int maxBoboScore_ ;
      /**
       * <code>optional int32 max_bobo_score = 11;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public boolean hasMaxBoboScore() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 max_bobo_score = 11;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public int getMaxBoboScore() {
        return maxBoboScore_;
      }
      /**
       * <code>optional int32 max_bobo_score = 11;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public Builder setMaxBoboScore(int value) {
        bitField0_ |= 0x00000400;
        maxBoboScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_bobo_score = 11;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public Builder clearMaxBoboScore() {
        bitField0_ = (bitField0_ & ~0x00000400);
        maxBoboScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 min_bobo_score = 12;
      private int minBoboScore_ ;
      /**
       * <code>optional int32 min_bobo_score = 12;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public boolean hasMinBoboScore() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 min_bobo_score = 12;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public int getMinBoboScore() {
        return minBoboScore_;
      }
      /**
       * <code>optional int32 min_bobo_score = 12;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public Builder setMinBoboScore(int value) {
        bitField0_ |= 0x00000800;
        minBoboScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_bobo_score = 12;</code>
       *
       * <pre>
       *最大簸簸数
       * </pre>
       */
      public Builder clearMinBoboScore() {
        bitField0_ = (bitField0_ & ~0x00000800);
        minBoboScore_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 13;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 13;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated bool is_open_card = 14;
      private java.util.List<java.lang.Boolean> isOpenCard_ = java.util.Collections.emptyList();
      private void ensureIsOpenCardIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          isOpenCard_ = new java.util.ArrayList<java.lang.Boolean>(isOpenCard_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsOpenCardList() {
        return java.util.Collections.unmodifiableList(isOpenCard_);
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public int getIsOpenCardCount() {
        return isOpenCard_.size();
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public boolean getIsOpenCard(int index) {
        return isOpenCard_.get(index);
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder setIsOpenCard(
          int index, boolean value) {
        ensureIsOpenCardIsMutable();
        isOpenCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder addIsOpenCard(boolean value) {
        ensureIsOpenCardIsMutable();
        isOpenCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder addAllIsOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsOpenCardIsMutable();
        super.addAll(values, isOpenCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_open_card = 14;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder clearIsOpenCard() {
        isOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse card_type = 15;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardType_ =
        java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          cardType_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardType_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardTypeBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardTypeList() {
        if (cardTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardType_);
        } else {
          return cardTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardTypeCount() {
        if (cardTypeBuilder_ == null) {
          return cardType_.size();
        } else {
          return cardTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardType(int index) {
        if (cardTypeBuilder_ == null) {
          return cardType_.get(index);
        } else {
          return cardTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.set(index, value);
          onChanged();
        } else {
          cardTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.add(value);
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeIsMutable();
          cardType_.add(index, value);
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.add(builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          super.addAll(values, cardType_);
          onChanged();
        } else {
          cardTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        if (cardTypeBuilder_ == null) {
          cardType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          cardTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder removeCardType(int index) {
        if (cardTypeBuilder_ == null) {
          ensureCardTypeIsMutable();
          cardType_.remove(index);
          onChanged();
        } else {
          cardTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardTypeBuilder(
          int index) {
        return getCardTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardTypeOrBuilder(
          int index) {
        if (cardTypeBuilder_ == null) {
          return cardType_.get(index);  } else {
          return cardTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardTypeOrBuilderList() {
        if (cardTypeBuilder_ != null) {
          return cardTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardType_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardTypeBuilder() {
        return getCardTypeFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardTypeBuilder(
          int index) {
        return getCardTypeFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardTypeBuilderList() {
        return getCardTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardTypeFieldBuilder() {
        if (cardTypeBuilder_ == null) {
          cardTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardType_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          cardType_ = null;
        }
        return cardTypeBuilder_;
      }

      // optional int32 mang_chi_score = 16;
      private int mangChiScore_ ;
      /**
       * <code>optional int32 mang_chi_score = 16;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public boolean hasMangChiScore() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 mang_chi_score = 16;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public int getMangChiScore() {
        return mangChiScore_;
      }
      /**
       * <code>optional int32 mang_chi_score = 16;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public Builder setMangChiScore(int value) {
        bitField0_ |= 0x00008000;
        mangChiScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mang_chi_score = 16;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public Builder clearMangChiScore() {
        bitField0_ = (bitField0_ & ~0x00008000);
        mangChiScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mang_pi = 17;
      private int mangPi_ ;
      /**
       * <code>optional int32 mang_pi = 17;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public boolean hasMangPi() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 mang_pi = 17;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public int getMangPi() {
        return mangPi_;
      }
      /**
       * <code>optional int32 mang_pi = 17;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public Builder setMangPi(int value) {
        bitField0_ |= 0x00010000;
        mangPi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mang_pi = 17;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public Builder clearMangPi() {
        bitField0_ = (bitField0_ & ~0x00010000);
        mangPi_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.TableResponseDEH)
    }

    static {
      defaultInstance = new TableResponseDEH(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.TableResponseDEH)
  }

  public interface GameStartDEHOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 2;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 max_bobo_score = 3;
    /**
     * <code>optional int32 max_bobo_score = 3;</code>
     */
    boolean hasMaxBoboScore();
    /**
     * <code>optional int32 max_bobo_score = 3;</code>
     */
    int getMaxBoboScore();

    // optional int32 min_bobo_score = 4;
    /**
     * <code>optional int32 min_bobo_score = 4;</code>
     */
    boolean hasMinBoboScore();
    /**
     * <code>optional int32 min_bobo_score = 4;</code>
     */
    int getMinBoboScore();

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code deh.GameStartDEH}
   */
  public static final class GameStartDEH extends
      com.google.protobuf.GeneratedMessage
      implements GameStartDEHOrBuilder {
    // Use GameStartDEH.newBuilder() to construct.
    private GameStartDEH(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartDEH(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartDEH defaultInstance;
    public static GameStartDEH getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartDEH getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartDEH(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              maxBoboScore_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              minBoboScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_GameStartDEH_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_GameStartDEH_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.GameStartDEH.class, protobuf.clazz.deh.DehRsp.GameStartDEH.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartDEH> PARSER =
        new com.google.protobuf.AbstractParser<GameStartDEH>() {
      public GameStartDEH parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartDEH(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartDEH> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 max_bobo_score = 3;
    public static final int MAX_BOBO_SCORE_FIELD_NUMBER = 3;
    private int maxBoboScore_;
    /**
     * <code>optional int32 max_bobo_score = 3;</code>
     */
    public boolean hasMaxBoboScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 max_bobo_score = 3;</code>
     */
    public int getMaxBoboScore() {
      return maxBoboScore_;
    }

    // optional int32 min_bobo_score = 4;
    public static final int MIN_BOBO_SCORE_FIELD_NUMBER = 4;
    private int minBoboScore_;
    /**
     * <code>optional int32 min_bobo_score = 4;</code>
     */
    public boolean hasMinBoboScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 min_bobo_score = 4;</code>
     */
    public int getMinBoboScore() {
      return minBoboScore_;
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      maxBoboScore_ = 0;
      minBoboScore_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, maxBoboScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, minBoboScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxBoboScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minBoboScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.GameStartDEH parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.GameStartDEH prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.GameStartDEH}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.GameStartDEHOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_GameStartDEH_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_GameStartDEH_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.GameStartDEH.class, protobuf.clazz.deh.DehRsp.GameStartDEH.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.GameStartDEH.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        maxBoboScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minBoboScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_GameStartDEH_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.GameStartDEH getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.GameStartDEH.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.GameStartDEH build() {
        protobuf.clazz.deh.DehRsp.GameStartDEH result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.GameStartDEH buildPartial() {
        protobuf.clazz.deh.DehRsp.GameStartDEH result = new protobuf.clazz.deh.DehRsp.GameStartDEH(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxBoboScore_ = maxBoboScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minBoboScore_ = minBoboScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.GameStartDEH) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.GameStartDEH)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.GameStartDEH other) {
        if (other == protobuf.clazz.deh.DehRsp.GameStartDEH.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasMaxBoboScore()) {
          setMaxBoboScore(other.getMaxBoboScore());
        }
        if (other.hasMinBoboScore()) {
          setMinBoboScore(other.getMinBoboScore());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.GameStartDEH parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.GameStartDEH) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 2;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 max_bobo_score = 3;
      private int maxBoboScore_ ;
      /**
       * <code>optional int32 max_bobo_score = 3;</code>
       */
      public boolean hasMaxBoboScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 max_bobo_score = 3;</code>
       */
      public int getMaxBoboScore() {
        return maxBoboScore_;
      }
      /**
       * <code>optional int32 max_bobo_score = 3;</code>
       */
      public Builder setMaxBoboScore(int value) {
        bitField0_ |= 0x00000004;
        maxBoboScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_bobo_score = 3;</code>
       */
      public Builder clearMaxBoboScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxBoboScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 min_bobo_score = 4;
      private int minBoboScore_ ;
      /**
       * <code>optional int32 min_bobo_score = 4;</code>
       */
      public boolean hasMinBoboScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 min_bobo_score = 4;</code>
       */
      public int getMinBoboScore() {
        return minBoboScore_;
      }
      /**
       * <code>optional int32 min_bobo_score = 4;</code>
       */
      public Builder setMinBoboScore(int value) {
        bitField0_ |= 0x00000008;
        minBoboScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_bobo_score = 4;</code>
       */
      public Builder clearMinBoboScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minBoboScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.GameStartDEH)
    }

    static {
      defaultInstance = new GameStartDEH(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.GameStartDEH)
  }

  public interface Make_Sure_BankerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_index = 1;
    /**
     * <code>optional int32 banker_index = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerIndex();
    /**
     * <code>optional int32 banker_index = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerIndex();
  }
  /**
   * Protobuf type {@code deh.Make_Sure_Banker}
   */
  public static final class Make_Sure_Banker extends
      com.google.protobuf.GeneratedMessage
      implements Make_Sure_BankerOrBuilder {
    // Use Make_Sure_Banker.newBuilder() to construct.
    private Make_Sure_Banker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Make_Sure_Banker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Make_Sure_Banker defaultInstance;
    public static Make_Sure_Banker getDefaultInstance() {
      return defaultInstance;
    }

    public Make_Sure_Banker getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Make_Sure_Banker(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_Sure_Banker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_Sure_Banker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Make_Sure_Banker.class, protobuf.clazz.deh.DehRsp.Make_Sure_Banker.Builder.class);
    }

    public static com.google.protobuf.Parser<Make_Sure_Banker> PARSER =
        new com.google.protobuf.AbstractParser<Make_Sure_Banker>() {
      public Make_Sure_Banker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Make_Sure_Banker(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Make_Sure_Banker> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_index = 1;
    public static final int BANKER_INDEX_FIELD_NUMBER = 1;
    private int bankerIndex_;
    /**
     * <code>optional int32 banker_index = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_index = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerIndex() {
      return bankerIndex_;
    }

    private void initFields() {
      bankerIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_Sure_Banker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Make_Sure_Banker prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Make_Sure_Banker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Make_Sure_BankerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_Sure_Banker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_Sure_Banker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Make_Sure_Banker.class, protobuf.clazz.deh.DehRsp.Make_Sure_Banker.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Make_Sure_Banker.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_Sure_Banker_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Make_Sure_Banker getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Make_Sure_Banker.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Make_Sure_Banker build() {
        protobuf.clazz.deh.DehRsp.Make_Sure_Banker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Make_Sure_Banker buildPartial() {
        protobuf.clazz.deh.DehRsp.Make_Sure_Banker result = new protobuf.clazz.deh.DehRsp.Make_Sure_Banker(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerIndex_ = bankerIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Make_Sure_Banker) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Make_Sure_Banker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Make_Sure_Banker other) {
        if (other == protobuf.clazz.deh.DehRsp.Make_Sure_Banker.getDefaultInstance()) return this;
        if (other.hasBankerIndex()) {
          setBankerIndex(other.getBankerIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Make_Sure_Banker parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Make_Sure_Banker) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_index = 1;
      private int bankerIndex_ ;
      /**
       * <code>optional int32 banker_index = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_index = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerIndex() {
        return bankerIndex_;
      }
      /**
       * <code>optional int32 banker_index = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerIndex(int value) {
        bitField0_ |= 0x00000001;
        bankerIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_index = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Make_Sure_Banker)
    }

    static {
      defaultInstance = new Make_Sure_Banker(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Make_Sure_Banker)
  }

  public interface Refresh_Table_messageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 current_player = 1;
    /**
     * <code>optional int32 current_player = 1;</code>
     *
     * <pre>
     *当前游戏人数
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 1;</code>
     *
     * <pre>
     *当前游戏人数
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 mang_chi_score = 2;
    /**
     * <code>optional int32 mang_chi_score = 2;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    boolean hasMangChiScore();
    /**
     * <code>optional int32 mang_chi_score = 2;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    int getMangChiScore();

    // optional int32 xiu_mang_cur_round = 3;
    /**
     * <code>optional int32 xiu_mang_cur_round = 3;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    boolean hasXiuMangCurRound();
    /**
     * <code>optional int32 xiu_mang_cur_round = 3;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    int getXiuMangCurRound();

    // optional int32 xiu_mang_total_round = 4;
    /**
     * <code>optional int32 xiu_mang_total_round = 4;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    boolean hasXiuMangTotalRound();
    /**
     * <code>optional int32 xiu_mang_total_round = 4;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    int getXiuMangTotalRound();

    // optional int32 mang_pi = 5;
    /**
     * <code>optional int32 mang_pi = 5;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    boolean hasMangPi();
    /**
     * <code>optional int32 mang_pi = 5;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    int getMangPi();

    // optional int32 shou_mang_cur_round = 6;
    /**
     * <code>optional int32 shou_mang_cur_round = 6;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    boolean hasShouMangCurRound();
    /**
     * <code>optional int32 shou_mang_cur_round = 6;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    int getShouMangCurRound();

    // optional int32 shou_mang_total_round = 7;
    /**
     * <code>optional int32 shou_mang_total_round = 7;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    boolean hasShouMangTotalRound();
    /**
     * <code>optional int32 shou_mang_total_round = 7;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    int getShouMangTotalRound();
  }
  /**
   * Protobuf type {@code deh.Refresh_Table_message}
   */
  public static final class Refresh_Table_message extends
      com.google.protobuf.GeneratedMessage
      implements Refresh_Table_messageOrBuilder {
    // Use Refresh_Table_message.newBuilder() to construct.
    private Refresh_Table_message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Refresh_Table_message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Refresh_Table_message defaultInstance;
    public static Refresh_Table_message getDefaultInstance() {
      return defaultInstance;
    }

    public Refresh_Table_message getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Refresh_Table_message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mangChiScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              xiuMangCurRound_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              xiuMangTotalRound_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mangPi_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              shouMangCurRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              shouMangTotalRound_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Table_message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Table_message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Refresh_Table_message.class, protobuf.clazz.deh.DehRsp.Refresh_Table_message.Builder.class);
    }

    public static com.google.protobuf.Parser<Refresh_Table_message> PARSER =
        new com.google.protobuf.AbstractParser<Refresh_Table_message>() {
      public Refresh_Table_message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Refresh_Table_message(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Refresh_Table_message> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 current_player = 1;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 1;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 1;</code>
     *
     * <pre>
     *当前游戏人数
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 current_player = 1;</code>
     *
     * <pre>
     *当前游戏人数
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 mang_chi_score = 2;
    public static final int MANG_CHI_SCORE_FIELD_NUMBER = 2;
    private int mangChiScore_;
    /**
     * <code>optional int32 mang_chi_score = 2;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    public boolean hasMangChiScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 mang_chi_score = 2;</code>
     *
     * <pre>
     *芒池分数
     * </pre>
     */
    public int getMangChiScore() {
      return mangChiScore_;
    }

    // optional int32 xiu_mang_cur_round = 3;
    public static final int XIU_MANG_CUR_ROUND_FIELD_NUMBER = 3;
    private int xiuMangCurRound_;
    /**
     * <code>optional int32 xiu_mang_cur_round = 3;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    public boolean hasXiuMangCurRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 xiu_mang_cur_round = 3;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    public int getXiuMangCurRound() {
      return xiuMangCurRound_;
    }

    // optional int32 xiu_mang_total_round = 4;
    public static final int XIU_MANG_TOTAL_ROUND_FIELD_NUMBER = 4;
    private int xiuMangTotalRound_;
    /**
     * <code>optional int32 xiu_mang_total_round = 4;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    public boolean hasXiuMangTotalRound() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 xiu_mang_total_round = 4;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    public int getXiuMangTotalRound() {
      return xiuMangTotalRound_;
    }

    // optional int32 mang_pi = 5;
    public static final int MANG_PI_FIELD_NUMBER = 5;
    private int mangPi_;
    /**
     * <code>optional int32 mang_pi = 5;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    public boolean hasMangPi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 mang_pi = 5;</code>
     *
     * <pre>
     *芒皮
     * </pre>
     */
    public int getMangPi() {
      return mangPi_;
    }

    // optional int32 shou_mang_cur_round = 6;
    public static final int SHOU_MANG_CUR_ROUND_FIELD_NUMBER = 6;
    private int shouMangCurRound_;
    /**
     * <code>optional int32 shou_mang_cur_round = 6;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    public boolean hasShouMangCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 shou_mang_cur_round = 6;</code>
     *
     * <pre>
     *休芒当前轮数
     * </pre>
     */
    public int getShouMangCurRound() {
      return shouMangCurRound_;
    }

    // optional int32 shou_mang_total_round = 7;
    public static final int SHOU_MANG_TOTAL_ROUND_FIELD_NUMBER = 7;
    private int shouMangTotalRound_;
    /**
     * <code>optional int32 shou_mang_total_round = 7;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    public boolean hasShouMangTotalRound() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 shou_mang_total_round = 7;</code>
     *
     * <pre>
     *休芒总轮数
     * </pre>
     */
    public int getShouMangTotalRound() {
      return shouMangTotalRound_;
    }

    private void initFields() {
      currentPlayer_ = 0;
      mangChiScore_ = 0;
      xiuMangCurRound_ = 0;
      xiuMangTotalRound_ = 0;
      mangPi_ = 0;
      shouMangCurRound_ = 0;
      shouMangTotalRound_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, currentPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mangChiScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, xiuMangCurRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, xiuMangTotalRound_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, mangPi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, shouMangCurRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, shouMangTotalRound_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currentPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mangChiScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, xiuMangCurRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, xiuMangTotalRound_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mangPi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, shouMangCurRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, shouMangTotalRound_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Refresh_Table_message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Refresh_Table_message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Refresh_Table_message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Refresh_Table_messageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Table_message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Table_message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Refresh_Table_message.class, protobuf.clazz.deh.DehRsp.Refresh_Table_message.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Refresh_Table_message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mangChiScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        xiuMangCurRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        xiuMangTotalRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mangPi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        shouMangCurRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        shouMangTotalRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Refresh_Table_message_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Table_message getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Refresh_Table_message.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Table_message build() {
        protobuf.clazz.deh.DehRsp.Refresh_Table_message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Refresh_Table_message buildPartial() {
        protobuf.clazz.deh.DehRsp.Refresh_Table_message result = new protobuf.clazz.deh.DehRsp.Refresh_Table_message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mangChiScore_ = mangChiScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.xiuMangCurRound_ = xiuMangCurRound_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.xiuMangTotalRound_ = xiuMangTotalRound_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mangPi_ = mangPi_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.shouMangCurRound_ = shouMangCurRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shouMangTotalRound_ = shouMangTotalRound_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Refresh_Table_message) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Refresh_Table_message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Refresh_Table_message other) {
        if (other == protobuf.clazz.deh.DehRsp.Refresh_Table_message.getDefaultInstance()) return this;
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasMangChiScore()) {
          setMangChiScore(other.getMangChiScore());
        }
        if (other.hasXiuMangCurRound()) {
          setXiuMangCurRound(other.getXiuMangCurRound());
        }
        if (other.hasXiuMangTotalRound()) {
          setXiuMangTotalRound(other.getXiuMangTotalRound());
        }
        if (other.hasMangPi()) {
          setMangPi(other.getMangPi());
        }
        if (other.hasShouMangCurRound()) {
          setShouMangCurRound(other.getShouMangCurRound());
        }
        if (other.hasShouMangTotalRound()) {
          setShouMangTotalRound(other.getShouMangTotalRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Refresh_Table_message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Refresh_Table_message) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 current_player = 1;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 1;</code>
       *
       * <pre>
       *当前游戏人数
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 current_player = 1;</code>
       *
       * <pre>
       *当前游戏人数
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 1;</code>
       *
       * <pre>
       *当前游戏人数
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000001;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 1;</code>
       *
       * <pre>
       *当前游戏人数
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mang_chi_score = 2;
      private int mangChiScore_ ;
      /**
       * <code>optional int32 mang_chi_score = 2;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public boolean hasMangChiScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 mang_chi_score = 2;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public int getMangChiScore() {
        return mangChiScore_;
      }
      /**
       * <code>optional int32 mang_chi_score = 2;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public Builder setMangChiScore(int value) {
        bitField0_ |= 0x00000002;
        mangChiScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mang_chi_score = 2;</code>
       *
       * <pre>
       *芒池分数
       * </pre>
       */
      public Builder clearMangChiScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mangChiScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xiu_mang_cur_round = 3;
      private int xiuMangCurRound_ ;
      /**
       * <code>optional int32 xiu_mang_cur_round = 3;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public boolean hasXiuMangCurRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 xiu_mang_cur_round = 3;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public int getXiuMangCurRound() {
        return xiuMangCurRound_;
      }
      /**
       * <code>optional int32 xiu_mang_cur_round = 3;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public Builder setXiuMangCurRound(int value) {
        bitField0_ |= 0x00000004;
        xiuMangCurRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiu_mang_cur_round = 3;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public Builder clearXiuMangCurRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xiuMangCurRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xiu_mang_total_round = 4;
      private int xiuMangTotalRound_ ;
      /**
       * <code>optional int32 xiu_mang_total_round = 4;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public boolean hasXiuMangTotalRound() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 xiu_mang_total_round = 4;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public int getXiuMangTotalRound() {
        return xiuMangTotalRound_;
      }
      /**
       * <code>optional int32 xiu_mang_total_round = 4;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public Builder setXiuMangTotalRound(int value) {
        bitField0_ |= 0x00000008;
        xiuMangTotalRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiu_mang_total_round = 4;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public Builder clearXiuMangTotalRound() {
        bitField0_ = (bitField0_ & ~0x00000008);
        xiuMangTotalRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mang_pi = 5;
      private int mangPi_ ;
      /**
       * <code>optional int32 mang_pi = 5;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public boolean hasMangPi() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 mang_pi = 5;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public int getMangPi() {
        return mangPi_;
      }
      /**
       * <code>optional int32 mang_pi = 5;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public Builder setMangPi(int value) {
        bitField0_ |= 0x00000010;
        mangPi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mang_pi = 5;</code>
       *
       * <pre>
       *芒皮
       * </pre>
       */
      public Builder clearMangPi() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mangPi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shou_mang_cur_round = 6;
      private int shouMangCurRound_ ;
      /**
       * <code>optional int32 shou_mang_cur_round = 6;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public boolean hasShouMangCurRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 shou_mang_cur_round = 6;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public int getShouMangCurRound() {
        return shouMangCurRound_;
      }
      /**
       * <code>optional int32 shou_mang_cur_round = 6;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public Builder setShouMangCurRound(int value) {
        bitField0_ |= 0x00000020;
        shouMangCurRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shou_mang_cur_round = 6;</code>
       *
       * <pre>
       *休芒当前轮数
       * </pre>
       */
      public Builder clearShouMangCurRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        shouMangCurRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shou_mang_total_round = 7;
      private int shouMangTotalRound_ ;
      /**
       * <code>optional int32 shou_mang_total_round = 7;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public boolean hasShouMangTotalRound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 shou_mang_total_round = 7;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public int getShouMangTotalRound() {
        return shouMangTotalRound_;
      }
      /**
       * <code>optional int32 shou_mang_total_round = 7;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public Builder setShouMangTotalRound(int value) {
        bitField0_ |= 0x00000040;
        shouMangTotalRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shou_mang_total_round = 7;</code>
       *
       * <pre>
       *休芒总轮数
       * </pre>
       */
      public Builder clearShouMangTotalRound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        shouMangTotalRound_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Refresh_Table_message)
    }

    static {
      defaultInstance = new Refresh_Table_message(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Refresh_Table_message)
  }

  public interface Send_card_DehOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse cards_data = 1;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_count = 2;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 current_player = 4;
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // repeated .Int32ArrayResponse hand_cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);

    // repeated int32 hand_card_count = 6;
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);
  }
  /**
   * Protobuf type {@code deh.Send_card_Deh}
   */
  public static final class Send_card_Deh extends
      com.google.protobuf.GeneratedMessage
      implements Send_card_DehOrBuilder {
    // Use Send_card_Deh.newBuilder() to construct.
    private Send_card_Deh(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Send_card_Deh(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Send_card_Deh defaultInstance;
    public static Send_card_Deh getDefaultInstance() {
      return defaultInstance;
    }

    public Send_card_Deh getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Send_card_Deh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Send_card_Deh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Send_card_Deh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Send_card_Deh.class, protobuf.clazz.deh.DehRsp.Send_card_Deh.Builder.class);
    }

    public static com.google.protobuf.Parser<Send_card_Deh> PARSER =
        new com.google.protobuf.AbstractParser<Send_card_Deh>() {
      public Send_card_Deh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Send_card_Deh(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Send_card_Deh> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_count = 2;
    public static final int CARD_COUNT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 current_player = 4;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 4;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // repeated .Int32ArrayResponse hand_cards_data = 5;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    // repeated int32 hand_card_count = 6;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      currentPlayer_ = 0;
      handCardsData_ = java.util.Collections.emptyList();
      handCardCount_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(1, cardsData_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(2, cardCount_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, displayTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, currentPlayer_);
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(5, handCardsData_.get(i));
      }
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(6, handCardCount_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, currentPlayer_);
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, handCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Send_card_Deh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Send_card_Deh prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Send_card_Deh}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Send_card_DehOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Send_card_Deh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Send_card_Deh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Send_card_Deh.class, protobuf.clazz.deh.DehRsp.Send_card_Deh.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Send_card_Deh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardsDataBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          handCardsDataBuilder_.clear();
        }
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Send_card_Deh_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Send_card_Deh getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Send_card_Deh.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Send_card_Deh build() {
        protobuf.clazz.deh.DehRsp.Send_card_Deh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Send_card_Deh buildPartial() {
        protobuf.clazz.deh.DehRsp.Send_card_Deh result = new protobuf.clazz.deh.DehRsp.Send_card_Deh(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardCount_ = cardCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.handCardCount_ = handCardCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Send_card_Deh) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Send_card_Deh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Send_card_Deh other) {
        if (other == protobuf.clazz.deh.DehRsp.Send_card_Deh.getDefaultInstance()) return this;
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Send_card_Deh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Send_card_Deh) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse cards_data = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_count = 2;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 4;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000008;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // repeated int32 hand_card_count = 6;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Send_card_Deh)
    }

    static {
      defaultInstance = new Send_card_Deh(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Send_card_Deh)
  }

  public interface User_Can_OpreateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 give_up = 1;
    /**
     * <code>optional int32 give_up = 1;</code>
     *
     * <pre>
     *丢 0:表示不能用
     * </pre>
     */
    boolean hasGiveUp();
    /**
     * <code>optional int32 give_up = 1;</code>
     *
     * <pre>
     *丢 0:表示不能用
     * </pre>
     */
    int getGiveUp();

    // optional int32 gen_zhu = 2;
    /**
     * <code>optional int32 gen_zhu = 2;</code>
     *
     * <pre>
     *跟注  0:表示不能用，大于0表示跟注分数
     * </pre>
     */
    boolean hasGenZhu();
    /**
     * <code>optional int32 gen_zhu = 2;</code>
     *
     * <pre>
     *跟注  0:表示不能用，大于0表示跟注分数
     * </pre>
     */
    int getGenZhu();

    // optional int32 add_operate = 3;
    /**
     * <code>optional int32 add_operate = 3;</code>
     *
     * <pre>
     *大  0:表示不能用,大于0表示能加注
     * </pre>
     */
    boolean hasAddOperate();
    /**
     * <code>optional int32 add_operate = 3;</code>
     *
     * <pre>
     *大  0:表示不能用,大于0表示能加注
     * </pre>
     */
    int getAddOperate();

    // optional int32 shuo_hand = 4;
    /**
     * <code>optional int32 shuo_hand = 4;</code>
     *
     * <pre>
     *敲 0:表示不能用,大于0表示敲分数
     * </pre>
     */
    boolean hasShuoHand();
    /**
     * <code>optional int32 shuo_hand = 4;</code>
     *
     * <pre>
     *敲 0:表示不能用,大于0表示敲分数
     * </pre>
     */
    int getShuoHand();

    // optional int32 pass = 5;
    /**
     * <code>optional int32 pass = 5;</code>
     *
     * <pre>
     *休 0:表示不能用
     * </pre>
     */
    boolean hasPass();
    /**
     * <code>optional int32 pass = 5;</code>
     *
     * <pre>
     *休 0:表示不能用
     * </pre>
     */
    int getPass();

    // optional int32 add_score_min = 6;
    /**
     * <code>optional int32 add_score_min = 6;</code>
     */
    boolean hasAddScoreMin();
    /**
     * <code>optional int32 add_score_min = 6;</code>
     */
    int getAddScoreMin();

    // optional int32 add_score_max = 7;
    /**
     * <code>optional int32 add_score_max = 7;</code>
     */
    boolean hasAddScoreMax();
    /**
     * <code>optional int32 add_score_max = 7;</code>
     */
    int getAddScoreMax();

    // optional int32 current_player = 8;
    /**
     * <code>optional int32 current_player = 8;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 8;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 displaytime = 9;
    /**
     * <code>optional int32 displaytime = 9;</code>
     *
     * <pre>
     *操作时间
     * </pre>
     */
    boolean hasDisplaytime();
    /**
     * <code>optional int32 displaytime = 9;</code>
     *
     * <pre>
     *操作时间
     * </pre>
     */
    int getDisplaytime();
  }
  /**
   * Protobuf type {@code deh.User_Can_Opreate}
   *
   * <pre>
   *玩家可操作
   * </pre>
   */
  public static final class User_Can_Opreate extends
      com.google.protobuf.GeneratedMessage
      implements User_Can_OpreateOrBuilder {
    // Use User_Can_Opreate.newBuilder() to construct.
    private User_Can_Opreate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private User_Can_Opreate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final User_Can_Opreate defaultInstance;
    public static User_Can_Opreate getDefaultInstance() {
      return defaultInstance;
    }

    public User_Can_Opreate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private User_Can_Opreate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              giveUp_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              genZhu_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              addOperate_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              shuoHand_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pass_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              addScoreMin_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              addScoreMax_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              displaytime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_User_Can_Opreate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_User_Can_Opreate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.User_Can_Opreate.class, protobuf.clazz.deh.DehRsp.User_Can_Opreate.Builder.class);
    }

    public static com.google.protobuf.Parser<User_Can_Opreate> PARSER =
        new com.google.protobuf.AbstractParser<User_Can_Opreate>() {
      public User_Can_Opreate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User_Can_Opreate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<User_Can_Opreate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 give_up = 1;
    public static final int GIVE_UP_FIELD_NUMBER = 1;
    private int giveUp_;
    /**
     * <code>optional int32 give_up = 1;</code>
     *
     * <pre>
     *丢 0:表示不能用
     * </pre>
     */
    public boolean hasGiveUp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 give_up = 1;</code>
     *
     * <pre>
     *丢 0:表示不能用
     * </pre>
     */
    public int getGiveUp() {
      return giveUp_;
    }

    // optional int32 gen_zhu = 2;
    public static final int GEN_ZHU_FIELD_NUMBER = 2;
    private int genZhu_;
    /**
     * <code>optional int32 gen_zhu = 2;</code>
     *
     * <pre>
     *跟注  0:表示不能用，大于0表示跟注分数
     * </pre>
     */
    public boolean hasGenZhu() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gen_zhu = 2;</code>
     *
     * <pre>
     *跟注  0:表示不能用，大于0表示跟注分数
     * </pre>
     */
    public int getGenZhu() {
      return genZhu_;
    }

    // optional int32 add_operate = 3;
    public static final int ADD_OPERATE_FIELD_NUMBER = 3;
    private int addOperate_;
    /**
     * <code>optional int32 add_operate = 3;</code>
     *
     * <pre>
     *大  0:表示不能用,大于0表示能加注
     * </pre>
     */
    public boolean hasAddOperate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 add_operate = 3;</code>
     *
     * <pre>
     *大  0:表示不能用,大于0表示能加注
     * </pre>
     */
    public int getAddOperate() {
      return addOperate_;
    }

    // optional int32 shuo_hand = 4;
    public static final int SHUO_HAND_FIELD_NUMBER = 4;
    private int shuoHand_;
    /**
     * <code>optional int32 shuo_hand = 4;</code>
     *
     * <pre>
     *敲 0:表示不能用,大于0表示敲分数
     * </pre>
     */
    public boolean hasShuoHand() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 shuo_hand = 4;</code>
     *
     * <pre>
     *敲 0:表示不能用,大于0表示敲分数
     * </pre>
     */
    public int getShuoHand() {
      return shuoHand_;
    }

    // optional int32 pass = 5;
    public static final int PASS_FIELD_NUMBER = 5;
    private int pass_;
    /**
     * <code>optional int32 pass = 5;</code>
     *
     * <pre>
     *休 0:表示不能用
     * </pre>
     */
    public boolean hasPass() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pass = 5;</code>
     *
     * <pre>
     *休 0:表示不能用
     * </pre>
     */
    public int getPass() {
      return pass_;
    }

    // optional int32 add_score_min = 6;
    public static final int ADD_SCORE_MIN_FIELD_NUMBER = 6;
    private int addScoreMin_;
    /**
     * <code>optional int32 add_score_min = 6;</code>
     */
    public boolean hasAddScoreMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 add_score_min = 6;</code>
     */
    public int getAddScoreMin() {
      return addScoreMin_;
    }

    // optional int32 add_score_max = 7;
    public static final int ADD_SCORE_MAX_FIELD_NUMBER = 7;
    private int addScoreMax_;
    /**
     * <code>optional int32 add_score_max = 7;</code>
     */
    public boolean hasAddScoreMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 add_score_max = 7;</code>
     */
    public int getAddScoreMax() {
      return addScoreMax_;
    }

    // optional int32 current_player = 8;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 8;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 8;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 current_player = 8;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 displaytime = 9;
    public static final int DISPLAYTIME_FIELD_NUMBER = 9;
    private int displaytime_;
    /**
     * <code>optional int32 displaytime = 9;</code>
     *
     * <pre>
     *操作时间
     * </pre>
     */
    public boolean hasDisplaytime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 displaytime = 9;</code>
     *
     * <pre>
     *操作时间
     * </pre>
     */
    public int getDisplaytime() {
      return displaytime_;
    }

    private void initFields() {
      giveUp_ = 0;
      genZhu_ = 0;
      addOperate_ = 0;
      shuoHand_ = 0;
      pass_ = 0;
      addScoreMin_ = 0;
      addScoreMax_ = 0;
      currentPlayer_ = 0;
      displaytime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, giveUp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, genZhu_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, addOperate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, shuoHand_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, pass_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, addScoreMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, addScoreMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, currentPlayer_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, displaytime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, giveUp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, genZhu_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, addOperate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, shuoHand_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pass_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, addScoreMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, addScoreMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, currentPlayer_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, displaytime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.User_Can_Opreate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.User_Can_Opreate}
     *
     * <pre>
     *玩家可操作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.User_Can_OpreateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_User_Can_Opreate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_User_Can_Opreate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.User_Can_Opreate.class, protobuf.clazz.deh.DehRsp.User_Can_Opreate.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.User_Can_Opreate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        giveUp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        genZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        addOperate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        shuoHand_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        addScoreMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        addScoreMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        displaytime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_User_Can_Opreate_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.User_Can_Opreate getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.User_Can_Opreate.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.User_Can_Opreate build() {
        protobuf.clazz.deh.DehRsp.User_Can_Opreate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.User_Can_Opreate buildPartial() {
        protobuf.clazz.deh.DehRsp.User_Can_Opreate result = new protobuf.clazz.deh.DehRsp.User_Can_Opreate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.giveUp_ = giveUp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.genZhu_ = genZhu_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addOperate_ = addOperate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shuoHand_ = shuoHand_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pass_ = pass_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.addScoreMin_ = addScoreMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.addScoreMax_ = addScoreMax_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.displaytime_ = displaytime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.User_Can_Opreate) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.User_Can_Opreate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.User_Can_Opreate other) {
        if (other == protobuf.clazz.deh.DehRsp.User_Can_Opreate.getDefaultInstance()) return this;
        if (other.hasGiveUp()) {
          setGiveUp(other.getGiveUp());
        }
        if (other.hasGenZhu()) {
          setGenZhu(other.getGenZhu());
        }
        if (other.hasAddOperate()) {
          setAddOperate(other.getAddOperate());
        }
        if (other.hasShuoHand()) {
          setShuoHand(other.getShuoHand());
        }
        if (other.hasPass()) {
          setPass(other.getPass());
        }
        if (other.hasAddScoreMin()) {
          setAddScoreMin(other.getAddScoreMin());
        }
        if (other.hasAddScoreMax()) {
          setAddScoreMax(other.getAddScoreMax());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasDisplaytime()) {
          setDisplaytime(other.getDisplaytime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.User_Can_Opreate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.User_Can_Opreate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 give_up = 1;
      private int giveUp_ ;
      /**
       * <code>optional int32 give_up = 1;</code>
       *
       * <pre>
       *丢 0:表示不能用
       * </pre>
       */
      public boolean hasGiveUp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 give_up = 1;</code>
       *
       * <pre>
       *丢 0:表示不能用
       * </pre>
       */
      public int getGiveUp() {
        return giveUp_;
      }
      /**
       * <code>optional int32 give_up = 1;</code>
       *
       * <pre>
       *丢 0:表示不能用
       * </pre>
       */
      public Builder setGiveUp(int value) {
        bitField0_ |= 0x00000001;
        giveUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 give_up = 1;</code>
       *
       * <pre>
       *丢 0:表示不能用
       * </pre>
       */
      public Builder clearGiveUp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        giveUp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gen_zhu = 2;
      private int genZhu_ ;
      /**
       * <code>optional int32 gen_zhu = 2;</code>
       *
       * <pre>
       *跟注  0:表示不能用，大于0表示跟注分数
       * </pre>
       */
      public boolean hasGenZhu() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gen_zhu = 2;</code>
       *
       * <pre>
       *跟注  0:表示不能用，大于0表示跟注分数
       * </pre>
       */
      public int getGenZhu() {
        return genZhu_;
      }
      /**
       * <code>optional int32 gen_zhu = 2;</code>
       *
       * <pre>
       *跟注  0:表示不能用，大于0表示跟注分数
       * </pre>
       */
      public Builder setGenZhu(int value) {
        bitField0_ |= 0x00000002;
        genZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gen_zhu = 2;</code>
       *
       * <pre>
       *跟注  0:表示不能用，大于0表示跟注分数
       * </pre>
       */
      public Builder clearGenZhu() {
        bitField0_ = (bitField0_ & ~0x00000002);
        genZhu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_operate = 3;
      private int addOperate_ ;
      /**
       * <code>optional int32 add_operate = 3;</code>
       *
       * <pre>
       *大  0:表示不能用,大于0表示能加注
       * </pre>
       */
      public boolean hasAddOperate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 add_operate = 3;</code>
       *
       * <pre>
       *大  0:表示不能用,大于0表示能加注
       * </pre>
       */
      public int getAddOperate() {
        return addOperate_;
      }
      /**
       * <code>optional int32 add_operate = 3;</code>
       *
       * <pre>
       *大  0:表示不能用,大于0表示能加注
       * </pre>
       */
      public Builder setAddOperate(int value) {
        bitField0_ |= 0x00000004;
        addOperate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_operate = 3;</code>
       *
       * <pre>
       *大  0:表示不能用,大于0表示能加注
       * </pre>
       */
      public Builder clearAddOperate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addOperate_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shuo_hand = 4;
      private int shuoHand_ ;
      /**
       * <code>optional int32 shuo_hand = 4;</code>
       *
       * <pre>
       *敲 0:表示不能用,大于0表示敲分数
       * </pre>
       */
      public boolean hasShuoHand() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 shuo_hand = 4;</code>
       *
       * <pre>
       *敲 0:表示不能用,大于0表示敲分数
       * </pre>
       */
      public int getShuoHand() {
        return shuoHand_;
      }
      /**
       * <code>optional int32 shuo_hand = 4;</code>
       *
       * <pre>
       *敲 0:表示不能用,大于0表示敲分数
       * </pre>
       */
      public Builder setShuoHand(int value) {
        bitField0_ |= 0x00000008;
        shuoHand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shuo_hand = 4;</code>
       *
       * <pre>
       *敲 0:表示不能用,大于0表示敲分数
       * </pre>
       */
      public Builder clearShuoHand() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shuoHand_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pass = 5;
      private int pass_ ;
      /**
       * <code>optional int32 pass = 5;</code>
       *
       * <pre>
       *休 0:表示不能用
       * </pre>
       */
      public boolean hasPass() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 pass = 5;</code>
       *
       * <pre>
       *休 0:表示不能用
       * </pre>
       */
      public int getPass() {
        return pass_;
      }
      /**
       * <code>optional int32 pass = 5;</code>
       *
       * <pre>
       *休 0:表示不能用
       * </pre>
       */
      public Builder setPass(int value) {
        bitField0_ |= 0x00000010;
        pass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pass = 5;</code>
       *
       * <pre>
       *休 0:表示不能用
       * </pre>
       */
      public Builder clearPass() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pass_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_score_min = 6;
      private int addScoreMin_ ;
      /**
       * <code>optional int32 add_score_min = 6;</code>
       */
      public boolean hasAddScoreMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 add_score_min = 6;</code>
       */
      public int getAddScoreMin() {
        return addScoreMin_;
      }
      /**
       * <code>optional int32 add_score_min = 6;</code>
       */
      public Builder setAddScoreMin(int value) {
        bitField0_ |= 0x00000020;
        addScoreMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_score_min = 6;</code>
       */
      public Builder clearAddScoreMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        addScoreMin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_score_max = 7;
      private int addScoreMax_ ;
      /**
       * <code>optional int32 add_score_max = 7;</code>
       */
      public boolean hasAddScoreMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 add_score_max = 7;</code>
       */
      public int getAddScoreMax() {
        return addScoreMax_;
      }
      /**
       * <code>optional int32 add_score_max = 7;</code>
       */
      public Builder setAddScoreMax(int value) {
        bitField0_ |= 0x00000040;
        addScoreMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_score_max = 7;</code>
       */
      public Builder clearAddScoreMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        addScoreMax_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 8;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 8;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 current_player = 8;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 8;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000080;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 8;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000080);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 displaytime = 9;
      private int displaytime_ ;
      /**
       * <code>optional int32 displaytime = 9;</code>
       *
       * <pre>
       *操作时间
       * </pre>
       */
      public boolean hasDisplaytime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 displaytime = 9;</code>
       *
       * <pre>
       *操作时间
       * </pre>
       */
      public int getDisplaytime() {
        return displaytime_;
      }
      /**
       * <code>optional int32 displaytime = 9;</code>
       *
       * <pre>
       *操作时间
       * </pre>
       */
      public Builder setDisplaytime(int value) {
        bitField0_ |= 0x00000100;
        displaytime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 displaytime = 9;</code>
       *
       * <pre>
       *操作时间
       * </pre>
       */
      public Builder clearDisplaytime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        displaytime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.User_Can_Opreate)
    }

    static {
      defaultInstance = new User_Can_Opreate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.User_Can_Opreate)
  }

  public interface Score_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore();

    // optional int32 current_player = 3;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 jetton_total_score = 4;
    /**
     * <code>optional int32 jetton_total_score = 4;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 4;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    int getJettonTotalScore();

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 jetton_type = 6;
    /**
     * <code>optional int32 jetton_type = 6;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    boolean hasJettonType();
    /**
     * <code>optional int32 jetton_type = 6;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    int getJettonType();

    // optional int32 user_score = 7;
    /**
     * <code>optional int32 user_score = 7;</code>
     *
     * <pre>
     *玩家分数
     * </pre>
     */
    boolean hasUserScore();
    /**
     * <code>optional int32 user_score = 7;</code>
     *
     * <pre>
     *玩家分数
     * </pre>
     */
    int getUserScore();
  }
  /**
   * Protobuf type {@code deh.Score_Result}
   *
   * <pre>
   *下注结果
   * </pre>
   */
  public static final class Score_Result extends
      com.google.protobuf.GeneratedMessage
      implements Score_ResultOrBuilder {
    // Use Score_Result.newBuilder() to construct.
    private Score_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Score_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Score_Result defaultInstance;
    public static Score_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Score_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Score_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              jettonTotalScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              displayTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              jettonType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              userScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Score_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Score_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Score_Result.class, protobuf.clazz.deh.DehRsp.Score_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Score_Result> PARSER =
        new com.google.protobuf.AbstractParser<Score_Result>() {
      public Score_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Score_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Score_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // optional int32 current_player = 3;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 3;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 jetton_total_score = 4;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 4;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 4;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 jetton_total_score = 4;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 jetton_type = 6;
    public static final int JETTON_TYPE_FIELD_NUMBER = 6;
    private int jettonType_;
    /**
     * <code>optional int32 jetton_type = 6;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    public boolean hasJettonType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 jetton_type = 6;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    public int getJettonType() {
      return jettonType_;
    }

    // optional int32 user_score = 7;
    public static final int USER_SCORE_FIELD_NUMBER = 7;
    private int userScore_;
    /**
     * <code>optional int32 user_score = 7;</code>
     *
     * <pre>
     *玩家分数
     * </pre>
     */
    public boolean hasUserScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 user_score = 7;</code>
     *
     * <pre>
     *玩家分数
     * </pre>
     */
    public int getUserScore() {
      return userScore_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      jettonScore_ = 0;
      currentPlayer_ = 0;
      jettonTotalScore_ = 0;
      displayTime_ = 0;
      jettonType_ = 0;
      userScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, displayTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, jettonType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, userScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, jettonType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, userScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Score_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Score_Result}
     *
     * <pre>
     *下注结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Score_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Score_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Score_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Score_Result.class, protobuf.clazz.deh.DehRsp.Score_Result.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Score_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        jettonType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        userScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Score_Result_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Score_Result getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Score_Result.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Score_Result build() {
        protobuf.clazz.deh.DehRsp.Score_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Score_Result buildPartial() {
        protobuf.clazz.deh.DehRsp.Score_Result result = new protobuf.clazz.deh.DehRsp.Score_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.jettonType_ = jettonType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.userScore_ = userScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Score_Result) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Score_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Score_Result other) {
        if (other == protobuf.clazz.deh.DehRsp.Score_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasJettonType()) {
          setJettonType(other.getJettonType());
        }
        if (other.hasUserScore()) {
          setUserScore(other.getUserScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Score_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Score_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 3;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000004;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 4;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 4;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 jetton_total_score = 4;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 4;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00000008;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 4;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_type = 6;
      private int jettonType_ ;
      /**
       * <code>optional int32 jetton_type = 6;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public boolean hasJettonType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 jetton_type = 6;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public int getJettonType() {
        return jettonType_;
      }
      /**
       * <code>optional int32 jetton_type = 6;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public Builder setJettonType(int value) {
        bitField0_ |= 0x00000020;
        jettonType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_type = 6;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public Builder clearJettonType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 user_score = 7;
      private int userScore_ ;
      /**
       * <code>optional int32 user_score = 7;</code>
       *
       * <pre>
       *玩家分数
       * </pre>
       */
      public boolean hasUserScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 user_score = 7;</code>
       *
       * <pre>
       *玩家分数
       * </pre>
       */
      public int getUserScore() {
        return userScore_;
      }
      /**
       * <code>optional int32 user_score = 7;</code>
       *
       * <pre>
       *玩家分数
       * </pre>
       */
      public Builder setUserScore(int value) {
        bitField0_ |= 0x00000040;
        userScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_score = 7;</code>
       *
       * <pre>
       *玩家分数
       * </pre>
       */
      public Builder clearUserScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        userScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Score_Result)
    }

    static {
      defaultInstance = new Score_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Score_Result)
  }

  public interface Make_BoBo_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .RoomPlayerResponse players = 1;
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 total_bobo = 2;
    /**
     * <code>optional int32 total_bobo = 2;</code>
     *
     * <pre>
     *簸簸总分
     * </pre>
     */
    boolean hasTotalBobo();
    /**
     * <code>optional int32 total_bobo = 2;</code>
     *
     * <pre>
     *簸簸总分
     * </pre>
     */
    int getTotalBobo();

    // optional int32 opreate_player = 3;
    /**
     * <code>optional int32 opreate_player = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();
  }
  /**
   * Protobuf type {@code deh.Make_BoBo_Result}
   */
  public static final class Make_BoBo_Result extends
      com.google.protobuf.GeneratedMessage
      implements Make_BoBo_ResultOrBuilder {
    // Use Make_BoBo_Result.newBuilder() to construct.
    private Make_BoBo_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Make_BoBo_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Make_BoBo_Result defaultInstance;
    public static Make_BoBo_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Make_BoBo_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Make_BoBo_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              totalBobo_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              opreatePlayer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_BoBo_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_BoBo_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Make_BoBo_Result.class, protobuf.clazz.deh.DehRsp.Make_BoBo_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Make_BoBo_Result> PARSER =
        new com.google.protobuf.AbstractParser<Make_BoBo_Result>() {
      public Make_BoBo_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Make_BoBo_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Make_BoBo_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .RoomPlayerResponse players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 total_bobo = 2;
    public static final int TOTAL_BOBO_FIELD_NUMBER = 2;
    private int totalBobo_;
    /**
     * <code>optional int32 total_bobo = 2;</code>
     *
     * <pre>
     *簸簸总分
     * </pre>
     */
    public boolean hasTotalBobo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 total_bobo = 2;</code>
     *
     * <pre>
     *簸簸总分
     * </pre>
     */
    public int getTotalBobo() {
      return totalBobo_;
    }

    // optional int32 opreate_player = 3;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 3;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_player = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    private void initFields() {
      players_ = java.util.Collections.emptyList();
      totalBobo_ = 0;
      opreatePlayer_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, totalBobo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, opreatePlayer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, totalBobo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, opreatePlayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Make_BoBo_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Make_BoBo_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Make_BoBo_Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Make_BoBo_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_BoBo_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_BoBo_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Make_BoBo_Result.class, protobuf.clazz.deh.DehRsp.Make_BoBo_Result.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Make_BoBo_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playersBuilder_.clear();
        }
        totalBobo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Make_BoBo_Result_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Make_BoBo_Result getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Make_BoBo_Result.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Make_BoBo_Result build() {
        protobuf.clazz.deh.DehRsp.Make_BoBo_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Make_BoBo_Result buildPartial() {
        protobuf.clazz.deh.DehRsp.Make_BoBo_Result result = new protobuf.clazz.deh.DehRsp.Make_BoBo_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.totalBobo_ = totalBobo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreatePlayer_ = opreatePlayer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Make_BoBo_Result) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Make_BoBo_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Make_BoBo_Result other) {
        if (other == protobuf.clazz.deh.DehRsp.Make_BoBo_Result.getDefaultInstance()) return this;
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasTotalBobo()) {
          setTotalBobo(other.getTotalBobo());
        }
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Make_BoBo_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Make_BoBo_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .RoomPlayerResponse players = 1;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 total_bobo = 2;
      private int totalBobo_ ;
      /**
       * <code>optional int32 total_bobo = 2;</code>
       *
       * <pre>
       *簸簸总分
       * </pre>
       */
      public boolean hasTotalBobo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 total_bobo = 2;</code>
       *
       * <pre>
       *簸簸总分
       * </pre>
       */
      public int getTotalBobo() {
        return totalBobo_;
      }
      /**
       * <code>optional int32 total_bobo = 2;</code>
       *
       * <pre>
       *簸簸总分
       * </pre>
       */
      public Builder setTotalBobo(int value) {
        bitField0_ |= 0x00000002;
        totalBobo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_bobo = 2;</code>
       *
       * <pre>
       *簸簸总分
       * </pre>
       */
      public Builder clearTotalBobo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalBobo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opreate_player = 3;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 opreate_player = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000004;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Make_BoBo_Result)
    }

    static {
      defaultInstance = new Make_BoBo_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Make_BoBo_Result)
  }

  public interface Opreate_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // optional int32 opreate_type = 2;
    /**
     * <code>optional int32 opreate_type = 2;</code>
     *
     * <pre>
     *操作类型 1：丢 2:休 3：敲 4：大 5：跟
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 2;</code>
     *
     * <pre>
     *操作类型 1：丢 2:休 3：敲 4：大 5：跟
     * </pre>
     */
    int getOpreateType();

    // optional int32 current_player = 3;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code deh.Opreate_Result}
   *
   * <pre>
   *操作结果
   * </pre>
   */
  public static final class Opreate_Result extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_ResultOrBuilder {
    // Use Opreate_Result.newBuilder() to construct.
    private Opreate_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Result defaultInstance;
    public static Opreate_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opreateType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Opreate_Result.class, protobuf.clazz.deh.DehRsp.Opreate_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Result> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Result>() {
      public Opreate_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // optional int32 opreate_type = 2;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 2;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 2;</code>
     *
     * <pre>
     *操作类型 1：丢 2:休 3：敲 4：大 5：跟
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_type = 2;</code>
     *
     * <pre>
     *操作类型 1：丢 2:休 3：敲 4：大 5：跟
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 current_player = 3;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 3;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      opreateType_ = 0;
      currentPlayer_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opreateType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opreateType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Opreate_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Opreate_Result}
     *
     * <pre>
     *操作结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Opreate_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Opreate_Result.class, protobuf.clazz.deh.DehRsp.Opreate_Result.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Opreate_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Result_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Result getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Opreate_Result.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Result build() {
        protobuf.clazz.deh.DehRsp.Opreate_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Result buildPartial() {
        protobuf.clazz.deh.DehRsp.Opreate_Result result = new protobuf.clazz.deh.DehRsp.Opreate_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Opreate_Result) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Opreate_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Opreate_Result other) {
        if (other == protobuf.clazz.deh.DehRsp.Opreate_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Opreate_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Opreate_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opreate_type = 2;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 2;</code>
       *
       * <pre>
       *操作类型 1：丢 2:休 3：敲 4：大 5：跟
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 opreate_type = 2;</code>
       *
       * <pre>
       *操作类型 1：丢 2:休 3：敲 4：大 5：跟
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 2;</code>
       *
       * <pre>
       *操作类型 1：丢 2:休 3：敲 4：大 5：跟
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000002;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 2;</code>
       *
       * <pre>
       *操作类型 1：丢 2:休 3：敲 4：大 5：跟
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 3;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000004;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Opreate_Result)
    }

    static {
      defaultInstance = new Opreate_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Opreate_Result)
  }

  public interface Che_Pai_BeginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse cards_data = 1;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated .Int32ArrayResponse type = 2;
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getTypeList();
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getType(int index);
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getTypeCount();
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getTypeOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTypeOrBuilder(
        int index);

    // optional int32 score = 3;
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *下注总额
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *下注总额
     * </pre>
     */
    int getScore();
  }
  /**
   * Protobuf type {@code deh.Che_Pai_Begin}
   */
  public static final class Che_Pai_Begin extends
      com.google.protobuf.GeneratedMessage
      implements Che_Pai_BeginOrBuilder {
    // Use Che_Pai_Begin.newBuilder() to construct.
    private Che_Pai_Begin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Che_Pai_Begin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Che_Pai_Begin defaultInstance;
    public static Che_Pai_Begin getDefaultInstance() {
      return defaultInstance;
    }

    public Che_Pai_Begin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Che_Pai_Begin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                type_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              type_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              score_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          type_ = java.util.Collections.unmodifiableList(type_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_Begin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_Begin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Che_Pai_Begin.class, protobuf.clazz.deh.DehRsp.Che_Pai_Begin.Builder.class);
    }

    public static com.google.protobuf.Parser<Che_Pai_Begin> PARSER =
        new com.google.protobuf.AbstractParser<Che_Pai_Begin>() {
      public Che_Pai_Begin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Che_Pai_Begin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Che_Pai_Begin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated .Int32ArrayResponse type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> type_;
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getTypeList() {
      return type_;
    }
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getTypeOrBuilderList() {
      return type_;
    }
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getTypeCount() {
      return type_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getType(int index) {
      return type_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse type = 2;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTypeOrBuilder(
        int index) {
      return type_.get(index);
    }

    // optional int32 score = 3;
    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *下注总额
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *下注总额
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      type_ = java.util.Collections.emptyList();
      score_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(1, cardsData_.get(i));
      }
      for (int i = 0; i < type_.size(); i++) {
        output.writeMessage(2, type_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardsData_.get(i));
      }
      for (int i = 0; i < type_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, type_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_Begin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Che_Pai_Begin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Che_Pai_Begin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Che_Pai_BeginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_Begin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_Begin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Che_Pai_Begin.class, protobuf.clazz.deh.DehRsp.Che_Pai_Begin.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Che_Pai_Begin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardsDataBuilder_.clear();
        }
        if (typeBuilder_ == null) {
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          typeBuilder_.clear();
        }
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_Begin_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_Begin getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Che_Pai_Begin.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_Begin build() {
        protobuf.clazz.deh.DehRsp.Che_Pai_Begin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_Begin buildPartial() {
        protobuf.clazz.deh.DehRsp.Che_Pai_Begin result = new protobuf.clazz.deh.DehRsp.Che_Pai_Begin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            type_ = java.util.Collections.unmodifiableList(type_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Che_Pai_Begin) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Che_Pai_Begin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Che_Pai_Begin other) {
        if (other == protobuf.clazz.deh.DehRsp.Che_Pai_Begin.getDefaultInstance()) return this;
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (typeBuilder_ == null) {
          if (!other.type_.isEmpty()) {
            if (type_.isEmpty()) {
              type_ = other.type_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTypeIsMutable();
              type_.addAll(other.type_);
            }
            onChanged();
          }
        } else {
          if (!other.type_.isEmpty()) {
            if (typeBuilder_.isEmpty()) {
              typeBuilder_.dispose();
              typeBuilder_ = null;
              type_ = other.type_;
              bitField0_ = (bitField0_ & ~0x00000002);
              typeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTypeFieldBuilder() : null;
            } else {
              typeBuilder_.addAllMessages(other.type_);
            }
          }
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Che_Pai_Begin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Che_Pai_Begin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse cards_data = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated .Int32ArrayResponse type = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> type_ =
        java.util.Collections.emptyList();
      private void ensureTypeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          type_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(type_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> typeBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getTypeList() {
        if (typeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(type_);
        } else {
          return typeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getTypeCount() {
        if (typeBuilder_ == null) {
          return type_.size();
        } else {
          return typeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getType(int index) {
        if (typeBuilder_ == null) {
          return type_.get(index);
        } else {
          return typeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.set(index, value);
          onChanged();
        } else {
          typeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.set(index, builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addType(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.add(value);
          onChanged();
        } else {
          typeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.add(index, value);
          onChanged();
        } else {
          typeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addType(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.add(builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addType(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.add(index, builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllType(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          super.addAll(values, type_);
          onChanged();
        } else {
          typeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder removeType(int index) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.remove(index);
          onChanged();
        } else {
          typeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getTypeBuilder(
          int index) {
        return getTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTypeOrBuilder(
          int index) {
        if (typeBuilder_ == null) {
          return type_.get(index);  } else {
          return typeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getTypeOrBuilderList() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(type_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addTypeBuilder() {
        return getTypeFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addTypeBuilder(
          int index) {
        return getTypeFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse type = 2;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getTypeBuilderList() {
        return getTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  type_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      // optional int32 score = 3;
      private int score_ ;
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *下注总额
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *下注总额
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *下注总额
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000004;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *下注总额
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Che_Pai_Begin)
    }

    static {
      defaultInstance = new Che_Pai_Begin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Che_Pai_Begin)
  }

  public interface Che_Pai_EndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse cards_data = 1;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_count = 2;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated int32 type = 3;
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getTypeList();
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getTypeCount();
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getType(int index);

    // optional int32 opreate_type = 4;
    /**
     * <code>optional int32 opreate_type = 4;</code>
     *
     * <pre>
     *操作类型，1：比头牌2：比尾牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 4;</code>
     *
     * <pre>
     *操作类型，1：比头牌2：比尾牌
     * </pre>
     */
    int getOpreateType();
  }
  /**
   * Protobuf type {@code deh.Che_Pai_End}
   */
  public static final class Che_Pai_End extends
      com.google.protobuf.GeneratedMessage
      implements Che_Pai_EndOrBuilder {
    // Use Che_Pai_End.newBuilder() to construct.
    private Che_Pai_End(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Che_Pai_End(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Che_Pai_End defaultInstance;
    public static Che_Pai_End getDefaultInstance() {
      return defaultInstance;
    }

    public Che_Pai_End getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Che_Pai_End(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              type_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                type_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          type_ = java.util.Collections.unmodifiableList(type_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_End_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_End_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Che_Pai_End.class, protobuf.clazz.deh.DehRsp.Che_Pai_End.Builder.class);
    }

    public static com.google.protobuf.Parser<Che_Pai_End> PARSER =
        new com.google.protobuf.AbstractParser<Che_Pai_End>() {
      public Che_Pai_End parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Che_Pai_End(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Che_Pai_End> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_count = 2;
    public static final int CARD_COUNT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> type_;
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTypeList() {
      return type_;
    }
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getTypeCount() {
      return type_.size();
    }
    /**
     * <code>repeated int32 type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getType(int index) {
      return type_.get(index);
    }

    // optional int32 opreate_type = 4;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 4;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 4;</code>
     *
     * <pre>
     *操作类型，1：比头牌2：比尾牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 4;</code>
     *
     * <pre>
     *操作类型，1：比头牌2：比尾牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      type_ = java.util.Collections.emptyList();
      opreateType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(1, cardsData_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(2, cardCount_.get(i));
      }
      for (int i = 0; i < type_.size(); i++) {
        output.writeInt32(3, type_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, opreateType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < type_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(type_.get(i));
        }
        size += dataSize;
        size += 1 * getTypeList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, opreateType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Che_Pai_End parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Che_Pai_End prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Che_Pai_End}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Che_Pai_EndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_End_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_End_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Che_Pai_End.class, protobuf.clazz.deh.DehRsp.Che_Pai_End.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Che_Pai_End.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardsDataBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Che_Pai_End_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_End getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Che_Pai_End.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_End build() {
        protobuf.clazz.deh.DehRsp.Che_Pai_End result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Che_Pai_End buildPartial() {
        protobuf.clazz.deh.DehRsp.Che_Pai_End result = new protobuf.clazz.deh.DehRsp.Che_Pai_End(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardCount_ = cardCount_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          type_ = java.util.Collections.unmodifiableList(type_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Che_Pai_End) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Che_Pai_End)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Che_Pai_End other) {
        if (other == protobuf.clazz.deh.DehRsp.Che_Pai_End.getDefaultInstance()) return this;
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (!other.type_.isEmpty()) {
          if (type_.isEmpty()) {
            type_ = other.type_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTypeIsMutable();
            type_.addAll(other.type_);
          }
          onChanged();
        }
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Che_Pai_End parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Che_Pai_End) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse cards_data = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_count = 2;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 type = 3;
      private java.util.List<java.lang.Integer> type_ = java.util.Collections.emptyList();
      private void ensureTypeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          type_ = new java.util.ArrayList<java.lang.Integer>(type_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTypeList() {
        return java.util.Collections.unmodifiableList(type_);
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getTypeCount() {
        return type_.size();
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getType(int index) {
        return type_.get(index);
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setType(
          int index, int value) {
        ensureTypeIsMutable();
        type_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addType(int value) {
        ensureTypeIsMutable();
        type_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTypeIsMutable();
        super.addAll(values, type_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearType() {
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 opreate_type = 4;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 4;</code>
       *
       * <pre>
       *操作类型，1：比头牌2：比尾牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 opreate_type = 4;</code>
       *
       * <pre>
       *操作类型，1：比头牌2：比尾牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 4;</code>
       *
       * <pre>
       *操作类型，1：比头牌2：比尾牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000008;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 4;</code>
       *
       * <pre>
       *操作类型，1：比头牌2：比尾牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Che_Pai_End)
    }

    static {
      defaultInstance = new Che_Pai_End(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Che_Pai_End)
  }

  public interface Open_Card_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // repeated int32 cards_type = 3;
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsTypeList();
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardsTypeCount();
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardsType(int index);
  }
  /**
   * Protobuf type {@code deh.Open_Card_Result}
   */
  public static final class Open_Card_Result extends
      com.google.protobuf.GeneratedMessage
      implements Open_Card_ResultOrBuilder {
    // Use Open_Card_Result.newBuilder() to construct.
    private Open_Card_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Open_Card_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Open_Card_Result defaultInstance;
    public static Open_Card_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Open_Card_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Open_Card_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardsType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardsType_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardsType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardsType_ = java.util.Collections.unmodifiableList(cardsType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Open_Card_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Open_Card_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Open_Card_Result.class, protobuf.clazz.deh.DehRsp.Open_Card_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Open_Card_Result> PARSER =
        new com.google.protobuf.AbstractParser<Open_Card_Result>() {
      public Open_Card_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Open_Card_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Open_Card_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // repeated int32 cards_type = 3;
    public static final int CARDS_TYPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardsType_;
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsTypeList() {
      return cardsType_;
    }
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardsTypeCount() {
      return cardsType_.size();
    }
    /**
     * <code>repeated int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardsType(int index) {
      return cardsType_.get(index);
    }

    private void initFields() {
      opreatePlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardsType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      for (int i = 0; i < cardsType_.size(); i++) {
        output.writeInt32(3, cardsType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsTypeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Open_Card_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Open_Card_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Open_Card_Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Open_Card_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Open_Card_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Open_Card_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Open_Card_Result.class, protobuf.clazz.deh.DehRsp.Open_Card_Result.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Open_Card_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Open_Card_Result_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Open_Card_Result getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Open_Card_Result.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Open_Card_Result build() {
        protobuf.clazz.deh.DehRsp.Open_Card_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Open_Card_Result buildPartial() {
        protobuf.clazz.deh.DehRsp.Open_Card_Result result = new protobuf.clazz.deh.DehRsp.Open_Card_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsType_ = java.util.Collections.unmodifiableList(cardsType_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardsType_ = cardsType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Open_Card_Result) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Open_Card_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Open_Card_Result other) {
        if (other == protobuf.clazz.deh.DehRsp.Open_Card_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (!other.cardsType_.isEmpty()) {
          if (cardsType_.isEmpty()) {
            cardsType_ = other.cardsType_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsTypeIsMutable();
            cardsType_.addAll(other.cardsType_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Open_Card_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Open_Card_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 cards_type = 3;
      private java.util.List<java.lang.Integer> cardsType_ = java.util.Collections.emptyList();
      private void ensureCardsTypeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsType_ = new java.util.ArrayList<java.lang.Integer>(cardsType_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsTypeList() {
        return java.util.Collections.unmodifiableList(cardsType_);
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardsTypeCount() {
        return cardsType_.size();
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardsType(int index) {
        return cardsType_.get(index);
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardsType(
          int index, int value) {
        ensureCardsTypeIsMutable();
        cardsType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardsType(int value) {
        ensureCardsTypeIsMutable();
        cardsType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllCardsType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsTypeIsMutable();
        super.addAll(values, cardsType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardsType() {
        cardsType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Open_Card_Result)
    }

    static {
      defaultInstance = new Open_Card_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Open_Card_Result)
  }

  public interface Special_ReminOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string remin_message = 1;
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    boolean hasReminMessage();
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    java.lang.String getReminMessage();
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getReminMessageBytes();
  }
  /**
   * Protobuf type {@code deh.Special_Remin}
   *
   * <pre>
   *特殊牌型提示
   * </pre>
   */
  public static final class Special_Remin extends
      com.google.protobuf.GeneratedMessage
      implements Special_ReminOrBuilder {
    // Use Special_Remin.newBuilder() to construct.
    private Special_Remin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Special_Remin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Special_Remin defaultInstance;
    public static Special_Remin getDefaultInstance() {
      return defaultInstance;
    }

    public Special_Remin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Special_Remin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              reminMessage_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Special_Remin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Special_Remin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Special_Remin.class, protobuf.clazz.deh.DehRsp.Special_Remin.Builder.class);
    }

    public static com.google.protobuf.Parser<Special_Remin> PARSER =
        new com.google.protobuf.AbstractParser<Special_Remin>() {
      public Special_Remin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Special_Remin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Special_Remin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string remin_message = 1;
    public static final int REMIN_MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object reminMessage_;
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public boolean hasReminMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public java.lang.String getReminMessage() {
      java.lang.Object ref = reminMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reminMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string remin_message = 1;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReminMessageBytes() {
      java.lang.Object ref = reminMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reminMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      reminMessage_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getReminMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getReminMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Special_Remin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Special_Remin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Special_Remin}
     *
     * <pre>
     *特殊牌型提示
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Special_ReminOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Special_Remin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Special_Remin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Special_Remin.class, protobuf.clazz.deh.DehRsp.Special_Remin.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Special_Remin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reminMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Special_Remin_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Special_Remin getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Special_Remin.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Special_Remin build() {
        protobuf.clazz.deh.DehRsp.Special_Remin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Special_Remin buildPartial() {
        protobuf.clazz.deh.DehRsp.Special_Remin result = new protobuf.clazz.deh.DehRsp.Special_Remin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reminMessage_ = reminMessage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Special_Remin) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Special_Remin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Special_Remin other) {
        if (other == protobuf.clazz.deh.DehRsp.Special_Remin.getDefaultInstance()) return this;
        if (other.hasReminMessage()) {
          bitField0_ |= 0x00000001;
          reminMessage_ = other.reminMessage_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Special_Remin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Special_Remin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string remin_message = 1;
      private java.lang.Object reminMessage_ = "";
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public boolean hasReminMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public java.lang.String getReminMessage() {
        java.lang.Object ref = reminMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reminMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReminMessageBytes() {
        java.lang.Object ref = reminMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reminMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setReminMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        reminMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder clearReminMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reminMessage_ = getDefaultInstance().getReminMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string remin_message = 1;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setReminMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        reminMessage_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Special_Remin)
    }

    static {
      defaultInstance = new Special_Remin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Special_Remin)
  }

  public interface Zi_Chan_ScoreOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 zi_chan_score = 1;
    /**
     * <code>optional int32 zi_chan_score = 1;</code>
     *
     * <pre>
     *资产分数
     * </pre>
     */
    boolean hasZiChanScore();
    /**
     * <code>optional int32 zi_chan_score = 1;</code>
     *
     * <pre>
     *资产分数
     * </pre>
     */
    int getZiChanScore();

    // optional int32 bu_score_min = 2;
    /**
     * <code>optional int32 bu_score_min = 2;</code>
     *
     * <pre>
     *补分限制
     * </pre>
     */
    boolean hasBuScoreMin();
    /**
     * <code>optional int32 bu_score_min = 2;</code>
     *
     * <pre>
     *补分限制
     * </pre>
     */
    int getBuScoreMin();

    // optional int32 bu_score_use_gold = 3;
    /**
     * <code>optional int32 bu_score_use_gold = 3;</code>
     *
     * <pre>
     *补分消耗
     * </pre>
     */
    boolean hasBuScoreUseGold();
    /**
     * <code>optional int32 bu_score_use_gold = 3;</code>
     *
     * <pre>
     *补分消耗
     * </pre>
     */
    int getBuScoreUseGold();

    // optional int64 gold = 4;
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家闲逸豆
     * </pre>
     */
    long getGold();

    // optional int32 is_bu_score = 5;
    /**
     * <code>optional int32 is_bu_score = 5;</code>
     *
     * <pre>
     *能否补分
     * </pre>
     */
    boolean hasIsBuScore();
    /**
     * <code>optional int32 is_bu_score = 5;</code>
     *
     * <pre>
     *能否补分
     * </pre>
     */
    int getIsBuScore();
  }
  /**
   * Protobuf type {@code deh.Zi_Chan_Score}
   */
  public static final class Zi_Chan_Score extends
      com.google.protobuf.GeneratedMessage
      implements Zi_Chan_ScoreOrBuilder {
    // Use Zi_Chan_Score.newBuilder() to construct.
    private Zi_Chan_Score(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Zi_Chan_Score(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Zi_Chan_Score defaultInstance;
    public static Zi_Chan_Score getDefaultInstance() {
      return defaultInstance;
    }

    public Zi_Chan_Score getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Zi_Chan_Score(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ziChanScore_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              buScoreMin_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              buScoreUseGold_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gold_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isBuScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Zi_Chan_Score_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Zi_Chan_Score_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Zi_Chan_Score.class, protobuf.clazz.deh.DehRsp.Zi_Chan_Score.Builder.class);
    }

    public static com.google.protobuf.Parser<Zi_Chan_Score> PARSER =
        new com.google.protobuf.AbstractParser<Zi_Chan_Score>() {
      public Zi_Chan_Score parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Zi_Chan_Score(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Zi_Chan_Score> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 zi_chan_score = 1;
    public static final int ZI_CHAN_SCORE_FIELD_NUMBER = 1;
    private int ziChanScore_;
    /**
     * <code>optional int32 zi_chan_score = 1;</code>
     *
     * <pre>
     *资产分数
     * </pre>
     */
    public boolean hasZiChanScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 zi_chan_score = 1;</code>
     *
     * <pre>
     *资产分数
     * </pre>
     */
    public int getZiChanScore() {
      return ziChanScore_;
    }

    // optional int32 bu_score_min = 2;
    public static final int BU_SCORE_MIN_FIELD_NUMBER = 2;
    private int buScoreMin_;
    /**
     * <code>optional int32 bu_score_min = 2;</code>
     *
     * <pre>
     *补分限制
     * </pre>
     */
    public boolean hasBuScoreMin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 bu_score_min = 2;</code>
     *
     * <pre>
     *补分限制
     * </pre>
     */
    public int getBuScoreMin() {
      return buScoreMin_;
    }

    // optional int32 bu_score_use_gold = 3;
    public static final int BU_SCORE_USE_GOLD_FIELD_NUMBER = 3;
    private int buScoreUseGold_;
    /**
     * <code>optional int32 bu_score_use_gold = 3;</code>
     *
     * <pre>
     *补分消耗
     * </pre>
     */
    public boolean hasBuScoreUseGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 bu_score_use_gold = 3;</code>
     *
     * <pre>
     *补分消耗
     * </pre>
     */
    public int getBuScoreUseGold() {
      return buScoreUseGold_;
    }

    // optional int64 gold = 4;
    public static final int GOLD_FIELD_NUMBER = 4;
    private long gold_;
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 gold = 4;</code>
     *
     * <pre>
     *玩家闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    // optional int32 is_bu_score = 5;
    public static final int IS_BU_SCORE_FIELD_NUMBER = 5;
    private int isBuScore_;
    /**
     * <code>optional int32 is_bu_score = 5;</code>
     *
     * <pre>
     *能否补分
     * </pre>
     */
    public boolean hasIsBuScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 is_bu_score = 5;</code>
     *
     * <pre>
     *能否补分
     * </pre>
     */
    public int getIsBuScore() {
      return isBuScore_;
    }

    private void initFields() {
      ziChanScore_ = 0;
      buScoreMin_ = 0;
      buScoreUseGold_ = 0;
      gold_ = 0L;
      isBuScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ziChanScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, buScoreMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, buScoreUseGold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, isBuScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ziChanScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, buScoreMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, buScoreUseGold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isBuScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Zi_Chan_Score parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Zi_Chan_Score prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Zi_Chan_Score}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Zi_Chan_ScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Zi_Chan_Score_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Zi_Chan_Score_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Zi_Chan_Score.class, protobuf.clazz.deh.DehRsp.Zi_Chan_Score.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Zi_Chan_Score.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ziChanScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        buScoreMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        buScoreUseGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        isBuScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Zi_Chan_Score_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Zi_Chan_Score getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Zi_Chan_Score.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Zi_Chan_Score build() {
        protobuf.clazz.deh.DehRsp.Zi_Chan_Score result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Zi_Chan_Score buildPartial() {
        protobuf.clazz.deh.DehRsp.Zi_Chan_Score result = new protobuf.clazz.deh.DehRsp.Zi_Chan_Score(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ziChanScore_ = ziChanScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.buScoreMin_ = buScoreMin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.buScoreUseGold_ = buScoreUseGold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isBuScore_ = isBuScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Zi_Chan_Score) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Zi_Chan_Score)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Zi_Chan_Score other) {
        if (other == protobuf.clazz.deh.DehRsp.Zi_Chan_Score.getDefaultInstance()) return this;
        if (other.hasZiChanScore()) {
          setZiChanScore(other.getZiChanScore());
        }
        if (other.hasBuScoreMin()) {
          setBuScoreMin(other.getBuScoreMin());
        }
        if (other.hasBuScoreUseGold()) {
          setBuScoreUseGold(other.getBuScoreUseGold());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasIsBuScore()) {
          setIsBuScore(other.getIsBuScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Zi_Chan_Score parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Zi_Chan_Score) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 zi_chan_score = 1;
      private int ziChanScore_ ;
      /**
       * <code>optional int32 zi_chan_score = 1;</code>
       *
       * <pre>
       *资产分数
       * </pre>
       */
      public boolean hasZiChanScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 zi_chan_score = 1;</code>
       *
       * <pre>
       *资产分数
       * </pre>
       */
      public int getZiChanScore() {
        return ziChanScore_;
      }
      /**
       * <code>optional int32 zi_chan_score = 1;</code>
       *
       * <pre>
       *资产分数
       * </pre>
       */
      public Builder setZiChanScore(int value) {
        bitField0_ |= 0x00000001;
        ziChanScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zi_chan_score = 1;</code>
       *
       * <pre>
       *资产分数
       * </pre>
       */
      public Builder clearZiChanScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ziChanScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bu_score_min = 2;
      private int buScoreMin_ ;
      /**
       * <code>optional int32 bu_score_min = 2;</code>
       *
       * <pre>
       *补分限制
       * </pre>
       */
      public boolean hasBuScoreMin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 bu_score_min = 2;</code>
       *
       * <pre>
       *补分限制
       * </pre>
       */
      public int getBuScoreMin() {
        return buScoreMin_;
      }
      /**
       * <code>optional int32 bu_score_min = 2;</code>
       *
       * <pre>
       *补分限制
       * </pre>
       */
      public Builder setBuScoreMin(int value) {
        bitField0_ |= 0x00000002;
        buScoreMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bu_score_min = 2;</code>
       *
       * <pre>
       *补分限制
       * </pre>
       */
      public Builder clearBuScoreMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        buScoreMin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bu_score_use_gold = 3;
      private int buScoreUseGold_ ;
      /**
       * <code>optional int32 bu_score_use_gold = 3;</code>
       *
       * <pre>
       *补分消耗
       * </pre>
       */
      public boolean hasBuScoreUseGold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 bu_score_use_gold = 3;</code>
       *
       * <pre>
       *补分消耗
       * </pre>
       */
      public int getBuScoreUseGold() {
        return buScoreUseGold_;
      }
      /**
       * <code>optional int32 bu_score_use_gold = 3;</code>
       *
       * <pre>
       *补分消耗
       * </pre>
       */
      public Builder setBuScoreUseGold(int value) {
        bitField0_ |= 0x00000004;
        buScoreUseGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bu_score_use_gold = 3;</code>
       *
       * <pre>
       *补分消耗
       * </pre>
       */
      public Builder clearBuScoreUseGold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buScoreUseGold_ = 0;
        onChanged();
        return this;
      }

      // optional int64 gold = 4;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00000008;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 4;</code>
       *
       * <pre>
       *玩家闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 is_bu_score = 5;
      private int isBuScore_ ;
      /**
       * <code>optional int32 is_bu_score = 5;</code>
       *
       * <pre>
       *能否补分
       * </pre>
       */
      public boolean hasIsBuScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 is_bu_score = 5;</code>
       *
       * <pre>
       *能否补分
       * </pre>
       */
      public int getIsBuScore() {
        return isBuScore_;
      }
      /**
       * <code>optional int32 is_bu_score = 5;</code>
       *
       * <pre>
       *能否补分
       * </pre>
       */
      public Builder setIsBuScore(int value) {
        bitField0_ |= 0x00000010;
        isBuScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_bu_score = 5;</code>
       *
       * <pre>
       *能否补分
       * </pre>
       */
      public Builder clearIsBuScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isBuScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Zi_Chan_Score)
    }

    static {
      defaultInstance = new Zi_Chan_Score(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Zi_Chan_Score)
  }

  public interface Opreate_Request_DEHOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
     * </pre>
     */
    int getOpreateType();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注筹码数量
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注筹码数量
     * </pre>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code deh.Opreate_Request_DEH}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Request_DEH extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Request_DEHOrBuilder {
    // Use Opreate_Request_DEH.newBuilder() to construct.
    private Opreate_Request_DEH(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Request_DEH(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Request_DEH defaultInstance;
    public static Opreate_Request_DEH getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Request_DEH getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Request_DEH(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Request_DEH_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Request_DEH_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.class, protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Request_DEH> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Request_DEH>() {
      public Opreate_Request_DEH parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Request_DEH(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Request_DEH> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注筹码数量
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注筹码数量
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      opreateType_ = 0;
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Opreate_Request_DEH prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Opreate_Request_DEH}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Opreate_Request_DEHOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Request_DEH_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Request_DEH_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.class, protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_Request_DEH_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Request_DEH getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Request_DEH build() {
        protobuf.clazz.deh.DehRsp.Opreate_Request_DEH result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_Request_DEH buildPartial() {
        protobuf.clazz.deh.DehRsp.Opreate_Request_DEH result = new protobuf.clazz.deh.DehRsp.Opreate_Request_DEH(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Opreate_Request_DEH) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Opreate_Request_DEH)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Opreate_Request_DEH other) {
        if (other == protobuf.clazz.deh.DehRsp.Opreate_Request_DEH.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Opreate_Request_DEH parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Opreate_Request_DEH) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：丢 2:休 3：敲 4：大 5：跟 6:叫簸簸数，7：特牌取消,8:补分请求，9：补分确定
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注筹码数量
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注筹码数量
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注筹码数量
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注筹码数量
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Opreate_Request_DEH)
    }

    static {
      defaultInstance = new Opreate_Request_DEH(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Opreate_Request_DEH)
  }

  public interface Opreate_open_cardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 cards_data = 1;
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 card_count = 2;
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount();
  }
  /**
   * Protobuf type {@code deh.Opreate_open_card}
   */
  public static final class Opreate_open_card extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_open_cardOrBuilder {
    // Use Opreate_open_card.newBuilder() to construct.
    private Opreate_open_card(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_open_card(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_open_card defaultInstance;
    public static Opreate_open_card getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_open_card getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_open_card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              cardCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_open_card_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_open_card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.deh.DehRsp.Opreate_open_card.class, protobuf.clazz.deh.DehRsp.Opreate_open_card.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_open_card> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_open_card>() {
      public Opreate_open_card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_open_card(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_open_card> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 card_count = 2;
    public static final int CARD_COUNT_FIELD_NUMBER = 2;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(1, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, cardCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.deh.DehRsp.Opreate_open_card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.deh.DehRsp.Opreate_open_card prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code deh.Opreate_open_card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.deh.DehRsp.Opreate_open_cardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_open_card_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_open_card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.deh.DehRsp.Opreate_open_card.class, protobuf.clazz.deh.DehRsp.Opreate_open_card.Builder.class);
      }

      // Construct using protobuf.clazz.deh.DehRsp.Opreate_open_card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.deh.DehRsp.internal_static_deh_Opreate_open_card_descriptor;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_open_card getDefaultInstanceForType() {
        return protobuf.clazz.deh.DehRsp.Opreate_open_card.getDefaultInstance();
      }

      public protobuf.clazz.deh.DehRsp.Opreate_open_card build() {
        protobuf.clazz.deh.DehRsp.Opreate_open_card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.deh.DehRsp.Opreate_open_card buildPartial() {
        protobuf.clazz.deh.DehRsp.Opreate_open_card result = new protobuf.clazz.deh.DehRsp.Opreate_open_card(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardCount_ = cardCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.deh.DehRsp.Opreate_open_card) {
          return mergeFrom((protobuf.clazz.deh.DehRsp.Opreate_open_card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.deh.DehRsp.Opreate_open_card other) {
        if (other == protobuf.clazz.deh.DehRsp.Opreate_open_card.getDefaultInstance()) return this;
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.deh.DehRsp.Opreate_open_card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.deh.DehRsp.Opreate_open_card) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 cards_data = 1;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 card_count = 2;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000002;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:deh.Opreate_open_card)
    }

    static {
      defaultInstance = new Opreate_open_card(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:deh.Opreate_open_card)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_RefreshPlayerStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_RefreshPlayerStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_RefreshGameStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_RefreshGameStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Refresh_Colock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Refresh_Colock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_PukeGameEndDeh_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_PukeGameEndDeh_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_TableResponseDEH_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_TableResponseDEH_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_GameStartDEH_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_GameStartDEH_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Make_Sure_Banker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Make_Sure_Banker_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Refresh_Table_message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Refresh_Table_message_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Send_card_Deh_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Send_card_Deh_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_User_Can_Opreate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_User_Can_Opreate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Score_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Score_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Make_BoBo_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Make_BoBo_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Opreate_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Opreate_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Che_Pai_Begin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Che_Pai_Begin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Che_Pai_End_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Che_Pai_End_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Open_Card_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Open_Card_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Special_Remin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Special_Remin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Zi_Chan_Score_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Zi_Chan_Score_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Opreate_Request_DEH_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Opreate_Request_DEH_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_deh_Opreate_open_card_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_deh_Opreate_open_card_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022deh/dehProto.proto\022\003deh\032\024basic/protoco" +
      "l.proto\";\n\023RefreshPlayerStatus\022\024\n\014player" +
      "_index\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\"8\n\021RefreshG" +
      "ameStatus\022\016\n\006status\030\001 \001(\005\022\023\n\013displaytime" +
      "\030\002 \001(\005\"3\n\016Refresh_Colock\022\023\n\013displaytime\030" +
      "\001 \001(\005\022\014\n\004type\030\002 \001(\005\"\255\004\n\016PukeGameEndDeh\022\034" +
      "\n\troom_info\030\001 \001(\0132\t.RoomInfo\022\021\n\tcur_roun" +
      "d\030\002 \001(\005\022\022\n\ngame_round\030\003 \001(\005\022\022\n\ncard_coun" +
      "t\030\004 \003(\005\022\'\n\ncards_data\030\005 \003(\0132\023.Int32Array" +
      "Response\022\021\n\tend_score\030\006 \003(\005\022\022\n\nplayer_nu",
      "m\030\007 \001(\005\022\016\n\006reason\030\010 \001(\005\022$\n\007players\030\t \003(\013" +
      "2\023.RoomPlayerResponse\022\020\n\010win_sort\030\n \003(\005\022" +
      "\030\n\020back_score_chair\030\013 \003(\005\022\022\n\nback_score\030" +
      "\014 \003(\005\022\016\n\006winner\030\r \003(\005\022&\n\tcard_type\030\016 \003(\013" +
      "2\023.Int32ArrayResponse\022\032\n\022win_mang_chi_in" +
      "dex\030\017 \003(\005\022\032\n\022win_mang_chi_score\030\025 \003(\005\022\025\n" +
      "\rmang_pi_score\030\020 \003(\005\022\037\n\027end_score_extra_" +
      "mang_pi\030\021 \003(\005\022\027\n\017xian_qian_score\030\026 \003(\005\022\025" +
      "\n\rall_end_score\030\022 \003(\005\022\022\n\nstart_time\030\023 \001(" +
      "\003\022\020\n\010end_time\030\024 \001(\003\"\304\003\n\020TableResponseDEH",
      "\022\025\n\rbanker_player\030\001 \001(\005\022\026\n\016current_playe" +
      "r\030\002 \001(\005\022\023\n\013prev_player\030\003 \001(\005\022\034\n\troom_inf" +
      "o\030\004 \001(\0132\t.RoomInfo\022$\n\007players\030\005 \003(\0132\023.Ro" +
      "omPlayerResponse\022\022\n\nis_give_up\030\006 \003(\010\022\024\n\014" +
      "jetton_score\030\007 \003(\005\022\024\n\014display_time\030\010 \001(\005" +
      "\022\027\n\017deh_game_status\030\n \001(\005\022\017\n\007is_bobo\030\t \003" +
      "(\010\022\026\n\016max_bobo_score\030\013 \001(\005\022\026\n\016min_bobo_s" +
      "core\030\014 \001(\005\022\'\n\ncards_data\030\r \003(\0132\023.Int32Ar" +
      "rayResponse\022\024\n\014is_open_card\030\016 \003(\010\022&\n\tcar" +
      "d_type\030\017 \003(\0132\023.Int32ArrayResponse\022\026\n\016man",
      "g_chi_score\030\020 \001(\005\022\017\n\007mang_pi\030\021 \001(\005\"\230\001\n\014G" +
      "ameStartDEH\022\034\n\troom_info\030\001 \001(\0132\t.RoomInf" +
      "o\022$\n\007players\030\002 \003(\0132\023.RoomPlayerResponse\022" +
      "\026\n\016max_bobo_score\030\003 \001(\005\022\026\n\016min_bobo_scor" +
      "e\030\004 \001(\005\022\024\n\014display_time\030\005 \001(\005\"(\n\020Make_Su" +
      "re_Banker\022\024\n\014banker_index\030\001 \001(\005\"\316\001\n\025Refr" +
      "esh_Table_message\022\026\n\016current_player\030\001 \001(" +
      "\005\022\026\n\016mang_chi_score\030\002 \001(\005\022\032\n\022xiu_mang_cu" +
      "r_round\030\003 \001(\005\022\034\n\024xiu_mang_total_round\030\004 " +
      "\001(\005\022\017\n\007mang_pi\030\005 \001(\005\022\033\n\023shou_mang_cur_ro",
      "und\030\006 \001(\005\022\035\n\025shou_mang_total_round\030\007 \001(\005" +
      "\"\301\001\n\rSend_card_Deh\022\'\n\ncards_data\030\001 \003(\0132\023" +
      ".Int32ArrayResponse\022\022\n\ncard_count\030\002 \003(\005\022" +
      "\024\n\014display_time\030\003 \001(\005\022\026\n\016current_player\030" +
      "\004 \001(\005\022,\n\017hand_cards_data\030\005 \003(\0132\023.Int32Ar" +
      "rayResponse\022\027\n\017hand_card_count\030\006 \003(\005\"\305\001\n" +
      "\020User_Can_Opreate\022\017\n\007give_up\030\001 \001(\005\022\017\n\007ge" +
      "n_zhu\030\002 \001(\005\022\023\n\013add_operate\030\003 \001(\005\022\021\n\tshuo" +
      "_hand\030\004 \001(\005\022\014\n\004pass\030\005 \001(\005\022\025\n\radd_score_m" +
      "in\030\006 \001(\005\022\025\n\radd_score_max\030\007 \001(\005\022\026\n\016curre",
      "nt_player\030\010 \001(\005\022\023\n\013displaytime\030\t \001(\005\"\257\001\n" +
      "\014Score_Result\022\026\n\016opreate_player\030\001 \001(\005\022\024\n" +
      "\014jetton_score\030\002 \001(\005\022\026\n\016current_player\030\003 " +
      "\001(\005\022\032\n\022jetton_total_score\030\004 \001(\005\022\024\n\014displ" +
      "ay_time\030\005 \001(\005\022\023\n\013jetton_type\030\006 \001(\005\022\022\n\nus" +
      "er_score\030\007 \001(\005\"d\n\020Make_BoBo_Result\022$\n\007pl" +
      "ayers\030\001 \003(\0132\023.RoomPlayerResponse\022\022\n\ntota" +
      "l_bobo\030\002 \001(\005\022\026\n\016opreate_player\030\003 \001(\005\"l\n\016" +
      "Opreate_Result\022\026\n\016opreate_player\030\001 \001(\005\022\024" +
      "\n\014opreate_type\030\002 \001(\005\022\026\n\016current_player\030\003",
      " \001(\005\022\024\n\014display_time\030\004 \001(\005\"j\n\rChe_Pai_Be" +
      "gin\022\'\n\ncards_data\030\001 \003(\0132\023.Int32ArrayResp" +
      "onse\022!\n\004type\030\002 \003(\0132\023.Int32ArrayResponse\022" +
      "\r\n\005score\030\003 \001(\005\"n\n\013Che_Pai_End\022\'\n\ncards_d" +
      "ata\030\001 \003(\0132\023.Int32ArrayResponse\022\022\n\ncard_c" +
      "ount\030\002 \003(\005\022\014\n\004type\030\003 \003(\005\022\024\n\014opreate_type" +
      "\030\004 \001(\005\"R\n\020Open_Card_Result\022\026\n\016opreate_pl" +
      "ayer\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\022\n\ncards_" +
      "type\030\003 \003(\005\"&\n\rSpecial_Remin\022\025\n\rremin_mes" +
      "sage\030\001 \001(\t\"z\n\rZi_Chan_Score\022\025\n\rzi_chan_s",
      "core\030\001 \001(\005\022\024\n\014bu_score_min\030\002 \001(\005\022\031\n\021bu_s" +
      "core_use_gold\030\003 \001(\005\022\014\n\004gold\030\004 \001(\003\022\023\n\013is_" +
      "bu_score\030\005 \001(\005\"A\n\023Opreate_Request_DEH\022\024\n" +
      "\014opreate_type\030\001 \001(\005\022\024\n\014jetton_score\030\002 \001(" +
      "\005\";\n\021Opreate_open_card\022\022\n\ncards_data\030\001 \003" +
      "(\005\022\022\n\ncard_count\030\002 \001(\005B\034\n\022protobuf.clazz" +
      ".dehB\006DehRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_deh_RefreshPlayerStatus_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_deh_RefreshPlayerStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_RefreshPlayerStatus_descriptor,
              new java.lang.String[] { "PlayerIndex", "Status", });
          internal_static_deh_RefreshGameStatus_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_deh_RefreshGameStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_RefreshGameStatus_descriptor,
              new java.lang.String[] { "Status", "Displaytime", });
          internal_static_deh_Refresh_Colock_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_deh_Refresh_Colock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Refresh_Colock_descriptor,
              new java.lang.String[] { "Displaytime", "Type", });
          internal_static_deh_PukeGameEndDeh_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_deh_PukeGameEndDeh_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_PukeGameEndDeh_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "EndScore", "PlayerNum", "Reason", "Players", "WinSort", "BackScoreChair", "BackScore", "Winner", "CardType", "WinMangChiIndex", "WinMangChiScore", "MangPiScore", "EndScoreExtraMangPi", "XianQianScore", "AllEndScore", "StartTime", "EndTime", });
          internal_static_deh_TableResponseDEH_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_deh_TableResponseDEH_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_TableResponseDEH_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "RoomInfo", "Players", "IsGiveUp", "JettonScore", "DisplayTime", "DehGameStatus", "IsBobo", "MaxBoboScore", "MinBoboScore", "CardsData", "IsOpenCard", "CardType", "MangChiScore", "MangPi", });
          internal_static_deh_GameStartDEH_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_deh_GameStartDEH_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_GameStartDEH_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "MaxBoboScore", "MinBoboScore", "DisplayTime", });
          internal_static_deh_Make_Sure_Banker_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_deh_Make_Sure_Banker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Make_Sure_Banker_descriptor,
              new java.lang.String[] { "BankerIndex", });
          internal_static_deh_Refresh_Table_message_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_deh_Refresh_Table_message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Refresh_Table_message_descriptor,
              new java.lang.String[] { "CurrentPlayer", "MangChiScore", "XiuMangCurRound", "XiuMangTotalRound", "MangPi", "ShouMangCurRound", "ShouMangTotalRound", });
          internal_static_deh_Send_card_Deh_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_deh_Send_card_Deh_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Send_card_Deh_descriptor,
              new java.lang.String[] { "CardsData", "CardCount", "DisplayTime", "CurrentPlayer", "HandCardsData", "HandCardCount", });
          internal_static_deh_User_Can_Opreate_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_deh_User_Can_Opreate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_User_Can_Opreate_descriptor,
              new java.lang.String[] { "GiveUp", "GenZhu", "AddOperate", "ShuoHand", "Pass", "AddScoreMin", "AddScoreMax", "CurrentPlayer", "Displaytime", });
          internal_static_deh_Score_Result_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_deh_Score_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Score_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "JettonScore", "CurrentPlayer", "JettonTotalScore", "DisplayTime", "JettonType", "UserScore", });
          internal_static_deh_Make_BoBo_Result_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_deh_Make_BoBo_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Make_BoBo_Result_descriptor,
              new java.lang.String[] { "Players", "TotalBobo", "OpreatePlayer", });
          internal_static_deh_Opreate_Result_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_deh_Opreate_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Opreate_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "OpreateType", "CurrentPlayer", "DisplayTime", });
          internal_static_deh_Che_Pai_Begin_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_deh_Che_Pai_Begin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Che_Pai_Begin_descriptor,
              new java.lang.String[] { "CardsData", "Type", "Score", });
          internal_static_deh_Che_Pai_End_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_deh_Che_Pai_End_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Che_Pai_End_descriptor,
              new java.lang.String[] { "CardsData", "CardCount", "Type", "OpreateType", });
          internal_static_deh_Open_Card_Result_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_deh_Open_Card_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Open_Card_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "CardsData", "CardsType", });
          internal_static_deh_Special_Remin_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_deh_Special_Remin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Special_Remin_descriptor,
              new java.lang.String[] { "ReminMessage", });
          internal_static_deh_Zi_Chan_Score_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_deh_Zi_Chan_Score_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Zi_Chan_Score_descriptor,
              new java.lang.String[] { "ZiChanScore", "BuScoreMin", "BuScoreUseGold", "Gold", "IsBuScore", });
          internal_static_deh_Opreate_Request_DEH_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_deh_Opreate_Request_DEH_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Opreate_Request_DEH_descriptor,
              new java.lang.String[] { "OpreateType", "JettonScore", });
          internal_static_deh_Opreate_open_card_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_deh_Opreate_open_card_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_deh_Opreate_open_card_descriptor,
              new java.lang.String[] { "CardsData", "CardCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
