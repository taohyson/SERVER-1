// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xykl/xyklProto.proto

package protobuf.clazz.xykl;

public final class xyklRsp {
  private xyklRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoXyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_id = 1;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional int32 game_type_index = 4;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameTypeIndex();

    // optional int32 game_rule_index = 2;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameRuleIndex();
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameRuleIndex();

    // repeated int32 game_rule_index_ex = 12;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameRuleIndexExList();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexExCount();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexEx(int index);

    // optional string game_rule_des = 3;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    boolean hasGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    java.lang.String getGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameRuleDesBytes();

    // optional int32 game_round = 5;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    int getGameRound();

    // optional int32 cur_round = 6;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    int getCurRound();

    // optional int32 game_status = 7;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    int getGameStatus();

    // optional int64 create_player_id = 8;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    boolean hasCreatePlayerId();
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    long getCreatePlayerId();

    // optional int32 begin_left_card = 9;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    boolean hasBeginLeftCard();
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    int getBeginLeftCard();

    // optional int32 _banker_player = 10;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional string create_name = 11;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    boolean hasCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    java.lang.String getCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateNameBytes();

    // optional .CommonGameRulesProto new_rules = 13;
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    boolean hasNewRules();
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    protobuf.clazz.Common.CommonGameRulesProto getNewRules();
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder();
  }
  /**
   * Protobuf type {@code xykl.RoomInfoXykl}
   *
   * <pre>
   *房间信息
   * </pre>
   */
  public static final class RoomInfoXykl extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoXyklOrBuilder {
    // Use RoomInfoXykl.newBuilder() to construct.
    private RoomInfoXykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoXykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoXykl defaultInstance;
    public static RoomInfoXykl getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoXykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoXykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              gameRuleIndex_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              gameRuleDes_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              curRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gameStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createPlayerId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              beginLeftCard_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              BankerPlayer_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              createName_ = input.readBytes();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameRuleIndexEx_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              protobuf.clazz.Common.CommonGameRulesProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = newRules_.toBuilder();
              }
              newRules_ = input.readMessage(protobuf.clazz.Common.CommonGameRulesProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newRules_);
                newRules_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomInfoXykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomInfoXykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.class, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoXykl> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoXykl>() {
      public RoomInfoXykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoXykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoXykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_id = 1;
    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 game_type_index = 4;
    public static final int GAME_TYPE_INDEX_FIELD_NUMBER = 4;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 game_rule_index = 2;
    public static final int GAME_RULE_INDEX_FIELD_NUMBER = 2;
    private int gameRuleIndex_;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameRuleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameRuleIndex() {
      return gameRuleIndex_;
    }

    // repeated int32 game_rule_index_ex = 12;
    public static final int GAME_RULE_INDEX_EX_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> gameRuleIndexEx_;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameRuleIndexExList() {
      return gameRuleIndexEx_;
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexExCount() {
      return gameRuleIndexEx_.size();
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexEx(int index) {
      return gameRuleIndexEx_.get(index);
    }

    // optional string game_rule_des = 3;
    public static final int GAME_RULE_DES_FIELD_NUMBER = 3;
    private java.lang.Object gameRuleDes_;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public boolean hasGameRuleDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public java.lang.String getGameRuleDes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameRuleDes_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameRuleDesBytes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameRuleDes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round = 5;
    public static final int GAME_ROUND_FIELD_NUMBER = 5;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 cur_round = 6;
    public static final int CUR_ROUND_FIELD_NUMBER = 6;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_status = 7;
    public static final int GAME_STATUS_FIELD_NUMBER = 7;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int64 create_player_id = 8;
    public static final int CREATE_PLAYER_ID_FIELD_NUMBER = 8;
    private long createPlayerId_;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public boolean hasCreatePlayerId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public long getCreatePlayerId() {
      return createPlayerId_;
    }

    // optional int32 begin_left_card = 9;
    public static final int BEGIN_LEFT_CARD_FIELD_NUMBER = 9;
    private int beginLeftCard_;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public boolean hasBeginLeftCard() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public int getBeginLeftCard() {
      return beginLeftCard_;
    }

    // optional int32 _banker_player = 10;
    public static final int _BANKER_PLAYER_FIELD_NUMBER = 10;
    private int BankerPlayer_;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return BankerPlayer_;
    }

    // optional string create_name = 11;
    public static final int CREATE_NAME_FIELD_NUMBER = 11;
    private java.lang.Object createName_;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public boolean hasCreateName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public java.lang.String getCreateName() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateNameBytes() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .CommonGameRulesProto new_rules = 13;
    public static final int NEW_RULES_FIELD_NUMBER = 13;
    private protobuf.clazz.Common.CommonGameRulesProto newRules_;
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public boolean hasNewRules() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public protobuf.clazz.Common.CommonGameRulesProto getNewRules() {
      return newRules_;
    }
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder() {
      return newRules_;
    }

    private void initFields() {
      roomId_ = 0;
      gameTypeIndex_ = 0;
      gameRuleIndex_ = 0;
      gameRuleIndexEx_ = java.util.Collections.emptyList();
      gameRuleDes_ = "";
      gameRound_ = 0;
      curRound_ = 0;
      gameStatus_ = 0;
      createPlayerId_ = 0L;
      beginLeftCard_ = 0;
      BankerPlayer_ = 0;
      createName_ = "";
      newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCreateNameBytes());
      }
      for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
        output.writeInt32(12, gameRuleIndexEx_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(13, newRules_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCreateNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameRuleIndexEx_.get(i));
        }
        size += dataSize;
        size += 1 * getGameRuleIndexExList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, newRules_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.RoomInfoXykl}
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomInfoXykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomInfoXykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.class, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewRulesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRuleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRuleDes_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        createPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        beginLeftCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        BankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createName_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        if (newRulesBuilder_ == null) {
          newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
        } else {
          newRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomInfoXykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl build() {
        protobuf.clazz.xykl.xyklRsp.RoomInfoXykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.RoomInfoXykl result = new protobuf.clazz.xykl.xyklRsp.RoomInfoXykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRuleIndex_ = gameRuleIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameRuleIndexEx_ = gameRuleIndexEx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameRuleDes_ = gameRuleDes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createPlayerId_ = createPlayerId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.beginLeftCard_ = beginLeftCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.BankerPlayer_ = BankerPlayer_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.createName_ = createName_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (newRulesBuilder_ == null) {
          result.newRules_ = newRules_;
        } else {
          result.newRules_ = newRulesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.RoomInfoXykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.RoomInfoXykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasGameRuleIndex()) {
          setGameRuleIndex(other.getGameRuleIndex());
        }
        if (!other.gameRuleIndexEx_.isEmpty()) {
          if (gameRuleIndexEx_.isEmpty()) {
            gameRuleIndexEx_ = other.gameRuleIndexEx_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameRuleIndexExIsMutable();
            gameRuleIndexEx_.addAll(other.gameRuleIndexEx_);
          }
          onChanged();
        }
        if (other.hasGameRuleDes()) {
          bitField0_ |= 0x00000010;
          gameRuleDes_ = other.gameRuleDes_;
          onChanged();
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasCreatePlayerId()) {
          setCreatePlayerId(other.getCreatePlayerId());
        }
        if (other.hasBeginLeftCard()) {
          setBeginLeftCard(other.getBeginLeftCard());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCreateName()) {
          bitField0_ |= 0x00000800;
          createName_ = other.createName_;
          onChanged();
        }
        if (other.hasNewRules()) {
          mergeNewRules(other.getNewRules());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.RoomInfoXykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.RoomInfoXykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_id = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_type_index = 4;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_rule_index = 2;
      private int gameRuleIndex_ ;
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameRuleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameRuleIndex() {
        return gameRuleIndex_;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameRuleIndex(int value) {
        bitField0_ |= 0x00000004;
        gameRuleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameRuleIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 game_rule_index_ex = 12;
      private java.util.List<java.lang.Integer> gameRuleIndexEx_ = java.util.Collections.emptyList();
      private void ensureGameRuleIndexExIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>(gameRuleIndexEx_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameRuleIndexExList() {
        return java.util.Collections.unmodifiableList(gameRuleIndexEx_);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexExCount() {
        return gameRuleIndexEx_.size();
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexEx(int index) {
        return gameRuleIndexEx_.get(index);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder setGameRuleIndexEx(
          int index, int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addGameRuleIndexEx(int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addAllGameRuleIndexEx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameRuleIndexExIsMutable();
        super.addAll(values, gameRuleIndexEx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder clearGameRuleIndexEx() {
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional string game_rule_des = 3;
      private java.lang.Object gameRuleDes_ = "";
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public boolean hasGameRuleDes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public java.lang.String getGameRuleDes() {
        java.lang.Object ref = gameRuleDes_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameRuleDes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameRuleDesBytes() {
        java.lang.Object ref = gameRuleDes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameRuleDes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder clearGameRuleDes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRuleDes_ = getDefaultInstance().getGameRuleDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round = 5;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000020;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_round = 6;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000040;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 7;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000080;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int64 create_player_id = 8;
      private long createPlayerId_ ;
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public boolean hasCreatePlayerId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public long getCreatePlayerId() {
        return createPlayerId_;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder setCreatePlayerId(long value) {
        bitField0_ |= 0x00000100;
        createPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder clearCreatePlayerId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        createPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 begin_left_card = 9;
      private int beginLeftCard_ ;
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public boolean hasBeginLeftCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public int getBeginLeftCard() {
        return beginLeftCard_;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder setBeginLeftCard(int value) {
        bitField0_ |= 0x00000200;
        beginLeftCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder clearBeginLeftCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        beginLeftCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 _banker_player = 10;
      private int BankerPlayer_ ;
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return BankerPlayer_;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000400;
        BankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        BankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional string create_name = 11;
      private java.lang.Object createName_ = "";
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public boolean hasCreateName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public java.lang.String getCreateName() {
        java.lang.Object ref = createName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateNameBytes() {
        java.lang.Object ref = createName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder clearCreateName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createName_ = getDefaultInstance().getCreateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }

      // optional .CommonGameRulesProto new_rules = 13;
      private protobuf.clazz.Common.CommonGameRulesProto newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder> newRulesBuilder_;
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public boolean hasNewRules() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProto getNewRules() {
        if (newRulesBuilder_ == null) {
          return newRules_;
        } else {
          return newRulesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder setNewRules(protobuf.clazz.Common.CommonGameRulesProto value) {
        if (newRulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newRules_ = value;
          onChanged();
        } else {
          newRulesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder setNewRules(
          protobuf.clazz.Common.CommonGameRulesProto.Builder builderForValue) {
        if (newRulesBuilder_ == null) {
          newRules_ = builderForValue.build();
          onChanged();
        } else {
          newRulesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder mergeNewRules(protobuf.clazz.Common.CommonGameRulesProto value) {
        if (newRulesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              newRules_ != protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance()) {
            newRules_ =
              protobuf.clazz.Common.CommonGameRulesProto.newBuilder(newRules_).mergeFrom(value).buildPartial();
          } else {
            newRules_ = value;
          }
          onChanged();
        } else {
          newRulesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder clearNewRules() {
        if (newRulesBuilder_ == null) {
          newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
          onChanged();
        } else {
          newRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProto.Builder getNewRulesBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getNewRulesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder() {
        if (newRulesBuilder_ != null) {
          return newRulesBuilder_.getMessageOrBuilder();
        } else {
          return newRules_;
        }
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder> 
          getNewRulesFieldBuilder() {
        if (newRulesBuilder_ == null) {
          newRulesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder>(
                  newRules_,
                  getParentForChildren(),
                  isClean());
          newRules_ = null;
        }
        return newRulesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:xykl.RoomInfoXykl)
    }

    static {
      defaultInstance = new RoomInfoXykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.RoomInfoXykl)
  }

  public interface RoomPlayerResponseXyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code xykl.RoomPlayerResponseXykl}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseXykl extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseXyklOrBuilder {
    // Use RoomPlayerResponseXykl.newBuilder() to construct.
    private RoomPlayerResponseXykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseXykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseXykl defaultInstance;
    public static RoomPlayerResponseXykl getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseXykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseXykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomPlayerResponseXykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomPlayerResponseXykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.class, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseXykl> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseXykl>() {
      public RoomPlayerResponseXykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseXykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseXykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.RoomPlayerResponseXykl}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomPlayerResponseXykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomPlayerResponseXykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.class, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RoomPlayerResponseXykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl build() {
        protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl result = new protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.RoomPlayerResponseXykl)
    }

    static {
      defaultInstance = new RoomPlayerResponseXykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.RoomPlayerResponseXykl)
  }

  public interface RefreshCardsXyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_count = 1;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xykl.RefreshCardsXykl}
   *
   * <pre>
   *刷新用户扑克
   * </pre>
   */
  public static final class RefreshCardsXykl extends
      com.google.protobuf.GeneratedMessage
      implements RefreshCardsXyklOrBuilder {
    // Use RefreshCardsXykl.newBuilder() to construct.
    private RefreshCardsXykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshCardsXykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshCardsXykl defaultInstance;
    public static RefreshCardsXykl getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshCardsXykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshCardsXykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RefreshCardsXykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RefreshCardsXykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.class, protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshCardsXykl> PARSER =
        new com.google.protobuf.AbstractParser<RefreshCardsXykl>() {
      public RefreshCardsXykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshCardsXykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshCardsXykl> getParserForType() {
      return PARSER;
    }

    // repeated int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    private void initFields() {
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(1, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(2, cardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cardsData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.RefreshCardsXykl}
     *
     * <pre>
     *刷新用户扑克
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.RefreshCardsXyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RefreshCardsXykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RefreshCardsXykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.class, protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_RefreshCardsXykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl build() {
        protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl result = new protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl.getDefaultInstance()) return this;
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.RefreshCardsXykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_count = 1;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:xykl.RefreshCardsXykl)
    }

    static {
      defaultInstance = new RefreshCardsXykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.RefreshCardsXykl)
  }

  public interface PukeGameEndXyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .xykl.RoomInfoXykl room_info = 1;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // optional int32 player_num = 4;
    /**
     * <code>optional int32 player_num = 4;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 4;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 5;
    /**
     * <code>optional int32 reason = 5;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 5;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated int32 end_score = 11;
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    int getEndScore(int index);

    // repeated int32 game_cell = 12;
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameCellList();
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getGameCellCount();
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getGameCell(int index);

    // repeated int32 user_jetton_score = 13;
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserJettonScoreList();
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getUserJettonScoreCount();
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getUserJettonScore(int index);

    // repeated int32 user_is_call_banker = 14;
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserIsCallBankerList();
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    int getUserIsCallBankerCount();
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    int getUserIsCallBanker(int index);

    // repeated int32 card_count = 15;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 16;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional int32 total_jetton_score = 19;
    /**
     * <code>optional int32 total_jetton_score = 19;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    boolean hasTotalJettonScore();
    /**
     * <code>optional int32 total_jetton_score = 19;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    int getTotalJettonScore();

    // optional int32 display_time = 20;
    /**
     * <code>optional int32 display_time = 20;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 20;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 all_end_score = 6;
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated int32 end_score_max = 7;
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreMaxList();
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMaxCount();
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMax(int index);

    // repeated int32 win_num = 8;
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinNumList();
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNumCount();
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNum(int index);

    // repeated int32 lose_num = 9;
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoseNumList();
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNumCount();
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNum(int index);

    // repeated .xykl.RoomPlayerResponseXykl players = 10;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> 
        getPlayersList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index);
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index);

    // optional int64 start_time = 17;
    /**
     * <code>optional int64 start_time = 17;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional int64 start_time = 17;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    long getStartTime();

    // optional int64 end_time = 18;
    /**
     * <code>optional int64 end_time = 18;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int64 end_time = 18;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    long getEndTime();

    // repeated int32 di_chi_score = 21;
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getDiChiScoreList();
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    int getDiChiScoreCount();
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    int getDiChiScore(int index);
  }
  /**
   * Protobuf type {@code xykl.PukeGameEndXykl}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndXykl extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndXyklOrBuilder {
    // Use PukeGameEndXykl.newBuilder() to construct.
    private PukeGameEndXykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndXykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndXykl defaultInstance;
    public static PukeGameEndXykl getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndXykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndXykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              endScoreMax_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScoreMax_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              winNum_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              loseNum_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                loseNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>();
                mutable_bitField0_ |= 0x00020000;
              }
              players_.add(input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.PARSER, extensionRegistry));
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                gameCell_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              gameCell_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                gameCell_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameCell_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                userJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              userJettonScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                userJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                userJettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                userIsCallBanker_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              userIsCallBanker_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                userIsCallBanker_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                userIsCallBanker_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000400;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 136: {
              bitField0_ |= 0x00000080;
              startTime_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000100;
              endTime_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00000020;
              totalJettonScore_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000040;
              displayTime_ = input.readInt32();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                diChiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              diChiScore_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                diChiScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                diChiScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          gameCell_ = java.util.Collections.unmodifiableList(gameCell_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          userJettonScore_ = java.util.Collections.unmodifiableList(userJettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          userIsCallBanker_ = java.util.Collections.unmodifiableList(userIsCallBanker_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          diChiScore_ = java.util.Collections.unmodifiableList(diChiScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_PukeGameEndXykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_PukeGameEndXykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.class, protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndXykl> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndXykl>() {
      public PukeGameEndXykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndXykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndXykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .xykl.RoomInfoXykl room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 player_num = 4;
    public static final int PLAYER_NUM_FIELD_NUMBER = 4;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 4;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 4;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 5;
    public static final int REASON_FIELD_NUMBER = 5;
    private int reason_;
    /**
     * <code>optional int32 reason = 5;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 5;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated int32 end_score = 11;
    public static final int END_SCORE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 11;</code>
     *
     * <pre>
     *结束分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // repeated int32 game_cell = 12;
    public static final int GAME_CELL_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> gameCell_;
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameCellList() {
      return gameCell_;
    }
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getGameCellCount() {
      return gameCell_.size();
    }
    /**
     * <code>repeated int32 game_cell = 12;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getGameCell(int index) {
      return gameCell_.get(index);
    }

    // repeated int32 user_jetton_score = 13;
    public static final int USER_JETTON_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> userJettonScore_;
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserJettonScoreList() {
      return userJettonScore_;
    }
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getUserJettonScoreCount() {
      return userJettonScore_.size();
    }
    /**
     * <code>repeated int32 user_jetton_score = 13;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getUserJettonScore(int index) {
      return userJettonScore_.get(index);
    }

    // repeated int32 user_is_call_banker = 14;
    public static final int USER_IS_CALL_BANKER_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> userIsCallBanker_;
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserIsCallBankerList() {
      return userIsCallBanker_;
    }
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    public int getUserIsCallBankerCount() {
      return userIsCallBanker_.size();
    }
    /**
     * <code>repeated int32 user_is_call_banker = 14;</code>
     *
     * <pre>
     *玩家是否抢买
     * </pre>
     */
    public int getUserIsCallBanker(int index) {
      return userIsCallBanker_.get(index);
    }

    // repeated int32 card_count = 15;
    public static final int CARD_COUNT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 16;
    public static final int CARDS_DATA_FIELD_NUMBER = 16;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional int32 total_jetton_score = 19;
    public static final int TOTAL_JETTON_SCORE_FIELD_NUMBER = 19;
    private int totalJettonScore_;
    /**
     * <code>optional int32 total_jetton_score = 19;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public boolean hasTotalJettonScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 total_jetton_score = 19;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public int getTotalJettonScore() {
      return totalJettonScore_;
    }

    // optional int32 display_time = 20;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 20;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 20;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 display_time = 20;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 all_end_score = 6;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 6;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated int32 end_score_max = 7;
    public static final int END_SCORE_MAX_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> endScoreMax_;
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreMaxList() {
      return endScoreMax_;
    }
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMaxCount() {
      return endScoreMax_.size();
    }
    /**
     * <code>repeated int32 end_score_max = 7;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMax(int index) {
      return endScoreMax_.get(index);
    }

    // repeated int32 win_num = 8;
    public static final int WIN_NUM_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> winNum_;
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinNumList() {
      return winNum_;
    }
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNumCount() {
      return winNum_.size();
    }
    /**
     * <code>repeated int32 win_num = 8;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNum(int index) {
      return winNum_.get(index);
    }

    // repeated int32 lose_num = 9;
    public static final int LOSE_NUM_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> loseNum_;
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoseNumList() {
      return loseNum_;
    }
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNumCount() {
      return loseNum_.size();
    }
    /**
     * <code>repeated int32 lose_num = 9;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNum(int index) {
      return loseNum_.get(index);
    }

    // repeated .xykl.RoomPlayerResponseXykl players = 10;
    public static final int PLAYERS_FIELD_NUMBER = 10;
    private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int64 start_time = 17;
    public static final int START_TIME_FIELD_NUMBER = 17;
    private long startTime_;
    /**
     * <code>optional int64 start_time = 17;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 start_time = 17;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // optional int64 end_time = 18;
    public static final int END_TIME_FIELD_NUMBER = 18;
    private long endTime_;
    /**
     * <code>optional int64 end_time = 18;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 end_time = 18;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    // repeated int32 di_chi_score = 21;
    public static final int DI_CHI_SCORE_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> diChiScore_;
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDiChiScoreList() {
      return diChiScore_;
    }
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    public int getDiChiScoreCount() {
      return diChiScore_.size();
    }
    /**
     * <code>repeated int32 di_chi_score = 21;</code>
     *
     * <pre>
     *底池分数
     * </pre>
     */
    public int getDiChiScore(int index) {
      return diChiScore_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      playerNum_ = 0;
      reason_ = 0;
      endScore_ = java.util.Collections.emptyList();
      gameCell_ = java.util.Collections.emptyList();
      userJettonScore_ = java.util.Collections.emptyList();
      userIsCallBanker_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      totalJettonScore_ = 0;
      displayTime_ = 0;
      allEndScore_ = java.util.Collections.emptyList();
      endScoreMax_ = java.util.Collections.emptyList();
      winNum_ = java.util.Collections.emptyList();
      loseNum_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
      startTime_ = 0L;
      endTime_ = 0L;
      diChiScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, reason_);
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(6, allEndScore_.get(i));
      }
      for (int i = 0; i < endScoreMax_.size(); i++) {
        output.writeInt32(7, endScoreMax_.get(i));
      }
      for (int i = 0; i < winNum_.size(); i++) {
        output.writeInt32(8, winNum_.get(i));
      }
      for (int i = 0; i < loseNum_.size(); i++) {
        output.writeInt32(9, loseNum_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(10, players_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(11, endScore_.get(i));
      }
      for (int i = 0; i < gameCell_.size(); i++) {
        output.writeInt32(12, gameCell_.get(i));
      }
      for (int i = 0; i < userJettonScore_.size(); i++) {
        output.writeInt32(13, userJettonScore_.get(i));
      }
      for (int i = 0; i < userIsCallBanker_.size(); i++) {
        output.writeInt32(14, userIsCallBanker_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(15, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(17, startTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(18, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(19, totalJettonScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(20, displayTime_);
      }
      for (int i = 0; i < diChiScore_.size(); i++) {
        output.writeInt32(21, diChiScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, reason_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScoreMax_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScoreMax_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreMaxList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winNum_.get(i));
        }
        size += dataSize;
        size += 1 * getWinNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loseNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loseNum_.get(i));
        }
        size += dataSize;
        size += 1 * getLoseNumList().size();
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameCell_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameCell_.get(i));
        }
        size += dataSize;
        size += 1 * getGameCellList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userJettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userJettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserJettonScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userIsCallBanker_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userIsCallBanker_.get(i));
        }
        size += dataSize;
        size += 1 * getUserIsCallBankerList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, startTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, totalJettonScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < diChiScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(diChiScore_.get(i));
        }
        size += dataSize;
        size += 2 * getDiChiScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.PukeGameEndXykl}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.PukeGameEndXyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_PukeGameEndXykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_PukeGameEndXykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.class, protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        gameCell_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        userJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        userIsCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          cardsDataBuilder_.clear();
        }
        totalJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          playersBuilder_.clear();
        }
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        diChiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_PukeGameEndXykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl build() {
        protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl result = new protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          gameCell_ = java.util.Collections.unmodifiableList(gameCell_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.gameCell_ = gameCell_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          userJettonScore_ = java.util.Collections.unmodifiableList(userJettonScore_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.userJettonScore_ = userJettonScore_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          userIsCallBanker_ = java.util.Collections.unmodifiableList(userIsCallBanker_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.userIsCallBanker_ = userIsCallBanker_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.totalJettonScore_ = totalJettonScore_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.allEndScore_ = allEndScore_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.endScoreMax_ = endScoreMax_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.winNum_ = winNum_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.loseNum_ = loseNum_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.endTime_ = endTime_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          diChiScore_ = java.util.Collections.unmodifiableList(diChiScore_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.diChiScore_ = diChiScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (!other.gameCell_.isEmpty()) {
          if (gameCell_.isEmpty()) {
            gameCell_ = other.gameCell_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureGameCellIsMutable();
            gameCell_.addAll(other.gameCell_);
          }
          onChanged();
        }
        if (!other.userJettonScore_.isEmpty()) {
          if (userJettonScore_.isEmpty()) {
            userJettonScore_ = other.userJettonScore_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureUserJettonScoreIsMutable();
            userJettonScore_.addAll(other.userJettonScore_);
          }
          onChanged();
        }
        if (!other.userIsCallBanker_.isEmpty()) {
          if (userIsCallBanker_.isEmpty()) {
            userIsCallBanker_ = other.userIsCallBanker_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureUserIsCallBankerIsMutable();
            userIsCallBanker_.addAll(other.userIsCallBanker_);
          }
          onChanged();
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000400);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasTotalJettonScore()) {
          setTotalJettonScore(other.getTotalJettonScore());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (!other.endScoreMax_.isEmpty()) {
          if (endScoreMax_.isEmpty()) {
            endScoreMax_ = other.endScoreMax_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureEndScoreMaxIsMutable();
            endScoreMax_.addAll(other.endScoreMax_);
          }
          onChanged();
        }
        if (!other.winNum_.isEmpty()) {
          if (winNum_.isEmpty()) {
            winNum_ = other.winNum_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureWinNumIsMutable();
            winNum_.addAll(other.winNum_);
          }
          onChanged();
        }
        if (!other.loseNum_.isEmpty()) {
          if (loseNum_.isEmpty()) {
            loseNum_ = other.loseNum_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureLoseNumIsMutable();
            loseNum_.addAll(other.loseNum_);
          }
          onChanged();
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (!other.diChiScore_.isEmpty()) {
          if (diChiScore_.isEmpty()) {
            diChiScore_ = other.diChiScore_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureDiChiScoreIsMutable();
            diChiScore_.addAll(other.diChiScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.PukeGameEndXykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .xykl.RoomInfoXykl room_info = 1;
      private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 player_num = 4;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 4;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 player_num = 4;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 4;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000008;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 4;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 5;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 5;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 reason = 5;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 5;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000010;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 5;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 end_score = 11;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 11;</code>
       *
       * <pre>
       *结束分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 game_cell = 12;
      private java.util.List<java.lang.Integer> gameCell_ = java.util.Collections.emptyList();
      private void ensureGameCellIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          gameCell_ = new java.util.ArrayList<java.lang.Integer>(gameCell_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameCellList() {
        return java.util.Collections.unmodifiableList(gameCell_);
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getGameCellCount() {
        return gameCell_.size();
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getGameCell(int index) {
        return gameCell_.get(index);
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setGameCell(
          int index, int value) {
        ensureGameCellIsMutable();
        gameCell_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder addGameCell(int value) {
        ensureGameCellIsMutable();
        gameCell_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder addAllGameCell(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameCellIsMutable();
        super.addAll(values, gameCell_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_cell = 12;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearGameCell() {
        gameCell_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 user_jetton_score = 13;
      private java.util.List<java.lang.Integer> userJettonScore_ = java.util.Collections.emptyList();
      private void ensureUserJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          userJettonScore_ = new java.util.ArrayList<java.lang.Integer>(userJettonScore_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserJettonScoreList() {
        return java.util.Collections.unmodifiableList(userJettonScore_);
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getUserJettonScoreCount() {
        return userJettonScore_.size();
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getUserJettonScore(int index) {
        return userJettonScore_.get(index);
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setUserJettonScore(
          int index, int value) {
        ensureUserJettonScoreIsMutable();
        userJettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addUserJettonScore(int value) {
        ensureUserJettonScoreIsMutable();
        userJettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllUserJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserJettonScoreIsMutable();
        super.addAll(values, userJettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 13;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearUserJettonScore() {
        userJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 user_is_call_banker = 14;
      private java.util.List<java.lang.Integer> userIsCallBanker_ = java.util.Collections.emptyList();
      private void ensureUserIsCallBankerIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          userIsCallBanker_ = new java.util.ArrayList<java.lang.Integer>(userIsCallBanker_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserIsCallBankerList() {
        return java.util.Collections.unmodifiableList(userIsCallBanker_);
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public int getUserIsCallBankerCount() {
        return userIsCallBanker_.size();
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public int getUserIsCallBanker(int index) {
        return userIsCallBanker_.get(index);
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public Builder setUserIsCallBanker(
          int index, int value) {
        ensureUserIsCallBankerIsMutable();
        userIsCallBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public Builder addUserIsCallBanker(int value) {
        ensureUserIsCallBankerIsMutable();
        userIsCallBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public Builder addAllUserIsCallBanker(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserIsCallBankerIsMutable();
        super.addAll(values, userIsCallBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_is_call_banker = 14;</code>
       *
       * <pre>
       *玩家是否抢买
       * </pre>
       */
      public Builder clearUserIsCallBanker() {
        userIsCallBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 card_count = 15;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 16;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional int32 total_jetton_score = 19;
      private int totalJettonScore_ ;
      /**
       * <code>optional int32 total_jetton_score = 19;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public boolean hasTotalJettonScore() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 total_jetton_score = 19;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public int getTotalJettonScore() {
        return totalJettonScore_;
      }
      /**
       * <code>optional int32 total_jetton_score = 19;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder setTotalJettonScore(int value) {
        bitField0_ |= 0x00000800;
        totalJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_jetton_score = 19;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder clearTotalJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 20;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 20;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 display_time = 20;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 20;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00001000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 20;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 6;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 6;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 end_score_max = 7;
      private java.util.List<java.lang.Integer> endScoreMax_ = java.util.Collections.emptyList();
      private void ensureEndScoreMaxIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          endScoreMax_ = new java.util.ArrayList<java.lang.Integer>(endScoreMax_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreMaxList() {
        return java.util.Collections.unmodifiableList(endScoreMax_);
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMaxCount() {
        return endScoreMax_.size();
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMax(int index) {
        return endScoreMax_.get(index);
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder setEndScoreMax(
          int index, int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addEndScoreMax(int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addAllEndScoreMax(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreMaxIsMutable();
        super.addAll(values, endScoreMax_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 7;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder clearEndScoreMax() {
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 win_num = 8;
      private java.util.List<java.lang.Integer> winNum_ = java.util.Collections.emptyList();
      private void ensureWinNumIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          winNum_ = new java.util.ArrayList<java.lang.Integer>(winNum_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinNumList() {
        return java.util.Collections.unmodifiableList(winNum_);
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNumCount() {
        return winNum_.size();
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNum(int index) {
        return winNum_.get(index);
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder setWinNum(
          int index, int value) {
        ensureWinNumIsMutable();
        winNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addWinNum(int value) {
        ensureWinNumIsMutable();
        winNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addAllWinNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinNumIsMutable();
        super.addAll(values, winNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 8;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder clearWinNum() {
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 lose_num = 9;
      private java.util.List<java.lang.Integer> loseNum_ = java.util.Collections.emptyList();
      private void ensureLoseNumIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          loseNum_ = new java.util.ArrayList<java.lang.Integer>(loseNum_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoseNumList() {
        return java.util.Collections.unmodifiableList(loseNum_);
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNumCount() {
        return loseNum_.size();
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNum(int index) {
        return loseNum_.get(index);
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder setLoseNum(
          int index, int value) {
        ensureLoseNumIsMutable();
        loseNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addLoseNum(int value) {
        ensureLoseNumIsMutable();
        loseNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addAllLoseNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoseNumIsMutable();
        super.addAll(values, loseNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 9;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder clearLoseNum() {
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated .xykl.RoomPlayerResponseXykl players = 10;
      private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>(players_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> playersBuilder_;

      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder addPlayers(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 10;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int64 start_time = 17;
      private long startTime_ ;
      /**
       * <code>optional int64 start_time = 17;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 start_time = 17;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional int64 start_time = 17;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00040000;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 start_time = 17;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00040000);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 end_time = 18;
      private long endTime_ ;
      /**
       * <code>optional int64 end_time = 18;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 end_time = 18;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int64 end_time = 18;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00080000;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end_time = 18;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00080000);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 di_chi_score = 21;
      private java.util.List<java.lang.Integer> diChiScore_ = java.util.Collections.emptyList();
      private void ensureDiChiScoreIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          diChiScore_ = new java.util.ArrayList<java.lang.Integer>(diChiScore_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDiChiScoreList() {
        return java.util.Collections.unmodifiableList(diChiScore_);
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public int getDiChiScoreCount() {
        return diChiScore_.size();
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public int getDiChiScore(int index) {
        return diChiScore_.get(index);
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public Builder setDiChiScore(
          int index, int value) {
        ensureDiChiScoreIsMutable();
        diChiScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public Builder addDiChiScore(int value) {
        ensureDiChiScoreIsMutable();
        diChiScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public Builder addAllDiChiScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiChiScoreIsMutable();
        super.addAll(values, diChiScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_chi_score = 21;</code>
       *
       * <pre>
       *底池分数
       * </pre>
       */
      public Builder clearDiChiScore() {
        diChiScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.PukeGameEndXykl)
    }

    static {
      defaultInstance = new PukeGameEndXykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.PukeGameEndXykl)
  }

  public interface TableResponse_XyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // optional int32 total_jetton_score = 8;
    /**
     * <code>optional int32 total_jetton_score = 8;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    boolean hasTotalJettonScore();
    /**
     * <code>optional int32 total_jetton_score = 8;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    int getTotalJettonScore();

    // repeated int32 user_jetton_score = 9;
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserJettonScoreList();
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    int getUserJettonScoreCount();
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    int getUserJettonScore(int index);

    // repeated int32 user_win_lose_score = 17;
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserWinLoseScoreList();
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    int getUserWinLoseScoreCount();
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    int getUserWinLoseScore(int index);

    // repeated int32 card_count = 10;
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 11;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 is_call_banekr = 12;
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    java.util.List<java.lang.Integer> getIsCallBanekrList();
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    int getIsCallBanekrCount();
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    int getIsCallBanekr(int index);

    // repeated int32 is_open_card = 13;
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getIsOpenCardList();
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    int getIsOpenCardCount();
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    int getIsOpenCard(int index);

    // optional int32 is_can_cuo_pai = 14;
    /**
     * <code>optional int32 is_can_cuo_pai = 14;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    boolean hasIsCanCuoPai();
    /**
     * <code>optional int32 is_can_cuo_pai = 14;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    int getIsCanCuoPai();

    // repeated int32 is_cuo_pai = 15;
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    java.util.List<java.lang.Integer> getIsCuoPaiList();
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    int getIsCuoPaiCount();
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    int getIsCuoPai(int index);

    // repeated int32 user_status = 16;
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserStatusList();
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    int getUserStatusCount();
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    int getUserStatus(int index);

    // repeated bool trustee = 4;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    java.util.List<java.lang.Boolean> getTrusteeList();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    int getTrusteeCount();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    boolean getTrustee(int index);

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getDisplayTime();

    // optional .xykl.RoomInfoXykl room_info = 6;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder();

    // repeated .xykl.RoomPlayerResponseXykl players = 7;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> 
        getPlayersList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index);
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xykl.TableResponse_Xykl}
   */
  public static final class TableResponse_Xykl extends
      com.google.protobuf.GeneratedMessage
      implements TableResponse_XyklOrBuilder {
    // Use TableResponse_Xykl.newBuilder() to construct.
    private TableResponse_Xykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse_Xykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse_Xykl defaultInstance;
    public static TableResponse_Xykl getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse_Xykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse_Xykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              trustee_.add(input.readBool());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                trustee_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000020;
              displayTime_ = input.readInt32();
              break;
            }
            case 50: {
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>();
                mutable_bitField0_ |= 0x00010000;
              }
              players_.add(input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              totalJettonScore_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                userJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              userJettonScore_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                userJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                userJettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                isCallBanekr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              isCallBanekr_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                isCallBanekr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                isCallBanekr_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                isOpenCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              isOpenCard_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                isOpenCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                isOpenCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000010;
              isCanCuoPai_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                isCuoPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              isCuoPai_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                isCuoPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                isCuoPai_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                userStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              userStatus_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                userStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userStatus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                userWinLoseScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              userWinLoseScore_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                userWinLoseScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                userWinLoseScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          userJettonScore_ = java.util.Collections.unmodifiableList(userJettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          isCallBanekr_ = java.util.Collections.unmodifiableList(isCallBanekr_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          isOpenCard_ = java.util.Collections.unmodifiableList(isOpenCard_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          isCuoPai_ = java.util.Collections.unmodifiableList(isCuoPai_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          userStatus_ = java.util.Collections.unmodifiableList(userStatus_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          userWinLoseScore_ = java.util.Collections.unmodifiableList(userWinLoseScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_TableResponse_Xykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_TableResponse_Xykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.class, protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse_Xykl> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse_Xykl>() {
      public TableResponse_Xykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse_Xykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse_Xykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // optional int32 total_jetton_score = 8;
    public static final int TOTAL_JETTON_SCORE_FIELD_NUMBER = 8;
    private int totalJettonScore_;
    /**
     * <code>optional int32 total_jetton_score = 8;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public boolean hasTotalJettonScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 total_jetton_score = 8;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public int getTotalJettonScore() {
      return totalJettonScore_;
    }

    // repeated int32 user_jetton_score = 9;
    public static final int USER_JETTON_SCORE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> userJettonScore_;
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserJettonScoreList() {
      return userJettonScore_;
    }
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    public int getUserJettonScoreCount() {
      return userJettonScore_.size();
    }
    /**
     * <code>repeated int32 user_jetton_score = 9;</code>
     *
     * <pre>
     *玩家下注分数
     * </pre>
     */
    public int getUserJettonScore(int index) {
      return userJettonScore_.get(index);
    }

    // repeated int32 user_win_lose_score = 17;
    public static final int USER_WIN_LOSE_SCORE_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> userWinLoseScore_;
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserWinLoseScoreList() {
      return userWinLoseScore_;
    }
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    public int getUserWinLoseScoreCount() {
      return userWinLoseScore_.size();
    }
    /**
     * <code>repeated int32 user_win_lose_score = 17;</code>
     *
     * <pre>
     *玩家输赢分数
     * </pre>
     */
    public int getUserWinLoseScore(int index) {
      return userWinLoseScore_.get(index);
    }

    // repeated int32 card_count = 10;
    public static final int CARD_COUNT_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 10;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 11;
    public static final int CARDS_DATA_FIELD_NUMBER = 11;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 is_call_banekr = 12;
    public static final int IS_CALL_BANEKR_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> isCallBanekr_;
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIsCallBanekrList() {
      return isCallBanekr_;
    }
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    public int getIsCallBanekrCount() {
      return isCallBanekr_.size();
    }
    /**
     * <code>repeated int32 is_call_banekr = 12;</code>
     *
     * <pre>
     *是否抢买
     * </pre>
     */
    public int getIsCallBanekr(int index) {
      return isCallBanekr_.get(index);
    }

    // repeated int32 is_open_card = 13;
    public static final int IS_OPEN_CARD_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> isOpenCard_;
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIsOpenCardList() {
      return isOpenCard_;
    }
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public int getIsOpenCardCount() {
      return isOpenCard_.size();
    }
    /**
     * <code>repeated int32 is_open_card = 13;</code>
     *
     * <pre>
     *是否开牌
     * </pre>
     */
    public int getIsOpenCard(int index) {
      return isOpenCard_.get(index);
    }

    // optional int32 is_can_cuo_pai = 14;
    public static final int IS_CAN_CUO_PAI_FIELD_NUMBER = 14;
    private int isCanCuoPai_;
    /**
     * <code>optional int32 is_can_cuo_pai = 14;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    public boolean hasIsCanCuoPai() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 is_can_cuo_pai = 14;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    public int getIsCanCuoPai() {
      return isCanCuoPai_;
    }

    // repeated int32 is_cuo_pai = 15;
    public static final int IS_CUO_PAI_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> isCuoPai_;
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIsCuoPaiList() {
      return isCuoPai_;
    }
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    public int getIsCuoPaiCount() {
      return isCuoPai_.size();
    }
    /**
     * <code>repeated int32 is_cuo_pai = 15;</code>
     *
     * <pre>
     *玩家搓牌状态
     * </pre>
     */
    public int getIsCuoPai(int index) {
      return isCuoPai_.get(index);
    }

    // repeated int32 user_status = 16;
    public static final int USER_STATUS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> userStatus_;
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserStatusList() {
      return userStatus_;
    }
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    public int getUserStatusCount() {
      return userStatus_.size();
    }
    /**
     * <code>repeated int32 user_status = 16;</code>
     *
     * <pre>
     *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
     * </pre>
     */
    public int getUserStatus(int index) {
      return userStatus_.get(index);
    }

    // repeated bool trustee = 4;
    public static final int TRUSTEE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Boolean> trustee_;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getTrusteeList() {
      return trustee_;
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public int getTrusteeCount() {
      return trustee_.size();
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public boolean getTrustee(int index) {
      return trustee_.get(index);
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional .xykl.RoomInfoXykl room_info = 6;
    public static final int ROOM_INFO_FIELD_NUMBER = 6;
    private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .xykl.RoomPlayerResponseXykl players = 7;
    public static final int PLAYERS_FIELD_NUMBER = 7;
    private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      totalJettonScore_ = 0;
      userJettonScore_ = java.util.Collections.emptyList();
      userWinLoseScore_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      isCallBanekr_ = java.util.Collections.emptyList();
      isOpenCard_ = java.util.Collections.emptyList();
      isCanCuoPai_ = 0;
      isCuoPai_ = java.util.Collections.emptyList();
      userStatus_ = java.util.Collections.emptyList();
      trustee_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      for (int i = 0; i < trustee_.size(); i++) {
        output.writeBool(4, trustee_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(5, displayTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(6, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(7, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(8, totalJettonScore_);
      }
      for (int i = 0; i < userJettonScore_.size(); i++) {
        output.writeInt32(9, userJettonScore_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(10, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(11, cardsData_.get(i));
      }
      for (int i = 0; i < isCallBanekr_.size(); i++) {
        output.writeInt32(12, isCallBanekr_.get(i));
      }
      for (int i = 0; i < isOpenCard_.size(); i++) {
        output.writeInt32(13, isOpenCard_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(14, isCanCuoPai_);
      }
      for (int i = 0; i < isCuoPai_.size(); i++) {
        output.writeInt32(15, isCuoPai_.get(i));
      }
      for (int i = 0; i < userStatus_.size(); i++) {
        output.writeInt32(16, userStatus_.get(i));
      }
      for (int i = 0; i < userWinLoseScore_.size(); i++) {
        output.writeInt32(17, userWinLoseScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTrusteeList().size();
        size += dataSize;
        size += 1 * getTrusteeList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalJettonScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userJettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userJettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserJettonScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < isCallBanekr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(isCallBanekr_.get(i));
        }
        size += dataSize;
        size += 1 * getIsCallBanekrList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < isOpenCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(isOpenCard_.get(i));
        }
        size += dataSize;
        size += 1 * getIsOpenCardList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isCanCuoPai_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < isCuoPai_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(isCuoPai_.get(i));
        }
        size += dataSize;
        size += 1 * getIsCuoPaiList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userStatus_.get(i));
        }
        size += dataSize;
        size += 2 * getUserStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userWinLoseScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userWinLoseScore_.get(i));
        }
        size += dataSize;
        size += 2 * getUserWinLoseScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.TableResponse_Xykl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.TableResponse_XyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_TableResponse_Xykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_TableResponse_Xykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.class, protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        userJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        userWinLoseScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          cardsDataBuilder_.clear();
        }
        isCallBanekr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        isOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        isCanCuoPai_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        isCuoPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        userStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_TableResponse_Xykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl build() {
        protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl result = new protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalJettonScore_ = totalJettonScore_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          userJettonScore_ = java.util.Collections.unmodifiableList(userJettonScore_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.userJettonScore_ = userJettonScore_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          userWinLoseScore_ = java.util.Collections.unmodifiableList(userWinLoseScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.userWinLoseScore_ = userWinLoseScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          isCallBanekr_ = java.util.Collections.unmodifiableList(isCallBanekr_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.isCallBanekr_ = isCallBanekr_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          isOpenCard_ = java.util.Collections.unmodifiableList(isOpenCard_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.isOpenCard_ = isOpenCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isCanCuoPai_ = isCanCuoPai_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          isCuoPai_ = java.util.Collections.unmodifiableList(isCuoPai_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.isCuoPai_ = isCuoPai_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          userStatus_ = java.util.Collections.unmodifiableList(userStatus_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.userStatus_ = userStatus_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.trustee_ = trustee_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000040;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (other.hasTotalJettonScore()) {
          setTotalJettonScore(other.getTotalJettonScore());
        }
        if (!other.userJettonScore_.isEmpty()) {
          if (userJettonScore_.isEmpty()) {
            userJettonScore_ = other.userJettonScore_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUserJettonScoreIsMutable();
            userJettonScore_.addAll(other.userJettonScore_);
          }
          onChanged();
        }
        if (!other.userWinLoseScore_.isEmpty()) {
          if (userWinLoseScore_.isEmpty()) {
            userWinLoseScore_ = other.userWinLoseScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUserWinLoseScoreIsMutable();
            userWinLoseScore_.addAll(other.userWinLoseScore_);
          }
          onChanged();
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000080);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.isCallBanekr_.isEmpty()) {
          if (isCallBanekr_.isEmpty()) {
            isCallBanekr_ = other.isCallBanekr_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureIsCallBanekrIsMutable();
            isCallBanekr_.addAll(other.isCallBanekr_);
          }
          onChanged();
        }
        if (!other.isOpenCard_.isEmpty()) {
          if (isOpenCard_.isEmpty()) {
            isOpenCard_ = other.isOpenCard_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureIsOpenCardIsMutable();
            isOpenCard_.addAll(other.isOpenCard_);
          }
          onChanged();
        }
        if (other.hasIsCanCuoPai()) {
          setIsCanCuoPai(other.getIsCanCuoPai());
        }
        if (!other.isCuoPai_.isEmpty()) {
          if (isCuoPai_.isEmpty()) {
            isCuoPai_ = other.isCuoPai_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureIsCuoPaiIsMutable();
            isCuoPai_.addAll(other.isCuoPai_);
          }
          onChanged();
        }
        if (!other.userStatus_.isEmpty()) {
          if (userStatus_.isEmpty()) {
            userStatus_ = other.userStatus_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureUserStatusIsMutable();
            userStatus_.addAll(other.userStatus_);
          }
          onChanged();
        }
        if (!other.trustee_.isEmpty()) {
          if (trustee_.isEmpty()) {
            trustee_ = other.trustee_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureTrusteeIsMutable();
            trustee_.addAll(other.trustee_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00010000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.TableResponse_Xykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_jetton_score = 8;
      private int totalJettonScore_ ;
      /**
       * <code>optional int32 total_jetton_score = 8;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public boolean hasTotalJettonScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 total_jetton_score = 8;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public int getTotalJettonScore() {
        return totalJettonScore_;
      }
      /**
       * <code>optional int32 total_jetton_score = 8;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder setTotalJettonScore(int value) {
        bitField0_ |= 0x00000008;
        totalJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_jetton_score = 8;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder clearTotalJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalJettonScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 user_jetton_score = 9;
      private java.util.List<java.lang.Integer> userJettonScore_ = java.util.Collections.emptyList();
      private void ensureUserJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          userJettonScore_ = new java.util.ArrayList<java.lang.Integer>(userJettonScore_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserJettonScoreList() {
        return java.util.Collections.unmodifiableList(userJettonScore_);
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public int getUserJettonScoreCount() {
        return userJettonScore_.size();
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public int getUserJettonScore(int index) {
        return userJettonScore_.get(index);
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public Builder setUserJettonScore(
          int index, int value) {
        ensureUserJettonScoreIsMutable();
        userJettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public Builder addUserJettonScore(int value) {
        ensureUserJettonScoreIsMutable();
        userJettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public Builder addAllUserJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserJettonScoreIsMutable();
        super.addAll(values, userJettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_jetton_score = 9;</code>
       *
       * <pre>
       *玩家下注分数
       * </pre>
       */
      public Builder clearUserJettonScore() {
        userJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 user_win_lose_score = 17;
      private java.util.List<java.lang.Integer> userWinLoseScore_ = java.util.Collections.emptyList();
      private void ensureUserWinLoseScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          userWinLoseScore_ = new java.util.ArrayList<java.lang.Integer>(userWinLoseScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserWinLoseScoreList() {
        return java.util.Collections.unmodifiableList(userWinLoseScore_);
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public int getUserWinLoseScoreCount() {
        return userWinLoseScore_.size();
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public int getUserWinLoseScore(int index) {
        return userWinLoseScore_.get(index);
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public Builder setUserWinLoseScore(
          int index, int value) {
        ensureUserWinLoseScoreIsMutable();
        userWinLoseScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public Builder addUserWinLoseScore(int value) {
        ensureUserWinLoseScoreIsMutable();
        userWinLoseScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public Builder addAllUserWinLoseScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserWinLoseScoreIsMutable();
        super.addAll(values, userWinLoseScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_win_lose_score = 17;</code>
       *
       * <pre>
       *玩家输赢分数
       * </pre>
       */
      public Builder clearUserWinLoseScore() {
        userWinLoseScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 card_count = 10;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 10;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 11;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 11;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 is_call_banekr = 12;
      private java.util.List<java.lang.Integer> isCallBanekr_ = java.util.Collections.emptyList();
      private void ensureIsCallBanekrIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          isCallBanekr_ = new java.util.ArrayList<java.lang.Integer>(isCallBanekr_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIsCallBanekrList() {
        return java.util.Collections.unmodifiableList(isCallBanekr_);
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public int getIsCallBanekrCount() {
        return isCallBanekr_.size();
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public int getIsCallBanekr(int index) {
        return isCallBanekr_.get(index);
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public Builder setIsCallBanekr(
          int index, int value) {
        ensureIsCallBanekrIsMutable();
        isCallBanekr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public Builder addIsCallBanekr(int value) {
        ensureIsCallBanekrIsMutable();
        isCallBanekr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public Builder addAllIsCallBanekr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsCallBanekrIsMutable();
        super.addAll(values, isCallBanekr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_call_banekr = 12;</code>
       *
       * <pre>
       *是否抢买
       * </pre>
       */
      public Builder clearIsCallBanekr() {
        isCallBanekr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 is_open_card = 13;
      private java.util.List<java.lang.Integer> isOpenCard_ = java.util.Collections.emptyList();
      private void ensureIsOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          isOpenCard_ = new java.util.ArrayList<java.lang.Integer>(isOpenCard_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIsOpenCardList() {
        return java.util.Collections.unmodifiableList(isOpenCard_);
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public int getIsOpenCardCount() {
        return isOpenCard_.size();
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public int getIsOpenCard(int index) {
        return isOpenCard_.get(index);
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder setIsOpenCard(
          int index, int value) {
        ensureIsOpenCardIsMutable();
        isOpenCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder addIsOpenCard(int value) {
        ensureIsOpenCardIsMutable();
        isOpenCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder addAllIsOpenCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsOpenCardIsMutable();
        super.addAll(values, isOpenCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_open_card = 13;</code>
       *
       * <pre>
       *是否开牌
       * </pre>
       */
      public Builder clearIsOpenCard() {
        isOpenCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 is_can_cuo_pai = 14;
      private int isCanCuoPai_ ;
      /**
       * <code>optional int32 is_can_cuo_pai = 14;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public boolean hasIsCanCuoPai() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 14;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public int getIsCanCuoPai() {
        return isCanCuoPai_;
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 14;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public Builder setIsCanCuoPai(int value) {
        bitField0_ |= 0x00000400;
        isCanCuoPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 14;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public Builder clearIsCanCuoPai() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isCanCuoPai_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 is_cuo_pai = 15;
      private java.util.List<java.lang.Integer> isCuoPai_ = java.util.Collections.emptyList();
      private void ensureIsCuoPaiIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          isCuoPai_ = new java.util.ArrayList<java.lang.Integer>(isCuoPai_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIsCuoPaiList() {
        return java.util.Collections.unmodifiableList(isCuoPai_);
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public int getIsCuoPaiCount() {
        return isCuoPai_.size();
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public int getIsCuoPai(int index) {
        return isCuoPai_.get(index);
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public Builder setIsCuoPai(
          int index, int value) {
        ensureIsCuoPaiIsMutable();
        isCuoPai_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public Builder addIsCuoPai(int value) {
        ensureIsCuoPaiIsMutable();
        isCuoPai_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public Builder addAllIsCuoPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsCuoPaiIsMutable();
        super.addAll(values, isCuoPai_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_cuo_pai = 15;</code>
       *
       * <pre>
       *玩家搓牌状态
       * </pre>
       */
      public Builder clearIsCuoPai() {
        isCuoPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 user_status = 16;
      private java.util.List<java.lang.Integer> userStatus_ = java.util.Collections.emptyList();
      private void ensureUserStatusIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          userStatus_ = new java.util.ArrayList<java.lang.Integer>(userStatus_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserStatusList() {
        return java.util.Collections.unmodifiableList(userStatus_);
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public int getUserStatusCount() {
        return userStatus_.size();
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public int getUserStatus(int index) {
        return userStatus_.get(index);
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public Builder setUserStatus(
          int index, int value) {
        ensureUserStatusIsMutable();
        userStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public Builder addUserStatus(int value) {
        ensureUserStatusIsMutable();
        userStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public Builder addAllUserStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserStatusIsMutable();
        super.addAll(values, userStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_status = 16;</code>
       *
       * <pre>
       *玩家当前状态 0:抢庄状态，1：下注，2：开牌，3：搓牌，4：开牌结束
       * </pre>
       */
      public Builder clearUserStatus() {
        userStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated bool trustee = 4;
      private java.util.List<java.lang.Boolean> trustee_ = java.util.Collections.emptyList();
      private void ensureTrusteeIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          trustee_ = new java.util.ArrayList<java.lang.Boolean>(trustee_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getTrusteeList() {
        return java.util.Collections.unmodifiableList(trustee_);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public int getTrusteeCount() {
        return trustee_.size();
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public boolean getTrustee(int index) {
        return trustee_.get(index);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder setTrustee(
          int index, boolean value) {
        ensureTrusteeIsMutable();
        trustee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addTrustee(boolean value) {
        ensureTrusteeIsMutable();
        trustee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addAllTrustee(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTrusteeIsMutable();
        super.addAll(values, trustee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder clearTrustee() {
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00004000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00004000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional .xykl.RoomInfoXykl room_info = 6;
      private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              roomInfo_ != protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .xykl.RoomPlayerResponseXykl players = 7;
      private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>(players_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> playersBuilder_;

      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder addPlayers(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 7;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:xykl.TableResponse_Xykl)
    }

    static {
      defaultInstance = new TableResponse_Xykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.TableResponse_Xykl)
  }

  public interface GameStart_XyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .xykl.RoomInfoXykl room_info = 1;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo();
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder();

    // repeated .xykl.RoomPlayerResponseXykl players = 2;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> 
        getPlayersList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index);
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 card_count = 3;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // optional int32 game_cell = 4;
    /**
     * <code>optional int32 game_cell = 4;</code>
     */
    boolean hasGameCell();
    /**
     * <code>optional int32 game_cell = 4;</code>
     */
    int getGameCell();

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional int32 display_time = 6;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 jetton_total_score = 7;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    int getJettonTotalScore();

    // optional int32 is_jetton = 8;
    /**
     * <code>optional int32 is_jetton = 8;</code>
     *
     * <pre>
     *0:不需要，1：需要
     * </pre>
     */
    boolean hasIsJetton();
    /**
     * <code>optional int32 is_jetton = 8;</code>
     *
     * <pre>
     *0:不需要，1：需要
     * </pre>
     */
    int getIsJetton();
  }
  /**
   * Protobuf type {@code xykl.GameStart_Xykl}
   */
  public static final class GameStart_Xykl extends
      com.google.protobuf.GeneratedMessage
      implements GameStart_XyklOrBuilder {
    // Use GameStart_Xykl.newBuilder() to construct.
    private GameStart_Xykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStart_Xykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStart_Xykl defaultInstance;
    public static GameStart_Xykl getDefaultInstance() {
      return defaultInstance;
    }

    public GameStart_Xykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStart_Xykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameCell_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              displayTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              jettonTotalScore_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              isJetton_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_GameStart_Xykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_GameStart_Xykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.class, protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStart_Xykl> PARSER =
        new com.google.protobuf.AbstractParser<GameStart_Xykl>() {
      public GameStart_Xykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStart_Xykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStart_Xykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .xykl.RoomInfoXykl room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_;
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .xykl.RoomPlayerResponseXykl players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_;
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
     */
    public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 card_count = 3;
    public static final int CARD_COUNT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // optional int32 game_cell = 4;
    public static final int GAME_CELL_FIELD_NUMBER = 4;
    private int gameCell_;
    /**
     * <code>optional int32 game_cell = 4;</code>
     */
    public boolean hasGameCell() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_cell = 4;</code>
     */
    public int getGameCell() {
      return gameCell_;
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional int32 display_time = 6;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 6;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 jetton_total_score = 7;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 7;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    // optional int32 is_jetton = 8;
    public static final int IS_JETTON_FIELD_NUMBER = 8;
    private int isJetton_;
    /**
     * <code>optional int32 is_jetton = 8;</code>
     *
     * <pre>
     *0:不需要，1：需要
     * </pre>
     */
    public boolean hasIsJetton() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 is_jetton = 8;</code>
     *
     * <pre>
     *0:不需要，1：需要
     * </pre>
     */
    public int getIsJetton() {
      return isJetton_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      gameCell_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      jettonTotalScore_ = 0;
      isJetton_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(3, cardCount_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameCell_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(6, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, isJetton_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameCell_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, isJetton_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.GameStart_Xykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.GameStart_Xykl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.GameStart_XyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_GameStart_Xykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_GameStart_Xykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.class, protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        gameCell_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        isJetton_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_GameStart_Xykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.GameStart_Xykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.GameStart_Xykl build() {
        protobuf.clazz.xykl.xyklRsp.GameStart_Xykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.GameStart_Xykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.GameStart_Xykl result = new protobuf.clazz.xykl.xyklRsp.GameStart_Xykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardCount_ = cardCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameCell_ = gameCell_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isJetton_ = isJetton_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.GameStart_Xykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.GameStart_Xykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.GameStart_Xykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.GameStart_Xykl.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (other.hasGameCell()) {
          setGameCell(other.getGameCell());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        if (other.hasIsJetton()) {
          setIsJetton(other.getIsJetton());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.GameStart_Xykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.GameStart_Xykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .xykl.RoomInfoXykl room_info = 1;
      private protobuf.clazz.xykl.xyklRsp.RoomInfoXykl roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.xykl.xyklRsp.RoomInfoXykl value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .xykl.RoomInfoXykl room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomInfoXykl, protobuf.clazz.xykl.xyklRsp.RoomInfoXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomInfoXyklOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .xykl.RoomPlayerResponseXykl players = 2;
      private java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> playersBuilder_;

      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.getDefaultInstance());
      }
      /**
       * <code>repeated .xykl.RoomPlayerResponseXykl players = 2;</code>
       */
      public java.util.List<protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXykl.Builder, protobuf.clazz.xykl.xyklRsp.RoomPlayerResponseXyklOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 card_count = 3;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 game_cell = 4;
      private int gameCell_ ;
      /**
       * <code>optional int32 game_cell = 4;</code>
       */
      public boolean hasGameCell() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 game_cell = 4;</code>
       */
      public int getGameCell() {
        return gameCell_;
      }
      /**
       * <code>optional int32 game_cell = 4;</code>
       */
      public Builder setGameCell(int value) {
        bitField0_ |= 0x00000008;
        gameCell_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_cell = 4;</code>
       */
      public Builder clearGameCell() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameCell_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional int32 display_time = 6;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000020;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 7;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00000040;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_jetton = 8;
      private int isJetton_ ;
      /**
       * <code>optional int32 is_jetton = 8;</code>
       *
       * <pre>
       *0:不需要，1：需要
       * </pre>
       */
      public boolean hasIsJetton() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 is_jetton = 8;</code>
       *
       * <pre>
       *0:不需要，1：需要
       * </pre>
       */
      public int getIsJetton() {
        return isJetton_;
      }
      /**
       * <code>optional int32 is_jetton = 8;</code>
       *
       * <pre>
       *0:不需要，1：需要
       * </pre>
       */
      public Builder setIsJetton(int value) {
        bitField0_ |= 0x00000080;
        isJetton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_jetton = 8;</code>
       *
       * <pre>
       *0:不需要，1：需要
       * </pre>
       */
      public Builder clearIsJetton() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isJetton_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.GameStart_Xykl)
    }

    static {
      defaultInstance = new GameStart_Xykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.GameStart_Xykl)
  }

  public interface CallBankerResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_seat_index = 1;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreateSeatIndex();

    // optional int32 is_call_banekr = 2;
    /**
     * <code>optional int32 is_call_banekr = 2;</code>
     *
     * <pre>
     *是否叫庄
     * </pre>
     */
    boolean hasIsCallBanekr();
    /**
     * <code>optional int32 is_call_banekr = 2;</code>
     *
     * <pre>
     *是否叫庄
     * </pre>
     */
    int getIsCallBanekr();

    // optional int32 banker_seat_index = 3;
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerSeatIndex();
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerSeatIndex();

    // repeated int32 seat_index_sis_call = 4;
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    java.util.List<java.lang.Integer> getSeatIndexSisCallList();
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    int getSeatIndexSisCallCount();
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    int getSeatIndexSisCall(int index);
  }
  /**
   * Protobuf type {@code xykl.CallBankerResult}
   *
   * <pre>
   *叫庄
   * </pre>
   */
  public static final class CallBankerResult extends
      com.google.protobuf.GeneratedMessage
      implements CallBankerResultOrBuilder {
    // Use CallBankerResult.newBuilder() to construct.
    private CallBankerResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CallBankerResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CallBankerResult defaultInstance;
    public static CallBankerResult getDefaultInstance() {
      return defaultInstance;
    }

    public CallBankerResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CallBankerResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isCallBanekr_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bankerSeatIndex_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                seatIndexSisCall_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              seatIndexSisCall_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                seatIndexSisCall_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                seatIndexSisCall_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          seatIndexSisCall_ = java.util.Collections.unmodifiableList(seatIndexSisCall_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_CallBankerResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_CallBankerResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.CallBankerResult.class, protobuf.clazz.xykl.xyklRsp.CallBankerResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CallBankerResult> PARSER =
        new com.google.protobuf.AbstractParser<CallBankerResult>() {
      public CallBankerResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallBankerResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CallBankerResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_seat_index = 1;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 1;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    // optional int32 is_call_banekr = 2;
    public static final int IS_CALL_BANEKR_FIELD_NUMBER = 2;
    private int isCallBanekr_;
    /**
     * <code>optional int32 is_call_banekr = 2;</code>
     *
     * <pre>
     *是否叫庄
     * </pre>
     */
    public boolean hasIsCallBanekr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 is_call_banekr = 2;</code>
     *
     * <pre>
     *是否叫庄
     * </pre>
     */
    public int getIsCallBanekr() {
      return isCallBanekr_;
    }

    // optional int32 banker_seat_index = 3;
    public static final int BANKER_SEAT_INDEX_FIELD_NUMBER = 3;
    private int bankerSeatIndex_;
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerSeatIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 banker_seat_index = 3;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerSeatIndex() {
      return bankerSeatIndex_;
    }

    // repeated int32 seat_index_sis_call = 4;
    public static final int SEAT_INDEX_SIS_CALL_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> seatIndexSisCall_;
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSeatIndexSisCallList() {
      return seatIndexSisCall_;
    }
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    public int getSeatIndexSisCallCount() {
      return seatIndexSisCall_.size();
    }
    /**
     * <code>repeated int32 seat_index_sis_call = 4;</code>
     *
     * <pre>
     *该位置是否叫庄
     * </pre>
     */
    public int getSeatIndexSisCall(int index) {
      return seatIndexSisCall_.get(index);
    }

    private void initFields() {
      opreateSeatIndex_ = 0;
      isCallBanekr_ = 0;
      bankerSeatIndex_ = 0;
      seatIndexSisCall_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, isCallBanekr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, bankerSeatIndex_);
      }
      for (int i = 0; i < seatIndexSisCall_.size(); i++) {
        output.writeInt32(4, seatIndexSisCall_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isCallBanekr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bankerSeatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seatIndexSisCall_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(seatIndexSisCall_.get(i));
        }
        size += dataSize;
        size += 1 * getSeatIndexSisCallList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.CallBankerResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.CallBankerResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.CallBankerResult}
     *
     * <pre>
     *叫庄
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.CallBankerResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_CallBankerResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_CallBankerResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.CallBankerResult.class, protobuf.clazz.xykl.xyklRsp.CallBankerResult.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.CallBankerResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isCallBanekr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndexSisCall_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_CallBankerResult_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.CallBankerResult getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.CallBankerResult.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.CallBankerResult build() {
        protobuf.clazz.xykl.xyklRsp.CallBankerResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.CallBankerResult buildPartial() {
        protobuf.clazz.xykl.xyklRsp.CallBankerResult result = new protobuf.clazz.xykl.xyklRsp.CallBankerResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isCallBanekr_ = isCallBanekr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerSeatIndex_ = bankerSeatIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          seatIndexSisCall_ = java.util.Collections.unmodifiableList(seatIndexSisCall_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.seatIndexSisCall_ = seatIndexSisCall_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.CallBankerResult) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.CallBankerResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.CallBankerResult other) {
        if (other == protobuf.clazz.xykl.xyklRsp.CallBankerResult.getDefaultInstance()) return this;
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        if (other.hasIsCallBanekr()) {
          setIsCallBanekr(other.getIsCallBanekr());
        }
        if (other.hasBankerSeatIndex()) {
          setBankerSeatIndex(other.getBankerSeatIndex());
        }
        if (!other.seatIndexSisCall_.isEmpty()) {
          if (seatIndexSisCall_.isEmpty()) {
            seatIndexSisCall_ = other.seatIndexSisCall_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSeatIndexSisCallIsMutable();
            seatIndexSisCall_.addAll(other.seatIndexSisCall_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.CallBankerResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.CallBankerResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_seat_index = 1;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_call_banekr = 2;
      private int isCallBanekr_ ;
      /**
       * <code>optional int32 is_call_banekr = 2;</code>
       *
       * <pre>
       *是否叫庄
       * </pre>
       */
      public boolean hasIsCallBanekr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_call_banekr = 2;</code>
       *
       * <pre>
       *是否叫庄
       * </pre>
       */
      public int getIsCallBanekr() {
        return isCallBanekr_;
      }
      /**
       * <code>optional int32 is_call_banekr = 2;</code>
       *
       * <pre>
       *是否叫庄
       * </pre>
       */
      public Builder setIsCallBanekr(int value) {
        bitField0_ |= 0x00000002;
        isCallBanekr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_call_banekr = 2;</code>
       *
       * <pre>
       *是否叫庄
       * </pre>
       */
      public Builder clearIsCallBanekr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isCallBanekr_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_seat_index = 3;
      private int bankerSeatIndex_ ;
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerSeatIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerSeatIndex() {
        return bankerSeatIndex_;
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerSeatIndex(int value) {
        bitField0_ |= 0x00000004;
        bankerSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat_index = 3;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 seat_index_sis_call = 4;
      private java.util.List<java.lang.Integer> seatIndexSisCall_ = java.util.Collections.emptyList();
      private void ensureSeatIndexSisCallIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          seatIndexSisCall_ = new java.util.ArrayList<java.lang.Integer>(seatIndexSisCall_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSeatIndexSisCallList() {
        return java.util.Collections.unmodifiableList(seatIndexSisCall_);
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public int getSeatIndexSisCallCount() {
        return seatIndexSisCall_.size();
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public int getSeatIndexSisCall(int index) {
        return seatIndexSisCall_.get(index);
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public Builder setSeatIndexSisCall(
          int index, int value) {
        ensureSeatIndexSisCallIsMutable();
        seatIndexSisCall_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public Builder addSeatIndexSisCall(int value) {
        ensureSeatIndexSisCallIsMutable();
        seatIndexSisCall_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public Builder addAllSeatIndexSisCall(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSeatIndexSisCallIsMutable();
        super.addAll(values, seatIndexSisCall_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_index_sis_call = 4;</code>
       *
       * <pre>
       *该位置是否叫庄
       * </pre>
       */
      public Builder clearSeatIndexSisCall() {
        seatIndexSisCall_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.CallBankerResult)
    }

    static {
      defaultInstance = new CallBankerResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.CallBankerResult)
  }

  public interface JettonAreaOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_score_min = 1;
    /**
     * <code>optional int32 jetton_score_min = 1;</code>
     *
     * <pre>
     *下注最少分数
     * </pre>
     */
    boolean hasJettonScoreMin();
    /**
     * <code>optional int32 jetton_score_min = 1;</code>
     *
     * <pre>
     *下注最少分数
     * </pre>
     */
    int getJettonScoreMin();

    // optional int32 jetton_score_max = 2;
    /**
     * <code>optional int32 jetton_score_max = 2;</code>
     *
     * <pre>
     *下注最大分数
     * </pre>
     */
    boolean hasJettonScoreMax();
    /**
     * <code>optional int32 jetton_score_max = 2;</code>
     *
     * <pre>
     *下注最大分数
     * </pre>
     */
    int getJettonScoreMax();

    // optional int32 jetton_seat_index = 3;
    /**
     * <code>optional int32 jetton_seat_index = 3;</code>
     *
     * <pre>
     *当前可下注玩家
     * </pre>
     */
    boolean hasJettonSeatIndex();
    /**
     * <code>optional int32 jetton_seat_index = 3;</code>
     *
     * <pre>
     *当前可下注玩家
     * </pre>
     */
    int getJettonSeatIndex();

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code xykl.JettonArea}
   *
   * <pre>
   *下注范围
   * </pre>
   */
  public static final class JettonArea extends
      com.google.protobuf.GeneratedMessage
      implements JettonAreaOrBuilder {
    // Use JettonArea.newBuilder() to construct.
    private JettonArea(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonArea(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonArea defaultInstance;
    public static JettonArea getDefaultInstance() {
      return defaultInstance;
    }

    public JettonArea getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonArea(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonScoreMin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScoreMax_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              jettonSeatIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonArea_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonArea_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.JettonArea.class, protobuf.clazz.xykl.xyklRsp.JettonArea.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonArea> PARSER =
        new com.google.protobuf.AbstractParser<JettonArea>() {
      public JettonArea parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonArea(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonArea> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_score_min = 1;
    public static final int JETTON_SCORE_MIN_FIELD_NUMBER = 1;
    private int jettonScoreMin_;
    /**
     * <code>optional int32 jetton_score_min = 1;</code>
     *
     * <pre>
     *下注最少分数
     * </pre>
     */
    public boolean hasJettonScoreMin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_score_min = 1;</code>
     *
     * <pre>
     *下注最少分数
     * </pre>
     */
    public int getJettonScoreMin() {
      return jettonScoreMin_;
    }

    // optional int32 jetton_score_max = 2;
    public static final int JETTON_SCORE_MAX_FIELD_NUMBER = 2;
    private int jettonScoreMax_;
    /**
     * <code>optional int32 jetton_score_max = 2;</code>
     *
     * <pre>
     *下注最大分数
     * </pre>
     */
    public boolean hasJettonScoreMax() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score_max = 2;</code>
     *
     * <pre>
     *下注最大分数
     * </pre>
     */
    public int getJettonScoreMax() {
      return jettonScoreMax_;
    }

    // optional int32 jetton_seat_index = 3;
    public static final int JETTON_SEAT_INDEX_FIELD_NUMBER = 3;
    private int jettonSeatIndex_;
    /**
     * <code>optional int32 jetton_seat_index = 3;</code>
     *
     * <pre>
     *当前可下注玩家
     * </pre>
     */
    public boolean hasJettonSeatIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jetton_seat_index = 3;</code>
     *
     * <pre>
     *当前可下注玩家
     * </pre>
     */
    public int getJettonSeatIndex() {
      return jettonSeatIndex_;
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      jettonScoreMin_ = 0;
      jettonScoreMax_ = 0;
      jettonSeatIndex_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonScoreMin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScoreMax_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, jettonSeatIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonScoreMin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScoreMax_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, jettonSeatIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonArea parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.JettonArea prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.JettonArea}
     *
     * <pre>
     *下注范围
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.JettonAreaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonArea_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonArea_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.JettonArea.class, protobuf.clazz.xykl.xyklRsp.JettonArea.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.JettonArea.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonScoreMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScoreMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonArea_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.JettonArea getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.JettonArea.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.JettonArea build() {
        protobuf.clazz.xykl.xyklRsp.JettonArea result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.JettonArea buildPartial() {
        protobuf.clazz.xykl.xyklRsp.JettonArea result = new protobuf.clazz.xykl.xyklRsp.JettonArea(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonScoreMin_ = jettonScoreMin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScoreMax_ = jettonScoreMax_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jettonSeatIndex_ = jettonSeatIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.JettonArea) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.JettonArea)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.JettonArea other) {
        if (other == protobuf.clazz.xykl.xyklRsp.JettonArea.getDefaultInstance()) return this;
        if (other.hasJettonScoreMin()) {
          setJettonScoreMin(other.getJettonScoreMin());
        }
        if (other.hasJettonScoreMax()) {
          setJettonScoreMax(other.getJettonScoreMax());
        }
        if (other.hasJettonSeatIndex()) {
          setJettonSeatIndex(other.getJettonSeatIndex());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.JettonArea parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.JettonArea) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_score_min = 1;
      private int jettonScoreMin_ ;
      /**
       * <code>optional int32 jetton_score_min = 1;</code>
       *
       * <pre>
       *下注最少分数
       * </pre>
       */
      public boolean hasJettonScoreMin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_score_min = 1;</code>
       *
       * <pre>
       *下注最少分数
       * </pre>
       */
      public int getJettonScoreMin() {
        return jettonScoreMin_;
      }
      /**
       * <code>optional int32 jetton_score_min = 1;</code>
       *
       * <pre>
       *下注最少分数
       * </pre>
       */
      public Builder setJettonScoreMin(int value) {
        bitField0_ |= 0x00000001;
        jettonScoreMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score_min = 1;</code>
       *
       * <pre>
       *下注最少分数
       * </pre>
       */
      public Builder clearJettonScoreMin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScoreMin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score_max = 2;
      private int jettonScoreMax_ ;
      /**
       * <code>optional int32 jetton_score_max = 2;</code>
       *
       * <pre>
       *下注最大分数
       * </pre>
       */
      public boolean hasJettonScoreMax() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score_max = 2;</code>
       *
       * <pre>
       *下注最大分数
       * </pre>
       */
      public int getJettonScoreMax() {
        return jettonScoreMax_;
      }
      /**
       * <code>optional int32 jetton_score_max = 2;</code>
       *
       * <pre>
       *下注最大分数
       * </pre>
       */
      public Builder setJettonScoreMax(int value) {
        bitField0_ |= 0x00000002;
        jettonScoreMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score_max = 2;</code>
       *
       * <pre>
       *下注最大分数
       * </pre>
       */
      public Builder clearJettonScoreMax() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScoreMax_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_seat_index = 3;
      private int jettonSeatIndex_ ;
      /**
       * <code>optional int32 jetton_seat_index = 3;</code>
       *
       * <pre>
       *当前可下注玩家
       * </pre>
       */
      public boolean hasJettonSeatIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 jetton_seat_index = 3;</code>
       *
       * <pre>
       *当前可下注玩家
       * </pre>
       */
      public int getJettonSeatIndex() {
        return jettonSeatIndex_;
      }
      /**
       * <code>optional int32 jetton_seat_index = 3;</code>
       *
       * <pre>
       *当前可下注玩家
       * </pre>
       */
      public Builder setJettonSeatIndex(int value) {
        bitField0_ |= 0x00000004;
        jettonSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat_index = 3;</code>
       *
       * <pre>
       *当前可下注玩家
       * </pre>
       */
      public Builder clearJettonSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jettonSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.JettonArea)
    }

    static {
      defaultInstance = new JettonArea(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.JettonArea)
  }

  public interface JettonResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_seat_index = 1;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreateSeatIndex();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    int getJettonScore();

    // optional int32 is_all_in = 3;
    /**
     * <code>optional int32 is_all_in = 3;</code>
     *
     * <pre>
     *是否梭哈
     * </pre>
     */
    boolean hasIsAllIn();
    /**
     * <code>optional int32 is_all_in = 3;</code>
     *
     * <pre>
     *是否梭哈
     * </pre>
     */
    int getIsAllIn();

    // optional int32 total_jetton_score = 4;
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    boolean hasTotalJettonScore();
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    int getTotalJettonScore();
  }
  /**
   * Protobuf type {@code xykl.JettonResult}
   *
   * <pre>
   *下注
   * </pre>
   */
  public static final class JettonResult extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultOrBuilder {
    // Use JettonResult.newBuilder() to construct.
    private JettonResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResult defaultInstance;
    public static JettonResult getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isAllIn_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalJettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.JettonResult.class, protobuf.clazz.xykl.xyklRsp.JettonResult.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResult> PARSER =
        new com.google.protobuf.AbstractParser<JettonResult>() {
      public JettonResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_seat_index = 1;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 1;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // optional int32 is_all_in = 3;
    public static final int IS_ALL_IN_FIELD_NUMBER = 3;
    private int isAllIn_;
    /**
     * <code>optional int32 is_all_in = 3;</code>
     *
     * <pre>
     *是否梭哈
     * </pre>
     */
    public boolean hasIsAllIn() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 is_all_in = 3;</code>
     *
     * <pre>
     *是否梭哈
     * </pre>
     */
    public int getIsAllIn() {
      return isAllIn_;
    }

    // optional int32 total_jetton_score = 4;
    public static final int TOTAL_JETTON_SCORE_FIELD_NUMBER = 4;
    private int totalJettonScore_;
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public boolean hasTotalJettonScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public int getTotalJettonScore() {
      return totalJettonScore_;
    }

    private void initFields() {
      opreateSeatIndex_ = 0;
      jettonScore_ = 0;
      isAllIn_ = 0;
      totalJettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, isAllIn_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalJettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, isAllIn_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalJettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.JettonResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.JettonResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.JettonResult}
     *
     * <pre>
     *下注
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.JettonResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.JettonResult.class, protobuf.clazz.xykl.xyklRsp.JettonResult.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.JettonResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isAllIn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_JettonResult_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.JettonResult getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.JettonResult.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.JettonResult build() {
        protobuf.clazz.xykl.xyklRsp.JettonResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.JettonResult buildPartial() {
        protobuf.clazz.xykl.xyklRsp.JettonResult result = new protobuf.clazz.xykl.xyklRsp.JettonResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isAllIn_ = isAllIn_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalJettonScore_ = totalJettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.JettonResult) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.JettonResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.JettonResult other) {
        if (other == protobuf.clazz.xykl.xyklRsp.JettonResult.getDefaultInstance()) return this;
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasIsAllIn()) {
          setIsAllIn(other.getIsAllIn());
        }
        if (other.hasTotalJettonScore()) {
          setTotalJettonScore(other.getTotalJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.JettonResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.JettonResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_seat_index = 1;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_all_in = 3;
      private int isAllIn_ ;
      /**
       * <code>optional int32 is_all_in = 3;</code>
       *
       * <pre>
       *是否梭哈
       * </pre>
       */
      public boolean hasIsAllIn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 is_all_in = 3;</code>
       *
       * <pre>
       *是否梭哈
       * </pre>
       */
      public int getIsAllIn() {
        return isAllIn_;
      }
      /**
       * <code>optional int32 is_all_in = 3;</code>
       *
       * <pre>
       *是否梭哈
       * </pre>
       */
      public Builder setIsAllIn(int value) {
        bitField0_ |= 0x00000004;
        isAllIn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_all_in = 3;</code>
       *
       * <pre>
       *是否梭哈
       * </pre>
       */
      public Builder clearIsAllIn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isAllIn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_jetton_score = 4;
      private int totalJettonScore_ ;
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public boolean hasTotalJettonScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public int getTotalJettonScore() {
        return totalJettonScore_;
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder setTotalJettonScore(int value) {
        bitField0_ |= 0x00000008;
        totalJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder clearTotalJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalJettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.JettonResult)
    }

    static {
      defaultInstance = new JettonResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.JettonResult)
  }

  public interface OpenCardResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card_count = 1;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 opreate_seat_index = 3;
    /**
     * <code>optional int32 opreate_seat_index = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreateSeatIndex();
    /**
     * <code>optional int32 opreate_seat_index = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreateSeatIndex();

    // optional int32 total_jetton_score = 4;
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    boolean hasTotalJettonScore();
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    int getTotalJettonScore();

    // optional int32 win_or_lose = 5;
    /**
     * <code>optional int32 win_or_lose = 5;</code>
     *
     * <pre>
     *输赢
     * </pre>
     */
    boolean hasWinOrLose();
    /**
     * <code>optional int32 win_or_lose = 5;</code>
     *
     * <pre>
     *输赢
     * </pre>
     */
    int getWinOrLose();

    // optional int32 banker_seat_index = 6;
    /**
     * <code>optional int32 banker_seat_index = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerSeatIndex();
    /**
     * <code>optional int32 banker_seat_index = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerSeatIndex();

    // optional int32 current_player = 7;
    /**
     * <code>optional int32 current_player = 7;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 7;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 user_jetton_score = 8;
    /**
     * <code>optional int32 user_jetton_score = 8;</code>
     *
     * <pre>
     *开牌玩家下注
     * </pre>
     */
    boolean hasUserJettonScore();
    /**
     * <code>optional int32 user_jetton_score = 8;</code>
     *
     * <pre>
     *开牌玩家下注
     * </pre>
     */
    int getUserJettonScore();

    // optional int32 display_time = 9;
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 score = 10;
    /**
     * <code>optional int32 score = 10;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int32 score = 10;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getScore();
  }
  /**
   * Protobuf type {@code xykl.OpenCardResult}
   *
   * <pre>
   *开牌
   * </pre>
   */
  public static final class OpenCardResult extends
      com.google.protobuf.GeneratedMessage
      implements OpenCardResultOrBuilder {
    // Use OpenCardResult.newBuilder() to construct.
    private OpenCardResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCardResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCardResult defaultInstance;
    public static OpenCardResult getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCardResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCardResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardCount_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              opreateSeatIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              totalJettonScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              winOrLose_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              bankerSeatIndex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              userJettonScore_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              score_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_OpenCardResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_OpenCardResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.OpenCardResult.class, protobuf.clazz.xykl.xyklRsp.OpenCardResult.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCardResult> PARSER =
        new com.google.protobuf.AbstractParser<OpenCardResult>() {
      public OpenCardResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCardResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCardResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 opreate_seat_index = 3;
    public static final int OPREATE_SEAT_INDEX_FIELD_NUMBER = 3;
    private int opreateSeatIndex_;
    /**
     * <code>optional int32 opreate_seat_index = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreateSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_seat_index = 3;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreateSeatIndex() {
      return opreateSeatIndex_;
    }

    // optional int32 total_jetton_score = 4;
    public static final int TOTAL_JETTON_SCORE_FIELD_NUMBER = 4;
    private int totalJettonScore_;
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public boolean hasTotalJettonScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 total_jetton_score = 4;</code>
     *
     * <pre>
     *奖池分数
     * </pre>
     */
    public int getTotalJettonScore() {
      return totalJettonScore_;
    }

    // optional int32 win_or_lose = 5;
    public static final int WIN_OR_LOSE_FIELD_NUMBER = 5;
    private int winOrLose_;
    /**
     * <code>optional int32 win_or_lose = 5;</code>
     *
     * <pre>
     *输赢
     * </pre>
     */
    public boolean hasWinOrLose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 win_or_lose = 5;</code>
     *
     * <pre>
     *输赢
     * </pre>
     */
    public int getWinOrLose() {
      return winOrLose_;
    }

    // optional int32 banker_seat_index = 6;
    public static final int BANKER_SEAT_INDEX_FIELD_NUMBER = 6;
    private int bankerSeatIndex_;
    /**
     * <code>optional int32 banker_seat_index = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerSeatIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 banker_seat_index = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerSeatIndex() {
      return bankerSeatIndex_;
    }

    // optional int32 current_player = 7;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 7;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 7;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 current_player = 7;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 user_jetton_score = 8;
    public static final int USER_JETTON_SCORE_FIELD_NUMBER = 8;
    private int userJettonScore_;
    /**
     * <code>optional int32 user_jetton_score = 8;</code>
     *
     * <pre>
     *开牌玩家下注
     * </pre>
     */
    public boolean hasUserJettonScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 user_jetton_score = 8;</code>
     *
     * <pre>
     *开牌玩家下注
     * </pre>
     */
    public int getUserJettonScore() {
      return userJettonScore_;
    }

    // optional int32 display_time = 9;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 9;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 score = 10;
    public static final int SCORE_FIELD_NUMBER = 10;
    private int score_;
    /**
     * <code>optional int32 score = 10;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 score = 10;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    private void initFields() {
      cardCount_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      opreateSeatIndex_ = 0;
      totalJettonScore_ = 0;
      winOrLose_ = 0;
      bankerSeatIndex_ = 0;
      currentPlayer_ = 0;
      userJettonScore_ = 0;
      displayTime_ = 0;
      score_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cardCount_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, totalJettonScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, winOrLose_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, bankerSeatIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, currentPlayer_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, userJettonScore_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, displayTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cardCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, opreateSeatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalJettonScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, winOrLose_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bankerSeatIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, currentPlayer_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, userJettonScore_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, displayTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.OpenCardResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.OpenCardResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.OpenCardResult}
     *
     * <pre>
     *开牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.OpenCardResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_OpenCardResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_OpenCardResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.OpenCardResult.class, protobuf.clazz.xykl.xyklRsp.OpenCardResult.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.OpenCardResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        winOrLose_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        userJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_OpenCardResult_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.OpenCardResult getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.OpenCardResult.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.OpenCardResult build() {
        protobuf.clazz.xykl.xyklRsp.OpenCardResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.OpenCardResult buildPartial() {
        protobuf.clazz.xykl.xyklRsp.OpenCardResult result = new protobuf.clazz.xykl.xyklRsp.OpenCardResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardCount_ = cardCount_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreateSeatIndex_ = opreateSeatIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalJettonScore_ = totalJettonScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.winOrLose_ = winOrLose_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bankerSeatIndex_ = bankerSeatIndex_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.userJettonScore_ = userJettonScore_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.OpenCardResult) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.OpenCardResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.OpenCardResult other) {
        if (other == protobuf.clazz.xykl.xyklRsp.OpenCardResult.getDefaultInstance()) return this;
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasOpreateSeatIndex()) {
          setOpreateSeatIndex(other.getOpreateSeatIndex());
        }
        if (other.hasTotalJettonScore()) {
          setTotalJettonScore(other.getTotalJettonScore());
        }
        if (other.hasWinOrLose()) {
          setWinOrLose(other.getWinOrLose());
        }
        if (other.hasBankerSeatIndex()) {
          setBankerSeatIndex(other.getBankerSeatIndex());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasUserJettonScore()) {
          setUserJettonScore(other.getUserJettonScore());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.OpenCardResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.OpenCardResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card_count = 1;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000001;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 opreate_seat_index = 3;
      private int opreateSeatIndex_ ;
      /**
       * <code>optional int32 opreate_seat_index = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreateSeatIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 opreate_seat_index = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreateSeatIndex() {
        return opreateSeatIndex_;
      }
      /**
       * <code>optional int32 opreate_seat_index = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreateSeatIndex(int value) {
        bitField0_ |= 0x00000004;
        opreateSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_seat_index = 3;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreateSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opreateSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_jetton_score = 4;
      private int totalJettonScore_ ;
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public boolean hasTotalJettonScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public int getTotalJettonScore() {
        return totalJettonScore_;
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder setTotalJettonScore(int value) {
        bitField0_ |= 0x00000008;
        totalJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_jetton_score = 4;</code>
       *
       * <pre>
       *奖池分数
       * </pre>
       */
      public Builder clearTotalJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 win_or_lose = 5;
      private int winOrLose_ ;
      /**
       * <code>optional int32 win_or_lose = 5;</code>
       *
       * <pre>
       *输赢
       * </pre>
       */
      public boolean hasWinOrLose() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 win_or_lose = 5;</code>
       *
       * <pre>
       *输赢
       * </pre>
       */
      public int getWinOrLose() {
        return winOrLose_;
      }
      /**
       * <code>optional int32 win_or_lose = 5;</code>
       *
       * <pre>
       *输赢
       * </pre>
       */
      public Builder setWinOrLose(int value) {
        bitField0_ |= 0x00000010;
        winOrLose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_or_lose = 5;</code>
       *
       * <pre>
       *输赢
       * </pre>
       */
      public Builder clearWinOrLose() {
        bitField0_ = (bitField0_ & ~0x00000010);
        winOrLose_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_seat_index = 6;
      private int bankerSeatIndex_ ;
      /**
       * <code>optional int32 banker_seat_index = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerSeatIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 banker_seat_index = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerSeatIndex() {
        return bankerSeatIndex_;
      }
      /**
       * <code>optional int32 banker_seat_index = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerSeatIndex(int value) {
        bitField0_ |= 0x00000020;
        bankerSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat_index = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bankerSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 7;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 7;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 current_player = 7;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 7;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000040;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 7;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000040);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 user_jetton_score = 8;
      private int userJettonScore_ ;
      /**
       * <code>optional int32 user_jetton_score = 8;</code>
       *
       * <pre>
       *开牌玩家下注
       * </pre>
       */
      public boolean hasUserJettonScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 user_jetton_score = 8;</code>
       *
       * <pre>
       *开牌玩家下注
       * </pre>
       */
      public int getUserJettonScore() {
        return userJettonScore_;
      }
      /**
       * <code>optional int32 user_jetton_score = 8;</code>
       *
       * <pre>
       *开牌玩家下注
       * </pre>
       */
      public Builder setUserJettonScore(int value) {
        bitField0_ |= 0x00000080;
        userJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_jetton_score = 8;</code>
       *
       * <pre>
       *开牌玩家下注
       * </pre>
       */
      public Builder clearUserJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        userJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 9;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000100;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 score = 10;
      private int score_ ;
      /**
       * <code>optional int32 score = 10;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 score = 10;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional int32 score = 10;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000200;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score = 10;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000200);
        score_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.OpenCardResult)
    }

    static {
      defaultInstance = new OpenCardResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.OpenCardResult)
  }

  public interface SendCardsXyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card_count = 1;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 send_card_player = 3;
    /**
     * <code>optional int32 send_card_player = 3;</code>
     *
     * <pre>
     *发牌玩家
     * </pre>
     */
    boolean hasSendCardPlayer();
    /**
     * <code>optional int32 send_card_player = 3;</code>
     *
     * <pre>
     *发牌玩家
     * </pre>
     */
    int getSendCardPlayer();

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 is_can_cuo_pai = 5;
    /**
     * <code>optional int32 is_can_cuo_pai = 5;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    boolean hasIsCanCuoPai();
    /**
     * <code>optional int32 is_can_cuo_pai = 5;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    int getIsCanCuoPai();

    // optional int32 hand_card_count = 6;
    /**
     * <code>optional int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasHandCardCount();
    /**
     * <code>optional int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount();

    // repeated int32 hand_cards_data = 7;
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardsDataList();
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsData(int index);
  }
  /**
   * Protobuf type {@code xykl.SendCardsXykl}
   *
   * <pre>
   *发牌
   * </pre>
   */
  public static final class SendCardsXykl extends
      com.google.protobuf.GeneratedMessage
      implements SendCardsXyklOrBuilder {
    // Use SendCardsXykl.newBuilder() to construct.
    private SendCardsXykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardsXykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardsXykl defaultInstance;
    public static SendCardsXykl getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardsXykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardsXykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardCount_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              sendCardPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              displayTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              isCanCuoPai_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              handCardCount_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                handCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              handCardsData_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                handCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_SendCardsXykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_SendCardsXykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.SendCardsXykl.class, protobuf.clazz.xykl.xyklRsp.SendCardsXykl.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardsXykl> PARSER =
        new com.google.protobuf.AbstractParser<SendCardsXykl>() {
      public SendCardsXykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardsXykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardsXykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 send_card_player = 3;
    public static final int SEND_CARD_PLAYER_FIELD_NUMBER = 3;
    private int sendCardPlayer_;
    /**
     * <code>optional int32 send_card_player = 3;</code>
     *
     * <pre>
     *发牌玩家
     * </pre>
     */
    public boolean hasSendCardPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 send_card_player = 3;</code>
     *
     * <pre>
     *发牌玩家
     * </pre>
     */
    public int getSendCardPlayer() {
      return sendCardPlayer_;
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 is_can_cuo_pai = 5;
    public static final int IS_CAN_CUO_PAI_FIELD_NUMBER = 5;
    private int isCanCuoPai_;
    /**
     * <code>optional int32 is_can_cuo_pai = 5;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    public boolean hasIsCanCuoPai() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 is_can_cuo_pai = 5;</code>
     *
     * <pre>
     *能否搓牌 1能搓牌，0不能搓牌
     * </pre>
     */
    public int getIsCanCuoPai() {
      return isCanCuoPai_;
    }

    // optional int32 hand_card_count = 6;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 6;
    private int handCardCount_;
    /**
     * <code>optional int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasHandCardCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hand_card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount() {
      return handCardCount_;
    }

    // repeated int32 hand_cards_data = 7;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> handCardsData_;
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated int32 hand_cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsData(int index) {
      return handCardsData_.get(index);
    }

    private void initFields() {
      cardCount_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      sendCardPlayer_ = 0;
      displayTime_ = 0;
      isCanCuoPai_ = 0;
      handCardCount_ = 0;
      handCardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cardCount_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, sendCardPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, isCanCuoPai_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, handCardCount_);
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeInt32(7, handCardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cardCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sendCardPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isCanCuoPai_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, handCardCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardsDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.SendCardsXykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.SendCardsXykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.SendCardsXykl}
     *
     * <pre>
     *发牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.SendCardsXyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_SendCardsXykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_SendCardsXykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.SendCardsXykl.class, protobuf.clazz.xykl.xyklRsp.SendCardsXykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.SendCardsXykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        sendCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isCanCuoPai_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        handCardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        handCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_SendCardsXykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.SendCardsXykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.SendCardsXykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.SendCardsXykl build() {
        protobuf.clazz.xykl.xyklRsp.SendCardsXykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.SendCardsXykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.SendCardsXykl result = new protobuf.clazz.xykl.xyklRsp.SendCardsXykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardCount_ = cardCount_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sendCardPlayer_ = sendCardPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isCanCuoPai_ = isCanCuoPai_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.handCardCount_ = handCardCount_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.handCardsData_ = handCardsData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.SendCardsXykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.SendCardsXykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.SendCardsXykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.SendCardsXykl.getDefaultInstance()) return this;
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasSendCardPlayer()) {
          setSendCardPlayer(other.getSendCardPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasIsCanCuoPai()) {
          setIsCanCuoPai(other.getIsCanCuoPai());
        }
        if (other.hasHandCardCount()) {
          setHandCardCount(other.getHandCardCount());
        }
        if (!other.handCardsData_.isEmpty()) {
          if (handCardsData_.isEmpty()) {
            handCardsData_ = other.handCardsData_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureHandCardsDataIsMutable();
            handCardsData_.addAll(other.handCardsData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.SendCardsXykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.SendCardsXykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card_count = 1;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000001;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 send_card_player = 3;
      private int sendCardPlayer_ ;
      /**
       * <code>optional int32 send_card_player = 3;</code>
       *
       * <pre>
       *发牌玩家
       * </pre>
       */
      public boolean hasSendCardPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 send_card_player = 3;</code>
       *
       * <pre>
       *发牌玩家
       * </pre>
       */
      public int getSendCardPlayer() {
        return sendCardPlayer_;
      }
      /**
       * <code>optional int32 send_card_player = 3;</code>
       *
       * <pre>
       *发牌玩家
       * </pre>
       */
      public Builder setSendCardPlayer(int value) {
        bitField0_ |= 0x00000004;
        sendCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 send_card_player = 3;</code>
       *
       * <pre>
       *发牌玩家
       * </pre>
       */
      public Builder clearSendCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sendCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_can_cuo_pai = 5;
      private int isCanCuoPai_ ;
      /**
       * <code>optional int32 is_can_cuo_pai = 5;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public boolean hasIsCanCuoPai() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 5;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public int getIsCanCuoPai() {
        return isCanCuoPai_;
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 5;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public Builder setIsCanCuoPai(int value) {
        bitField0_ |= 0x00000010;
        isCanCuoPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_can_cuo_pai = 5;</code>
       *
       * <pre>
       *能否搓牌 1能搓牌，0不能搓牌
       * </pre>
       */
      public Builder clearIsCanCuoPai() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isCanCuoPai_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hand_card_count = 6;
      private int handCardCount_ ;
      /**
       * <code>optional int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasHandCardCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount() {
        return handCardCount_;
      }
      /**
       * <code>optional int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(int value) {
        bitField0_ |= 0x00000020;
        handCardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hand_card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        handCardCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 hand_cards_data = 7;
      private java.util.List<java.lang.Integer> handCardsData_ = java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          handCardsData_ = new java.util.ArrayList<java.lang.Integer>(handCardsData_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardsDataList() {
        return java.util.Collections.unmodifiableList(handCardsData_);
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        return handCardsData_.size();
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsData(int index) {
        return handCardsData_.get(index);
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, int value) {
        ensureHandCardsDataIsMutable();
        handCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(int value) {
        ensureHandCardsDataIsMutable();
        handCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardsDataIsMutable();
        super.addAll(values, handCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        handCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.SendCardsXykl)
    }

    static {
      defaultInstance = new SendCardsXykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.SendCardsXykl)
  }

  public interface EnterRoomConfirmOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string desc = 1;
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // optional int32 display_time = 2;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code xykl.EnterRoomConfirm}
   *
   * <pre>
   *坐下确认
   * </pre>
   */
  public static final class EnterRoomConfirm extends
      com.google.protobuf.GeneratedMessage
      implements EnterRoomConfirmOrBuilder {
    // Use EnterRoomConfirm.newBuilder() to construct.
    private EnterRoomConfirm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EnterRoomConfirm(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EnterRoomConfirm defaultInstance;
    public static EnterRoomConfirm getDefaultInstance() {
      return defaultInstance;
    }

    public EnterRoomConfirm getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EnterRoomConfirm(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              desc_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_EnterRoomConfirm_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_EnterRoomConfirm_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.class, protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.Builder.class);
    }

    public static com.google.protobuf.Parser<EnterRoomConfirm> PARSER =
        new com.google.protobuf.AbstractParser<EnterRoomConfirm>() {
      public EnterRoomConfirm parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterRoomConfirm(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EnterRoomConfirm> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string desc = 1;
    public static final int DESC_FIELD_NUMBER = 1;
    private java.lang.Object desc_;
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string desc = 1;</code>
     *
     * <pre>
     *坐下提示
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 display_time = 2;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 2;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      desc_ = "";
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.EnterRoomConfirm}
     *
     * <pre>
     *坐下确认
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.EnterRoomConfirmOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_EnterRoomConfirm_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_EnterRoomConfirm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.class, protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_EnterRoomConfirm_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm build() {
        protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm buildPartial() {
        protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm result = new protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm other) {
        if (other == protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm.getDefaultInstance()) return this;
        if (other.hasDesc()) {
          bitField0_ |= 0x00000001;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.EnterRoomConfirm) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string desc = 1;
      private java.lang.Object desc_ = "";
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string desc = 1;</code>
       *
       * <pre>
       *坐下提示
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        desc_ = value;
        onChanged();
        return this;
      }

      // optional int32 display_time = 2;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000002;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.EnterRoomConfirm)
    }

    static {
      defaultInstance = new EnterRoomConfirm(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.EnterRoomConfirm)
  }

  public interface Opreate_Request_XyklOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：抢买，2：下注,3:亮牌,4:搓牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：抢买，2：下注,3:亮牌,4:搓牌
     * </pre>
     */
    int getOpreateType();

    // optional int32 is_qiang_mai = 2;
    /**
     * <code>optional int32 is_qiang_mai = 2;</code>
     *
     * <pre>
     *是否抢买,1:抢，-1:弃
     * </pre>
     */
    boolean hasIsQiangMai();
    /**
     * <code>optional int32 is_qiang_mai = 2;</code>
     *
     * <pre>
     *是否抢买,1:抢，-1:弃
     * </pre>
     */
    int getIsQiangMai();

    // optional int32 add_jetton_score = 3;
    /**
     * <code>optional int32 add_jetton_score = 3;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 3;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    int getAddJettonScore();

    // optional int32 is_join = 4;
    /**
     * <code>optional int32 is_join = 4;</code>
     *
     * <pre>
     *是否加入
     * </pre>
     */
    boolean hasIsJoin();
    /**
     * <code>optional int32 is_join = 4;</code>
     *
     * <pre>
     *是否加入
     * </pre>
     */
    int getIsJoin();
  }
  /**
   * Protobuf type {@code xykl.Opreate_Request_Xykl}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Request_Xykl extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Request_XyklOrBuilder {
    // Use Opreate_Request_Xykl.newBuilder() to construct.
    private Opreate_Request_Xykl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Request_Xykl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Request_Xykl defaultInstance;
    public static Opreate_Request_Xykl getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Request_Xykl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Request_Xykl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isQiangMai_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isJoin_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_Opreate_Request_Xykl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_Opreate_Request_Xykl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.class, protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Request_Xykl> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Request_Xykl>() {
      public Opreate_Request_Xykl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Request_Xykl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Request_Xykl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：抢买，2：下注,3:亮牌,4:搓牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：抢买，2：下注,3:亮牌,4:搓牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 is_qiang_mai = 2;
    public static final int IS_QIANG_MAI_FIELD_NUMBER = 2;
    private int isQiangMai_;
    /**
     * <code>optional int32 is_qiang_mai = 2;</code>
     *
     * <pre>
     *是否抢买,1:抢，-1:弃
     * </pre>
     */
    public boolean hasIsQiangMai() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 is_qiang_mai = 2;</code>
     *
     * <pre>
     *是否抢买,1:抢，-1:弃
     * </pre>
     */
    public int getIsQiangMai() {
      return isQiangMai_;
    }

    // optional int32 add_jetton_score = 3;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 3;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 3;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 add_jetton_score = 3;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional int32 is_join = 4;
    public static final int IS_JOIN_FIELD_NUMBER = 4;
    private int isJoin_;
    /**
     * <code>optional int32 is_join = 4;</code>
     *
     * <pre>
     *是否加入
     * </pre>
     */
    public boolean hasIsJoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 is_join = 4;</code>
     *
     * <pre>
     *是否加入
     * </pre>
     */
    public int getIsJoin() {
      return isJoin_;
    }

    private void initFields() {
      opreateType_ = 0;
      isQiangMai_ = 0;
      addJettonScore_ = 0;
      isJoin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, isQiangMai_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, addJettonScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, isJoin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isQiangMai_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, addJettonScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isJoin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xykl.Opreate_Request_Xykl}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.xykl.xyklRsp.Opreate_Request_XyklOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_Opreate_Request_Xykl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_Opreate_Request_Xykl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.class, protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.Builder.class);
      }

      // Construct using protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isQiangMai_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isJoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.xykl.xyklRsp.internal_static_xykl_Opreate_Request_Xykl_descriptor;
      }

      public protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl getDefaultInstanceForType() {
        return protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.getDefaultInstance();
      }

      public protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl build() {
        protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl buildPartial() {
        protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl result = new protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isQiangMai_ = isQiangMai_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isJoin_ = isJoin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl) {
          return mergeFrom((protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl other) {
        if (other == protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasIsQiangMai()) {
          setIsQiangMai(other.getIsQiangMai());
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasIsJoin()) {
          setIsJoin(other.getIsJoin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.xykl.xyklRsp.Opreate_Request_Xykl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：抢买，2：下注,3:亮牌,4:搓牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：抢买，2：下注,3:亮牌,4:搓牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：抢买，2：下注,3:亮牌,4:搓牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：抢买，2：下注,3:亮牌,4:搓牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_qiang_mai = 2;
      private int isQiangMai_ ;
      /**
       * <code>optional int32 is_qiang_mai = 2;</code>
       *
       * <pre>
       *是否抢买,1:抢，-1:弃
       * </pre>
       */
      public boolean hasIsQiangMai() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_qiang_mai = 2;</code>
       *
       * <pre>
       *是否抢买,1:抢，-1:弃
       * </pre>
       */
      public int getIsQiangMai() {
        return isQiangMai_;
      }
      /**
       * <code>optional int32 is_qiang_mai = 2;</code>
       *
       * <pre>
       *是否抢买,1:抢，-1:弃
       * </pre>
       */
      public Builder setIsQiangMai(int value) {
        bitField0_ |= 0x00000002;
        isQiangMai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_qiang_mai = 2;</code>
       *
       * <pre>
       *是否抢买,1:抢，-1:弃
       * </pre>
       */
      public Builder clearIsQiangMai() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isQiangMai_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 3;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 3;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 add_jetton_score = 3;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 3;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000004;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 3;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_join = 4;
      private int isJoin_ ;
      /**
       * <code>optional int32 is_join = 4;</code>
       *
       * <pre>
       *是否加入
       * </pre>
       */
      public boolean hasIsJoin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 is_join = 4;</code>
       *
       * <pre>
       *是否加入
       * </pre>
       */
      public int getIsJoin() {
        return isJoin_;
      }
      /**
       * <code>optional int32 is_join = 4;</code>
       *
       * <pre>
       *是否加入
       * </pre>
       */
      public Builder setIsJoin(int value) {
        bitField0_ |= 0x00000008;
        isJoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_join = 4;</code>
       *
       * <pre>
       *是否加入
       * </pre>
       */
      public Builder clearIsJoin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isJoin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xykl.Opreate_Request_Xykl)
    }

    static {
      defaultInstance = new Opreate_Request_Xykl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xykl.Opreate_Request_Xykl)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_RoomInfoXykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_RoomInfoXykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_RoomPlayerResponseXykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_RoomPlayerResponseXykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_RefreshCardsXykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_RefreshCardsXykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_PukeGameEndXykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_PukeGameEndXykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_TableResponse_Xykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_TableResponse_Xykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_GameStart_Xykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_GameStart_Xykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_CallBankerResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_CallBankerResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_JettonArea_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_JettonArea_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_JettonResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_JettonResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_OpenCardResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_OpenCardResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_SendCardsXykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_SendCardsXykl_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_EnterRoomConfirm_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_EnterRoomConfirm_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xykl_Opreate_Request_Xykl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xykl_Opreate_Request_Xykl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024xykl/xyklProto.proto\022\004xykl\032\024basic/prot" +
      "ocol.proto\032\022basic/common.proto\"\312\002\n\014RoomI" +
      "nfoXykl\022\017\n\007room_id\030\001 \001(\005\022\027\n\017game_type_in" +
      "dex\030\004 \001(\005\022\027\n\017game_rule_index\030\002 \001(\005\022\032\n\022ga" +
      "me_rule_index_ex\030\014 \003(\005\022\025\n\rgame_rule_des\030" +
      "\003 \001(\t\022\022\n\ngame_round\030\005 \001(\005\022\021\n\tcur_round\030\006" +
      " \001(\005\022\023\n\013game_status\030\007 \001(\005\022\030\n\020create_play" +
      "er_id\030\010 \001(\003\022\027\n\017begin_left_card\030\t \001(\005\022\026\n\016" +
      "_banker_player\030\n \001(\005\022\023\n\013create_name\030\013 \001(" +
      "\t\022(\n\tnew_rules\030\r \001(\0132\025.CommonGameRulesPr",
      "oto\"\231\002\n\026RoomPlayerResponseXykl\022\022\n\naccoun" +
      "t_id\030\001 \001(\003\022\021\n\tuser_name\030\002 \001(\t\022\024\n\014head_im" +
      "g_url\030\003 \001(\t\022\022\n\nseat_index\030\004 \001(\005\022\n\n\002ip\030\005 " +
      "\001(\t\022\016\n\006online\030\006 \001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005scor" +
      "e\030\010 \001(\002\022\r\n\005ready\030\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022" +
      "%\n\rlocationInfor\030\013 \001(\0132\016.LocationInfor\022\022" +
      "\n\nis_trustee\030\014 \001(\010\022\r\n\005money\030\r \001(\003\022\014\n\004gol" +
      "d\030\016 \001(\003\"O\n\020RefreshCardsXykl\022\022\n\ncard_coun" +
      "t\030\001 \003(\005\022\'\n\ncards_data\030\002 \003(\0132\023.Int32Array" +
      "Response\"\214\004\n\017PukeGameEndXykl\022%\n\troom_inf",
      "o\030\001 \001(\0132\022.xykl.RoomInfoXykl\022\021\n\tcur_round" +
      "\030\002 \001(\005\022\022\n\ngame_round\030\003 \001(\005\022\022\n\nplayer_num" +
      "\030\004 \001(\005\022\016\n\006reason\030\005 \001(\005\022\021\n\tend_score\030\013 \003(" +
      "\005\022\021\n\tgame_cell\030\014 \003(\005\022\031\n\021user_jetton_scor" +
      "e\030\r \003(\005\022\033\n\023user_is_call_banker\030\016 \003(\005\022\022\n\n" +
      "card_count\030\017 \003(\005\022\'\n\ncards_data\030\020 \003(\0132\023.I" +
      "nt32ArrayResponse\022\032\n\022total_jetton_score\030" +
      "\023 \001(\005\022\024\n\014display_time\030\024 \001(\005\022\025\n\rall_end_s" +
      "core\030\006 \003(\005\022\025\n\rend_score_max\030\007 \003(\005\022\017\n\007win" +
      "_num\030\010 \003(\005\022\020\n\010lose_num\030\t \003(\005\022-\n\007players\030",
      "\n \003(\0132\034.xykl.RoomPlayerResponseXykl\022\022\n\ns" +
      "tart_time\030\021 \001(\003\022\020\n\010end_time\030\022 \001(\003\022\024\n\014di_" +
      "chi_score\030\025 \003(\005\"\325\003\n\022TableResponse_Xykl\022\025" +
      "\n\rbanker_player\030\001 \001(\005\022\026\n\016current_player\030" +
      "\002 \001(\005\022\023\n\013prev_player\030\003 \001(\005\022\032\n\022total_jett" +
      "on_score\030\010 \001(\005\022\031\n\021user_jetton_score\030\t \003(" +
      "\005\022\033\n\023user_win_lose_score\030\021 \003(\005\022\022\n\ncard_c" +
      "ount\030\n \003(\005\022\'\n\ncards_data\030\013 \003(\0132\023.Int32Ar" +
      "rayResponse\022\026\n\016is_call_banekr\030\014 \003(\005\022\024\n\014i" +
      "s_open_card\030\r \003(\005\022\026\n\016is_can_cuo_pai\030\016 \001(",
      "\005\022\022\n\nis_cuo_pai\030\017 \003(\005\022\023\n\013user_status\030\020 \003" +
      "(\005\022\017\n\007trustee\030\004 \003(\010\022\024\n\014display_time\030\005 \001(" +
      "\005\022%\n\troom_info\030\006 \001(\0132\022.xykl.RoomInfoXykl" +
      "\022-\n\007players\030\007 \003(\0132\034.xykl.RoomPlayerRespo" +
      "nseXykl\"\373\001\n\016GameStart_Xykl\022%\n\troom_info\030" +
      "\001 \001(\0132\022.xykl.RoomInfoXykl\022-\n\007players\030\002 \003" +
      "(\0132\034.xykl.RoomPlayerResponseXykl\022\022\n\ncard" +
      "_count\030\003 \003(\005\022\021\n\tgame_cell\030\004 \001(\005\022\'\n\ncards" +
      "_data\030\005 \003(\0132\023.Int32ArrayResponse\022\024\n\014disp" +
      "lay_time\030\006 \001(\005\022\032\n\022jetton_total_score\030\007 \001",
      "(\005\022\021\n\tis_jetton\030\010 \001(\005\"~\n\020CallBankerResul" +
      "t\022\032\n\022opreate_seat_index\030\001 \001(\005\022\026\n\016is_call" +
      "_banekr\030\002 \001(\005\022\031\n\021banker_seat_index\030\003 \001(\005" +
      "\022\033\n\023seat_index_sis_call\030\004 \003(\005\"q\n\nJettonA" +
      "rea\022\030\n\020jetton_score_min\030\001 \001(\005\022\030\n\020jetton_" +
      "score_max\030\002 \001(\005\022\031\n\021jetton_seat_index\030\003 \001" +
      "(\005\022\024\n\014display_time\030\004 \001(\005\"o\n\014JettonResult" +
      "\022\032\n\022opreate_seat_index\030\001 \001(\005\022\024\n\014jetton_s" +
      "core\030\002 \001(\005\022\021\n\tis_all_in\030\003 \001(\005\022\032\n\022total_j" +
      "etton_score\030\004 \001(\005\"\370\001\n\016OpenCardResult\022\022\n\n",
      "card_count\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\032\n\022" +
      "opreate_seat_index\030\003 \001(\005\022\032\n\022total_jetton" +
      "_score\030\004 \001(\005\022\023\n\013win_or_lose\030\005 \001(\005\022\031\n\021ban" +
      "ker_seat_index\030\006 \001(\005\022\026\n\016current_player\030\007" +
      " \001(\005\022\031\n\021user_jetton_score\030\010 \001(\005\022\024\n\014displ" +
      "ay_time\030\t \001(\005\022\r\n\005score\030\n \001(\005\"\261\001\n\rSendCar" +
      "dsXykl\022\022\n\ncard_count\030\001 \001(\005\022\022\n\ncards_data" +
      "\030\002 \003(\005\022\030\n\020send_card_player\030\003 \001(\005\022\024\n\014disp" +
      "lay_time\030\004 \001(\005\022\026\n\016is_can_cuo_pai\030\005 \001(\005\022\027" +
      "\n\017hand_card_count\030\006 \001(\005\022\027\n\017hand_cards_da",
      "ta\030\007 \003(\005\"6\n\020EnterRoomConfirm\022\014\n\004desc\030\001 \001" +
      "(\t\022\024\n\014display_time\030\002 \001(\005\"m\n\024Opreate_Requ" +
      "est_Xykl\022\024\n\014opreate_type\030\001 \001(\005\022\024\n\014is_qia" +
      "ng_mai\030\002 \001(\005\022\030\n\020add_jetton_score\030\003 \001(\005\022\017" +
      "\n\007is_join\030\004 \001(\005B\036\n\023protobuf.clazz.xyklB\007" +
      "xyklRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_xykl_RoomInfoXykl_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_xykl_RoomInfoXykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_RoomInfoXykl_descriptor,
              new java.lang.String[] { "RoomId", "GameTypeIndex", "GameRuleIndex", "GameRuleIndexEx", "GameRuleDes", "GameRound", "CurRound", "GameStatus", "CreatePlayerId", "BeginLeftCard", "BankerPlayer", "CreateName", "NewRules", });
          internal_static_xykl_RoomPlayerResponseXykl_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_xykl_RoomPlayerResponseXykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_RoomPlayerResponseXykl_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_xykl_RefreshCardsXykl_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_xykl_RefreshCardsXykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_RefreshCardsXykl_descriptor,
              new java.lang.String[] { "CardCount", "CardsData", });
          internal_static_xykl_PukeGameEndXykl_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_xykl_PukeGameEndXykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_PukeGameEndXykl_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "PlayerNum", "Reason", "EndScore", "GameCell", "UserJettonScore", "UserIsCallBanker", "CardCount", "CardsData", "TotalJettonScore", "DisplayTime", "AllEndScore", "EndScoreMax", "WinNum", "LoseNum", "Players", "StartTime", "EndTime", "DiChiScore", });
          internal_static_xykl_TableResponse_Xykl_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_xykl_TableResponse_Xykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_TableResponse_Xykl_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "TotalJettonScore", "UserJettonScore", "UserWinLoseScore", "CardCount", "CardsData", "IsCallBanekr", "IsOpenCard", "IsCanCuoPai", "IsCuoPai", "UserStatus", "Trustee", "DisplayTime", "RoomInfo", "Players", });
          internal_static_xykl_GameStart_Xykl_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_xykl_GameStart_Xykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_GameStart_Xykl_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "CardCount", "GameCell", "CardsData", "DisplayTime", "JettonTotalScore", "IsJetton", });
          internal_static_xykl_CallBankerResult_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_xykl_CallBankerResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_CallBankerResult_descriptor,
              new java.lang.String[] { "OpreateSeatIndex", "IsCallBanekr", "BankerSeatIndex", "SeatIndexSisCall", });
          internal_static_xykl_JettonArea_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_xykl_JettonArea_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_JettonArea_descriptor,
              new java.lang.String[] { "JettonScoreMin", "JettonScoreMax", "JettonSeatIndex", "DisplayTime", });
          internal_static_xykl_JettonResult_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_xykl_JettonResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_JettonResult_descriptor,
              new java.lang.String[] { "OpreateSeatIndex", "JettonScore", "IsAllIn", "TotalJettonScore", });
          internal_static_xykl_OpenCardResult_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_xykl_OpenCardResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_OpenCardResult_descriptor,
              new java.lang.String[] { "CardCount", "CardsData", "OpreateSeatIndex", "TotalJettonScore", "WinOrLose", "BankerSeatIndex", "CurrentPlayer", "UserJettonScore", "DisplayTime", "Score", });
          internal_static_xykl_SendCardsXykl_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_xykl_SendCardsXykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_SendCardsXykl_descriptor,
              new java.lang.String[] { "CardCount", "CardsData", "SendCardPlayer", "DisplayTime", "IsCanCuoPai", "HandCardCount", "HandCardsData", });
          internal_static_xykl_EnterRoomConfirm_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_xykl_EnterRoomConfirm_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_EnterRoomConfirm_descriptor,
              new java.lang.String[] { "Desc", "DisplayTime", });
          internal_static_xykl_Opreate_Request_Xykl_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_xykl_Opreate_Request_Xykl_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xykl_Opreate_Request_Xykl_descriptor,
              new java.lang.String[] { "OpreateType", "IsQiangMai", "AddJettonScore", "IsJoin", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
          protobuf.clazz.Common.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
