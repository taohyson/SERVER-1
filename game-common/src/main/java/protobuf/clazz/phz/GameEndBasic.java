// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phz/gameEndBasic.proto

package protobuf.clazz.phz;

public final class GameEndBasic {
  private GameEndBasic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Game_End_BasicOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 score_player_1 = 1;
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    java.util.List<java.lang.Integer> getScorePlayer1List();
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    int getScorePlayer1Count();
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    int getScorePlayer1(int index);

    // repeated int32 score_player_2 = 2;
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    java.util.List<java.lang.Integer> getScorePlayer2List();
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    int getScorePlayer2Count();
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    int getScorePlayer2(int index);

    // repeated int32 score_player_3 = 3;
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    java.util.List<java.lang.Integer> getScorePlayer3List();
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    int getScorePlayer3Count();
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    int getScorePlayer3(int index);

    // repeated int32 score_player_4 = 4;
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    java.util.List<java.lang.Integer> getScorePlayer4List();
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    int getScorePlayer4Count();
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    int getScorePlayer4(int index);
  }
  /**
   * Protobuf type {@code phz.Game_End_Basic}
   */
  public static final class Game_End_Basic extends
      com.google.protobuf.GeneratedMessage
      implements Game_End_BasicOrBuilder {
    // Use Game_End_Basic.newBuilder() to construct.
    private Game_End_Basic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Game_End_Basic(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Game_End_Basic defaultInstance;
    public static Game_End_Basic getDefaultInstance() {
      return defaultInstance;
    }

    public Game_End_Basic getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Game_End_Basic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                scorePlayer1_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              scorePlayer1_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                scorePlayer1_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                scorePlayer1_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                scorePlayer2_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              scorePlayer2_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                scorePlayer2_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                scorePlayer2_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                scorePlayer3_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              scorePlayer3_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                scorePlayer3_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                scorePlayer3_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                scorePlayer4_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              scorePlayer4_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                scorePlayer4_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                scorePlayer4_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          scorePlayer1_ = java.util.Collections.unmodifiableList(scorePlayer1_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          scorePlayer2_ = java.util.Collections.unmodifiableList(scorePlayer2_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          scorePlayer3_ = java.util.Collections.unmodifiableList(scorePlayer3_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          scorePlayer4_ = java.util.Collections.unmodifiableList(scorePlayer4_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.phz.GameEndBasic.internal_static_phz_Game_End_Basic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.phz.GameEndBasic.internal_static_phz_Game_End_Basic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.phz.GameEndBasic.Game_End_Basic.class, protobuf.clazz.phz.GameEndBasic.Game_End_Basic.Builder.class);
    }

    public static com.google.protobuf.Parser<Game_End_Basic> PARSER =
        new com.google.protobuf.AbstractParser<Game_End_Basic>() {
      public Game_End_Basic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Game_End_Basic(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Game_End_Basic> getParserForType() {
      return PARSER;
    }

    // repeated int32 score_player_1 = 1;
    public static final int SCORE_PLAYER_1_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> scorePlayer1_;
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScorePlayer1List() {
      return scorePlayer1_;
    }
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    public int getScorePlayer1Count() {
      return scorePlayer1_.size();
    }
    /**
     * <code>repeated int32 score_player_1 = 1;</code>
     *
     * <pre>
     * 玩家1的所有小局的分
     * </pre>
     */
    public int getScorePlayer1(int index) {
      return scorePlayer1_.get(index);
    }

    // repeated int32 score_player_2 = 2;
    public static final int SCORE_PLAYER_2_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> scorePlayer2_;
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScorePlayer2List() {
      return scorePlayer2_;
    }
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    public int getScorePlayer2Count() {
      return scorePlayer2_.size();
    }
    /**
     * <code>repeated int32 score_player_2 = 2;</code>
     *
     * <pre>
     * 玩家2的所有小局的分
     * </pre>
     */
    public int getScorePlayer2(int index) {
      return scorePlayer2_.get(index);
    }

    // repeated int32 score_player_3 = 3;
    public static final int SCORE_PLAYER_3_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> scorePlayer3_;
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScorePlayer3List() {
      return scorePlayer3_;
    }
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    public int getScorePlayer3Count() {
      return scorePlayer3_.size();
    }
    /**
     * <code>repeated int32 score_player_3 = 3;</code>
     *
     * <pre>
     * 玩家3的所有小局的分
     * </pre>
     */
    public int getScorePlayer3(int index) {
      return scorePlayer3_.get(index);
    }

    // repeated int32 score_player_4 = 4;
    public static final int SCORE_PLAYER_4_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> scorePlayer4_;
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScorePlayer4List() {
      return scorePlayer4_;
    }
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    public int getScorePlayer4Count() {
      return scorePlayer4_.size();
    }
    /**
     * <code>repeated int32 score_player_4 = 4;</code>
     *
     * <pre>
     * 玩家4的所有小局的分
     * </pre>
     */
    public int getScorePlayer4(int index) {
      return scorePlayer4_.get(index);
    }

    private void initFields() {
      scorePlayer1_ = java.util.Collections.emptyList();
      scorePlayer2_ = java.util.Collections.emptyList();
      scorePlayer3_ = java.util.Collections.emptyList();
      scorePlayer4_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < scorePlayer1_.size(); i++) {
        output.writeInt32(1, scorePlayer1_.get(i));
      }
      for (int i = 0; i < scorePlayer2_.size(); i++) {
        output.writeInt32(2, scorePlayer2_.get(i));
      }
      for (int i = 0; i < scorePlayer3_.size(); i++) {
        output.writeInt32(3, scorePlayer3_.get(i));
      }
      for (int i = 0; i < scorePlayer4_.size(); i++) {
        output.writeInt32(4, scorePlayer4_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < scorePlayer1_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scorePlayer1_.get(i));
        }
        size += dataSize;
        size += 1 * getScorePlayer1List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scorePlayer2_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scorePlayer2_.get(i));
        }
        size += dataSize;
        size += 1 * getScorePlayer2List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scorePlayer3_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scorePlayer3_.get(i));
        }
        size += dataSize;
        size += 1 * getScorePlayer3List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scorePlayer4_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scorePlayer4_.get(i));
        }
        size += dataSize;
        size += 1 * getScorePlayer4List().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.phz.GameEndBasic.Game_End_Basic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.phz.GameEndBasic.Game_End_Basic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code phz.Game_End_Basic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.phz.GameEndBasic.Game_End_BasicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.phz.GameEndBasic.internal_static_phz_Game_End_Basic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.phz.GameEndBasic.internal_static_phz_Game_End_Basic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.phz.GameEndBasic.Game_End_Basic.class, protobuf.clazz.phz.GameEndBasic.Game_End_Basic.Builder.class);
      }

      // Construct using protobuf.clazz.phz.GameEndBasic.Game_End_Basic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        scorePlayer1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        scorePlayer2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        scorePlayer3_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        scorePlayer4_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.phz.GameEndBasic.internal_static_phz_Game_End_Basic_descriptor;
      }

      public protobuf.clazz.phz.GameEndBasic.Game_End_Basic getDefaultInstanceForType() {
        return protobuf.clazz.phz.GameEndBasic.Game_End_Basic.getDefaultInstance();
      }

      public protobuf.clazz.phz.GameEndBasic.Game_End_Basic build() {
        protobuf.clazz.phz.GameEndBasic.Game_End_Basic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.phz.GameEndBasic.Game_End_Basic buildPartial() {
        protobuf.clazz.phz.GameEndBasic.Game_End_Basic result = new protobuf.clazz.phz.GameEndBasic.Game_End_Basic(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          scorePlayer1_ = java.util.Collections.unmodifiableList(scorePlayer1_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.scorePlayer1_ = scorePlayer1_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          scorePlayer2_ = java.util.Collections.unmodifiableList(scorePlayer2_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.scorePlayer2_ = scorePlayer2_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          scorePlayer3_ = java.util.Collections.unmodifiableList(scorePlayer3_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.scorePlayer3_ = scorePlayer3_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          scorePlayer4_ = java.util.Collections.unmodifiableList(scorePlayer4_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.scorePlayer4_ = scorePlayer4_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.phz.GameEndBasic.Game_End_Basic) {
          return mergeFrom((protobuf.clazz.phz.GameEndBasic.Game_End_Basic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.phz.GameEndBasic.Game_End_Basic other) {
        if (other == protobuf.clazz.phz.GameEndBasic.Game_End_Basic.getDefaultInstance()) return this;
        if (!other.scorePlayer1_.isEmpty()) {
          if (scorePlayer1_.isEmpty()) {
            scorePlayer1_ = other.scorePlayer1_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureScorePlayer1IsMutable();
            scorePlayer1_.addAll(other.scorePlayer1_);
          }
          onChanged();
        }
        if (!other.scorePlayer2_.isEmpty()) {
          if (scorePlayer2_.isEmpty()) {
            scorePlayer2_ = other.scorePlayer2_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureScorePlayer2IsMutable();
            scorePlayer2_.addAll(other.scorePlayer2_);
          }
          onChanged();
        }
        if (!other.scorePlayer3_.isEmpty()) {
          if (scorePlayer3_.isEmpty()) {
            scorePlayer3_ = other.scorePlayer3_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureScorePlayer3IsMutable();
            scorePlayer3_.addAll(other.scorePlayer3_);
          }
          onChanged();
        }
        if (!other.scorePlayer4_.isEmpty()) {
          if (scorePlayer4_.isEmpty()) {
            scorePlayer4_ = other.scorePlayer4_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureScorePlayer4IsMutable();
            scorePlayer4_.addAll(other.scorePlayer4_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.phz.GameEndBasic.Game_End_Basic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.phz.GameEndBasic.Game_End_Basic) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 score_player_1 = 1;
      private java.util.List<java.lang.Integer> scorePlayer1_ = java.util.Collections.emptyList();
      private void ensureScorePlayer1IsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          scorePlayer1_ = new java.util.ArrayList<java.lang.Integer>(scorePlayer1_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScorePlayer1List() {
        return java.util.Collections.unmodifiableList(scorePlayer1_);
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public int getScorePlayer1Count() {
        return scorePlayer1_.size();
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public int getScorePlayer1(int index) {
        return scorePlayer1_.get(index);
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public Builder setScorePlayer1(
          int index, int value) {
        ensureScorePlayer1IsMutable();
        scorePlayer1_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public Builder addScorePlayer1(int value) {
        ensureScorePlayer1IsMutable();
        scorePlayer1_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public Builder addAllScorePlayer1(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScorePlayer1IsMutable();
        super.addAll(values, scorePlayer1_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_1 = 1;</code>
       *
       * <pre>
       * 玩家1的所有小局的分
       * </pre>
       */
      public Builder clearScorePlayer1() {
        scorePlayer1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 score_player_2 = 2;
      private java.util.List<java.lang.Integer> scorePlayer2_ = java.util.Collections.emptyList();
      private void ensureScorePlayer2IsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          scorePlayer2_ = new java.util.ArrayList<java.lang.Integer>(scorePlayer2_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScorePlayer2List() {
        return java.util.Collections.unmodifiableList(scorePlayer2_);
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public int getScorePlayer2Count() {
        return scorePlayer2_.size();
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public int getScorePlayer2(int index) {
        return scorePlayer2_.get(index);
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public Builder setScorePlayer2(
          int index, int value) {
        ensureScorePlayer2IsMutable();
        scorePlayer2_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public Builder addScorePlayer2(int value) {
        ensureScorePlayer2IsMutable();
        scorePlayer2_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public Builder addAllScorePlayer2(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScorePlayer2IsMutable();
        super.addAll(values, scorePlayer2_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_2 = 2;</code>
       *
       * <pre>
       * 玩家2的所有小局的分
       * </pre>
       */
      public Builder clearScorePlayer2() {
        scorePlayer2_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 score_player_3 = 3;
      private java.util.List<java.lang.Integer> scorePlayer3_ = java.util.Collections.emptyList();
      private void ensureScorePlayer3IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          scorePlayer3_ = new java.util.ArrayList<java.lang.Integer>(scorePlayer3_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScorePlayer3List() {
        return java.util.Collections.unmodifiableList(scorePlayer3_);
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public int getScorePlayer3Count() {
        return scorePlayer3_.size();
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public int getScorePlayer3(int index) {
        return scorePlayer3_.get(index);
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public Builder setScorePlayer3(
          int index, int value) {
        ensureScorePlayer3IsMutable();
        scorePlayer3_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public Builder addScorePlayer3(int value) {
        ensureScorePlayer3IsMutable();
        scorePlayer3_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public Builder addAllScorePlayer3(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScorePlayer3IsMutable();
        super.addAll(values, scorePlayer3_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_3 = 3;</code>
       *
       * <pre>
       * 玩家3的所有小局的分
       * </pre>
       */
      public Builder clearScorePlayer3() {
        scorePlayer3_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 score_player_4 = 4;
      private java.util.List<java.lang.Integer> scorePlayer4_ = java.util.Collections.emptyList();
      private void ensureScorePlayer4IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          scorePlayer4_ = new java.util.ArrayList<java.lang.Integer>(scorePlayer4_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScorePlayer4List() {
        return java.util.Collections.unmodifiableList(scorePlayer4_);
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public int getScorePlayer4Count() {
        return scorePlayer4_.size();
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public int getScorePlayer4(int index) {
        return scorePlayer4_.get(index);
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public Builder setScorePlayer4(
          int index, int value) {
        ensureScorePlayer4IsMutable();
        scorePlayer4_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public Builder addScorePlayer4(int value) {
        ensureScorePlayer4IsMutable();
        scorePlayer4_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public Builder addAllScorePlayer4(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScorePlayer4IsMutable();
        super.addAll(values, scorePlayer4_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_player_4 = 4;</code>
       *
       * <pre>
       * 玩家4的所有小局的分
       * </pre>
       */
      public Builder clearScorePlayer4() {
        scorePlayer4_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:phz.Game_End_Basic)
    }

    static {
      defaultInstance = new Game_End_Basic(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:phz.Game_End_Basic)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_phz_Game_End_Basic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_phz_Game_End_Basic_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026phz/gameEndBasic.proto\022\003phz\032\024basic/pro" +
      "tocol.proto\"p\n\016Game_End_Basic\022\026\n\016score_p" +
      "layer_1\030\001 \003(\005\022\026\n\016score_player_2\030\002 \003(\005\022\026\n" +
      "\016score_player_3\030\003 \003(\005\022\026\n\016score_player_4\030" +
      "\004 \003(\005B\"\n\022protobuf.clazz.phzB\014GameEndBasi" +
      "c"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_phz_Game_End_Basic_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_phz_Game_End_Basic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_phz_Game_End_Basic_descriptor,
              new java.lang.String[] { "ScorePlayer1", "ScorePlayer2", "ScorePlayer3", "ScorePlayer4", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
