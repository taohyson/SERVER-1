// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zjh/zjhProto.proto

package protobuf.clazz.zjh;

public final class ZjhRsp {
  private ZjhRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoZjhOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_id = 1;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional int32 game_type_index = 4;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameTypeIndex();

    // optional int32 game_rule_index = 2;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameRuleIndex();
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameRuleIndex();

    // repeated int32 game_rule_index_ex = 12;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameRuleIndexExList();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexExCount();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexEx(int index);

    // optional string game_rule_des = 3;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    boolean hasGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    java.lang.String getGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameRuleDesBytes();

    // optional int32 game_round = 5;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    int getGameRound();

    // optional int32 cur_round = 6;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    int getCurRound();

    // optional int32 game_status = 7;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    int getGameStatus();

    // optional int64 create_player_id = 8;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    boolean hasCreatePlayerId();
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    long getCreatePlayerId();

    // optional int32 begin_left_card = 9;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    boolean hasBeginLeftCard();
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    int getBeginLeftCard();

    // optional int32 _banker_player = 10;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional string create_name = 11;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    boolean hasCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    java.lang.String getCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateNameBytes();

    // optional .CommonGameRulesProto new_rules = 13;
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    boolean hasNewRules();
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    protobuf.clazz.Common.CommonGameRulesProto getNewRules();
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder();
  }
  /**
   * Protobuf type {@code zjh.RoomInfoZjh}
   *
   * <pre>
   *房间信息
   * </pre>
   */
  public static final class RoomInfoZjh extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoZjhOrBuilder {
    // Use RoomInfoZjh.newBuilder() to construct.
    private RoomInfoZjh(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoZjh(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoZjh defaultInstance;
    public static RoomInfoZjh getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoZjh getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoZjh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              gameRuleIndex_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              gameRuleDes_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              curRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gameStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createPlayerId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              beginLeftCard_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              BankerPlayer_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              createName_ = input.readBytes();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameRuleIndexEx_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              protobuf.clazz.Common.CommonGameRulesProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = newRules_.toBuilder();
              }
              newRules_ = input.readMessage(protobuf.clazz.Common.CommonGameRulesProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newRules_);
                newRules_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomInfoZjh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomInfoZjh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.class, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoZjh> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoZjh>() {
      public RoomInfoZjh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoZjh(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoZjh> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_id = 1;
    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 game_type_index = 4;
    public static final int GAME_TYPE_INDEX_FIELD_NUMBER = 4;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 game_rule_index = 2;
    public static final int GAME_RULE_INDEX_FIELD_NUMBER = 2;
    private int gameRuleIndex_;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameRuleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameRuleIndex() {
      return gameRuleIndex_;
    }

    // repeated int32 game_rule_index_ex = 12;
    public static final int GAME_RULE_INDEX_EX_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> gameRuleIndexEx_;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameRuleIndexExList() {
      return gameRuleIndexEx_;
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexExCount() {
      return gameRuleIndexEx_.size();
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexEx(int index) {
      return gameRuleIndexEx_.get(index);
    }

    // optional string game_rule_des = 3;
    public static final int GAME_RULE_DES_FIELD_NUMBER = 3;
    private java.lang.Object gameRuleDes_;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public boolean hasGameRuleDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public java.lang.String getGameRuleDes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameRuleDes_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameRuleDesBytes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameRuleDes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round = 5;
    public static final int GAME_ROUND_FIELD_NUMBER = 5;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 cur_round = 6;
    public static final int CUR_ROUND_FIELD_NUMBER = 6;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_status = 7;
    public static final int GAME_STATUS_FIELD_NUMBER = 7;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int64 create_player_id = 8;
    public static final int CREATE_PLAYER_ID_FIELD_NUMBER = 8;
    private long createPlayerId_;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public boolean hasCreatePlayerId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public long getCreatePlayerId() {
      return createPlayerId_;
    }

    // optional int32 begin_left_card = 9;
    public static final int BEGIN_LEFT_CARD_FIELD_NUMBER = 9;
    private int beginLeftCard_;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public boolean hasBeginLeftCard() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public int getBeginLeftCard() {
      return beginLeftCard_;
    }

    // optional int32 _banker_player = 10;
    public static final int _BANKER_PLAYER_FIELD_NUMBER = 10;
    private int BankerPlayer_;
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 _banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return BankerPlayer_;
    }

    // optional string create_name = 11;
    public static final int CREATE_NAME_FIELD_NUMBER = 11;
    private java.lang.Object createName_;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public boolean hasCreateName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public java.lang.String getCreateName() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateNameBytes() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .CommonGameRulesProto new_rules = 13;
    public static final int NEW_RULES_FIELD_NUMBER = 13;
    private protobuf.clazz.Common.CommonGameRulesProto newRules_;
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public boolean hasNewRules() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public protobuf.clazz.Common.CommonGameRulesProto getNewRules() {
      return newRules_;
    }
    /**
     * <code>optional .CommonGameRulesProto new_rules = 13;</code>
     *
     * <pre>
     * 新rules
     * </pre>
     */
    public protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder() {
      return newRules_;
    }

    private void initFields() {
      roomId_ = 0;
      gameTypeIndex_ = 0;
      gameRuleIndex_ = 0;
      gameRuleIndexEx_ = java.util.Collections.emptyList();
      gameRuleDes_ = "";
      gameRound_ = 0;
      curRound_ = 0;
      gameStatus_ = 0;
      createPlayerId_ = 0L;
      beginLeftCard_ = 0;
      BankerPlayer_ = 0;
      createName_ = "";
      newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCreateNameBytes());
      }
      for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
        output.writeInt32(12, gameRuleIndexEx_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(13, newRules_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, BankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCreateNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameRuleIndexEx_.get(i));
        }
        size += dataSize;
        size += 1 * getGameRuleIndexExList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, newRules_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.RoomInfoZjh}
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomInfoZjh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomInfoZjh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.class, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewRulesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRuleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRuleDes_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        createPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        beginLeftCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        BankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createName_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        if (newRulesBuilder_ == null) {
          newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
        } else {
          newRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomInfoZjh_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh build() {
        protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh result = new protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRuleIndex_ = gameRuleIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameRuleIndexEx_ = gameRuleIndexEx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameRuleDes_ = gameRuleDes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createPlayerId_ = createPlayerId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.beginLeftCard_ = beginLeftCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.BankerPlayer_ = BankerPlayer_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.createName_ = createName_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (newRulesBuilder_ == null) {
          result.newRules_ = newRules_;
        } else {
          result.newRules_ = newRulesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasGameRuleIndex()) {
          setGameRuleIndex(other.getGameRuleIndex());
        }
        if (!other.gameRuleIndexEx_.isEmpty()) {
          if (gameRuleIndexEx_.isEmpty()) {
            gameRuleIndexEx_ = other.gameRuleIndexEx_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameRuleIndexExIsMutable();
            gameRuleIndexEx_.addAll(other.gameRuleIndexEx_);
          }
          onChanged();
        }
        if (other.hasGameRuleDes()) {
          bitField0_ |= 0x00000010;
          gameRuleDes_ = other.gameRuleDes_;
          onChanged();
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasCreatePlayerId()) {
          setCreatePlayerId(other.getCreatePlayerId());
        }
        if (other.hasBeginLeftCard()) {
          setBeginLeftCard(other.getBeginLeftCard());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCreateName()) {
          bitField0_ |= 0x00000800;
          createName_ = other.createName_;
          onChanged();
        }
        if (other.hasNewRules()) {
          mergeNewRules(other.getNewRules());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_id = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_type_index = 4;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_rule_index = 2;
      private int gameRuleIndex_ ;
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameRuleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameRuleIndex() {
        return gameRuleIndex_;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameRuleIndex(int value) {
        bitField0_ |= 0x00000004;
        gameRuleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameRuleIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 game_rule_index_ex = 12;
      private java.util.List<java.lang.Integer> gameRuleIndexEx_ = java.util.Collections.emptyList();
      private void ensureGameRuleIndexExIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>(gameRuleIndexEx_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameRuleIndexExList() {
        return java.util.Collections.unmodifiableList(gameRuleIndexEx_);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexExCount() {
        return gameRuleIndexEx_.size();
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexEx(int index) {
        return gameRuleIndexEx_.get(index);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder setGameRuleIndexEx(
          int index, int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addGameRuleIndexEx(int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addAllGameRuleIndexEx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameRuleIndexExIsMutable();
        super.addAll(values, gameRuleIndexEx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder clearGameRuleIndexEx() {
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional string game_rule_des = 3;
      private java.lang.Object gameRuleDes_ = "";
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public boolean hasGameRuleDes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public java.lang.String getGameRuleDes() {
        java.lang.Object ref = gameRuleDes_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameRuleDes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameRuleDesBytes() {
        java.lang.Object ref = gameRuleDes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameRuleDes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder clearGameRuleDes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRuleDes_ = getDefaultInstance().getGameRuleDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round = 5;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000020;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_round = 6;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000040;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 7;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000080;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int64 create_player_id = 8;
      private long createPlayerId_ ;
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public boolean hasCreatePlayerId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public long getCreatePlayerId() {
        return createPlayerId_;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder setCreatePlayerId(long value) {
        bitField0_ |= 0x00000100;
        createPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder clearCreatePlayerId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        createPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 begin_left_card = 9;
      private int beginLeftCard_ ;
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public boolean hasBeginLeftCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public int getBeginLeftCard() {
        return beginLeftCard_;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder setBeginLeftCard(int value) {
        bitField0_ |= 0x00000200;
        beginLeftCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder clearBeginLeftCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        beginLeftCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 _banker_player = 10;
      private int BankerPlayer_ ;
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return BankerPlayer_;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000400;
        BankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 _banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        BankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional string create_name = 11;
      private java.lang.Object createName_ = "";
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public boolean hasCreateName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public java.lang.String getCreateName() {
        java.lang.Object ref = createName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateNameBytes() {
        java.lang.Object ref = createName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder clearCreateName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createName_ = getDefaultInstance().getCreateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }

      // optional .CommonGameRulesProto new_rules = 13;
      private protobuf.clazz.Common.CommonGameRulesProto newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder> newRulesBuilder_;
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public boolean hasNewRules() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProto getNewRules() {
        if (newRulesBuilder_ == null) {
          return newRules_;
        } else {
          return newRulesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder setNewRules(protobuf.clazz.Common.CommonGameRulesProto value) {
        if (newRulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newRules_ = value;
          onChanged();
        } else {
          newRulesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder setNewRules(
          protobuf.clazz.Common.CommonGameRulesProto.Builder builderForValue) {
        if (newRulesBuilder_ == null) {
          newRules_ = builderForValue.build();
          onChanged();
        } else {
          newRulesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder mergeNewRules(protobuf.clazz.Common.CommonGameRulesProto value) {
        if (newRulesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              newRules_ != protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance()) {
            newRules_ =
              protobuf.clazz.Common.CommonGameRulesProto.newBuilder(newRules_).mergeFrom(value).buildPartial();
          } else {
            newRules_ = value;
          }
          onChanged();
        } else {
          newRulesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public Builder clearNewRules() {
        if (newRulesBuilder_ == null) {
          newRules_ = protobuf.clazz.Common.CommonGameRulesProto.getDefaultInstance();
          onChanged();
        } else {
          newRulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProto.Builder getNewRulesBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getNewRulesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      public protobuf.clazz.Common.CommonGameRulesProtoOrBuilder getNewRulesOrBuilder() {
        if (newRulesBuilder_ != null) {
          return newRulesBuilder_.getMessageOrBuilder();
        } else {
          return newRules_;
        }
      }
      /**
       * <code>optional .CommonGameRulesProto new_rules = 13;</code>
       *
       * <pre>
       * 新rules
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder> 
          getNewRulesFieldBuilder() {
        if (newRulesBuilder_ == null) {
          newRulesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Common.CommonGameRulesProto, protobuf.clazz.Common.CommonGameRulesProto.Builder, protobuf.clazz.Common.CommonGameRulesProtoOrBuilder>(
                  newRules_,
                  getParentForChildren(),
                  isClean());
          newRules_ = null;
        }
        return newRulesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:zjh.RoomInfoZjh)
    }

    static {
      defaultInstance = new RoomInfoZjh(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.RoomInfoZjh)
  }

  public interface RoomPlayerResponseZjhOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code zjh.RoomPlayerResponseZjh}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseZjh extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseZjhOrBuilder {
    // Use RoomPlayerResponseZjh.newBuilder() to construct.
    private RoomPlayerResponseZjh(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseZjh(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseZjh defaultInstance;
    public static RoomPlayerResponseZjh getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseZjh getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseZjh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomPlayerResponseZjh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomPlayerResponseZjh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.class, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseZjh> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseZjh>() {
      public RoomPlayerResponseZjh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseZjh(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseZjh> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.RoomPlayerResponseZjh}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomPlayerResponseZjh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomPlayerResponseZjh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.class, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_RoomPlayerResponseZjh_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh build() {
        protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh result = new protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.RoomPlayerResponseZjh)
    }

    static {
      defaultInstance = new RoomPlayerResponseZjh(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.RoomPlayerResponseZjh)
  }

  public interface PukeGameEndZjhOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .zjh.RoomInfoZjh room_info = 1;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .zjh.RoomPlayerResponseZjh players = 9;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> 
        getPlayersList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index);
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index);

    // repeated bool is_lose = 16;
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsLoseList();
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    int getIsLoseCount();
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    boolean getIsLose(int index);

    // repeated int32 all_end_score = 10;
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated int32 end_score_max = 11;
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreMaxList();
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMaxCount();
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMax(int index);

    // repeated int32 win_num = 12;
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinNumList();
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNumCount();
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNum(int index);

    // repeated int32 lose_num = 13;
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoseNumList();
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNumCount();
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNum(int index);

    // repeated int32 winner = 14;
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinnerList();
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    int getWinnerCount();
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    int getWinner(int index);

    // repeated int32 card_type = 15;
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardType(int index);
  }
  /**
   * Protobuf type {@code zjh.PukeGameEndZjh}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndZjh extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndZjhOrBuilder {
    // Use PukeGameEndZjh.newBuilder() to construct.
    private PukeGameEndZjh(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndZjh(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndZjh defaultInstance;
    public static PukeGameEndZjh getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndZjh getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndZjh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              endScoreMax_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScoreMax_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              winNum_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              loseNum_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                loseNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                winner_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              winner_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                winner_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winner_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                isLose_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              isLose_.add(input.readBool());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                isLose_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                isLose_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          winner_ = java.util.Collections.unmodifiableList(winner_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          isLose_ = java.util.Collections.unmodifiableList(isLose_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_PukeGameEndZjh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_PukeGameEndZjh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.class, protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndZjh> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndZjh>() {
      public PukeGameEndZjh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndZjh(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndZjh> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .zjh.RoomInfoZjh room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .zjh.RoomPlayerResponseZjh players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated bool is_lose = 16;
    public static final int IS_LOSE_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Boolean> isLose_;
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsLoseList() {
      return isLose_;
    }
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    public int getIsLoseCount() {
      return isLose_.size();
    }
    /**
     * <code>repeated bool is_lose = 16;</code>
     *
     * <pre>
     *玩家是否比牌输
     * </pre>
     */
    public boolean getIsLose(int index) {
      return isLose_.get(index);
    }

    // repeated int32 all_end_score = 10;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated int32 end_score_max = 11;
    public static final int END_SCORE_MAX_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> endScoreMax_;
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreMaxList() {
      return endScoreMax_;
    }
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMaxCount() {
      return endScoreMax_.size();
    }
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMax(int index) {
      return endScoreMax_.get(index);
    }

    // repeated int32 win_num = 12;
    public static final int WIN_NUM_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> winNum_;
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinNumList() {
      return winNum_;
    }
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNumCount() {
      return winNum_.size();
    }
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNum(int index) {
      return winNum_.get(index);
    }

    // repeated int32 lose_num = 13;
    public static final int LOSE_NUM_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> loseNum_;
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoseNumList() {
      return loseNum_;
    }
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNumCount() {
      return loseNum_.size();
    }
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNum(int index) {
      return loseNum_.get(index);
    }

    // repeated int32 winner = 14;
    public static final int WINNER_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> winner_;
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinnerList() {
      return winner_;
    }
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public int getWinnerCount() {
      return winner_.size();
    }
    /**
     * <code>repeated int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public int getWinner(int index) {
      return winner_.get(index);
    }

    // repeated int32 card_type = 15;
    public static final int CARD_TYPE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      isLose_ = java.util.Collections.emptyList();
      allEndScore_ = java.util.Collections.emptyList();
      endScoreMax_ = java.util.Collections.emptyList();
      winNum_ = java.util.Collections.emptyList();
      loseNum_ = java.util.Collections.emptyList();
      winner_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(10, allEndScore_.get(i));
      }
      for (int i = 0; i < endScoreMax_.size(); i++) {
        output.writeInt32(11, endScoreMax_.get(i));
      }
      for (int i = 0; i < winNum_.size(); i++) {
        output.writeInt32(12, winNum_.get(i));
      }
      for (int i = 0; i < loseNum_.size(); i++) {
        output.writeInt32(13, loseNum_.get(i));
      }
      for (int i = 0; i < winner_.size(); i++) {
        output.writeInt32(14, winner_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(15, cardType_.get(i));
      }
      for (int i = 0; i < isLose_.size(); i++) {
        output.writeBool(16, isLose_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScoreMax_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScoreMax_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreMaxList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winNum_.get(i));
        }
        size += dataSize;
        size += 1 * getWinNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loseNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loseNum_.get(i));
        }
        size += dataSize;
        size += 1 * getLoseNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winner_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winner_.get(i));
        }
        size += dataSize;
        size += 1 * getWinnerList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsLoseList().size();
        size += dataSize;
        size += 2 * getIsLoseList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.PukeGameEndZjh}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjhOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_PukeGameEndZjh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_PukeGameEndZjh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.class, protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        isLose_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        winner_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_PukeGameEndZjh_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh build() {
        protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh result = new protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          isLose_ = java.util.Collections.unmodifiableList(isLose_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.isLose_ = isLose_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.allEndScore_ = allEndScore_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.endScoreMax_ = endScoreMax_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.winNum_ = winNum_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.loseNum_ = loseNum_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          winner_ = java.util.Collections.unmodifiableList(winner_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.winner_ = winner_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.cardType_ = cardType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.isLose_.isEmpty()) {
          if (isLose_.isEmpty()) {
            isLose_ = other.isLose_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureIsLoseIsMutable();
            isLose_.addAll(other.isLose_);
          }
          onChanged();
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (!other.endScoreMax_.isEmpty()) {
          if (endScoreMax_.isEmpty()) {
            endScoreMax_ = other.endScoreMax_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureEndScoreMaxIsMutable();
            endScoreMax_.addAll(other.endScoreMax_);
          }
          onChanged();
        }
        if (!other.winNum_.isEmpty()) {
          if (winNum_.isEmpty()) {
            winNum_ = other.winNum_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureWinNumIsMutable();
            winNum_.addAll(other.winNum_);
          }
          onChanged();
        }
        if (!other.loseNum_.isEmpty()) {
          if (loseNum_.isEmpty()) {
            loseNum_ = other.loseNum_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureLoseNumIsMutable();
            loseNum_.addAll(other.loseNum_);
          }
          onChanged();
        }
        if (!other.winner_.isEmpty()) {
          if (winner_.isEmpty()) {
            winner_ = other.winner_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureWinnerIsMutable();
            winner_.addAll(other.winner_);
          }
          onChanged();
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.PukeGameEndZjh) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .zjh.RoomInfoZjh room_info = 1;
      private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .zjh.RoomPlayerResponseZjh players = 9;
      private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> playersBuilder_;

      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 9;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated bool is_lose = 16;
      private java.util.List<java.lang.Boolean> isLose_ = java.util.Collections.emptyList();
      private void ensureIsLoseIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          isLose_ = new java.util.ArrayList<java.lang.Boolean>(isLose_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsLoseList() {
        return java.util.Collections.unmodifiableList(isLose_);
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public int getIsLoseCount() {
        return isLose_.size();
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public boolean getIsLose(int index) {
        return isLose_.get(index);
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public Builder setIsLose(
          int index, boolean value) {
        ensureIsLoseIsMutable();
        isLose_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public Builder addIsLose(boolean value) {
        ensureIsLoseIsMutable();
        isLose_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public Builder addAllIsLose(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsLoseIsMutable();
        super.addAll(values, isLose_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_lose = 16;</code>
       *
       * <pre>
       *玩家是否比牌输
       * </pre>
       */
      public Builder clearIsLose() {
        isLose_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 10;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 end_score_max = 11;
      private java.util.List<java.lang.Integer> endScoreMax_ = java.util.Collections.emptyList();
      private void ensureEndScoreMaxIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          endScoreMax_ = new java.util.ArrayList<java.lang.Integer>(endScoreMax_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreMaxList() {
        return java.util.Collections.unmodifiableList(endScoreMax_);
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMaxCount() {
        return endScoreMax_.size();
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMax(int index) {
        return endScoreMax_.get(index);
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder setEndScoreMax(
          int index, int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addEndScoreMax(int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addAllEndScoreMax(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreMaxIsMutable();
        super.addAll(values, endScoreMax_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder clearEndScoreMax() {
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 win_num = 12;
      private java.util.List<java.lang.Integer> winNum_ = java.util.Collections.emptyList();
      private void ensureWinNumIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          winNum_ = new java.util.ArrayList<java.lang.Integer>(winNum_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinNumList() {
        return java.util.Collections.unmodifiableList(winNum_);
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNumCount() {
        return winNum_.size();
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNum(int index) {
        return winNum_.get(index);
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder setWinNum(
          int index, int value) {
        ensureWinNumIsMutable();
        winNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addWinNum(int value) {
        ensureWinNumIsMutable();
        winNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addAllWinNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinNumIsMutable();
        super.addAll(values, winNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder clearWinNum() {
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 lose_num = 13;
      private java.util.List<java.lang.Integer> loseNum_ = java.util.Collections.emptyList();
      private void ensureLoseNumIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          loseNum_ = new java.util.ArrayList<java.lang.Integer>(loseNum_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoseNumList() {
        return java.util.Collections.unmodifiableList(loseNum_);
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNumCount() {
        return loseNum_.size();
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNum(int index) {
        return loseNum_.get(index);
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder setLoseNum(
          int index, int value) {
        ensureLoseNumIsMutable();
        loseNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addLoseNum(int value) {
        ensureLoseNumIsMutable();
        loseNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addAllLoseNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoseNumIsMutable();
        super.addAll(values, loseNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder clearLoseNum() {
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 winner = 14;
      private java.util.List<java.lang.Integer> winner_ = java.util.Collections.emptyList();
      private void ensureWinnerIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          winner_ = new java.util.ArrayList<java.lang.Integer>(winner_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinnerList() {
        return java.util.Collections.unmodifiableList(winner_);
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public int getWinnerCount() {
        return winner_.size();
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public int getWinner(int index) {
        return winner_.get(index);
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder setWinner(
          int index, int value) {
        ensureWinnerIsMutable();
        winner_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder addWinner(int value) {
        ensureWinnerIsMutable();
        winner_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder addAllWinner(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinnerIsMutable();
        super.addAll(values, winner_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder clearWinner() {
        winner_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 card_type = 15;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.PukeGameEndZjh)
    }

    static {
      defaultInstance = new PukeGameEndZjh(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.PukeGameEndZjh)
  }

  public interface TableResponseZJHOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // optional .zjh.RoomInfoZjh room_info = 4;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder();

    // repeated .zjh.RoomPlayerResponseZjh players = 5;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> 
        getPlayersList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index);
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 card_count = 6;
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 7;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated bool is_give_up = 8;
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsGiveUpList();
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    int getIsGiveUpCount();
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    boolean getIsGiveUp(int index);

    // repeated bool is_look_cards = 9;
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsLookCardsList();
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    int getIsLookCardsCount();
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    boolean getIsLookCards(int index);

    // repeated bool is_isLose = 10;
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsIsLoseList();
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    int getIsIsLoseCount();
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    boolean getIsIsLose(int index);

    // repeated int32 jetton_score = 11;
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 display_time = 12;
    /**
     * <code>optional int32 display_time = 12;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 12;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 jetton_total_score = 13;
    /**
     * <code>optional int32 jetton_total_score = 13;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 13;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    int getJettonTotalScore();

    // optional int32 cards_type = 14;
    /**
     * <code>optional int32 cards_type = 14;</code>
     *
     * <pre>
     *我看牌的牌型
     * </pre>
     */
    boolean hasCardsType();
    /**
     * <code>optional int32 cards_type = 14;</code>
     *
     * <pre>
     *我看牌的牌型
     * </pre>
     */
    int getCardsType();

    // optional int32 dan_zhu_score = 15;
    /**
     * <code>optional int32 dan_zhu_score = 15;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    boolean hasDanZhuScore();
    /**
     * <code>optional int32 dan_zhu_score = 15;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    int getDanZhuScore();
  }
  /**
   * Protobuf type {@code zjh.TableResponseZJH}
   */
  public static final class TableResponseZJH extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseZJHOrBuilder {
    // Use TableResponseZJH.newBuilder() to construct.
    private TableResponseZJH(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseZJH(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseZJH defaultInstance;
    public static TableResponseZJH getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseZJH getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseZJH(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 34: {
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000040;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              isGiveUp_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                isGiveUp_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                isLookCards_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000100;
              }
              isLookCards_.add(input.readBool());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                isLookCards_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                isLookCards_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                isIsLose_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              isIsLose_.add(input.readBool());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                isIsLose_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                isIsLose_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000010;
              displayTime_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000020;
              jettonTotalScore_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000040;
              cardsType_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000080;
              danZhuScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          isGiveUp_ = java.util.Collections.unmodifiableList(isGiveUp_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          isLookCards_ = java.util.Collections.unmodifiableList(isLookCards_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          isIsLose_ = java.util.Collections.unmodifiableList(isIsLose_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_TableResponseZJH_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_TableResponseZJH_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.class, protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseZJH> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseZJH>() {
      public TableResponseZJH parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseZJH(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseZJH> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // optional .zjh.RoomInfoZjh room_info = 4;
    public static final int ROOM_INFO_FIELD_NUMBER = 4;
    private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .zjh.RoomPlayerResponseZjh players = 5;
    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 card_count = 6;
    public static final int CARD_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 6;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 7;
    public static final int CARDS_DATA_FIELD_NUMBER = 7;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated bool is_give_up = 8;
    public static final int IS_GIVE_UP_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> isGiveUp_;
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsGiveUpList() {
      return isGiveUp_;
    }
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public int getIsGiveUpCount() {
      return isGiveUp_.size();
    }
    /**
     * <code>repeated bool is_give_up = 8;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public boolean getIsGiveUp(int index) {
      return isGiveUp_.get(index);
    }

    // repeated bool is_look_cards = 9;
    public static final int IS_LOOK_CARDS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Boolean> isLookCards_;
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsLookCardsList() {
      return isLookCards_;
    }
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    public int getIsLookCardsCount() {
      return isLookCards_.size();
    }
    /**
     * <code>repeated bool is_look_cards = 9;</code>
     *
     * <pre>
     *看牌
     * </pre>
     */
    public boolean getIsLookCards(int index) {
      return isLookCards_.get(index);
    }

    // repeated bool is_isLose = 10;
    public static final int IS_ISLOSE_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Boolean> isIsLose_;
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsIsLoseList() {
      return isIsLose_;
    }
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    public int getIsIsLoseCount() {
      return isIsLose_.size();
    }
    /**
     * <code>repeated bool is_isLose = 10;</code>
     *
     * <pre>
     *输了
     * </pre>
     */
    public boolean getIsIsLose(int index) {
      return isIsLose_.get(index);
    }

    // repeated int32 jetton_score = 11;
    public static final int JETTON_SCORE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 11;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 display_time = 12;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 12;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 12;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 display_time = 12;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 jetton_total_score = 13;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 13;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 13;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 jetton_total_score = 13;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    // optional int32 cards_type = 14;
    public static final int CARDS_TYPE_FIELD_NUMBER = 14;
    private int cardsType_;
    /**
     * <code>optional int32 cards_type = 14;</code>
     *
     * <pre>
     *我看牌的牌型
     * </pre>
     */
    public boolean hasCardsType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 cards_type = 14;</code>
     *
     * <pre>
     *我看牌的牌型
     * </pre>
     */
    public int getCardsType() {
      return cardsType_;
    }

    // optional int32 dan_zhu_score = 15;
    public static final int DAN_ZHU_SCORE_FIELD_NUMBER = 15;
    private int danZhuScore_;
    /**
     * <code>optional int32 dan_zhu_score = 15;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public boolean hasDanZhuScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 dan_zhu_score = 15;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public int getDanZhuScore() {
      return danZhuScore_;
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      isGiveUp_ = java.util.Collections.emptyList();
      isLookCards_ = java.util.Collections.emptyList();
      isIsLose_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      jettonTotalScore_ = 0;
      cardsType_ = 0;
      danZhuScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(6, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(7, cardsData_.get(i));
      }
      for (int i = 0; i < isGiveUp_.size(); i++) {
        output.writeBool(8, isGiveUp_.get(i));
      }
      for (int i = 0; i < isLookCards_.size(); i++) {
        output.writeBool(9, isLookCards_.get(i));
      }
      for (int i = 0; i < isIsLose_.size(); i++) {
        output.writeBool(10, isIsLose_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(11, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(12, displayTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(13, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(14, cardsType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(15, danZhuScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsGiveUpList().size();
        size += dataSize;
        size += 1 * getIsGiveUpList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsLookCardsList().size();
        size += dataSize;
        size += 1 * getIsLookCardsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsIsLoseList().size();
        size += dataSize;
        size += 1 * getIsIsLoseList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, displayTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, cardsType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, danZhuScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.TableResponseZJH prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.TableResponseZJH}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.TableResponseZJHOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_TableResponseZJH_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_TableResponseZJH_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.class, protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          cardsDataBuilder_.clear();
        }
        isGiveUp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        isLookCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        isIsLose_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        cardsType_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        danZhuScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_TableResponseZJH_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.TableResponseZJH getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.TableResponseZJH build() {
        protobuf.clazz.zjh.ZjhRsp.TableResponseZJH result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.TableResponseZJH buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.TableResponseZJH result = new protobuf.clazz.zjh.ZjhRsp.TableResponseZJH(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          isGiveUp_ = java.util.Collections.unmodifiableList(isGiveUp_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.isGiveUp_ = isGiveUp_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          isLookCards_ = java.util.Collections.unmodifiableList(isLookCards_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.isLookCards_ = isLookCards_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          isIsLose_ = java.util.Collections.unmodifiableList(isIsLose_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.isIsLose_ = isIsLose_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000010;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cardsType_ = cardsType_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.danZhuScore_ = danZhuScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.TableResponseZJH) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.TableResponseZJH)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.TableResponseZJH other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.TableResponseZJH.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000040);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.isGiveUp_.isEmpty()) {
          if (isGiveUp_.isEmpty()) {
            isGiveUp_ = other.isGiveUp_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureIsGiveUpIsMutable();
            isGiveUp_.addAll(other.isGiveUp_);
          }
          onChanged();
        }
        if (!other.isLookCards_.isEmpty()) {
          if (isLookCards_.isEmpty()) {
            isLookCards_ = other.isLookCards_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureIsLookCardsIsMutable();
            isLookCards_.addAll(other.isLookCards_);
          }
          onChanged();
        }
        if (!other.isIsLose_.isEmpty()) {
          if (isIsLose_.isEmpty()) {
            isIsLose_ = other.isIsLose_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureIsIsLoseIsMutable();
            isIsLose_.addAll(other.isIsLose_);
          }
          onChanged();
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        if (other.hasCardsType()) {
          setCardsType(other.getCardsType());
        }
        if (other.hasDanZhuScore()) {
          setDanZhuScore(other.getDanZhuScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.TableResponseZJH parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.TableResponseZJH) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .zjh.RoomInfoZjh room_info = 4;
      private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              roomInfo_ != protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .zjh.RoomPlayerResponseZjh players = 5;
      private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> playersBuilder_;

      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder addPlayers(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 5;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 card_count = 6;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 6;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 7;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 7;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated bool is_give_up = 8;
      private java.util.List<java.lang.Boolean> isGiveUp_ = java.util.Collections.emptyList();
      private void ensureIsGiveUpIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          isGiveUp_ = new java.util.ArrayList<java.lang.Boolean>(isGiveUp_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsGiveUpList() {
        return java.util.Collections.unmodifiableList(isGiveUp_);
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public int getIsGiveUpCount() {
        return isGiveUp_.size();
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public boolean getIsGiveUp(int index) {
        return isGiveUp_.get(index);
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder setIsGiveUp(
          int index, boolean value) {
        ensureIsGiveUpIsMutable();
        isGiveUp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder addIsGiveUp(boolean value) {
        ensureIsGiveUpIsMutable();
        isGiveUp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder addAllIsGiveUp(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsGiveUpIsMutable();
        super.addAll(values, isGiveUp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_give_up = 8;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder clearIsGiveUp() {
        isGiveUp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated bool is_look_cards = 9;
      private java.util.List<java.lang.Boolean> isLookCards_ = java.util.Collections.emptyList();
      private void ensureIsLookCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          isLookCards_ = new java.util.ArrayList<java.lang.Boolean>(isLookCards_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsLookCardsList() {
        return java.util.Collections.unmodifiableList(isLookCards_);
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public int getIsLookCardsCount() {
        return isLookCards_.size();
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public boolean getIsLookCards(int index) {
        return isLookCards_.get(index);
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public Builder setIsLookCards(
          int index, boolean value) {
        ensureIsLookCardsIsMutable();
        isLookCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public Builder addIsLookCards(boolean value) {
        ensureIsLookCardsIsMutable();
        isLookCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public Builder addAllIsLookCards(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsLookCardsIsMutable();
        super.addAll(values, isLookCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_look_cards = 9;</code>
       *
       * <pre>
       *看牌
       * </pre>
       */
      public Builder clearIsLookCards() {
        isLookCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated bool is_isLose = 10;
      private java.util.List<java.lang.Boolean> isIsLose_ = java.util.Collections.emptyList();
      private void ensureIsIsLoseIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          isIsLose_ = new java.util.ArrayList<java.lang.Boolean>(isIsLose_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsIsLoseList() {
        return java.util.Collections.unmodifiableList(isIsLose_);
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public int getIsIsLoseCount() {
        return isIsLose_.size();
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public boolean getIsIsLose(int index) {
        return isIsLose_.get(index);
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public Builder setIsIsLose(
          int index, boolean value) {
        ensureIsIsLoseIsMutable();
        isIsLose_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public Builder addIsIsLose(boolean value) {
        ensureIsIsLoseIsMutable();
        isIsLose_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public Builder addAllIsIsLose(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsIsLoseIsMutable();
        super.addAll(values, isIsLose_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_isLose = 10;</code>
       *
       * <pre>
       *输了
       * </pre>
       */
      public Builder clearIsIsLose() {
        isIsLose_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 11;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 11;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional int32 display_time = 12;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 12;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 display_time = 12;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 12;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000800;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 12;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 13;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 13;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 jetton_total_score = 13;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 13;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00001000;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 13;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00001000);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cards_type = 14;
      private int cardsType_ ;
      /**
       * <code>optional int32 cards_type = 14;</code>
       *
       * <pre>
       *我看牌的牌型
       * </pre>
       */
      public boolean hasCardsType() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 cards_type = 14;</code>
       *
       * <pre>
       *我看牌的牌型
       * </pre>
       */
      public int getCardsType() {
        return cardsType_;
      }
      /**
       * <code>optional int32 cards_type = 14;</code>
       *
       * <pre>
       *我看牌的牌型
       * </pre>
       */
      public Builder setCardsType(int value) {
        bitField0_ |= 0x00002000;
        cardsType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cards_type = 14;</code>
       *
       * <pre>
       *我看牌的牌型
       * </pre>
       */
      public Builder clearCardsType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        cardsType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dan_zhu_score = 15;
      private int danZhuScore_ ;
      /**
       * <code>optional int32 dan_zhu_score = 15;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public boolean hasDanZhuScore() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 dan_zhu_score = 15;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public int getDanZhuScore() {
        return danZhuScore_;
      }
      /**
       * <code>optional int32 dan_zhu_score = 15;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder setDanZhuScore(int value) {
        bitField0_ |= 0x00004000;
        danZhuScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dan_zhu_score = 15;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder clearDanZhuScore() {
        bitField0_ = (bitField0_ & ~0x00004000);
        danZhuScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.TableResponseZJH)
    }

    static {
      defaultInstance = new TableResponseZJH(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.TableResponseZJH)
  }

  public interface GameStartZJHOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .zjh.RoomInfoZjh room_info = 1;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo();
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder();

    // repeated .zjh.RoomPlayerResponseZjh players = 2;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> 
        getPlayersList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index);
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 dan_zhu_score = 3;
    /**
     * <code>optional int32 dan_zhu_score = 3;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    boolean hasDanZhuScore();
    /**
     * <code>optional int32 dan_zhu_score = 3;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    int getDanZhuScore();
  }
  /**
   * Protobuf type {@code zjh.GameStartZJH}
   */
  public static final class GameStartZJH extends
      com.google.protobuf.GeneratedMessage
      implements GameStartZJHOrBuilder {
    // Use GameStartZJH.newBuilder() to construct.
    private GameStartZJH(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartZJH(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartZJH defaultInstance;
    public static GameStartZJH getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartZJH getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartZJH(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              danZhuScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_GameStartZJH_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_GameStartZJH_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.GameStartZJH.class, protobuf.clazz.zjh.ZjhRsp.GameStartZJH.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartZJH> PARSER =
        new com.google.protobuf.AbstractParser<GameStartZJH>() {
      public GameStartZJH parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartZJH(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartZJH> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .zjh.RoomInfoZjh room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_;
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .zjh.RoomPlayerResponseZjh players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_;
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
     */
    public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 dan_zhu_score = 3;
    public static final int DAN_ZHU_SCORE_FIELD_NUMBER = 3;
    private int danZhuScore_;
    /**
     * <code>optional int32 dan_zhu_score = 3;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public boolean hasDanZhuScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 dan_zhu_score = 3;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public int getDanZhuScore() {
      return danZhuScore_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      danZhuScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, danZhuScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, danZhuScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.GameStartZJH parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.GameStartZJH prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.GameStartZJH}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.GameStartZJHOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_GameStartZJH_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_GameStartZJH_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.GameStartZJH.class, protobuf.clazz.zjh.ZjhRsp.GameStartZJH.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.GameStartZJH.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        danZhuScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_GameStartZJH_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.GameStartZJH getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.GameStartZJH.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.GameStartZJH build() {
        protobuf.clazz.zjh.ZjhRsp.GameStartZJH result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.GameStartZJH buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.GameStartZJH result = new protobuf.clazz.zjh.ZjhRsp.GameStartZJH(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.danZhuScore_ = danZhuScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.GameStartZJH) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.GameStartZJH)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.GameStartZJH other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.GameStartZJH.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasDanZhuScore()) {
          setDanZhuScore(other.getDanZhuScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.GameStartZJH parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.GameStartZJH) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .zjh.RoomInfoZjh room_info = 1;
      private protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .zjh.RoomInfoZjh room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomInfoZjhOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .zjh.RoomPlayerResponseZjh players = 2;
      private java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> playersBuilder_;

      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.getDefaultInstance());
      }
      /**
       * <code>repeated .zjh.RoomPlayerResponseZjh players = 2;</code>
       */
      public java.util.List<protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjh.Builder, protobuf.clazz.zjh.ZjhRsp.RoomPlayerResponseZjhOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 dan_zhu_score = 3;
      private int danZhuScore_ ;
      /**
       * <code>optional int32 dan_zhu_score = 3;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public boolean hasDanZhuScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 dan_zhu_score = 3;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public int getDanZhuScore() {
        return danZhuScore_;
      }
      /**
       * <code>optional int32 dan_zhu_score = 3;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder setDanZhuScore(int value) {
        bitField0_ |= 0x00000004;
        danZhuScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dan_zhu_score = 3;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder clearDanZhuScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        danZhuScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.GameStartZJH)
    }

    static {
      defaultInstance = new GameStartZJH(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.GameStartZJH)
  }

  public interface Send_cardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse cards_data = 1;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_count = 2;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 current_player = 4;
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家hui
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家hui
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 jetton_total_score = 5;
    /**
     * <code>optional int32 jetton_total_score = 5;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 5;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    int getJettonTotalScore();

    // optional int32 cell_score = 6;
    /**
     * <code>optional int32 cell_score = 6;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 6;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    int getCellScore();

    // optional int32 jetton_score_max = 7;
    /**
     * <code>optional int32 jetton_score_max = 7;</code>
     *
     * <pre>
     *最大可下注
     * </pre>
     */
    boolean hasJettonScoreMax();
    /**
     * <code>optional int32 jetton_score_max = 7;</code>
     *
     * <pre>
     *最大可下注
     * </pre>
     */
    int getJettonScoreMax();

    // repeated int32 jetton_score = 8;
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);
  }
  /**
   * Protobuf type {@code zjh.Send_card}
   */
  public static final class Send_card extends
      com.google.protobuf.GeneratedMessage
      implements Send_cardOrBuilder {
    // Use Send_card.newBuilder() to construct.
    private Send_card(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Send_card(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Send_card defaultInstance;
    public static Send_card getDefaultInstance() {
      return defaultInstance;
    }

    public Send_card getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Send_card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              jettonTotalScore_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              cellScore_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              jettonScoreMax_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Send_card_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Send_card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Send_card.class, protobuf.clazz.zjh.ZjhRsp.Send_card.Builder.class);
    }

    public static com.google.protobuf.Parser<Send_card> PARSER =
        new com.google.protobuf.AbstractParser<Send_card>() {
      public Send_card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Send_card(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Send_card> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse cards_data = 1;
    public static final int CARDS_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_count = 2;
    public static final int CARD_COUNT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 2;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 current_player = 4;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 4;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家hui
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 4;</code>
     *
     * <pre>
     *当前玩家hui
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 jetton_total_score = 5;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 5;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 5;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jetton_total_score = 5;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    // optional int32 cell_score = 6;
    public static final int CELL_SCORE_FIELD_NUMBER = 6;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 6;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cell_score = 6;</code>
     *
     * <pre>
     *底注
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // optional int32 jetton_score_max = 7;
    public static final int JETTON_SCORE_MAX_FIELD_NUMBER = 7;
    private int jettonScoreMax_;
    /**
     * <code>optional int32 jetton_score_max = 7;</code>
     *
     * <pre>
     *最大可下注
     * </pre>
     */
    public boolean hasJettonScoreMax() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jetton_score_max = 7;</code>
     *
     * <pre>
     *最大可下注
     * </pre>
     */
    public int getJettonScoreMax() {
      return jettonScoreMax_;
    }

    // repeated int32 jetton_score = 8;
    public static final int JETTON_SCORE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    private void initFields() {
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      currentPlayer_ = 0;
      jettonTotalScore_ = 0;
      cellScore_ = 0;
      jettonScoreMax_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(1, cardsData_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(2, cardCount_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, displayTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, cellScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, jettonScoreMax_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(8, jettonScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cellScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jettonScoreMax_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Send_card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Send_card prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Send_card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Send_cardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Send_card_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Send_card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Send_card.class, protobuf.clazz.zjh.ZjhRsp.Send_card.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Send_card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardsDataBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonScoreMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Send_card_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Send_card getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Send_card.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Send_card build() {
        protobuf.clazz.zjh.ZjhRsp.Send_card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Send_card buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Send_card result = new protobuf.clazz.zjh.ZjhRsp.Send_card(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardCount_ = cardCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cellScore_ = cellScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.jettonScoreMax_ = jettonScoreMax_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Send_card) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Send_card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Send_card other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Send_card.getDefaultInstance()) return this;
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (other.hasJettonScoreMax()) {
          setJettonScoreMax(other.getJettonScoreMax());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Send_card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Send_card) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse cards_data = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 1;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_count = 2;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 2;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 4;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家hui
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家hui
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家hui
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000008;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 4;</code>
       *
       * <pre>
       *当前玩家hui
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 5;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 5;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 jetton_total_score = 5;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 5;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00000010;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 5;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cell_score = 6;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 6;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 cell_score = 6;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 6;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000020;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 6;</code>
       *
       * <pre>
       *底注
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score_max = 7;
      private int jettonScoreMax_ ;
      /**
       * <code>optional int32 jetton_score_max = 7;</code>
       *
       * <pre>
       *最大可下注
       * </pre>
       */
      public boolean hasJettonScoreMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 jetton_score_max = 7;</code>
       *
       * <pre>
       *最大可下注
       * </pre>
       */
      public int getJettonScoreMax() {
        return jettonScoreMax_;
      }
      /**
       * <code>optional int32 jetton_score_max = 7;</code>
       *
       * <pre>
       *最大可下注
       * </pre>
       */
      public Builder setJettonScoreMax(int value) {
        bitField0_ |= 0x00000040;
        jettonScoreMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score_max = 7;</code>
       *
       * <pre>
       *最大可下注
       * </pre>
       */
      public Builder clearJettonScoreMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonScoreMax_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 8;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Send_card)
    }

    static {
      defaultInstance = new Send_card(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Send_card)
  }

  public interface Jetton_RoundOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_round = 1;
    /**
     * <code>optional int32 jetton_round = 1;</code>
     *
     * <pre>
     *总轮数
     * </pre>
     */
    boolean hasJettonRound();
    /**
     * <code>optional int32 jetton_round = 1;</code>
     *
     * <pre>
     *总轮数
     * </pre>
     */
    int getJettonRound();

    // optional int32 _cur_jetton_round = 2;
    /**
     * <code>optional int32 _cur_jetton_round = 2;</code>
     *
     * <pre>
     *当前轮数
     * </pre>
     */
    boolean hasCurJettonRound();
    /**
     * <code>optional int32 _cur_jetton_round = 2;</code>
     *
     * <pre>
     *当前轮数
     * </pre>
     */
    int getCurJettonRound();

    // optional int32 is_round_finish = 3;
    /**
     * <code>optional int32 is_round_finish = 3;</code>
     *
     * <pre>
     *回合结束，0：表示未到最大回合，1：表示到达最大回合
     * </pre>
     */
    boolean hasIsRoundFinish();
    /**
     * <code>optional int32 is_round_finish = 3;</code>
     *
     * <pre>
     *回合结束，0：表示未到最大回合，1：表示到达最大回合
     * </pre>
     */
    int getIsRoundFinish();
  }
  /**
   * Protobuf type {@code zjh.Jetton_Round}
   *
   * <pre>
   *下注轮数
   * </pre>
   */
  public static final class Jetton_Round extends
      com.google.protobuf.GeneratedMessage
      implements Jetton_RoundOrBuilder {
    // Use Jetton_Round.newBuilder() to construct.
    private Jetton_Round(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Jetton_Round(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Jetton_Round defaultInstance;
    public static Jetton_Round getDefaultInstance() {
      return defaultInstance;
    }

    public Jetton_Round getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Jetton_Round(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonRound_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              CurJettonRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isRoundFinish_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Jetton_Round_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Jetton_Round_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Jetton_Round.class, protobuf.clazz.zjh.ZjhRsp.Jetton_Round.Builder.class);
    }

    public static com.google.protobuf.Parser<Jetton_Round> PARSER =
        new com.google.protobuf.AbstractParser<Jetton_Round>() {
      public Jetton_Round parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Jetton_Round(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Jetton_Round> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_round = 1;
    public static final int JETTON_ROUND_FIELD_NUMBER = 1;
    private int jettonRound_;
    /**
     * <code>optional int32 jetton_round = 1;</code>
     *
     * <pre>
     *总轮数
     * </pre>
     */
    public boolean hasJettonRound() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_round = 1;</code>
     *
     * <pre>
     *总轮数
     * </pre>
     */
    public int getJettonRound() {
      return jettonRound_;
    }

    // optional int32 _cur_jetton_round = 2;
    public static final int _CUR_JETTON_ROUND_FIELD_NUMBER = 2;
    private int CurJettonRound_;
    /**
     * <code>optional int32 _cur_jetton_round = 2;</code>
     *
     * <pre>
     *当前轮数
     * </pre>
     */
    public boolean hasCurJettonRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 _cur_jetton_round = 2;</code>
     *
     * <pre>
     *当前轮数
     * </pre>
     */
    public int getCurJettonRound() {
      return CurJettonRound_;
    }

    // optional int32 is_round_finish = 3;
    public static final int IS_ROUND_FINISH_FIELD_NUMBER = 3;
    private int isRoundFinish_;
    /**
     * <code>optional int32 is_round_finish = 3;</code>
     *
     * <pre>
     *回合结束，0：表示未到最大回合，1：表示到达最大回合
     * </pre>
     */
    public boolean hasIsRoundFinish() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 is_round_finish = 3;</code>
     *
     * <pre>
     *回合结束，0：表示未到最大回合，1：表示到达最大回合
     * </pre>
     */
    public int getIsRoundFinish() {
      return isRoundFinish_;
    }

    private void initFields() {
      jettonRound_ = 0;
      CurJettonRound_ = 0;
      isRoundFinish_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonRound_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, CurJettonRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, isRoundFinish_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonRound_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, CurJettonRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, isRoundFinish_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Jetton_Round parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Jetton_Round prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Jetton_Round}
     *
     * <pre>
     *下注轮数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Jetton_RoundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Jetton_Round_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Jetton_Round_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Jetton_Round.class, protobuf.clazz.zjh.ZjhRsp.Jetton_Round.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Jetton_Round.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        CurJettonRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isRoundFinish_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Jetton_Round_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Jetton_Round getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Jetton_Round.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Jetton_Round build() {
        protobuf.clazz.zjh.ZjhRsp.Jetton_Round result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Jetton_Round buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Jetton_Round result = new protobuf.clazz.zjh.ZjhRsp.Jetton_Round(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonRound_ = jettonRound_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.CurJettonRound_ = CurJettonRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isRoundFinish_ = isRoundFinish_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Jetton_Round) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Jetton_Round)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Jetton_Round other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Jetton_Round.getDefaultInstance()) return this;
        if (other.hasJettonRound()) {
          setJettonRound(other.getJettonRound());
        }
        if (other.hasCurJettonRound()) {
          setCurJettonRound(other.getCurJettonRound());
        }
        if (other.hasIsRoundFinish()) {
          setIsRoundFinish(other.getIsRoundFinish());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Jetton_Round parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Jetton_Round) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_round = 1;
      private int jettonRound_ ;
      /**
       * <code>optional int32 jetton_round = 1;</code>
       *
       * <pre>
       *总轮数
       * </pre>
       */
      public boolean hasJettonRound() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_round = 1;</code>
       *
       * <pre>
       *总轮数
       * </pre>
       */
      public int getJettonRound() {
        return jettonRound_;
      }
      /**
       * <code>optional int32 jetton_round = 1;</code>
       *
       * <pre>
       *总轮数
       * </pre>
       */
      public Builder setJettonRound(int value) {
        bitField0_ |= 0x00000001;
        jettonRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_round = 1;</code>
       *
       * <pre>
       *总轮数
       * </pre>
       */
      public Builder clearJettonRound() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 _cur_jetton_round = 2;
      private int CurJettonRound_ ;
      /**
       * <code>optional int32 _cur_jetton_round = 2;</code>
       *
       * <pre>
       *当前轮数
       * </pre>
       */
      public boolean hasCurJettonRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 _cur_jetton_round = 2;</code>
       *
       * <pre>
       *当前轮数
       * </pre>
       */
      public int getCurJettonRound() {
        return CurJettonRound_;
      }
      /**
       * <code>optional int32 _cur_jetton_round = 2;</code>
       *
       * <pre>
       *当前轮数
       * </pre>
       */
      public Builder setCurJettonRound(int value) {
        bitField0_ |= 0x00000002;
        CurJettonRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 _cur_jetton_round = 2;</code>
       *
       * <pre>
       *当前轮数
       * </pre>
       */
      public Builder clearCurJettonRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        CurJettonRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_round_finish = 3;
      private int isRoundFinish_ ;
      /**
       * <code>optional int32 is_round_finish = 3;</code>
       *
       * <pre>
       *回合结束，0：表示未到最大回合，1：表示到达最大回合
       * </pre>
       */
      public boolean hasIsRoundFinish() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 is_round_finish = 3;</code>
       *
       * <pre>
       *回合结束，0：表示未到最大回合，1：表示到达最大回合
       * </pre>
       */
      public int getIsRoundFinish() {
        return isRoundFinish_;
      }
      /**
       * <code>optional int32 is_round_finish = 3;</code>
       *
       * <pre>
       *回合结束，0：表示未到最大回合，1：表示到达最大回合
       * </pre>
       */
      public Builder setIsRoundFinish(int value) {
        bitField0_ |= 0x00000004;
        isRoundFinish_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_round_finish = 3;</code>
       *
       * <pre>
       *回合结束，0：表示未到最大回合，1：表示到达最大回合
       * </pre>
       */
      public Builder clearIsRoundFinish() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isRoundFinish_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Jetton_Round)
    }

    static {
      defaultInstance = new Jetton_Round(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Jetton_Round)
  }

  public interface User_Can_OpreateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 look_card = 1;
    /**
     * <code>optional int32 look_card = 1;</code>
     *
     * <pre>
     *是否可看牌：0：不可看，1：可看
     * </pre>
     */
    boolean hasLookCard();
    /**
     * <code>optional int32 look_card = 1;</code>
     *
     * <pre>
     *是否可看牌：0：不可看，1：可看
     * </pre>
     */
    int getLookCard();

    // optional int32 give_up = 2;
    /**
     * <code>optional int32 give_up = 2;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    boolean hasGiveUp();
    /**
     * <code>optional int32 give_up = 2;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    int getGiveUp();

    // optional int32 gen_zhu = 3;
    /**
     * <code>optional int32 gen_zhu = 3;</code>
     *
     * <pre>
     *跟注
     * </pre>
     */
    boolean hasGenZhu();
    /**
     * <code>optional int32 gen_zhu = 3;</code>
     *
     * <pre>
     *跟注
     * </pre>
     */
    int getGenZhu();

    // optional int32 add_score = 4;
    /**
     * <code>optional int32 add_score = 4;</code>
     *
     * <pre>
     *加注
     * </pre>
     */
    boolean hasAddScore();
    /**
     * <code>optional int32 add_score = 4;</code>
     *
     * <pre>
     *加注
     * </pre>
     */
    int getAddScore();

    // optional int32 compare_card = 5;
    /**
     * <code>optional int32 compare_card = 5;</code>
     *
     * <pre>
     *比牌
     * </pre>
     */
    boolean hasCompareCard();
    /**
     * <code>optional int32 compare_card = 5;</code>
     *
     * <pre>
     *比牌
     * </pre>
     */
    int getCompareCard();

    // optional int32 liang_pai = 6;
    /**
     * <code>optional int32 liang_pai = 6;</code>
     *
     * <pre>
     *亮牌
     * </pre>
     */
    boolean hasLiangPai();
    /**
     * <code>optional int32 liang_pai = 6;</code>
     *
     * <pre>
     *亮牌
     * </pre>
     */
    int getLiangPai();

    // repeated int32 add_jetton_score = 7;
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    java.util.List<java.lang.Integer> getAddJettonScoreList();
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    int getAddJettonScoreCount();
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    int getAddJettonScore(int index);

    // optional int32 can_compare_round = 8;
    /**
     * <code>optional int32 can_compare_round = 8;</code>
     *
     * <pre>
     *剩余比牌轮数
     * </pre>
     */
    boolean hasCanCompareRound();
    /**
     * <code>optional int32 can_compare_round = 8;</code>
     *
     * <pre>
     *剩余比牌轮数
     * </pre>
     */
    int getCanCompareRound();

    // optional int32 xia_zhu = 9;
    /**
     * <code>optional int32 xia_zhu = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    boolean hasXiaZhu();
    /**
     * <code>optional int32 xia_zhu = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    int getXiaZhu();

    // optional int32 quan_ya = 10;
    /**
     * <code>optional int32 quan_ya = 10;</code>
     *
     * <pre>
     *全压
     * </pre>
     */
    boolean hasQuanYa();
    /**
     * <code>optional int32 quan_ya = 10;</code>
     *
     * <pre>
     *全压
     * </pre>
     */
    int getQuanYa();

    // optional int32 gen_dao_di = 11;
    /**
     * <code>optional int32 gen_dao_di = 11;</code>
     *
     * <pre>
     *跟到底
     * </pre>
     */
    boolean hasGenDaoDi();
    /**
     * <code>optional int32 gen_dao_di = 11;</code>
     *
     * <pre>
     *跟到底
     * </pre>
     */
    int getGenDaoDi();

    // optional int32 min_add_score = 12;
    /**
     * <code>optional int32 min_add_score = 12;</code>
     *
     * <pre>
     *最小下注值
     * </pre>
     */
    boolean hasMinAddScore();
    /**
     * <code>optional int32 min_add_score = 12;</code>
     *
     * <pre>
     *最小下注值
     * </pre>
     */
    int getMinAddScore();

    // optional int32 max_add_score = 13;
    /**
     * <code>optional int32 max_add_score = 13;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    boolean hasMaxAddScore();
    /**
     * <code>optional int32 max_add_score = 13;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    int getMaxAddScore();
  }
  /**
   * Protobuf type {@code zjh.User_Can_Opreate}
   *
   * <pre>
   *玩家可操作
   * </pre>
   */
  public static final class User_Can_Opreate extends
      com.google.protobuf.GeneratedMessage
      implements User_Can_OpreateOrBuilder {
    // Use User_Can_Opreate.newBuilder() to construct.
    private User_Can_Opreate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private User_Can_Opreate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final User_Can_Opreate defaultInstance;
    public static User_Can_Opreate getDefaultInstance() {
      return defaultInstance;
    }

    public User_Can_Opreate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private User_Can_Opreate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lookCard_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              giveUp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              genZhu_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              addScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              compareCard_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              liangPai_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                addJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              addJettonScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                addJettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                addJettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              canCompareRound_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              xiaZhu_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              quanYa_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              genDaoDi_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              minAddScore_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              maxAddScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          addJettonScore_ = java.util.Collections.unmodifiableList(addJettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Can_Opreate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Can_Opreate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.class, protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.Builder.class);
    }

    public static com.google.protobuf.Parser<User_Can_Opreate> PARSER =
        new com.google.protobuf.AbstractParser<User_Can_Opreate>() {
      public User_Can_Opreate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User_Can_Opreate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<User_Can_Opreate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 look_card = 1;
    public static final int LOOK_CARD_FIELD_NUMBER = 1;
    private int lookCard_;
    /**
     * <code>optional int32 look_card = 1;</code>
     *
     * <pre>
     *是否可看牌：0：不可看，1：可看
     * </pre>
     */
    public boolean hasLookCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 look_card = 1;</code>
     *
     * <pre>
     *是否可看牌：0：不可看，1：可看
     * </pre>
     */
    public int getLookCard() {
      return lookCard_;
    }

    // optional int32 give_up = 2;
    public static final int GIVE_UP_FIELD_NUMBER = 2;
    private int giveUp_;
    /**
     * <code>optional int32 give_up = 2;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public boolean hasGiveUp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 give_up = 2;</code>
     *
     * <pre>
     *放弃
     * </pre>
     */
    public int getGiveUp() {
      return giveUp_;
    }

    // optional int32 gen_zhu = 3;
    public static final int GEN_ZHU_FIELD_NUMBER = 3;
    private int genZhu_;
    /**
     * <code>optional int32 gen_zhu = 3;</code>
     *
     * <pre>
     *跟注
     * </pre>
     */
    public boolean hasGenZhu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gen_zhu = 3;</code>
     *
     * <pre>
     *跟注
     * </pre>
     */
    public int getGenZhu() {
      return genZhu_;
    }

    // optional int32 add_score = 4;
    public static final int ADD_SCORE_FIELD_NUMBER = 4;
    private int addScore_;
    /**
     * <code>optional int32 add_score = 4;</code>
     *
     * <pre>
     *加注
     * </pre>
     */
    public boolean hasAddScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 add_score = 4;</code>
     *
     * <pre>
     *加注
     * </pre>
     */
    public int getAddScore() {
      return addScore_;
    }

    // optional int32 compare_card = 5;
    public static final int COMPARE_CARD_FIELD_NUMBER = 5;
    private int compareCard_;
    /**
     * <code>optional int32 compare_card = 5;</code>
     *
     * <pre>
     *比牌
     * </pre>
     */
    public boolean hasCompareCard() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 compare_card = 5;</code>
     *
     * <pre>
     *比牌
     * </pre>
     */
    public int getCompareCard() {
      return compareCard_;
    }

    // optional int32 liang_pai = 6;
    public static final int LIANG_PAI_FIELD_NUMBER = 6;
    private int liangPai_;
    /**
     * <code>optional int32 liang_pai = 6;</code>
     *
     * <pre>
     *亮牌
     * </pre>
     */
    public boolean hasLiangPai() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 liang_pai = 6;</code>
     *
     * <pre>
     *亮牌
     * </pre>
     */
    public int getLiangPai() {
      return liangPai_;
    }

    // repeated int32 add_jetton_score = 7;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> addJettonScore_;
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAddJettonScoreList() {
      return addJettonScore_;
    }
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    public int getAddJettonScoreCount() {
      return addJettonScore_.size();
    }
    /**
     * <code>repeated int32 add_jetton_score = 7;</code>
     *
     * <pre>
     *可加注操作
     * </pre>
     */
    public int getAddJettonScore(int index) {
      return addJettonScore_.get(index);
    }

    // optional int32 can_compare_round = 8;
    public static final int CAN_COMPARE_ROUND_FIELD_NUMBER = 8;
    private int canCompareRound_;
    /**
     * <code>optional int32 can_compare_round = 8;</code>
     *
     * <pre>
     *剩余比牌轮数
     * </pre>
     */
    public boolean hasCanCompareRound() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 can_compare_round = 8;</code>
     *
     * <pre>
     *剩余比牌轮数
     * </pre>
     */
    public int getCanCompareRound() {
      return canCompareRound_;
    }

    // optional int32 xia_zhu = 9;
    public static final int XIA_ZHU_FIELD_NUMBER = 9;
    private int xiaZhu_;
    /**
     * <code>optional int32 xia_zhu = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public boolean hasXiaZhu() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 xia_zhu = 9;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public int getXiaZhu() {
      return xiaZhu_;
    }

    // optional int32 quan_ya = 10;
    public static final int QUAN_YA_FIELD_NUMBER = 10;
    private int quanYa_;
    /**
     * <code>optional int32 quan_ya = 10;</code>
     *
     * <pre>
     *全压
     * </pre>
     */
    public boolean hasQuanYa() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 quan_ya = 10;</code>
     *
     * <pre>
     *全压
     * </pre>
     */
    public int getQuanYa() {
      return quanYa_;
    }

    // optional int32 gen_dao_di = 11;
    public static final int GEN_DAO_DI_FIELD_NUMBER = 11;
    private int genDaoDi_;
    /**
     * <code>optional int32 gen_dao_di = 11;</code>
     *
     * <pre>
     *跟到底
     * </pre>
     */
    public boolean hasGenDaoDi() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 gen_dao_di = 11;</code>
     *
     * <pre>
     *跟到底
     * </pre>
     */
    public int getGenDaoDi() {
      return genDaoDi_;
    }

    // optional int32 min_add_score = 12;
    public static final int MIN_ADD_SCORE_FIELD_NUMBER = 12;
    private int minAddScore_;
    /**
     * <code>optional int32 min_add_score = 12;</code>
     *
     * <pre>
     *最小下注值
     * </pre>
     */
    public boolean hasMinAddScore() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 min_add_score = 12;</code>
     *
     * <pre>
     *最小下注值
     * </pre>
     */
    public int getMinAddScore() {
      return minAddScore_;
    }

    // optional int32 max_add_score = 13;
    public static final int MAX_ADD_SCORE_FIELD_NUMBER = 13;
    private int maxAddScore_;
    /**
     * <code>optional int32 max_add_score = 13;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    public boolean hasMaxAddScore() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 max_add_score = 13;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    public int getMaxAddScore() {
      return maxAddScore_;
    }

    private void initFields() {
      lookCard_ = 0;
      giveUp_ = 0;
      genZhu_ = 0;
      addScore_ = 0;
      compareCard_ = 0;
      liangPai_ = 0;
      addJettonScore_ = java.util.Collections.emptyList();
      canCompareRound_ = 0;
      xiaZhu_ = 0;
      quanYa_ = 0;
      genDaoDi_ = 0;
      minAddScore_ = 0;
      maxAddScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, lookCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, giveUp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, genZhu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, addScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, compareCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, liangPai_);
      }
      for (int i = 0; i < addJettonScore_.size(); i++) {
        output.writeInt32(7, addJettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, canCompareRound_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, xiaZhu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, quanYa_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, genDaoDi_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, minAddScore_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, maxAddScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lookCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, giveUp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, genZhu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, addScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, compareCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, liangPai_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addJettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(addJettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAddJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, canCompareRound_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, xiaZhu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, quanYa_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, genDaoDi_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, minAddScore_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, maxAddScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.User_Can_Opreate}
     *
     * <pre>
     *玩家可操作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.User_Can_OpreateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Can_Opreate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Can_Opreate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.class, protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lookCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        giveUp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        genZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        addScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        compareCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        liangPai_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        addJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        canCompareRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        xiaZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        quanYa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        genDaoDi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        minAddScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        maxAddScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Can_Opreate_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate build() {
        protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate result = new protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lookCard_ = lookCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.giveUp_ = giveUp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.genZhu_ = genZhu_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.addScore_ = addScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.compareCard_ = compareCard_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.liangPai_ = liangPai_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          addJettonScore_ = java.util.Collections.unmodifiableList(addJettonScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.canCompareRound_ = canCompareRound_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.xiaZhu_ = xiaZhu_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.quanYa_ = quanYa_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.genDaoDi_ = genDaoDi_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.minAddScore_ = minAddScore_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxAddScore_ = maxAddScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate.getDefaultInstance()) return this;
        if (other.hasLookCard()) {
          setLookCard(other.getLookCard());
        }
        if (other.hasGiveUp()) {
          setGiveUp(other.getGiveUp());
        }
        if (other.hasGenZhu()) {
          setGenZhu(other.getGenZhu());
        }
        if (other.hasAddScore()) {
          setAddScore(other.getAddScore());
        }
        if (other.hasCompareCard()) {
          setCompareCard(other.getCompareCard());
        }
        if (other.hasLiangPai()) {
          setLiangPai(other.getLiangPai());
        }
        if (!other.addJettonScore_.isEmpty()) {
          if (addJettonScore_.isEmpty()) {
            addJettonScore_ = other.addJettonScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAddJettonScoreIsMutable();
            addJettonScore_.addAll(other.addJettonScore_);
          }
          onChanged();
        }
        if (other.hasCanCompareRound()) {
          setCanCompareRound(other.getCanCompareRound());
        }
        if (other.hasXiaZhu()) {
          setXiaZhu(other.getXiaZhu());
        }
        if (other.hasQuanYa()) {
          setQuanYa(other.getQuanYa());
        }
        if (other.hasGenDaoDi()) {
          setGenDaoDi(other.getGenDaoDi());
        }
        if (other.hasMinAddScore()) {
          setMinAddScore(other.getMinAddScore());
        }
        if (other.hasMaxAddScore()) {
          setMaxAddScore(other.getMaxAddScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.User_Can_Opreate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 look_card = 1;
      private int lookCard_ ;
      /**
       * <code>optional int32 look_card = 1;</code>
       *
       * <pre>
       *是否可看牌：0：不可看，1：可看
       * </pre>
       */
      public boolean hasLookCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 look_card = 1;</code>
       *
       * <pre>
       *是否可看牌：0：不可看，1：可看
       * </pre>
       */
      public int getLookCard() {
        return lookCard_;
      }
      /**
       * <code>optional int32 look_card = 1;</code>
       *
       * <pre>
       *是否可看牌：0：不可看，1：可看
       * </pre>
       */
      public Builder setLookCard(int value) {
        bitField0_ |= 0x00000001;
        lookCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 look_card = 1;</code>
       *
       * <pre>
       *是否可看牌：0：不可看，1：可看
       * </pre>
       */
      public Builder clearLookCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lookCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 give_up = 2;
      private int giveUp_ ;
      /**
       * <code>optional int32 give_up = 2;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public boolean hasGiveUp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 give_up = 2;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public int getGiveUp() {
        return giveUp_;
      }
      /**
       * <code>optional int32 give_up = 2;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder setGiveUp(int value) {
        bitField0_ |= 0x00000002;
        giveUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 give_up = 2;</code>
       *
       * <pre>
       *放弃
       * </pre>
       */
      public Builder clearGiveUp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        giveUp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gen_zhu = 3;
      private int genZhu_ ;
      /**
       * <code>optional int32 gen_zhu = 3;</code>
       *
       * <pre>
       *跟注
       * </pre>
       */
      public boolean hasGenZhu() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gen_zhu = 3;</code>
       *
       * <pre>
       *跟注
       * </pre>
       */
      public int getGenZhu() {
        return genZhu_;
      }
      /**
       * <code>optional int32 gen_zhu = 3;</code>
       *
       * <pre>
       *跟注
       * </pre>
       */
      public Builder setGenZhu(int value) {
        bitField0_ |= 0x00000004;
        genZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gen_zhu = 3;</code>
       *
       * <pre>
       *跟注
       * </pre>
       */
      public Builder clearGenZhu() {
        bitField0_ = (bitField0_ & ~0x00000004);
        genZhu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_score = 4;
      private int addScore_ ;
      /**
       * <code>optional int32 add_score = 4;</code>
       *
       * <pre>
       *加注
       * </pre>
       */
      public boolean hasAddScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 add_score = 4;</code>
       *
       * <pre>
       *加注
       * </pre>
       */
      public int getAddScore() {
        return addScore_;
      }
      /**
       * <code>optional int32 add_score = 4;</code>
       *
       * <pre>
       *加注
       * </pre>
       */
      public Builder setAddScore(int value) {
        bitField0_ |= 0x00000008;
        addScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_score = 4;</code>
       *
       * <pre>
       *加注
       * </pre>
       */
      public Builder clearAddScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        addScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 compare_card = 5;
      private int compareCard_ ;
      /**
       * <code>optional int32 compare_card = 5;</code>
       *
       * <pre>
       *比牌
       * </pre>
       */
      public boolean hasCompareCard() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 compare_card = 5;</code>
       *
       * <pre>
       *比牌
       * </pre>
       */
      public int getCompareCard() {
        return compareCard_;
      }
      /**
       * <code>optional int32 compare_card = 5;</code>
       *
       * <pre>
       *比牌
       * </pre>
       */
      public Builder setCompareCard(int value) {
        bitField0_ |= 0x00000010;
        compareCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 compare_card = 5;</code>
       *
       * <pre>
       *比牌
       * </pre>
       */
      public Builder clearCompareCard() {
        bitField0_ = (bitField0_ & ~0x00000010);
        compareCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 liang_pai = 6;
      private int liangPai_ ;
      /**
       * <code>optional int32 liang_pai = 6;</code>
       *
       * <pre>
       *亮牌
       * </pre>
       */
      public boolean hasLiangPai() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 liang_pai = 6;</code>
       *
       * <pre>
       *亮牌
       * </pre>
       */
      public int getLiangPai() {
        return liangPai_;
      }
      /**
       * <code>optional int32 liang_pai = 6;</code>
       *
       * <pre>
       *亮牌
       * </pre>
       */
      public Builder setLiangPai(int value) {
        bitField0_ |= 0x00000020;
        liangPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 liang_pai = 6;</code>
       *
       * <pre>
       *亮牌
       * </pre>
       */
      public Builder clearLiangPai() {
        bitField0_ = (bitField0_ & ~0x00000020);
        liangPai_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 add_jetton_score = 7;
      private java.util.List<java.lang.Integer> addJettonScore_ = java.util.Collections.emptyList();
      private void ensureAddJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          addJettonScore_ = new java.util.ArrayList<java.lang.Integer>(addJettonScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAddJettonScoreList() {
        return java.util.Collections.unmodifiableList(addJettonScore_);
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public int getAddJettonScoreCount() {
        return addJettonScore_.size();
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public int getAddJettonScore(int index) {
        return addJettonScore_.get(index);
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public Builder setAddJettonScore(
          int index, int value) {
        ensureAddJettonScoreIsMutable();
        addJettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public Builder addAddJettonScore(int value) {
        ensureAddJettonScoreIsMutable();
        addJettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public Builder addAllAddJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddJettonScoreIsMutable();
        super.addAll(values, addJettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetton_score = 7;</code>
       *
       * <pre>
       *可加注操作
       * </pre>
       */
      public Builder clearAddJettonScore() {
        addJettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 can_compare_round = 8;
      private int canCompareRound_ ;
      /**
       * <code>optional int32 can_compare_round = 8;</code>
       *
       * <pre>
       *剩余比牌轮数
       * </pre>
       */
      public boolean hasCanCompareRound() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 can_compare_round = 8;</code>
       *
       * <pre>
       *剩余比牌轮数
       * </pre>
       */
      public int getCanCompareRound() {
        return canCompareRound_;
      }
      /**
       * <code>optional int32 can_compare_round = 8;</code>
       *
       * <pre>
       *剩余比牌轮数
       * </pre>
       */
      public Builder setCanCompareRound(int value) {
        bitField0_ |= 0x00000080;
        canCompareRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 can_compare_round = 8;</code>
       *
       * <pre>
       *剩余比牌轮数
       * </pre>
       */
      public Builder clearCanCompareRound() {
        bitField0_ = (bitField0_ & ~0x00000080);
        canCompareRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xia_zhu = 9;
      private int xiaZhu_ ;
      /**
       * <code>optional int32 xia_zhu = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public boolean hasXiaZhu() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 xia_zhu = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public int getXiaZhu() {
        return xiaZhu_;
      }
      /**
       * <code>optional int32 xia_zhu = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder setXiaZhu(int value) {
        bitField0_ |= 0x00000100;
        xiaZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xia_zhu = 9;</code>
       *
       * <pre>
       *下注
       * </pre>
       */
      public Builder clearXiaZhu() {
        bitField0_ = (bitField0_ & ~0x00000100);
        xiaZhu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 quan_ya = 10;
      private int quanYa_ ;
      /**
       * <code>optional int32 quan_ya = 10;</code>
       *
       * <pre>
       *全压
       * </pre>
       */
      public boolean hasQuanYa() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 quan_ya = 10;</code>
       *
       * <pre>
       *全压
       * </pre>
       */
      public int getQuanYa() {
        return quanYa_;
      }
      /**
       * <code>optional int32 quan_ya = 10;</code>
       *
       * <pre>
       *全压
       * </pre>
       */
      public Builder setQuanYa(int value) {
        bitField0_ |= 0x00000200;
        quanYa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quan_ya = 10;</code>
       *
       * <pre>
       *全压
       * </pre>
       */
      public Builder clearQuanYa() {
        bitField0_ = (bitField0_ & ~0x00000200);
        quanYa_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gen_dao_di = 11;
      private int genDaoDi_ ;
      /**
       * <code>optional int32 gen_dao_di = 11;</code>
       *
       * <pre>
       *跟到底
       * </pre>
       */
      public boolean hasGenDaoDi() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 gen_dao_di = 11;</code>
       *
       * <pre>
       *跟到底
       * </pre>
       */
      public int getGenDaoDi() {
        return genDaoDi_;
      }
      /**
       * <code>optional int32 gen_dao_di = 11;</code>
       *
       * <pre>
       *跟到底
       * </pre>
       */
      public Builder setGenDaoDi(int value) {
        bitField0_ |= 0x00000400;
        genDaoDi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gen_dao_di = 11;</code>
       *
       * <pre>
       *跟到底
       * </pre>
       */
      public Builder clearGenDaoDi() {
        bitField0_ = (bitField0_ & ~0x00000400);
        genDaoDi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 min_add_score = 12;
      private int minAddScore_ ;
      /**
       * <code>optional int32 min_add_score = 12;</code>
       *
       * <pre>
       *最小下注值
       * </pre>
       */
      public boolean hasMinAddScore() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 min_add_score = 12;</code>
       *
       * <pre>
       *最小下注值
       * </pre>
       */
      public int getMinAddScore() {
        return minAddScore_;
      }
      /**
       * <code>optional int32 min_add_score = 12;</code>
       *
       * <pre>
       *最小下注值
       * </pre>
       */
      public Builder setMinAddScore(int value) {
        bitField0_ |= 0x00000800;
        minAddScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_add_score = 12;</code>
       *
       * <pre>
       *最小下注值
       * </pre>
       */
      public Builder clearMinAddScore() {
        bitField0_ = (bitField0_ & ~0x00000800);
        minAddScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_add_score = 13;
      private int maxAddScore_ ;
      /**
       * <code>optional int32 max_add_score = 13;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public boolean hasMaxAddScore() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 max_add_score = 13;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public int getMaxAddScore() {
        return maxAddScore_;
      }
      /**
       * <code>optional int32 max_add_score = 13;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public Builder setMaxAddScore(int value) {
        bitField0_ |= 0x00001000;
        maxAddScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_add_score = 13;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public Builder clearMaxAddScore() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxAddScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.User_Can_Opreate)
    }

    static {
      defaultInstance = new User_Can_Opreate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.User_Can_Opreate)
  }

  public interface Score_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 add_jetton_score = 1;
    /**
     * <code>optional int32 add_jetton_score = 1;</code>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 1;</code>
     */
    int getAddJettonScore();

    // optional int32 opreate_player = 2;
    /**
     * <code>optional int32 opreate_player = 2;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 2;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // repeated int32 jetton_score = 3;
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 compare_opreate = 4;
    /**
     * <code>optional int32 compare_opreate = 4;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    boolean hasCompareOpreate();
    /**
     * <code>optional int32 compare_opreate = 4;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    int getCompareOpreate();

    // optional int32 current_player = 5;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // repeated int32 user_gen_score = 6;
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserGenScoreList();
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    int getUserGenScoreCount();
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    int getUserGenScore(int index);

    // optional int32 jetton_total_score = 7;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    int getJettonTotalScore();

    // optional int32 display_time = 8;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 jetton_type = 9;
    /**
     * <code>optional int32 jetton_type = 9;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    boolean hasJettonType();
    /**
     * <code>optional int32 jetton_type = 9;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    int getJettonType();

    // optional int32 dan_zhu_score = 10;
    /**
     * <code>optional int32 dan_zhu_score = 10;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    boolean hasDanZhuScore();
    /**
     * <code>optional int32 dan_zhu_score = 10;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    int getDanZhuScore();
  }
  /**
   * Protobuf type {@code zjh.Score_Result}
   *
   * <pre>
   *下注结果
   * </pre>
   */
  public static final class Score_Result extends
      com.google.protobuf.GeneratedMessage
      implements Score_ResultOrBuilder {
    // Use Score_Result.newBuilder() to construct.
    private Score_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Score_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Score_Result defaultInstance;
    public static Score_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Score_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Score_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              compareOpreate_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                userGenScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              userGenScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                userGenScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                userGenScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              jettonTotalScore_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              displayTime_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              jettonType_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              danZhuScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          userGenScore_ = java.util.Collections.unmodifiableList(userGenScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Score_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Score_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Score_Result.class, protobuf.clazz.zjh.ZjhRsp.Score_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Score_Result> PARSER =
        new com.google.protobuf.AbstractParser<Score_Result>() {
      public Score_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Score_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Score_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 add_jetton_score = 1;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 1;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 1;</code>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 add_jetton_score = 1;</code>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional int32 opreate_player = 2;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 2;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 2;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opreate_player = 2;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // repeated int32 jetton_score = 3;
    public static final int JETTON_SCORE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 compare_opreate = 4;
    public static final int COMPARE_OPREATE_FIELD_NUMBER = 4;
    private int compareOpreate_;
    /**
     * <code>optional int32 compare_opreate = 4;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    public boolean hasCompareOpreate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 compare_opreate = 4;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    public int getCompareOpreate() {
      return compareOpreate_;
    }

    // optional int32 current_player = 5;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 5;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // repeated int32 user_gen_score = 6;
    public static final int USER_GEN_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> userGenScore_;
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserGenScoreList() {
      return userGenScore_;
    }
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    public int getUserGenScoreCount() {
      return userGenScore_.size();
    }
    /**
     * <code>repeated int32 user_gen_score = 6;</code>
     *
     * <pre>
     *玩家跟注分数
     * </pre>
     */
    public int getUserGenScore(int index) {
      return userGenScore_.get(index);
    }

    // optional int32 jetton_total_score = 7;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 7;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    // optional int32 display_time = 8;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 8;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 display_time = 8;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 jetton_type = 9;
    public static final int JETTON_TYPE_FIELD_NUMBER = 9;
    private int jettonType_;
    /**
     * <code>optional int32 jetton_type = 9;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    public boolean hasJettonType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 jetton_type = 9;</code>
     *
     * <pre>
     *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
     * </pre>
     */
    public int getJettonType() {
      return jettonType_;
    }

    // optional int32 dan_zhu_score = 10;
    public static final int DAN_ZHU_SCORE_FIELD_NUMBER = 10;
    private int danZhuScore_;
    /**
     * <code>optional int32 dan_zhu_score = 10;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public boolean hasDanZhuScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 dan_zhu_score = 10;</code>
     *
     * <pre>
     *单注
     * </pre>
     */
    public int getDanZhuScore() {
      return danZhuScore_;
    }

    private void initFields() {
      addJettonScore_ = 0;
      opreatePlayer_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
      compareOpreate_ = 0;
      currentPlayer_ = 0;
      userGenScore_ = java.util.Collections.emptyList();
      jettonTotalScore_ = 0;
      displayTime_ = 0;
      jettonType_ = 0;
      danZhuScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, addJettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opreatePlayer_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(3, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, compareOpreate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, currentPlayer_);
      }
      for (int i = 0; i < userGenScore_.size(); i++) {
        output.writeInt32(6, userGenScore_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, displayTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, jettonType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, danZhuScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, addJettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opreatePlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, compareOpreate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, currentPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userGenScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userGenScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserGenScoreList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jettonTotalScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, displayTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, jettonType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, danZhuScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Score_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Score_Result}
     *
     * <pre>
     *下注结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Score_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Score_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Score_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Score_Result.class, protobuf.clazz.zjh.ZjhRsp.Score_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Score_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        compareOpreate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        userGenScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        jettonType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        danZhuScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Score_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Score_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Score_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Score_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Score_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Score_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Score_Result result = new protobuf.clazz.zjh.ZjhRsp.Score_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.compareOpreate_ = compareOpreate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          userGenScore_ = java.util.Collections.unmodifiableList(userGenScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.userGenScore_ = userGenScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.jettonType_ = jettonType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.danZhuScore_ = danZhuScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Score_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Score_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Score_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Score_Result.getDefaultInstance()) return this;
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasCompareOpreate()) {
          setCompareOpreate(other.getCompareOpreate());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (!other.userGenScore_.isEmpty()) {
          if (userGenScore_.isEmpty()) {
            userGenScore_ = other.userGenScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUserGenScoreIsMutable();
            userGenScore_.addAll(other.userGenScore_);
          }
          onChanged();
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasJettonType()) {
          setJettonType(other.getJettonType());
        }
        if (other.hasDanZhuScore()) {
          setDanZhuScore(other.getDanZhuScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Score_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Score_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 add_jetton_score = 1;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 1;</code>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 add_jetton_score = 1;</code>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 1;</code>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000001;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 1;</code>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opreate_player = 2;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 2;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 opreate_player = 2;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 2;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000002;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 2;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 3;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 compare_opreate = 4;
      private int compareOpreate_ ;
      /**
       * <code>optional int32 compare_opreate = 4;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public boolean hasCompareOpreate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 compare_opreate = 4;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public int getCompareOpreate() {
        return compareOpreate_;
      }
      /**
       * <code>optional int32 compare_opreate = 4;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public Builder setCompareOpreate(int value) {
        bitField0_ |= 0x00000008;
        compareOpreate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 compare_opreate = 4;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public Builder clearCompareOpreate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        compareOpreate_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 5;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000010;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 user_gen_score = 6;
      private java.util.List<java.lang.Integer> userGenScore_ = java.util.Collections.emptyList();
      private void ensureUserGenScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          userGenScore_ = new java.util.ArrayList<java.lang.Integer>(userGenScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserGenScoreList() {
        return java.util.Collections.unmodifiableList(userGenScore_);
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public int getUserGenScoreCount() {
        return userGenScore_.size();
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public int getUserGenScore(int index) {
        return userGenScore_.get(index);
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public Builder setUserGenScore(
          int index, int value) {
        ensureUserGenScoreIsMutable();
        userGenScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public Builder addUserGenScore(int value) {
        ensureUserGenScoreIsMutable();
        userGenScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public Builder addAllUserGenScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserGenScoreIsMutable();
        super.addAll(values, userGenScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_gen_score = 6;</code>
       *
       * <pre>
       *玩家跟注分数
       * </pre>
       */
      public Builder clearUserGenScore() {
        userGenScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 7;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00000040;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 8;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000080;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 8;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_type = 9;
      private int jettonType_ ;
      /**
       * <code>optional int32 jetton_type = 9;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public boolean hasJettonType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 jetton_type = 9;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public int getJettonType() {
        return jettonType_;
      }
      /**
       * <code>optional int32 jetton_type = 9;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public Builder setJettonType(int value) {
        bitField0_ |= 0x00000100;
        jettonType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_type = 9;</code>
       *
       * <pre>
       *1:跟注，2：下注，3：加注，4：比牌下注,5:加注最大
       * </pre>
       */
      public Builder clearJettonType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        jettonType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dan_zhu_score = 10;
      private int danZhuScore_ ;
      /**
       * <code>optional int32 dan_zhu_score = 10;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public boolean hasDanZhuScore() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 dan_zhu_score = 10;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public int getDanZhuScore() {
        return danZhuScore_;
      }
      /**
       * <code>optional int32 dan_zhu_score = 10;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder setDanZhuScore(int value) {
        bitField0_ |= 0x00000200;
        danZhuScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dan_zhu_score = 10;</code>
       *
       * <pre>
       *单注
       * </pre>
       */
      public Builder clearDanZhuScore() {
        bitField0_ = (bitField0_ & ~0x00000200);
        danZhuScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Score_Result)
    }

    static {
      defaultInstance = new Score_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Score_Result)
  }

  public interface Give_Up_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // optional int32 compare_opreate = 2;
    /**
     * <code>optional int32 compare_opreate = 2;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    boolean hasCompareOpreate();
    /**
     * <code>optional int32 compare_opreate = 2;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    int getCompareOpreate();

    // optional int32 current_player = 3;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code zjh.Give_Up_Result}
   *
   * <pre>
   *放弃结果
   * </pre>
   */
  public static final class Give_Up_Result extends
      com.google.protobuf.GeneratedMessage
      implements Give_Up_ResultOrBuilder {
    // Use Give_Up_Result.newBuilder() to construct.
    private Give_Up_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Give_Up_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Give_Up_Result defaultInstance;
    public static Give_Up_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Give_Up_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Give_Up_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              compareOpreate_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Give_Up_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Give_Up_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.class, protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Give_Up_Result> PARSER =
        new com.google.protobuf.AbstractParser<Give_Up_Result>() {
      public Give_Up_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Give_Up_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Give_Up_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // optional int32 compare_opreate = 2;
    public static final int COMPARE_OPREATE_FIELD_NUMBER = 2;
    private int compareOpreate_;
    /**
     * <code>optional int32 compare_opreate = 2;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    public boolean hasCompareOpreate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 compare_opreate = 2;</code>
     *
     * <pre>
     *0:不可比牌 1：可比牌
     * </pre>
     */
    public int getCompareOpreate() {
      return compareOpreate_;
    }

    // optional int32 current_player = 3;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 3;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      compareOpreate_ = 0;
      currentPlayer_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, compareOpreate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, compareOpreate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Give_Up_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Give_Up_Result}
     *
     * <pre>
     *放弃结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Give_Up_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Give_Up_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Give_Up_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.class, protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        compareOpreate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Give_Up_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Give_Up_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Give_Up_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Give_Up_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Give_Up_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Give_Up_Result result = new protobuf.clazz.zjh.ZjhRsp.Give_Up_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.compareOpreate_ = compareOpreate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Give_Up_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Give_Up_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Give_Up_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Give_Up_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (other.hasCompareOpreate()) {
          setCompareOpreate(other.getCompareOpreate());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Give_Up_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Give_Up_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 compare_opreate = 2;
      private int compareOpreate_ ;
      /**
       * <code>optional int32 compare_opreate = 2;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public boolean hasCompareOpreate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 compare_opreate = 2;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public int getCompareOpreate() {
        return compareOpreate_;
      }
      /**
       * <code>optional int32 compare_opreate = 2;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public Builder setCompareOpreate(int value) {
        bitField0_ |= 0x00000002;
        compareOpreate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 compare_opreate = 2;</code>
       *
       * <pre>
       *0:不可比牌 1：可比牌
       * </pre>
       */
      public Builder clearCompareOpreate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        compareOpreate_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 3;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000004;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Give_Up_Result)
    }

    static {
      defaultInstance = new Give_Up_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Give_Up_Result)
  }

  public interface Look_Card_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getOpreatePlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 cards_type = 3;
    /**
     * <code>optional int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型(只给我发牌型 其他人看牌都为-1)
     * </pre>
     */
    boolean hasCardsType();
    /**
     * <code>optional int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型(只给我发牌型 其他人看牌都为-1)
     * </pre>
     */
    int getCardsType();
  }
  /**
   * Protobuf type {@code zjh.Look_Card_Result}
   *
   * <pre>
   *看牌结果
   * </pre>
   */
  public static final class Look_Card_Result extends
      com.google.protobuf.GeneratedMessage
      implements Look_Card_ResultOrBuilder {
    // Use Look_Card_Result.newBuilder() to construct.
    private Look_Card_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Look_Card_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Look_Card_Result defaultInstance;
    public static Look_Card_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Look_Card_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Look_Card_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardsType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Look_Card_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Look_Card_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.class, protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Look_Card_Result> PARSER =
        new com.google.protobuf.AbstractParser<Look_Card_Result>() {
      public Look_Card_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Look_Card_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Look_Card_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *看牌扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 cards_type = 3;
    public static final int CARDS_TYPE_FIELD_NUMBER = 3;
    private int cardsType_;
    /**
     * <code>optional int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型(只给我发牌型 其他人看牌都为-1)
     * </pre>
     */
    public boolean hasCardsType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cards_type = 3;</code>
     *
     * <pre>
     *牌型(只给我发牌型 其他人看牌都为-1)
     * </pre>
     */
    public int getCardsType() {
      return cardsType_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardsType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cardsType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardsType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Look_Card_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Look_Card_Result}
     *
     * <pre>
     *看牌结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Look_Card_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Look_Card_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Look_Card_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.class, protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Look_Card_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Look_Card_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Look_Card_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Look_Card_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Look_Card_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Look_Card_Result result = new protobuf.clazz.zjh.ZjhRsp.Look_Card_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardsType_ = cardsType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Look_Card_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Look_Card_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Look_Card_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Look_Card_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardsType()) {
          setCardsType(other.getCardsType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Look_Card_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Look_Card_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *看牌扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 cards_type = 3;
      private int cardsType_ ;
      /**
       * <code>optional int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型(只给我发牌型 其他人看牌都为-1)
       * </pre>
       */
      public boolean hasCardsType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型(只给我发牌型 其他人看牌都为-1)
       * </pre>
       */
      public int getCardsType() {
        return cardsType_;
      }
      /**
       * <code>optional int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型(只给我发牌型 其他人看牌都为-1)
       * </pre>
       */
      public Builder setCardsType(int value) {
        bitField0_ |= 0x00000004;
        cardsType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cards_type = 3;</code>
       *
       * <pre>
       *牌型(只给我发牌型 其他人看牌都为-1)
       * </pre>
       */
      public Builder clearCardsType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardsType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Look_Card_Result)
    }

    static {
      defaultInstance = new Look_Card_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Look_Card_Result)
  }

  public interface Can_Compare_UserOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 user_player = 1;
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserPlayerList();
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    int getUserPlayerCount();
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    int getUserPlayer(int index);
  }
  /**
   * Protobuf type {@code zjh.Can_Compare_User}
   *
   * <pre>
   *可比牌玩家
   * </pre>
   */
  public static final class Can_Compare_User extends
      com.google.protobuf.GeneratedMessage
      implements Can_Compare_UserOrBuilder {
    // Use Can_Compare_User.newBuilder() to construct.
    private Can_Compare_User(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Can_Compare_User(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Can_Compare_User defaultInstance;
    public static Can_Compare_User getDefaultInstance() {
      return defaultInstance;
    }

    public Can_Compare_User getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Can_Compare_User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                userPlayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              userPlayer_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                userPlayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                userPlayer_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          userPlayer_ = java.util.Collections.unmodifiableList(userPlayer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Can_Compare_User_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Can_Compare_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.class, protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.Builder.class);
    }

    public static com.google.protobuf.Parser<Can_Compare_User> PARSER =
        new com.google.protobuf.AbstractParser<Can_Compare_User>() {
      public Can_Compare_User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Can_Compare_User(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Can_Compare_User> getParserForType() {
      return PARSER;
    }

    // repeated int32 user_player = 1;
    public static final int USER_PLAYER_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> userPlayer_;
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserPlayerList() {
      return userPlayer_;
    }
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public int getUserPlayerCount() {
      return userPlayer_.size();
    }
    /**
     * <code>repeated int32 user_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public int getUserPlayer(int index) {
      return userPlayer_.get(index);
    }

    private void initFields() {
      userPlayer_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userPlayer_.size(); i++) {
        output.writeInt32(1, userPlayer_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userPlayer_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userPlayer_.get(i));
        }
        size += dataSize;
        size += 1 * getUserPlayerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Can_Compare_User prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Can_Compare_User}
     *
     * <pre>
     *可比牌玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Can_Compare_UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Can_Compare_User_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Can_Compare_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.class, protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userPlayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Can_Compare_User_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Can_Compare_User getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Can_Compare_User build() {
        protobuf.clazz.zjh.ZjhRsp.Can_Compare_User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Can_Compare_User buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Can_Compare_User result = new protobuf.clazz.zjh.ZjhRsp.Can_Compare_User(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userPlayer_ = java.util.Collections.unmodifiableList(userPlayer_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userPlayer_ = userPlayer_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Can_Compare_User) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Can_Compare_User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Can_Compare_User other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Can_Compare_User.getDefaultInstance()) return this;
        if (!other.userPlayer_.isEmpty()) {
          if (userPlayer_.isEmpty()) {
            userPlayer_ = other.userPlayer_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserPlayerIsMutable();
            userPlayer_.addAll(other.userPlayer_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Can_Compare_User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Can_Compare_User) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 user_player = 1;
      private java.util.List<java.lang.Integer> userPlayer_ = java.util.Collections.emptyList();
      private void ensureUserPlayerIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userPlayer_ = new java.util.ArrayList<java.lang.Integer>(userPlayer_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserPlayerList() {
        return java.util.Collections.unmodifiableList(userPlayer_);
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public int getUserPlayerCount() {
        return userPlayer_.size();
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public int getUserPlayer(int index) {
        return userPlayer_.get(index);
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder setUserPlayer(
          int index, int value) {
        ensureUserPlayerIsMutable();
        userPlayer_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder addUserPlayer(int value) {
        ensureUserPlayerIsMutable();
        userPlayer_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder addAllUserPlayer(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserPlayerIsMutable();
        super.addAll(values, userPlayer_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder clearUserPlayer() {
        userPlayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Can_Compare_User)
    }

    static {
      defaultInstance = new Can_Compare_User(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Can_Compare_User)
  }

  public interface Compare_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 opreate_player = 1;
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpreatePlayerList();
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    int getOpreatePlayerCount();
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    int getOpreatePlayer(int index);

    // optional int32 win_player = 2;
    /**
     * <code>optional int32 win_player = 2;</code>
     *
     * <pre>
     *比牌赢得玩家
     * </pre>
     */
    boolean hasWinPlayer();
    /**
     * <code>optional int32 win_player = 2;</code>
     *
     * <pre>
     *比牌赢得玩家
     * </pre>
     */
    int getWinPlayer();

    // repeated int32 jetton_score = 3;
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 add_jetton_score = 4;
    /**
     * <code>optional int32 add_jetton_score = 4;</code>
     *
     * <pre>
     *加注分数
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 4;</code>
     *
     * <pre>
     *加注分数
     * </pre>
     */
    int getAddJettonScore();

    // optional int32 current_player = 5;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 display_time = 6;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 jetton_total_score = 7;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    boolean hasJettonTotalScore();
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    int getJettonTotalScore();
  }
  /**
   * Protobuf type {@code zjh.Compare_Result}
   *
   * <pre>
   *比牌结果
   * </pre>
   */
  public static final class Compare_Result extends
      com.google.protobuf.GeneratedMessage
      implements Compare_ResultOrBuilder {
    // Use Compare_Result.newBuilder() to construct.
    private Compare_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Compare_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Compare_Result defaultInstance;
    public static Compare_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Compare_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Compare_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                opreatePlayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              opreatePlayer_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                opreatePlayer_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                opreatePlayer_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              winPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              jettonTotalScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          opreatePlayer_ = java.util.Collections.unmodifiableList(opreatePlayer_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Compare_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Compare_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Compare_Result.class, protobuf.clazz.zjh.ZjhRsp.Compare_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Compare_Result> PARSER =
        new com.google.protobuf.AbstractParser<Compare_Result>() {
      public Compare_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Compare_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Compare_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> opreatePlayer_;
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpreatePlayerList() {
      return opreatePlayer_;
    }
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public int getOpreatePlayerCount() {
      return opreatePlayer_.size();
    }
    /**
     * <code>repeated int32 opreate_player = 1;</code>
     *
     * <pre>
     *比牌玩家
     * </pre>
     */
    public int getOpreatePlayer(int index) {
      return opreatePlayer_.get(index);
    }

    // optional int32 win_player = 2;
    public static final int WIN_PLAYER_FIELD_NUMBER = 2;
    private int winPlayer_;
    /**
     * <code>optional int32 win_player = 2;</code>
     *
     * <pre>
     *比牌赢得玩家
     * </pre>
     */
    public boolean hasWinPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 win_player = 2;</code>
     *
     * <pre>
     *比牌赢得玩家
     * </pre>
     */
    public int getWinPlayer() {
      return winPlayer_;
    }

    // repeated int32 jetton_score = 3;
    public static final int JETTON_SCORE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 3;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 add_jetton_score = 4;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 4;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 4;</code>
     *
     * <pre>
     *加注分数
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 add_jetton_score = 4;</code>
     *
     * <pre>
     *加注分数
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional int32 current_player = 5;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 5;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 current_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 display_time = 6;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 6;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 6;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 jetton_total_score = 7;
    public static final int JETTON_TOTAL_SCORE_FIELD_NUMBER = 7;
    private int jettonTotalScore_;
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public boolean hasJettonTotalScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jetton_total_score = 7;</code>
     *
     * <pre>
     *总下注
     * </pre>
     */
    public int getJettonTotalScore() {
      return jettonTotalScore_;
    }

    private void initFields() {
      opreatePlayer_ = java.util.Collections.emptyList();
      winPlayer_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
      addJettonScore_ = 0;
      currentPlayer_ = 0;
      displayTime_ = 0;
      jettonTotalScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < opreatePlayer_.size(); i++) {
        output.writeInt32(1, opreatePlayer_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, winPlayer_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(3, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, displayTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, jettonTotalScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < opreatePlayer_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(opreatePlayer_.get(i));
        }
        size += dataSize;
        size += 1 * getOpreatePlayerList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, winPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, displayTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jettonTotalScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Compare_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Compare_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Compare_Result}
     *
     * <pre>
     *比牌结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Compare_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Compare_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Compare_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Compare_Result.class, protobuf.clazz.zjh.ZjhRsp.Compare_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Compare_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        winPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        jettonTotalScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Compare_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Compare_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Compare_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Compare_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Compare_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Compare_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Compare_Result result = new protobuf.clazz.zjh.ZjhRsp.Compare_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          opreatePlayer_ = java.util.Collections.unmodifiableList(opreatePlayer_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.winPlayer_ = winPlayer_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.jettonTotalScore_ = jettonTotalScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Compare_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Compare_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Compare_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Compare_Result.getDefaultInstance()) return this;
        if (!other.opreatePlayer_.isEmpty()) {
          if (opreatePlayer_.isEmpty()) {
            opreatePlayer_ = other.opreatePlayer_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOpreatePlayerIsMutable();
            opreatePlayer_.addAll(other.opreatePlayer_);
          }
          onChanged();
        }
        if (other.hasWinPlayer()) {
          setWinPlayer(other.getWinPlayer());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasJettonTotalScore()) {
          setJettonTotalScore(other.getJettonTotalScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Compare_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Compare_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 opreate_player = 1;
      private java.util.List<java.lang.Integer> opreatePlayer_ = java.util.Collections.emptyList();
      private void ensureOpreatePlayerIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          opreatePlayer_ = new java.util.ArrayList<java.lang.Integer>(opreatePlayer_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpreatePlayerList() {
        return java.util.Collections.unmodifiableList(opreatePlayer_);
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public int getOpreatePlayerCount() {
        return opreatePlayer_.size();
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public int getOpreatePlayer(int index) {
        return opreatePlayer_.get(index);
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder setOpreatePlayer(
          int index, int value) {
        ensureOpreatePlayerIsMutable();
        opreatePlayer_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder addOpreatePlayer(int value) {
        ensureOpreatePlayerIsMutable();
        opreatePlayer_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder addAllOpreatePlayer(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpreatePlayerIsMutable();
        super.addAll(values, opreatePlayer_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate_player = 1;</code>
       *
       * <pre>
       *比牌玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        opreatePlayer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 win_player = 2;
      private int winPlayer_ ;
      /**
       * <code>optional int32 win_player = 2;</code>
       *
       * <pre>
       *比牌赢得玩家
       * </pre>
       */
      public boolean hasWinPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 win_player = 2;</code>
       *
       * <pre>
       *比牌赢得玩家
       * </pre>
       */
      public int getWinPlayer() {
        return winPlayer_;
      }
      /**
       * <code>optional int32 win_player = 2;</code>
       *
       * <pre>
       *比牌赢得玩家
       * </pre>
       */
      public Builder setWinPlayer(int value) {
        bitField0_ |= 0x00000002;
        winPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_player = 2;</code>
       *
       * <pre>
       *比牌赢得玩家
       * </pre>
       */
      public Builder clearWinPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        winPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 3;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 3;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 4;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 4;</code>
       *
       * <pre>
       *加注分数
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 add_jetton_score = 4;</code>
       *
       * <pre>
       *加注分数
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 4;</code>
       *
       * <pre>
       *加注分数
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000008;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 4;</code>
       *
       * <pre>
       *加注分数
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 5;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000010;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 6;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000020;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 6;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_total_score = 7;
      private int jettonTotalScore_ ;
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public boolean hasJettonTotalScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public int getJettonTotalScore() {
        return jettonTotalScore_;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder setJettonTotalScore(int value) {
        bitField0_ |= 0x00000040;
        jettonTotalScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_total_score = 7;</code>
       *
       * <pre>
       *总下注
       * </pre>
       */
      public Builder clearJettonTotalScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonTotalScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Compare_Result)
    }

    static {
      defaultInstance = new Compare_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Compare_Result)
  }

  public interface Liang_Pai_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *亮牌玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *亮牌玩家
     * </pre>
     */
    int getOpreatePlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 card_count = 4;
    /**
     * <code>optional int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount();
  }
  /**
   * Protobuf type {@code zjh.Liang_Pai_Result}
   *
   * <pre>
   *亮牌结果
   * </pre>
   */
  public static final class Liang_Pai_Result extends
      com.google.protobuf.GeneratedMessage
      implements Liang_Pai_ResultOrBuilder {
    // Use Liang_Pai_Result.newBuilder() to construct.
    private Liang_Pai_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Liang_Pai_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Liang_Pai_Result defaultInstance;
    public static Liang_Pai_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Liang_Pai_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Liang_Pai_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              cardCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Liang_Pai_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Liang_Pai_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.class, protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Liang_Pai_Result> PARSER =
        new com.google.protobuf.AbstractParser<Liang_Pai_Result>() {
      public Liang_Pai_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Liang_Pai_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Liang_Pai_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *亮牌玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *亮牌玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, cardCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Liang_Pai_Result}
     *
     * <pre>
     *亮牌结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Liang_Pai_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Liang_Pai_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Liang_Pai_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.class, protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Liang_Pai_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result result = new protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardCount_ = cardCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Liang_Pai_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *亮牌玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *亮牌玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *亮牌玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *亮牌玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 card_count = 4;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000004;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Liang_Pai_Result)
    }

    static {
      defaultInstance = new Liang_Pai_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Liang_Pai_Result)
  }

  public interface Gen_Dadodi_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 is_gen_dao_di = 1;
    /**
     * <code>optional int32 is_gen_dao_di = 1;</code>
     *
     * <pre>
     *是否跟到底 0:否，1：是
     * </pre>
     */
    boolean hasIsGenDaoDi();
    /**
     * <code>optional int32 is_gen_dao_di = 1;</code>
     *
     * <pre>
     *是否跟到底 0:否，1：是
     * </pre>
     */
    int getIsGenDaoDi();
  }
  /**
   * Protobuf type {@code zjh.Gen_Dadodi_Result}
   *
   * <pre>
   *跟到底结果
   * </pre>
   */
  public static final class Gen_Dadodi_Result extends
      com.google.protobuf.GeneratedMessage
      implements Gen_Dadodi_ResultOrBuilder {
    // Use Gen_Dadodi_Result.newBuilder() to construct.
    private Gen_Dadodi_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Gen_Dadodi_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Gen_Dadodi_Result defaultInstance;
    public static Gen_Dadodi_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Gen_Dadodi_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Gen_Dadodi_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isGenDaoDi_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Gen_Dadodi_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Gen_Dadodi_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.class, protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Gen_Dadodi_Result> PARSER =
        new com.google.protobuf.AbstractParser<Gen_Dadodi_Result>() {
      public Gen_Dadodi_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Gen_Dadodi_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Gen_Dadodi_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 is_gen_dao_di = 1;
    public static final int IS_GEN_DAO_DI_FIELD_NUMBER = 1;
    private int isGenDaoDi_;
    /**
     * <code>optional int32 is_gen_dao_di = 1;</code>
     *
     * <pre>
     *是否跟到底 0:否，1：是
     * </pre>
     */
    public boolean hasIsGenDaoDi() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 is_gen_dao_di = 1;</code>
     *
     * <pre>
     *是否跟到底 0:否，1：是
     * </pre>
     */
    public int getIsGenDaoDi() {
      return isGenDaoDi_;
    }

    private void initFields() {
      isGenDaoDi_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, isGenDaoDi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, isGenDaoDi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Gen_Dadodi_Result}
     *
     * <pre>
     *跟到底结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Gen_Dadodi_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Gen_Dadodi_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.class, protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isGenDaoDi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Gen_Dadodi_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result result = new protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isGenDaoDi_ = isGenDaoDi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result.getDefaultInstance()) return this;
        if (other.hasIsGenDaoDi()) {
          setIsGenDaoDi(other.getIsGenDaoDi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Gen_Dadodi_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 is_gen_dao_di = 1;
      private int isGenDaoDi_ ;
      /**
       * <code>optional int32 is_gen_dao_di = 1;</code>
       *
       * <pre>
       *是否跟到底 0:否，1：是
       * </pre>
       */
      public boolean hasIsGenDaoDi() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 is_gen_dao_di = 1;</code>
       *
       * <pre>
       *是否跟到底 0:否，1：是
       * </pre>
       */
      public int getIsGenDaoDi() {
        return isGenDaoDi_;
      }
      /**
       * <code>optional int32 is_gen_dao_di = 1;</code>
       *
       * <pre>
       *是否跟到底 0:否，1：是
       * </pre>
       */
      public Builder setIsGenDaoDi(int value) {
        bitField0_ |= 0x00000001;
        isGenDaoDi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_gen_dao_di = 1;</code>
       *
       * <pre>
       *是否跟到底 0:否，1：是
       * </pre>
       */
      public Builder clearIsGenDaoDi() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isGenDaoDi_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Gen_Dadodi_Result)
    }

    static {
      defaultInstance = new Gen_Dadodi_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Gen_Dadodi_Result)
  }

  public interface Pin_Score_BeginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 display_time = 1;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code zjh.Pin_Score_Begin}
   */
  public static final class Pin_Score_Begin extends
      com.google.protobuf.GeneratedMessage
      implements Pin_Score_BeginOrBuilder {
    // Use Pin_Score_Begin.newBuilder() to construct.
    private Pin_Score_Begin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pin_Score_Begin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pin_Score_Begin defaultInstance;
    public static Pin_Score_Begin getDefaultInstance() {
      return defaultInstance;
    }

    public Pin_Score_Begin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pin_Score_Begin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Begin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Begin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.Builder.class);
    }

    public static com.google.protobuf.Parser<Pin_Score_Begin> PARSER =
        new com.google.protobuf.AbstractParser<Pin_Score_Begin>() {
      public Pin_Score_Begin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pin_Score_Begin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pin_Score_Begin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 display_time = 1;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 1;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Pin_Score_Begin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Pin_Score_BeginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Begin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Begin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Begin_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin build() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin result = new protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin.getDefaultInstance()) return this;
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Pin_Score_Begin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 display_time = 1;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000001;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Pin_Score_Begin)
    }

    static {
      defaultInstance = new Pin_Score_Begin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Pin_Score_Begin)
  }

  public interface Pin_Score_ResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_player = 1;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *拼分玩家
     * </pre>
     */
    boolean hasOpreatePlayer();
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *拼分玩家
     * </pre>
     */
    int getOpreatePlayer();

    // optional int32 is_pin = 2;
    /**
     * <code>optional int32 is_pin = 2;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    boolean hasIsPin();
    /**
     * <code>optional int32 is_pin = 2;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    int getIsPin();
  }
  /**
   * Protobuf type {@code zjh.Pin_Score_Response}
   */
  public static final class Pin_Score_Response extends
      com.google.protobuf.GeneratedMessage
      implements Pin_Score_ResponseOrBuilder {
    // Use Pin_Score_Response.newBuilder() to construct.
    private Pin_Score_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pin_Score_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pin_Score_Response defaultInstance;
    public static Pin_Score_Response getDefaultInstance() {
      return defaultInstance;
    }

    public Pin_Score_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pin_Score_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreatePlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isPin_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<Pin_Score_Response> PARSER =
        new com.google.protobuf.AbstractParser<Pin_Score_Response>() {
      public Pin_Score_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pin_Score_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pin_Score_Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_player = 1;
    public static final int OPREATE_PLAYER_FIELD_NUMBER = 1;
    private int opreatePlayer_;
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *拼分玩家
     * </pre>
     */
    public boolean hasOpreatePlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_player = 1;</code>
     *
     * <pre>
     *拼分玩家
     * </pre>
     */
    public int getOpreatePlayer() {
      return opreatePlayer_;
    }

    // optional int32 is_pin = 2;
    public static final int IS_PIN_FIELD_NUMBER = 2;
    private int isPin_;
    /**
     * <code>optional int32 is_pin = 2;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    public boolean hasIsPin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 is_pin = 2;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    public int getIsPin() {
      return isPin_;
    }

    private void initFields() {
      opreatePlayer_ = 0;
      isPin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, isPin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreatePlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isPin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Pin_Score_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Pin_Score_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreatePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isPin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Response_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response build() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response result = new protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreatePlayer_ = opreatePlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isPin_ = isPin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response.getDefaultInstance()) return this;
        if (other.hasOpreatePlayer()) {
          setOpreatePlayer(other.getOpreatePlayer());
        }
        if (other.hasIsPin()) {
          setIsPin(other.getIsPin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Pin_Score_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_player = 1;
      private int opreatePlayer_ ;
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *拼分玩家
       * </pre>
       */
      public boolean hasOpreatePlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *拼分玩家
       * </pre>
       */
      public int getOpreatePlayer() {
        return opreatePlayer_;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *拼分玩家
       * </pre>
       */
      public Builder setOpreatePlayer(int value) {
        bitField0_ |= 0x00000001;
        opreatePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_player = 1;</code>
       *
       * <pre>
       *拼分玩家
       * </pre>
       */
      public Builder clearOpreatePlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreatePlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_pin = 2;
      private int isPin_ ;
      /**
       * <code>optional int32 is_pin = 2;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public boolean hasIsPin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_pin = 2;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public int getIsPin() {
        return isPin_;
      }
      /**
       * <code>optional int32 is_pin = 2;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder setIsPin(int value) {
        bitField0_ |= 0x00000002;
        isPin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_pin = 2;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder clearIsPin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isPin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Pin_Score_Response)
    }

    static {
      defaultInstance = new Pin_Score_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Pin_Score_Response)
  }

  public interface Pin_Score_ResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 is_pin = 1;
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    java.util.List<java.lang.Integer> getIsPinList();
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    int getIsPinCount();
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    int getIsPin(int index);

    // optional int32 is_succeed = 2;
    /**
     * <code>optional int32 is_succeed = 2;</code>
     *
     * <pre>
     *-1还有玩家没选 0:不成功 1：成功
     * </pre>
     */
    boolean hasIsSucceed();
    /**
     * <code>optional int32 is_succeed = 2;</code>
     *
     * <pre>
     *-1还有玩家没选 0:不成功 1：成功
     * </pre>
     */
    int getIsSucceed();
  }
  /**
   * Protobuf type {@code zjh.Pin_Score_Result}
   */
  public static final class Pin_Score_Result extends
      com.google.protobuf.GeneratedMessage
      implements Pin_Score_ResultOrBuilder {
    // Use Pin_Score_Result.newBuilder() to construct.
    private Pin_Score_Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pin_Score_Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pin_Score_Result defaultInstance;
    public static Pin_Score_Result getDefaultInstance() {
      return defaultInstance;
    }

    public Pin_Score_Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pin_Score_Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                isPin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              isPin_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                isPin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                isPin_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isSucceed_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          isPin_ = java.util.Collections.unmodifiableList(isPin_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Pin_Score_Result> PARSER =
        new com.google.protobuf.AbstractParser<Pin_Score_Result>() {
      public Pin_Score_Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pin_Score_Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pin_Score_Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 is_pin = 1;
    public static final int IS_PIN_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> isPin_;
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIsPinList() {
      return isPin_;
    }
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    public int getIsPinCount() {
      return isPin_.size();
    }
    /**
     * <code>repeated int32 is_pin = 1;</code>
     *
     * <pre>
     *0不拼 1:拼
     * </pre>
     */
    public int getIsPin(int index) {
      return isPin_.get(index);
    }

    // optional int32 is_succeed = 2;
    public static final int IS_SUCCEED_FIELD_NUMBER = 2;
    private int isSucceed_;
    /**
     * <code>optional int32 is_succeed = 2;</code>
     *
     * <pre>
     *-1还有玩家没选 0:不成功 1：成功
     * </pre>
     */
    public boolean hasIsSucceed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 is_succeed = 2;</code>
     *
     * <pre>
     *-1还有玩家没选 0:不成功 1：成功
     * </pre>
     */
    public int getIsSucceed() {
      return isSucceed_;
    }

    private void initFields() {
      isPin_ = java.util.Collections.emptyList();
      isSucceed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < isPin_.size(); i++) {
        output.writeInt32(1, isPin_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isSucceed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < isPin_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(isPin_.get(i));
        }
        size += dataSize;
        size += 1 * getIsPinList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isSucceed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Pin_Score_Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Pin_Score_ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.class, protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isPin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isSucceed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Pin_Score_Result_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result build() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result result = new protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          isPin_ = java.util.Collections.unmodifiableList(isPin_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.isPin_ = isPin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isSucceed_ = isSucceed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result.getDefaultInstance()) return this;
        if (!other.isPin_.isEmpty()) {
          if (isPin_.isEmpty()) {
            isPin_ = other.isPin_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIsPinIsMutable();
            isPin_.addAll(other.isPin_);
          }
          onChanged();
        }
        if (other.hasIsSucceed()) {
          setIsSucceed(other.getIsSucceed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Pin_Score_Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 is_pin = 1;
      private java.util.List<java.lang.Integer> isPin_ = java.util.Collections.emptyList();
      private void ensureIsPinIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          isPin_ = new java.util.ArrayList<java.lang.Integer>(isPin_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIsPinList() {
        return java.util.Collections.unmodifiableList(isPin_);
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public int getIsPinCount() {
        return isPin_.size();
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public int getIsPin(int index) {
        return isPin_.get(index);
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder setIsPin(
          int index, int value) {
        ensureIsPinIsMutable();
        isPin_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder addIsPin(int value) {
        ensureIsPinIsMutable();
        isPin_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder addAllIsPin(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsPinIsMutable();
        super.addAll(values, isPin_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_pin = 1;</code>
       *
       * <pre>
       *0不拼 1:拼
       * </pre>
       */
      public Builder clearIsPin() {
        isPin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 is_succeed = 2;
      private int isSucceed_ ;
      /**
       * <code>optional int32 is_succeed = 2;</code>
       *
       * <pre>
       *-1还有玩家没选 0:不成功 1：成功
       * </pre>
       */
      public boolean hasIsSucceed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_succeed = 2;</code>
       *
       * <pre>
       *-1还有玩家没选 0:不成功 1：成功
       * </pre>
       */
      public int getIsSucceed() {
        return isSucceed_;
      }
      /**
       * <code>optional int32 is_succeed = 2;</code>
       *
       * <pre>
       *-1还有玩家没选 0:不成功 1：成功
       * </pre>
       */
      public Builder setIsSucceed(int value) {
        bitField0_ |= 0x00000002;
        isSucceed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_succeed = 2;</code>
       *
       * <pre>
       *-1还有玩家没选 0:不成功 1：成功
       * </pre>
       */
      public Builder clearIsSucceed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSucceed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Pin_Score_Result)
    }

    static {
      defaultInstance = new Pin_Score_Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Pin_Score_Result)
  }

  public interface User_StatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 is_ongame = 1;
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    java.util.List<java.lang.Integer> getIsOngameList();
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    int getIsOngameCount();
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    int getIsOngame(int index);
  }
  /**
   * Protobuf type {@code zjh.User_Status}
   */
  public static final class User_Status extends
      com.google.protobuf.GeneratedMessage
      implements User_StatusOrBuilder {
    // Use User_Status.newBuilder() to construct.
    private User_Status(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private User_Status(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final User_Status defaultInstance;
    public static User_Status getDefaultInstance() {
      return defaultInstance;
    }

    public User_Status getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private User_Status(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                isOngame_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              isOngame_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                isOngame_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                isOngame_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          isOngame_ = java.util.Collections.unmodifiableList(isOngame_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Status_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Status_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.User_Status.class, protobuf.clazz.zjh.ZjhRsp.User_Status.Builder.class);
    }

    public static com.google.protobuf.Parser<User_Status> PARSER =
        new com.google.protobuf.AbstractParser<User_Status>() {
      public User_Status parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User_Status(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<User_Status> getParserForType() {
      return PARSER;
    }

    // repeated int32 is_ongame = 1;
    public static final int IS_ONGAME_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> isOngame_;
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIsOngameList() {
      return isOngame_;
    }
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    public int getIsOngameCount() {
      return isOngame_.size();
    }
    /**
     * <code>repeated int32 is_ongame = 1;</code>
     *
     * <pre>
     *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
     * </pre>
     */
    public int getIsOngame(int index) {
      return isOngame_.get(index);
    }

    private void initFields() {
      isOngame_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < isOngame_.size(); i++) {
        output.writeInt32(1, isOngame_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < isOngame_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(isOngame_.get(i));
        }
        size += dataSize;
        size += 1 * getIsOngameList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.User_Status parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.User_Status prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.User_Status}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.User_StatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Status_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.User_Status.class, protobuf.clazz.zjh.ZjhRsp.User_Status.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.User_Status.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isOngame_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_User_Status_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Status getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.User_Status.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Status build() {
        protobuf.clazz.zjh.ZjhRsp.User_Status result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.User_Status buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.User_Status result = new protobuf.clazz.zjh.ZjhRsp.User_Status(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          isOngame_ = java.util.Collections.unmodifiableList(isOngame_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.isOngame_ = isOngame_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.User_Status) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.User_Status)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.User_Status other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.User_Status.getDefaultInstance()) return this;
        if (!other.isOngame_.isEmpty()) {
          if (isOngame_.isEmpty()) {
            isOngame_ = other.isOngame_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIsOngameIsMutable();
            isOngame_.addAll(other.isOngame_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.User_Status parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.User_Status) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 is_ongame = 1;
      private java.util.List<java.lang.Integer> isOngame_ = java.util.Collections.emptyList();
      private void ensureIsOngameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          isOngame_ = new java.util.ArrayList<java.lang.Integer>(isOngame_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIsOngameList() {
        return java.util.Collections.unmodifiableList(isOngame_);
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public int getIsOngameCount() {
        return isOngame_.size();
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public int getIsOngame(int index) {
        return isOngame_.get(index);
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public Builder setIsOngame(
          int index, int value) {
        ensureIsOngameIsMutable();
        isOngame_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public Builder addIsOngame(int value) {
        ensureIsOngameIsMutable();
        isOngame_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public Builder addAllIsOngame(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsOngameIsMutable();
        super.addAll(values, isOngame_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is_ongame = 1;</code>
       *
       * <pre>
       *是否参与游戏 -1不在位置上，0在位置但不参与游戏 1参与游戏
       * </pre>
       */
      public Builder clearIsOngame() {
        isOngame_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.User_Status)
    }

    static {
      defaultInstance = new User_Status(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.User_Status)
  }

  public interface Opreate_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
     * </pre>
     */
    int getOpreateType();

    // optional int32 add_jetton_score = 2;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    int getAddJettonScore();

    // optional int32 compare_player = 3;
    /**
     * <code>optional int32 compare_player = 3;</code>
     *
     * <pre>
     *被比牌玩家
     * </pre>
     */
    boolean hasComparePlayer();
    /**
     * <code>optional int32 compare_player = 3;</code>
     *
     * <pre>
     *被比牌玩家
     * </pre>
     */
    int getComparePlayer();
  }
  /**
   * Protobuf type {@code zjh.Opreate_Request}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_RequestOrBuilder {
    // Use Opreate_Request.newBuilder() to construct.
    private Opreate_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Request defaultInstance;
    public static Opreate_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              comparePlayer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Opreate_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Opreate_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.zjh.ZjhRsp.Opreate_Request.class, protobuf.clazz.zjh.ZjhRsp.Opreate_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Request>() {
      public Opreate_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 add_jetton_score = 2;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 2;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional int32 compare_player = 3;
    public static final int COMPARE_PLAYER_FIELD_NUMBER = 3;
    private int comparePlayer_;
    /**
     * <code>optional int32 compare_player = 3;</code>
     *
     * <pre>
     *被比牌玩家
     * </pre>
     */
    public boolean hasComparePlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 compare_player = 3;</code>
     *
     * <pre>
     *被比牌玩家
     * </pre>
     */
    public int getComparePlayer() {
      return comparePlayer_;
    }

    private void initFields() {
      opreateType_ = 0;
      addJettonScore_ = 0;
      comparePlayer_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, comparePlayer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, comparePlayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.zjh.ZjhRsp.Opreate_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.zjh.ZjhRsp.Opreate_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zjh.Opreate_Request}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.zjh.ZjhRsp.Opreate_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Opreate_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Opreate_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.zjh.ZjhRsp.Opreate_Request.class, protobuf.clazz.zjh.ZjhRsp.Opreate_Request.Builder.class);
      }

      // Construct using protobuf.clazz.zjh.ZjhRsp.Opreate_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        comparePlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.zjh.ZjhRsp.internal_static_zjh_Opreate_Request_descriptor;
      }

      public protobuf.clazz.zjh.ZjhRsp.Opreate_Request getDefaultInstanceForType() {
        return protobuf.clazz.zjh.ZjhRsp.Opreate_Request.getDefaultInstance();
      }

      public protobuf.clazz.zjh.ZjhRsp.Opreate_Request build() {
        protobuf.clazz.zjh.ZjhRsp.Opreate_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.zjh.ZjhRsp.Opreate_Request buildPartial() {
        protobuf.clazz.zjh.ZjhRsp.Opreate_Request result = new protobuf.clazz.zjh.ZjhRsp.Opreate_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.comparePlayer_ = comparePlayer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.zjh.ZjhRsp.Opreate_Request) {
          return mergeFrom((protobuf.clazz.zjh.ZjhRsp.Opreate_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.zjh.ZjhRsp.Opreate_Request other) {
        if (other == protobuf.clazz.zjh.ZjhRsp.Opreate_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasComparePlayer()) {
          setComparePlayer(other.getComparePlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.zjh.ZjhRsp.Opreate_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.zjh.ZjhRsp.Opreate_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：跟注，2：看牌，3：放弃，4：比牌,5:加注,6:亮牌,7:取消比牌,8:跟到底 9：拼 10：不拼 11:坐下
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 2;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000002;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 compare_player = 3;
      private int comparePlayer_ ;
      /**
       * <code>optional int32 compare_player = 3;</code>
       *
       * <pre>
       *被比牌玩家
       * </pre>
       */
      public boolean hasComparePlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 compare_player = 3;</code>
       *
       * <pre>
       *被比牌玩家
       * </pre>
       */
      public int getComparePlayer() {
        return comparePlayer_;
      }
      /**
       * <code>optional int32 compare_player = 3;</code>
       *
       * <pre>
       *被比牌玩家
       * </pre>
       */
      public Builder setComparePlayer(int value) {
        bitField0_ |= 0x00000004;
        comparePlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 compare_player = 3;</code>
       *
       * <pre>
       *被比牌玩家
       * </pre>
       */
      public Builder clearComparePlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        comparePlayer_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:zjh.Opreate_Request)
    }

    static {
      defaultInstance = new Opreate_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:zjh.Opreate_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_RoomInfoZjh_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_RoomInfoZjh_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_RoomPlayerResponseZjh_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_RoomPlayerResponseZjh_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_PukeGameEndZjh_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_PukeGameEndZjh_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_TableResponseZJH_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_TableResponseZJH_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_GameStartZJH_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_GameStartZJH_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Send_card_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Send_card_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Jetton_Round_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Jetton_Round_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_User_Can_Opreate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_User_Can_Opreate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Score_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Score_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Give_Up_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Give_Up_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Look_Card_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Look_Card_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Can_Compare_User_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Can_Compare_User_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Compare_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Compare_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Liang_Pai_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Liang_Pai_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Gen_Dadodi_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Gen_Dadodi_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Pin_Score_Begin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Pin_Score_Begin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Pin_Score_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Pin_Score_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Pin_Score_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Pin_Score_Result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_User_Status_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_User_Status_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zjh_Opreate_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zjh_Opreate_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022zjh/zjhProto.proto\022\003zjh\032\024basic/protoco" +
      "l.proto\032\022basic/common.proto\"\311\002\n\013RoomInfo" +
      "Zjh\022\017\n\007room_id\030\001 \001(\005\022\027\n\017game_type_index\030" +
      "\004 \001(\005\022\027\n\017game_rule_index\030\002 \001(\005\022\032\n\022game_r" +
      "ule_index_ex\030\014 \003(\005\022\025\n\rgame_rule_des\030\003 \001(" +
      "\t\022\022\n\ngame_round\030\005 \001(\005\022\021\n\tcur_round\030\006 \001(\005" +
      "\022\023\n\013game_status\030\007 \001(\005\022\030\n\020create_player_i" +
      "d\030\010 \001(\003\022\027\n\017begin_left_card\030\t \001(\005\022\026\n\016_ban" +
      "ker_player\030\n \001(\005\022\023\n\013create_name\030\013 \001(\t\022(\n" +
      "\tnew_rules\030\r \001(\0132\025.CommonGameRulesProto\"",
      "\230\002\n\025RoomPlayerResponseZjh\022\022\n\naccount_id\030" +
      "\001 \001(\003\022\021\n\tuser_name\030\002 \001(\t\022\024\n\014head_img_url" +
      "\030\003 \001(\t\022\022\n\nseat_index\030\004 \001(\005\022\n\n\002ip\030\005 \001(\t\022\016" +
      "\n\006online\030\006 \001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005score\030\010 \001" +
      "(\002\022\r\n\005ready\030\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022%\n\rlo" +
      "cationInfor\030\013 \001(\0132\016.LocationInfor\022\022\n\nis_" +
      "trustee\030\014 \001(\010\022\r\n\005money\030\r \001(\003\022\014\n\004gold\030\016 \001" +
      "(\003\"\202\003\n\016PukeGameEndZjh\022#\n\troom_info\030\001 \001(\013" +
      "2\020.zjh.RoomInfoZjh\022\021\n\tcur_round\030\002 \001(\005\022\022\n" +
      "\ngame_round\030\003 \001(\005\022\022\n\ncard_count\030\004 \003(\005\022\'\n",
      "\ncards_data\030\005 \003(\0132\023.Int32ArrayResponse\022\021" +
      "\n\tend_score\030\006 \003(\005\022\022\n\nplayer_num\030\007 \001(\005\022\016\n" +
      "\006reason\030\010 \001(\005\022+\n\007players\030\t \003(\0132\032.zjh.Roo" +
      "mPlayerResponseZjh\022\017\n\007is_lose\030\020 \003(\010\022\025\n\ra" +
      "ll_end_score\030\n \003(\005\022\025\n\rend_score_max\030\013 \003(" +
      "\005\022\017\n\007win_num\030\014 \003(\005\022\020\n\010lose_num\030\r \003(\005\022\016\n\006" +
      "winner\030\016 \003(\005\022\021\n\tcard_type\030\017 \003(\005\"\226\003\n\020Tabl" +
      "eResponseZJH\022\025\n\rbanker_player\030\001 \001(\005\022\026\n\016c" +
      "urrent_player\030\002 \001(\005\022\023\n\013prev_player\030\003 \001(\005" +
      "\022#\n\troom_info\030\004 \001(\0132\020.zjh.RoomInfoZjh\022+\n",
      "\007players\030\005 \003(\0132\032.zjh.RoomPlayerResponseZ" +
      "jh\022\022\n\ncard_count\030\006 \003(\005\022\'\n\ncards_data\030\007 \003" +
      "(\0132\023.Int32ArrayResponse\022\022\n\nis_give_up\030\010 " +
      "\003(\010\022\025\n\ris_look_cards\030\t \003(\010\022\021\n\tis_isLose\030" +
      "\n \003(\010\022\024\n\014jetton_score\030\013 \003(\005\022\024\n\014display_t" +
      "ime\030\014 \001(\005\022\032\n\022jetton_total_score\030\r \001(\005\022\022\n" +
      "\ncards_type\030\016 \001(\005\022\025\n\rdan_zhu_score\030\017 \001(\005" +
      "\"w\n\014GameStartZJH\022#\n\troom_info\030\001 \001(\0132\020.zj" +
      "h.RoomInfoZjh\022+\n\007players\030\002 \003(\0132\032.zjh.Roo" +
      "mPlayerResponseZjh\022\025\n\rdan_zhu_score\030\003 \001(",
      "\005\"\326\001\n\tSend_card\022\'\n\ncards_data\030\001 \003(\0132\023.In" +
      "t32ArrayResponse\022\022\n\ncard_count\030\002 \003(\005\022\024\n\014" +
      "display_time\030\003 \001(\005\022\026\n\016current_player\030\004 \001" +
      "(\005\022\032\n\022jetton_total_score\030\005 \001(\005\022\022\n\ncell_s" +
      "core\030\006 \001(\005\022\030\n\020jetton_score_max\030\007 \001(\005\022\024\n\014" +
      "jetton_score\030\010 \003(\005\"X\n\014Jetton_Round\022\024\n\014je" +
      "tton_round\030\001 \001(\005\022\031\n\021_cur_jetton_round\030\002 " +
      "\001(\005\022\027\n\017is_round_finish\030\003 \001(\005\"\234\002\n\020User_Ca" +
      "n_Opreate\022\021\n\tlook_card\030\001 \001(\005\022\017\n\007give_up\030" +
      "\002 \001(\005\022\017\n\007gen_zhu\030\003 \001(\005\022\021\n\tadd_score\030\004 \001(",
      "\005\022\024\n\014compare_card\030\005 \001(\005\022\021\n\tliang_pai\030\006 \001" +
      "(\005\022\030\n\020add_jetton_score\030\007 \003(\005\022\031\n\021can_comp" +
      "are_round\030\010 \001(\005\022\017\n\007xia_zhu\030\t \001(\005\022\017\n\007quan" +
      "_ya\030\n \001(\005\022\022\n\ngen_dao_di\030\013 \001(\005\022\025\n\rmin_add" +
      "_score\030\014 \001(\005\022\025\n\rmax_add_score\030\r \001(\005\"\375\001\n\014" +
      "Score_Result\022\030\n\020add_jetton_score\030\001 \001(\005\022\026" +
      "\n\016opreate_player\030\002 \001(\005\022\024\n\014jetton_score\030\003" +
      " \003(\005\022\027\n\017compare_opreate\030\004 \001(\005\022\026\n\016current" +
      "_player\030\005 \001(\005\022\026\n\016user_gen_score\030\006 \003(\005\022\032\n" +
      "\022jetton_total_score\030\007 \001(\005\022\024\n\014display_tim",
      "e\030\010 \001(\005\022\023\n\013jetton_type\030\t \001(\005\022\025\n\rdan_zhu_" +
      "score\030\n \001(\005\"o\n\016Give_Up_Result\022\026\n\016opreate" +
      "_player\030\001 \001(\005\022\027\n\017compare_opreate\030\002 \001(\005\022\026" +
      "\n\016current_player\030\003 \001(\005\022\024\n\014display_time\030\004" +
      " \001(\005\"R\n\020Look_Card_Result\022\026\n\016opreate_play" +
      "er\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\022\n\ncards_ty" +
      "pe\030\003 \001(\005\"\'\n\020Can_Compare_User\022\023\n\013user_pla" +
      "yer\030\001 \003(\005\"\266\001\n\016Compare_Result\022\026\n\016opreate_" +
      "player\030\001 \003(\005\022\022\n\nwin_player\030\002 \001(\005\022\024\n\014jett" +
      "on_score\030\003 \003(\005\022\030\n\020add_jetton_score\030\004 \001(\005",
      "\022\026\n\016current_player\030\005 \001(\005\022\024\n\014display_time" +
      "\030\006 \001(\005\022\032\n\022jetton_total_score\030\007 \001(\005\"R\n\020Li" +
      "ang_Pai_Result\022\026\n\016opreate_player\030\001 \001(\005\022\022" +
      "\n\ncards_data\030\002 \003(\005\022\022\n\ncard_count\030\004 \001(\005\"*" +
      "\n\021Gen_Dadodi_Result\022\025\n\ris_gen_dao_di\030\001 \001" +
      "(\005\"\'\n\017Pin_Score_Begin\022\024\n\014display_time\030\001 " +
      "\001(\005\"<\n\022Pin_Score_Response\022\026\n\016opreate_pla" +
      "yer\030\001 \001(\005\022\016\n\006is_pin\030\002 \001(\005\"6\n\020Pin_Score_R" +
      "esult\022\016\n\006is_pin\030\001 \003(\005\022\022\n\nis_succeed\030\002 \001(" +
      "\005\" \n\013User_Status\022\021\n\tis_ongame\030\001 \003(\005\"Y\n\017O",
      "preate_Request\022\024\n\014opreate_type\030\001 \001(\005\022\030\n\020" +
      "add_jetton_score\030\002 \001(\005\022\026\n\016compare_player" +
      "\030\003 \001(\005B\034\n\022protobuf.clazz.zjhB\006ZjhRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_zjh_RoomInfoZjh_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_zjh_RoomInfoZjh_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_RoomInfoZjh_descriptor,
              new java.lang.String[] { "RoomId", "GameTypeIndex", "GameRuleIndex", "GameRuleIndexEx", "GameRuleDes", "GameRound", "CurRound", "GameStatus", "CreatePlayerId", "BeginLeftCard", "BankerPlayer", "CreateName", "NewRules", });
          internal_static_zjh_RoomPlayerResponseZjh_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_zjh_RoomPlayerResponseZjh_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_RoomPlayerResponseZjh_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_zjh_PukeGameEndZjh_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_zjh_PukeGameEndZjh_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_PukeGameEndZjh_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "EndScore", "PlayerNum", "Reason", "Players", "IsLose", "AllEndScore", "EndScoreMax", "WinNum", "LoseNum", "Winner", "CardType", });
          internal_static_zjh_TableResponseZJH_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_zjh_TableResponseZJH_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_TableResponseZJH_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "RoomInfo", "Players", "CardCount", "CardsData", "IsGiveUp", "IsLookCards", "IsIsLose", "JettonScore", "DisplayTime", "JettonTotalScore", "CardsType", "DanZhuScore", });
          internal_static_zjh_GameStartZJH_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_zjh_GameStartZJH_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_GameStartZJH_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "DanZhuScore", });
          internal_static_zjh_Send_card_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_zjh_Send_card_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Send_card_descriptor,
              new java.lang.String[] { "CardsData", "CardCount", "DisplayTime", "CurrentPlayer", "JettonTotalScore", "CellScore", "JettonScoreMax", "JettonScore", });
          internal_static_zjh_Jetton_Round_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_zjh_Jetton_Round_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Jetton_Round_descriptor,
              new java.lang.String[] { "JettonRound", "CurJettonRound", "IsRoundFinish", });
          internal_static_zjh_User_Can_Opreate_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_zjh_User_Can_Opreate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_User_Can_Opreate_descriptor,
              new java.lang.String[] { "LookCard", "GiveUp", "GenZhu", "AddScore", "CompareCard", "LiangPai", "AddJettonScore", "CanCompareRound", "XiaZhu", "QuanYa", "GenDaoDi", "MinAddScore", "MaxAddScore", });
          internal_static_zjh_Score_Result_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_zjh_Score_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Score_Result_descriptor,
              new java.lang.String[] { "AddJettonScore", "OpreatePlayer", "JettonScore", "CompareOpreate", "CurrentPlayer", "UserGenScore", "JettonTotalScore", "DisplayTime", "JettonType", "DanZhuScore", });
          internal_static_zjh_Give_Up_Result_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_zjh_Give_Up_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Give_Up_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "CompareOpreate", "CurrentPlayer", "DisplayTime", });
          internal_static_zjh_Look_Card_Result_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_zjh_Look_Card_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Look_Card_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "CardsData", "CardsType", });
          internal_static_zjh_Can_Compare_User_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_zjh_Can_Compare_User_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Can_Compare_User_descriptor,
              new java.lang.String[] { "UserPlayer", });
          internal_static_zjh_Compare_Result_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_zjh_Compare_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Compare_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "WinPlayer", "JettonScore", "AddJettonScore", "CurrentPlayer", "DisplayTime", "JettonTotalScore", });
          internal_static_zjh_Liang_Pai_Result_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_zjh_Liang_Pai_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Liang_Pai_Result_descriptor,
              new java.lang.String[] { "OpreatePlayer", "CardsData", "CardCount", });
          internal_static_zjh_Gen_Dadodi_Result_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_zjh_Gen_Dadodi_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Gen_Dadodi_Result_descriptor,
              new java.lang.String[] { "IsGenDaoDi", });
          internal_static_zjh_Pin_Score_Begin_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_zjh_Pin_Score_Begin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Pin_Score_Begin_descriptor,
              new java.lang.String[] { "DisplayTime", });
          internal_static_zjh_Pin_Score_Response_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_zjh_Pin_Score_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Pin_Score_Response_descriptor,
              new java.lang.String[] { "OpreatePlayer", "IsPin", });
          internal_static_zjh_Pin_Score_Result_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_zjh_Pin_Score_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Pin_Score_Result_descriptor,
              new java.lang.String[] { "IsPin", "IsSucceed", });
          internal_static_zjh_User_Status_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_zjh_User_Status_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_User_Status_descriptor,
              new java.lang.String[] { "IsOngame", });
          internal_static_zjh_Opreate_Request_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_zjh_Opreate_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zjh_Opreate_Request_descriptor,
              new java.lang.String[] { "OpreateType", "AddJettonScore", "ComparePlayer", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
          protobuf.clazz.Common.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
