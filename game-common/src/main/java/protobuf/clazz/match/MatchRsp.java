// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match/MatchServer.proto

package protobuf.clazz.match;

public final class MatchRsp {
  private MatchRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code matchHeader.MatchS2SCmd}
   */
  public enum MatchS2SCmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>S2S_MATCH_START = 0;</code>
     *
     * <pre>
     * 比赛开始
     * </pre>
     */
    S2S_MATCH_START(0, 0),
    /**
     * <code>S2S_MATCH_OVER = 1;</code>
     *
     * <pre>
     * 比赛结束
     * </pre>
     */
    S2S_MATCH_OVER(1, 1),
    /**
     * <code>S2S_MATCH_CLIENT = 2;</code>
     *
     * <pre>
     *客户端协议转发
     * </pre>
     */
    S2S_MATCH_CLIENT(2, 2),
    /**
     * <code>S2S_MATCH_START_FAIL = 3;</code>
     *
     * <pre>
     * 開局失敗或異常，返回門票
     * </pre>
     */
    S2S_MATCH_START_FAIL(3, 3),
    /**
     * <code>S2S_MATCH_PLAYER_OUT = 4;</code>
     *
     * <pre>
     * 玩家被淘汰
     * </pre>
     */
    S2S_MATCH_PLAYER_OUT(4, 4),
    /**
     * <code>S2S_MATCH_PLAYER_TIMEOUT = 5;</code>
     *
     * <pre>
     * 玩家超时
     * </pre>
     */
    S2S_MATCH_PLAYER_TIMEOUT(5, 5),
    /**
     * <code>S2S_MATCH_PLAYER_LEAVE = 6;</code>
     *
     * <pre>
     * 退赛
     * </pre>
     */
    S2S_MATCH_PLAYER_LEAVE(6, 6),
    /**
     * <code>S2S_MATCH_TOP_OVER = 7;</code>
     *
     * <pre>
     * 冲榜赛比赛结束
     * </pre>
     */
    S2S_MATCH_TOP_OVER(7, 7),
    /**
     * <code>S2S_MATCH_TOP_STATUS = 8;</code>
     *
     * <pre>
     * 冲榜赛比赛状态
     * </pre>
     */
    S2S_MATCH_TOP_STATUS(8, 8),
    ;

    /**
     * <code>S2S_MATCH_START = 0;</code>
     *
     * <pre>
     * 比赛开始
     * </pre>
     */
    public static final int S2S_MATCH_START_VALUE = 0;
    /**
     * <code>S2S_MATCH_OVER = 1;</code>
     *
     * <pre>
     * 比赛结束
     * </pre>
     */
    public static final int S2S_MATCH_OVER_VALUE = 1;
    /**
     * <code>S2S_MATCH_CLIENT = 2;</code>
     *
     * <pre>
     *客户端协议转发
     * </pre>
     */
    public static final int S2S_MATCH_CLIENT_VALUE = 2;
    /**
     * <code>S2S_MATCH_START_FAIL = 3;</code>
     *
     * <pre>
     * 開局失敗或異常，返回門票
     * </pre>
     */
    public static final int S2S_MATCH_START_FAIL_VALUE = 3;
    /**
     * <code>S2S_MATCH_PLAYER_OUT = 4;</code>
     *
     * <pre>
     * 玩家被淘汰
     * </pre>
     */
    public static final int S2S_MATCH_PLAYER_OUT_VALUE = 4;
    /**
     * <code>S2S_MATCH_PLAYER_TIMEOUT = 5;</code>
     *
     * <pre>
     * 玩家超时
     * </pre>
     */
    public static final int S2S_MATCH_PLAYER_TIMEOUT_VALUE = 5;
    /**
     * <code>S2S_MATCH_PLAYER_LEAVE = 6;</code>
     *
     * <pre>
     * 退赛
     * </pre>
     */
    public static final int S2S_MATCH_PLAYER_LEAVE_VALUE = 6;
    /**
     * <code>S2S_MATCH_TOP_OVER = 7;</code>
     *
     * <pre>
     * 冲榜赛比赛结束
     * </pre>
     */
    public static final int S2S_MATCH_TOP_OVER_VALUE = 7;
    /**
     * <code>S2S_MATCH_TOP_STATUS = 8;</code>
     *
     * <pre>
     * 冲榜赛比赛状态
     * </pre>
     */
    public static final int S2S_MATCH_TOP_STATUS_VALUE = 8;


    public final int getNumber() { return value; }

    public static MatchS2SCmd valueOf(int value) {
      switch (value) {
        case 0: return S2S_MATCH_START;
        case 1: return S2S_MATCH_OVER;
        case 2: return S2S_MATCH_CLIENT;
        case 3: return S2S_MATCH_START_FAIL;
        case 4: return S2S_MATCH_PLAYER_OUT;
        case 5: return S2S_MATCH_PLAYER_TIMEOUT;
        case 6: return S2S_MATCH_PLAYER_LEAVE;
        case 7: return S2S_MATCH_TOP_OVER;
        case 8: return S2S_MATCH_TOP_STATUS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchS2SCmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MatchS2SCmd>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchS2SCmd>() {
            public MatchS2SCmd findValueByNumber(int number) {
              return MatchS2SCmd.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.getDescriptor().getEnumTypes().get(0);
    }

    private static final MatchS2SCmd[] VALUES = values();

    public static MatchS2SCmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MatchS2SCmd(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:matchHeader.MatchS2SCmd)
  }

  public interface MatchS2SRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .matchHeader.MatchS2SCmd cmd = 1;
    /**
     * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
     */
    boolean hasCmd();
    /**
     * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchS2SCmd getCmd();

    // optional .matchHeader.MatchServerStartProto matchStart = 2;
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    boolean hasMatchStart();
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerStartProto getMatchStart();
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder getMatchStartOrBuilder();

    // optional .matchHeader.MatchServerOverProto matchOver = 3;
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    boolean hasMatchOver();
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerOverProto getMatchOver();
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder getMatchOverOrBuilder();

    // optional .matchHeader.MatchClientRequestWrap clientRequest = 4;
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    boolean hasClientRequest();
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchClientRequestWrap getClientRequest();
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder getClientRequestOrBuilder();

    // optional .matchHeader.MatchBaseRequest base = 5;
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    boolean hasBase();
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchBaseRequest getBase();
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder getBaseOrBuilder();

    // optional .matchHeader.MatchServerOutProto playerOut = 6;
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    boolean hasPlayerOut();
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerOutProto getPlayerOut();
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder getPlayerOutOrBuilder();

    // optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    boolean hasMatchTopOver();
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerTopOverProto getMatchTopOver();
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder getMatchTopOverOrBuilder();

    // optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    boolean hasMatchTopStatus();
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto getMatchTopStatus();
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder getMatchTopStatusOrBuilder();
  }
  /**
   * Protobuf type {@code matchHeader.MatchS2SRequest}
   */
  public static final class MatchS2SRequest extends
      com.google.protobuf.GeneratedMessage
      implements MatchS2SRequestOrBuilder {
    // Use MatchS2SRequest.newBuilder() to construct.
    private MatchS2SRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchS2SRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchS2SRequest defaultInstance;
    public static MatchS2SRequest getDefaultInstance() {
      return defaultInstance;
    }

    public MatchS2SRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchS2SRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              protobuf.clazz.match.MatchRsp.MatchS2SCmd value = protobuf.clazz.match.MatchRsp.MatchS2SCmd.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cmd_ = value;
              }
              break;
            }
            case 18: {
              protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = matchStart_.toBuilder();
              }
              matchStart_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerStartProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matchStart_);
                matchStart_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = matchOver_.toBuilder();
              }
              matchOver_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerOverProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matchOver_);
                matchOver_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = clientRequest_.toBuilder();
              }
              clientRequest_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientRequest_);
                clientRequest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = base_.toBuilder();
              }
              base_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchBaseRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(base_);
                base_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playerOut_.toBuilder();
              }
              playerOut_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerOutProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerOut_);
                playerOut_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = matchTopOver_.toBuilder();
              }
              matchTopOver_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matchTopOver_);
                matchTopOver_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = matchTopStatus_.toBuilder();
              }
              matchTopStatus_ = input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matchTopStatus_);
                matchTopStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchS2SRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchS2SRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchS2SRequest.class, protobuf.clazz.match.MatchRsp.MatchS2SRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchS2SRequest> PARSER =
        new com.google.protobuf.AbstractParser<MatchS2SRequest>() {
      public MatchS2SRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchS2SRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchS2SRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .matchHeader.MatchS2SCmd cmd = 1;
    public static final int CMD_FIELD_NUMBER = 1;
    private protobuf.clazz.match.MatchRsp.MatchS2SCmd cmd_;
    /**
     * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchS2SCmd getCmd() {
      return cmd_;
    }

    // optional .matchHeader.MatchServerStartProto matchStart = 2;
    public static final int MATCHSTART_FIELD_NUMBER = 2;
    private protobuf.clazz.match.MatchRsp.MatchServerStartProto matchStart_;
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    public boolean hasMatchStart() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerStartProto getMatchStart() {
      return matchStart_;
    }
    /**
     * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder getMatchStartOrBuilder() {
      return matchStart_;
    }

    // optional .matchHeader.MatchServerOverProto matchOver = 3;
    public static final int MATCHOVER_FIELD_NUMBER = 3;
    private protobuf.clazz.match.MatchRsp.MatchServerOverProto matchOver_;
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    public boolean hasMatchOver() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerOverProto getMatchOver() {
      return matchOver_;
    }
    /**
     * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder getMatchOverOrBuilder() {
      return matchOver_;
    }

    // optional .matchHeader.MatchClientRequestWrap clientRequest = 4;
    public static final int CLIENTREQUEST_FIELD_NUMBER = 4;
    private protobuf.clazz.match.MatchRsp.MatchClientRequestWrap clientRequest_;
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    public boolean hasClientRequest() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap getClientRequest() {
      return clientRequest_;
    }
    /**
     * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder getClientRequestOrBuilder() {
      return clientRequest_;
    }

    // optional .matchHeader.MatchBaseRequest base = 5;
    public static final int BASE_FIELD_NUMBER = 5;
    private protobuf.clazz.match.MatchRsp.MatchBaseRequest base_;
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchBaseRequest getBase() {
      return base_;
    }
    /**
     * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder getBaseOrBuilder() {
      return base_;
    }

    // optional .matchHeader.MatchServerOutProto playerOut = 6;
    public static final int PLAYEROUT_FIELD_NUMBER = 6;
    private protobuf.clazz.match.MatchRsp.MatchServerOutProto playerOut_;
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    public boolean hasPlayerOut() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerOutProto getPlayerOut() {
      return playerOut_;
    }
    /**
     * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder getPlayerOutOrBuilder() {
      return playerOut_;
    }

    // optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;
    public static final int MATCHTOPOVER_FIELD_NUMBER = 7;
    private protobuf.clazz.match.MatchRsp.MatchServerTopOverProto matchTopOver_;
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    public boolean hasMatchTopOver() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto getMatchTopOver() {
      return matchTopOver_;
    }
    /**
     * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder getMatchTopOverOrBuilder() {
      return matchTopOver_;
    }

    // optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;
    public static final int MATCHTOPSTATUS_FIELD_NUMBER = 8;
    private protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto matchTopStatus_;
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    public boolean hasMatchTopStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto getMatchTopStatus() {
      return matchTopStatus_;
    }
    /**
     * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder getMatchTopStatusOrBuilder() {
      return matchTopStatus_;
    }

    private void initFields() {
      cmd_ = protobuf.clazz.match.MatchRsp.MatchS2SCmd.S2S_MATCH_START;
      matchStart_ = protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance();
      matchOver_ = protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance();
      clientRequest_ = protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance();
      base_ = protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance();
      playerOut_ = protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance();
      matchTopOver_ = protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance();
      matchTopStatus_ = protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, matchStart_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, matchOver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, clientRequest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, base_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, playerOut_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, matchTopOver_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, matchTopStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, matchStart_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, matchOver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clientRequest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, base_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, playerOut_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, matchTopOver_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, matchTopStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchS2SRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchS2SRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchS2SRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchS2SRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchS2SRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchS2SRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchS2SRequest.class, protobuf.clazz.match.MatchRsp.MatchS2SRequest.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchS2SRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMatchStartFieldBuilder();
          getMatchOverFieldBuilder();
          getClientRequestFieldBuilder();
          getBaseFieldBuilder();
          getPlayerOutFieldBuilder();
          getMatchTopOverFieldBuilder();
          getMatchTopStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cmd_ = protobuf.clazz.match.MatchRsp.MatchS2SCmd.S2S_MATCH_START;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (matchStartBuilder_ == null) {
          matchStart_ = protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance();
        } else {
          matchStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (matchOverBuilder_ == null) {
          matchOver_ = protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance();
        } else {
          matchOverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (clientRequestBuilder_ == null) {
          clientRequest_ = protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance();
        } else {
          clientRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (baseBuilder_ == null) {
          base_ = protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance();
        } else {
          baseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (playerOutBuilder_ == null) {
          playerOut_ = protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance();
        } else {
          playerOutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (matchTopOverBuilder_ == null) {
          matchTopOver_ = protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance();
        } else {
          matchTopOverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (matchTopStatusBuilder_ == null) {
          matchTopStatus_ = protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance();
        } else {
          matchTopStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchS2SRequest_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchS2SRequest getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchS2SRequest.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchS2SRequest build() {
        protobuf.clazz.match.MatchRsp.MatchS2SRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchS2SRequest buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchS2SRequest result = new protobuf.clazz.match.MatchRsp.MatchS2SRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (matchStartBuilder_ == null) {
          result.matchStart_ = matchStart_;
        } else {
          result.matchStart_ = matchStartBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (matchOverBuilder_ == null) {
          result.matchOver_ = matchOver_;
        } else {
          result.matchOver_ = matchOverBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (clientRequestBuilder_ == null) {
          result.clientRequest_ = clientRequest_;
        } else {
          result.clientRequest_ = clientRequestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (baseBuilder_ == null) {
          result.base_ = base_;
        } else {
          result.base_ = baseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playerOutBuilder_ == null) {
          result.playerOut_ = playerOut_;
        } else {
          result.playerOut_ = playerOutBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (matchTopOverBuilder_ == null) {
          result.matchTopOver_ = matchTopOver_;
        } else {
          result.matchTopOver_ = matchTopOverBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (matchTopStatusBuilder_ == null) {
          result.matchTopStatus_ = matchTopStatus_;
        } else {
          result.matchTopStatus_ = matchTopStatusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchS2SRequest) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchS2SRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchS2SRequest other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchS2SRequest.getDefaultInstance()) return this;
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasMatchStart()) {
          mergeMatchStart(other.getMatchStart());
        }
        if (other.hasMatchOver()) {
          mergeMatchOver(other.getMatchOver());
        }
        if (other.hasClientRequest()) {
          mergeClientRequest(other.getClientRequest());
        }
        if (other.hasBase()) {
          mergeBase(other.getBase());
        }
        if (other.hasPlayerOut()) {
          mergePlayerOut(other.getPlayerOut());
        }
        if (other.hasMatchTopOver()) {
          mergeMatchTopOver(other.getMatchTopOver());
        }
        if (other.hasMatchTopStatus()) {
          mergeMatchTopStatus(other.getMatchTopStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchS2SRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchS2SRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .matchHeader.MatchS2SCmd cmd = 1;
      private protobuf.clazz.match.MatchRsp.MatchS2SCmd cmd_ = protobuf.clazz.match.MatchRsp.MatchS2SCmd.S2S_MATCH_START;
      /**
       * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchS2SCmd getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
       */
      public Builder setCmd(protobuf.clazz.match.MatchRsp.MatchS2SCmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchS2SCmd cmd = 1;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = protobuf.clazz.match.MatchRsp.MatchS2SCmd.S2S_MATCH_START;
        onChanged();
        return this;
      }

      // optional .matchHeader.MatchServerStartProto matchStart = 2;
      private protobuf.clazz.match.MatchRsp.MatchServerStartProto matchStart_ = protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerStartProto, protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder> matchStartBuilder_;
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public boolean hasMatchStart() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerStartProto getMatchStart() {
        if (matchStartBuilder_ == null) {
          return matchStart_;
        } else {
          return matchStartBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public Builder setMatchStart(protobuf.clazz.match.MatchRsp.MatchServerStartProto value) {
        if (matchStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matchStart_ = value;
          onChanged();
        } else {
          matchStartBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public Builder setMatchStart(
          protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder builderForValue) {
        if (matchStartBuilder_ == null) {
          matchStart_ = builderForValue.build();
          onChanged();
        } else {
          matchStartBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public Builder mergeMatchStart(protobuf.clazz.match.MatchRsp.MatchServerStartProto value) {
        if (matchStartBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              matchStart_ != protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance()) {
            matchStart_ =
              protobuf.clazz.match.MatchRsp.MatchServerStartProto.newBuilder(matchStart_).mergeFrom(value).buildPartial();
          } else {
            matchStart_ = value;
          }
          onChanged();
        } else {
          matchStartBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public Builder clearMatchStart() {
        if (matchStartBuilder_ == null) {
          matchStart_ = protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance();
          onChanged();
        } else {
          matchStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder getMatchStartBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMatchStartFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder getMatchStartOrBuilder() {
        if (matchStartBuilder_ != null) {
          return matchStartBuilder_.getMessageOrBuilder();
        } else {
          return matchStart_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerStartProto matchStart = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerStartProto, protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder> 
          getMatchStartFieldBuilder() {
        if (matchStartBuilder_ == null) {
          matchStartBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerStartProto, protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder>(
                  matchStart_,
                  getParentForChildren(),
                  isClean());
          matchStart_ = null;
        }
        return matchStartBuilder_;
      }

      // optional .matchHeader.MatchServerOverProto matchOver = 3;
      private protobuf.clazz.match.MatchRsp.MatchServerOverProto matchOver_ = protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerOverProto, protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder> matchOverBuilder_;
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public boolean hasMatchOver() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOverProto getMatchOver() {
        if (matchOverBuilder_ == null) {
          return matchOver_;
        } else {
          return matchOverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public Builder setMatchOver(protobuf.clazz.match.MatchRsp.MatchServerOverProto value) {
        if (matchOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matchOver_ = value;
          onChanged();
        } else {
          matchOverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public Builder setMatchOver(
          protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder builderForValue) {
        if (matchOverBuilder_ == null) {
          matchOver_ = builderForValue.build();
          onChanged();
        } else {
          matchOverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public Builder mergeMatchOver(protobuf.clazz.match.MatchRsp.MatchServerOverProto value) {
        if (matchOverBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              matchOver_ != protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance()) {
            matchOver_ =
              protobuf.clazz.match.MatchRsp.MatchServerOverProto.newBuilder(matchOver_).mergeFrom(value).buildPartial();
          } else {
            matchOver_ = value;
          }
          onChanged();
        } else {
          matchOverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public Builder clearMatchOver() {
        if (matchOverBuilder_ == null) {
          matchOver_ = protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance();
          onChanged();
        } else {
          matchOverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder getMatchOverBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMatchOverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder getMatchOverOrBuilder() {
        if (matchOverBuilder_ != null) {
          return matchOverBuilder_.getMessageOrBuilder();
        } else {
          return matchOver_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerOverProto matchOver = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerOverProto, protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder> 
          getMatchOverFieldBuilder() {
        if (matchOverBuilder_ == null) {
          matchOverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerOverProto, protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder>(
                  matchOver_,
                  getParentForChildren(),
                  isClean());
          matchOver_ = null;
        }
        return matchOverBuilder_;
      }

      // optional .matchHeader.MatchClientRequestWrap clientRequest = 4;
      private protobuf.clazz.match.MatchRsp.MatchClientRequestWrap clientRequest_ = protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchClientRequestWrap, protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder, protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder> clientRequestBuilder_;
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public boolean hasClientRequest() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap getClientRequest() {
        if (clientRequestBuilder_ == null) {
          return clientRequest_;
        } else {
          return clientRequestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public Builder setClientRequest(protobuf.clazz.match.MatchRsp.MatchClientRequestWrap value) {
        if (clientRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientRequest_ = value;
          onChanged();
        } else {
          clientRequestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public Builder setClientRequest(
          protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder builderForValue) {
        if (clientRequestBuilder_ == null) {
          clientRequest_ = builderForValue.build();
          onChanged();
        } else {
          clientRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public Builder mergeClientRequest(protobuf.clazz.match.MatchRsp.MatchClientRequestWrap value) {
        if (clientRequestBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              clientRequest_ != protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance()) {
            clientRequest_ =
              protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.newBuilder(clientRequest_).mergeFrom(value).buildPartial();
          } else {
            clientRequest_ = value;
          }
          onChanged();
        } else {
          clientRequestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public Builder clearClientRequest() {
        if (clientRequestBuilder_ == null) {
          clientRequest_ = protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance();
          onChanged();
        } else {
          clientRequestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder getClientRequestBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getClientRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder getClientRequestOrBuilder() {
        if (clientRequestBuilder_ != null) {
          return clientRequestBuilder_.getMessageOrBuilder();
        } else {
          return clientRequest_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchClientRequestWrap clientRequest = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchClientRequestWrap, protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder, protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder> 
          getClientRequestFieldBuilder() {
        if (clientRequestBuilder_ == null) {
          clientRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchClientRequestWrap, protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder, protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder>(
                  clientRequest_,
                  getParentForChildren(),
                  isClean());
          clientRequest_ = null;
        }
        return clientRequestBuilder_;
      }

      // optional .matchHeader.MatchBaseRequest base = 5;
      private protobuf.clazz.match.MatchRsp.MatchBaseRequest base_ = protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchBaseRequest, protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder, protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder> baseBuilder_;
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public boolean hasBase() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseRequest getBase() {
        if (baseBuilder_ == null) {
          return base_;
        } else {
          return baseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public Builder setBase(protobuf.clazz.match.MatchRsp.MatchBaseRequest value) {
        if (baseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          base_ = value;
          onChanged();
        } else {
          baseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public Builder setBase(
          protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder builderForValue) {
        if (baseBuilder_ == null) {
          base_ = builderForValue.build();
          onChanged();
        } else {
          baseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public Builder mergeBase(protobuf.clazz.match.MatchRsp.MatchBaseRequest value) {
        if (baseBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              base_ != protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance()) {
            base_ =
              protobuf.clazz.match.MatchRsp.MatchBaseRequest.newBuilder(base_).mergeFrom(value).buildPartial();
          } else {
            base_ = value;
          }
          onChanged();
        } else {
          baseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public Builder clearBase() {
        if (baseBuilder_ == null) {
          base_ = protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance();
          onChanged();
        } else {
          baseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder getBaseBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBaseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder getBaseOrBuilder() {
        if (baseBuilder_ != null) {
          return baseBuilder_.getMessageOrBuilder();
        } else {
          return base_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchBaseRequest base = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchBaseRequest, protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder, protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder> 
          getBaseFieldBuilder() {
        if (baseBuilder_ == null) {
          baseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchBaseRequest, protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder, protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder>(
                  base_,
                  getParentForChildren(),
                  isClean());
          base_ = null;
        }
        return baseBuilder_;
      }

      // optional .matchHeader.MatchServerOutProto playerOut = 6;
      private protobuf.clazz.match.MatchRsp.MatchServerOutProto playerOut_ = protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerOutProto, protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder> playerOutBuilder_;
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public boolean hasPlayerOut() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOutProto getPlayerOut() {
        if (playerOutBuilder_ == null) {
          return playerOut_;
        } else {
          return playerOutBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public Builder setPlayerOut(protobuf.clazz.match.MatchRsp.MatchServerOutProto value) {
        if (playerOutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerOut_ = value;
          onChanged();
        } else {
          playerOutBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public Builder setPlayerOut(
          protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder builderForValue) {
        if (playerOutBuilder_ == null) {
          playerOut_ = builderForValue.build();
          onChanged();
        } else {
          playerOutBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public Builder mergePlayerOut(protobuf.clazz.match.MatchRsp.MatchServerOutProto value) {
        if (playerOutBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              playerOut_ != protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance()) {
            playerOut_ =
              protobuf.clazz.match.MatchRsp.MatchServerOutProto.newBuilder(playerOut_).mergeFrom(value).buildPartial();
          } else {
            playerOut_ = value;
          }
          onChanged();
        } else {
          playerOutBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public Builder clearPlayerOut() {
        if (playerOutBuilder_ == null) {
          playerOut_ = protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance();
          onChanged();
        } else {
          playerOutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder getPlayerOutBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPlayerOutFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder getPlayerOutOrBuilder() {
        if (playerOutBuilder_ != null) {
          return playerOutBuilder_.getMessageOrBuilder();
        } else {
          return playerOut_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerOutProto playerOut = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerOutProto, protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder> 
          getPlayerOutFieldBuilder() {
        if (playerOutBuilder_ == null) {
          playerOutBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerOutProto, protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder>(
                  playerOut_,
                  getParentForChildren(),
                  isClean());
          playerOut_ = null;
        }
        return playerOutBuilder_;
      }

      // optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;
      private protobuf.clazz.match.MatchRsp.MatchServerTopOverProto matchTopOver_ = protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerTopOverProto, protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder> matchTopOverBuilder_;
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public boolean hasMatchTopOver() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto getMatchTopOver() {
        if (matchTopOverBuilder_ == null) {
          return matchTopOver_;
        } else {
          return matchTopOverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public Builder setMatchTopOver(protobuf.clazz.match.MatchRsp.MatchServerTopOverProto value) {
        if (matchTopOverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matchTopOver_ = value;
          onChanged();
        } else {
          matchTopOverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public Builder setMatchTopOver(
          protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder builderForValue) {
        if (matchTopOverBuilder_ == null) {
          matchTopOver_ = builderForValue.build();
          onChanged();
        } else {
          matchTopOverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public Builder mergeMatchTopOver(protobuf.clazz.match.MatchRsp.MatchServerTopOverProto value) {
        if (matchTopOverBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              matchTopOver_ != protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance()) {
            matchTopOver_ =
              protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.newBuilder(matchTopOver_).mergeFrom(value).buildPartial();
          } else {
            matchTopOver_ = value;
          }
          onChanged();
        } else {
          matchTopOverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public Builder clearMatchTopOver() {
        if (matchTopOverBuilder_ == null) {
          matchTopOver_ = protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance();
          onChanged();
        } else {
          matchTopOverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder getMatchTopOverBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getMatchTopOverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder getMatchTopOverOrBuilder() {
        if (matchTopOverBuilder_ != null) {
          return matchTopOverBuilder_.getMessageOrBuilder();
        } else {
          return matchTopOver_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerTopOverProto matchTopOver = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerTopOverProto, protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder> 
          getMatchTopOverFieldBuilder() {
        if (matchTopOverBuilder_ == null) {
          matchTopOverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerTopOverProto, protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder>(
                  matchTopOver_,
                  getParentForChildren(),
                  isClean());
          matchTopOver_ = null;
        }
        return matchTopOverBuilder_;
      }

      // optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;
      private protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto matchTopStatus_ = protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder> matchTopStatusBuilder_;
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public boolean hasMatchTopStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto getMatchTopStatus() {
        if (matchTopStatusBuilder_ == null) {
          return matchTopStatus_;
        } else {
          return matchTopStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public Builder setMatchTopStatus(protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto value) {
        if (matchTopStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matchTopStatus_ = value;
          onChanged();
        } else {
          matchTopStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public Builder setMatchTopStatus(
          protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder builderForValue) {
        if (matchTopStatusBuilder_ == null) {
          matchTopStatus_ = builderForValue.build();
          onChanged();
        } else {
          matchTopStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public Builder mergeMatchTopStatus(protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto value) {
        if (matchTopStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              matchTopStatus_ != protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance()) {
            matchTopStatus_ =
              protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.newBuilder(matchTopStatus_).mergeFrom(value).buildPartial();
          } else {
            matchTopStatus_ = value;
          }
          onChanged();
        } else {
          matchTopStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public Builder clearMatchTopStatus() {
        if (matchTopStatusBuilder_ == null) {
          matchTopStatus_ = protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance();
          onChanged();
        } else {
          matchTopStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder getMatchTopStatusBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMatchTopStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder getMatchTopStatusOrBuilder() {
        if (matchTopStatusBuilder_ != null) {
          return matchTopStatusBuilder_.getMessageOrBuilder();
        } else {
          return matchTopStatus_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchServerTopStatusProto matchTopStatus = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder> 
          getMatchTopStatusFieldBuilder() {
        if (matchTopStatusBuilder_ == null) {
          matchTopStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder>(
                  matchTopStatus_,
                  getParentForChildren(),
                  isClean());
          matchTopStatus_ = null;
        }
        return matchTopStatusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchS2SRequest)
    }

    static {
      defaultInstance = new MatchS2SRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchS2SRequest)
  }

  public interface MatchBaseRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();
  }
  /**
   * Protobuf type {@code matchHeader.MatchBaseRequest}
   */
  public static final class MatchBaseRequest extends
      com.google.protobuf.GeneratedMessage
      implements MatchBaseRequestOrBuilder {
    // Use MatchBaseRequest.newBuilder() to construct.
    private MatchBaseRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchBaseRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchBaseRequest defaultInstance;
    public static MatchBaseRequest getDefaultInstance() {
      return defaultInstance;
    }

    public MatchBaseRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchBaseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchBaseRequest.class, protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchBaseRequest> PARSER =
        new com.google.protobuf.AbstractParser<MatchBaseRequest>() {
      public MatchBaseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchBaseRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchBaseRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    private void initFields() {
      accountId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchBaseRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchBaseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchBaseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchBaseRequest.class, protobuf.clazz.match.MatchRsp.MatchBaseRequest.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchBaseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseRequest_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseRequest getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseRequest build() {
        protobuf.clazz.match.MatchRsp.MatchBaseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseRequest buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchBaseRequest result = new protobuf.clazz.match.MatchRsp.MatchBaseRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchBaseRequest) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchBaseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchBaseRequest other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchBaseRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchBaseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchBaseRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchBaseRequest)
    }

    static {
      defaultInstance = new MatchBaseRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchBaseRequest)
  }

  public interface MatchServerStartProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *每场比赛的唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *每场比赛的唯一Id
     * </pre>
     */
    int getId();

    // repeated int64 accountIds = 2;
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    java.util.List<java.lang.Long> getAccountIdsList();
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    long getAccountIds(int index);

    // optional int32 matchId = 3;
    /**
     * <code>optional int32 matchId = 3;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasMatchId();
    /**
     * <code>optional int32 matchId = 3;</code>
     *
     * <pre>
     * </pre>
     */
    int getMatchId();

    // optional int64 startTime = 4;
    /**
     * <code>optional int64 startTime = 4;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional int64 startTime = 4;</code>
     *
     * <pre>
     * </pre>
     */
    long getStartTime();

    // optional int32 logicIndex = 5;
    /**
     * <code>optional int32 logicIndex = 5;</code>
     */
    boolean hasLogicIndex();
    /**
     * <code>optional int32 logicIndex = 5;</code>
     */
    int getLogicIndex();

    // optional int32 failType = 6;
    /**
     * <code>optional int32 failType = 6;</code>
     */
    boolean hasFailType();
    /**
     * <code>optional int32 failType = 6;</code>
     */
    int getFailType();

    // repeated int64 matchAdminIds = 7;
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    java.util.List<java.lang.Long> getMatchAdminIdsList();
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    int getMatchAdminIdsCount();
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    long getMatchAdminIds(int index);

    // optional bool isStop = 8;
    /**
     * <code>optional bool isStop = 8;</code>
     *
     * <pre>
     *是否停止(关闭)比赛
     * </pre>
     */
    boolean hasIsStop();
    /**
     * <code>optional bool isStop = 8;</code>
     *
     * <pre>
     *是否停止(关闭)比赛
     * </pre>
     */
    boolean getIsStop();

    // repeated int32 costTypes = 9;
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    java.util.List<java.lang.Integer> getCostTypesList();
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    int getCostTypesCount();
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    int getCostTypes(int index);

    // optional int32 randNum = 10;
    /**
     * <code>optional int32 randNum = 10;</code>
     *
     * <pre>
     *随机添加的机器人数量
     * </pre>
     */
    boolean hasRandNum();
    /**
     * <code>optional int32 randNum = 10;</code>
     *
     * <pre>
     *随机添加的机器人数量
     * </pre>
     */
    int getRandNum();

    // repeated int32 accountTimes = 11;
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getAccountTimesList();
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    int getAccountTimesCount();
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    int getAccountTimes(int index);

    // optional bool isTop = 12;
    /**
     * <code>optional bool isTop = 12;</code>
     *
     * <pre>
     * 是否冲榜赛
     * </pre>
     */
    boolean hasIsTop();
    /**
     * <code>optional bool isTop = 12;</code>
     *
     * <pre>
     * 是否冲榜赛
     * </pre>
     */
    boolean getIsTop();

    // optional int32 gamerNum = 13;
    /**
     * <code>optional int32 gamerNum = 13;</code>
     *
     * <pre>
     *当前报名人数
     * </pre>
     */
    boolean hasGamerNum();
    /**
     * <code>optional int32 gamerNum = 13;</code>
     *
     * <pre>
     *当前报名人数
     * </pre>
     */
    int getGamerNum();
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerStartProto}
   */
  public static final class MatchServerStartProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerStartProtoOrBuilder {
    // Use MatchServerStartProto.newBuilder() to construct.
    private MatchServerStartProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerStartProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerStartProto defaultInstance;
    public static MatchServerStartProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerStartProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerStartProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              accountIds_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              logicIndex_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              failType_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                matchAdminIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              matchAdminIds_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                matchAdminIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                matchAdminIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              isStop_ = input.readBool();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                costTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              costTypes_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                costTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                costTypes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              randNum_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                accountTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              accountTimes_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                accountTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountTimes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              isTop_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              gamerNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          matchAdminIds_ = java.util.Collections.unmodifiableList(matchAdminIds_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          costTypes_ = java.util.Collections.unmodifiableList(costTypes_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          accountTimes_ = java.util.Collections.unmodifiableList(accountTimes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerStartProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerStartProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerStartProto.class, protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerStartProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerStartProto>() {
      public MatchServerStartProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerStartProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerStartProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *每场比赛的唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     *每场比赛的唯一Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // repeated int64 accountIds = 2;
    public static final int ACCOUNTIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> accountIds_;
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated int64 accountIds = 2;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public long getAccountIds(int index) {
      return accountIds_.get(index);
    }

    // optional int32 matchId = 3;
    public static final int MATCHID_FIELD_NUMBER = 3;
    private int matchId_;
    /**
     * <code>optional int32 matchId = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 matchId = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public int getMatchId() {
      return matchId_;
    }

    // optional int64 startTime = 4;
    public static final int STARTTIME_FIELD_NUMBER = 4;
    private long startTime_;
    /**
     * <code>optional int64 startTime = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 startTime = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // optional int32 logicIndex = 5;
    public static final int LOGICINDEX_FIELD_NUMBER = 5;
    private int logicIndex_;
    /**
     * <code>optional int32 logicIndex = 5;</code>
     */
    public boolean hasLogicIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 logicIndex = 5;</code>
     */
    public int getLogicIndex() {
      return logicIndex_;
    }

    // optional int32 failType = 6;
    public static final int FAILTYPE_FIELD_NUMBER = 6;
    private int failType_;
    /**
     * <code>optional int32 failType = 6;</code>
     */
    public boolean hasFailType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 failType = 6;</code>
     */
    public int getFailType() {
      return failType_;
    }

    // repeated int64 matchAdminIds = 7;
    public static final int MATCHADMINIDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> matchAdminIds_;
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getMatchAdminIdsList() {
      return matchAdminIds_;
    }
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    public int getMatchAdminIdsCount() {
      return matchAdminIds_.size();
    }
    /**
     * <code>repeated int64 matchAdminIds = 7;</code>
     *
     * <pre>
     *比赛管理员ID
     * </pre>
     */
    public long getMatchAdminIds(int index) {
      return matchAdminIds_.get(index);
    }

    // optional bool isStop = 8;
    public static final int ISSTOP_FIELD_NUMBER = 8;
    private boolean isStop_;
    /**
     * <code>optional bool isStop = 8;</code>
     *
     * <pre>
     *是否停止(关闭)比赛
     * </pre>
     */
    public boolean hasIsStop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isStop = 8;</code>
     *
     * <pre>
     *是否停止(关闭)比赛
     * </pre>
     */
    public boolean getIsStop() {
      return isStop_;
    }

    // repeated int32 costTypes = 9;
    public static final int COSTTYPES_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> costTypes_;
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCostTypesList() {
      return costTypes_;
    }
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    public int getCostTypesCount() {
      return costTypes_.size();
    }
    /**
     * <code>repeated int32 costTypes = 9;</code>
     *
     * <pre>
     * 成员列表报名消费方式
     * </pre>
     */
    public int getCostTypes(int index) {
      return costTypes_.get(index);
    }

    // optional int32 randNum = 10;
    public static final int RANDNUM_FIELD_NUMBER = 10;
    private int randNum_;
    /**
     * <code>optional int32 randNum = 10;</code>
     *
     * <pre>
     *随机添加的机器人数量
     * </pre>
     */
    public boolean hasRandNum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 randNum = 10;</code>
     *
     * <pre>
     *随机添加的机器人数量
     * </pre>
     */
    public int getRandNum() {
      return randNum_;
    }

    // repeated int32 accountTimes = 11;
    public static final int ACCOUNTTIMES_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> accountTimes_;
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAccountTimesList() {
      return accountTimes_;
    }
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    public int getAccountTimesCount() {
      return accountTimes_.size();
    }
    /**
     * <code>repeated int32 accountTimes = 11;</code>
     *
     * <pre>
     *成员列表冲榜倍数
     * </pre>
     */
    public int getAccountTimes(int index) {
      return accountTimes_.get(index);
    }

    // optional bool isTop = 12;
    public static final int ISTOP_FIELD_NUMBER = 12;
    private boolean isTop_;
    /**
     * <code>optional bool isTop = 12;</code>
     *
     * <pre>
     * 是否冲榜赛
     * </pre>
     */
    public boolean hasIsTop() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isTop = 12;</code>
     *
     * <pre>
     * 是否冲榜赛
     * </pre>
     */
    public boolean getIsTop() {
      return isTop_;
    }

    // optional int32 gamerNum = 13;
    public static final int GAMERNUM_FIELD_NUMBER = 13;
    private int gamerNum_;
    /**
     * <code>optional int32 gamerNum = 13;</code>
     *
     * <pre>
     *当前报名人数
     * </pre>
     */
    public boolean hasGamerNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 gamerNum = 13;</code>
     *
     * <pre>
     *当前报名人数
     * </pre>
     */
    public int getGamerNum() {
      return gamerNum_;
    }

    private void initFields() {
      id_ = 0;
      accountIds_ = java.util.Collections.emptyList();
      matchId_ = 0;
      startTime_ = 0L;
      logicIndex_ = 0;
      failType_ = 0;
      matchAdminIds_ = java.util.Collections.emptyList();
      isStop_ = false;
      costTypes_ = java.util.Collections.emptyList();
      randNum_ = 0;
      accountTimes_ = java.util.Collections.emptyList();
      isTop_ = false;
      gamerNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeInt64(2, accountIds_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, logicIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, failType_);
      }
      for (int i = 0; i < matchAdminIds_.size(); i++) {
        output.writeInt64(7, matchAdminIds_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, isStop_);
      }
      for (int i = 0; i < costTypes_.size(); i++) {
        output.writeInt32(9, costTypes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, randNum_);
      }
      for (int i = 0; i < accountTimes_.size(); i++) {
        output.writeInt32(11, accountTimes_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(12, isTop_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(13, gamerNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, logicIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, failType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchAdminIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(matchAdminIds_.get(i));
        }
        size += dataSize;
        size += 1 * getMatchAdminIdsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isStop_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < costTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(costTypes_.get(i));
        }
        size += dataSize;
        size += 1 * getCostTypesList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, randNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(accountTimes_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountTimesList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTop_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, gamerNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerStartProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerStartProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerStartProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerStartProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerStartProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerStartProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerStartProto.class, protobuf.clazz.match.MatchRsp.MatchServerStartProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerStartProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        logicIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        failType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        matchAdminIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        isStop_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        costTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        randNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        accountTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        isTop_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        gamerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerStartProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerStartProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerStartProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerStartProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerStartProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerStartProto result = new protobuf.clazz.match.MatchRsp.MatchServerStartProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.accountIds_ = accountIds_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logicIndex_ = logicIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.failType_ = failType_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          matchAdminIds_ = java.util.Collections.unmodifiableList(matchAdminIds_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.matchAdminIds_ = matchAdminIds_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isStop_ = isStop_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          costTypes_ = java.util.Collections.unmodifiableList(costTypes_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.costTypes_ = costTypes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.randNum_ = randNum_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          accountTimes_ = java.util.Collections.unmodifiableList(accountTimes_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.accountTimes_ = accountTimes_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isTop_ = isTop_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.gamerNum_ = gamerNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerStartProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerStartProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerStartProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerStartProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasLogicIndex()) {
          setLogicIndex(other.getLogicIndex());
        }
        if (other.hasFailType()) {
          setFailType(other.getFailType());
        }
        if (!other.matchAdminIds_.isEmpty()) {
          if (matchAdminIds_.isEmpty()) {
            matchAdminIds_ = other.matchAdminIds_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMatchAdminIdsIsMutable();
            matchAdminIds_.addAll(other.matchAdminIds_);
          }
          onChanged();
        }
        if (other.hasIsStop()) {
          setIsStop(other.getIsStop());
        }
        if (!other.costTypes_.isEmpty()) {
          if (costTypes_.isEmpty()) {
            costTypes_ = other.costTypes_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCostTypesIsMutable();
            costTypes_.addAll(other.costTypes_);
          }
          onChanged();
        }
        if (other.hasRandNum()) {
          setRandNum(other.getRandNum());
        }
        if (!other.accountTimes_.isEmpty()) {
          if (accountTimes_.isEmpty()) {
            accountTimes_ = other.accountTimes_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureAccountTimesIsMutable();
            accountTimes_.addAll(other.accountTimes_);
          }
          onChanged();
        }
        if (other.hasIsTop()) {
          setIsTop(other.getIsTop());
        }
        if (other.hasGamerNum()) {
          setGamerNum(other.getGamerNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerStartProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerStartProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *每场比赛的唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *每场比赛的唯一Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *每场比赛的唯一Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       *每场比赛的唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 accountIds = 2;
      private java.util.List<java.lang.Long> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          accountIds_ = new java.util.ArrayList<java.lang.Long>(accountIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public long getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder setAccountIds(
          int index, long value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAccountIds(long value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAccountIdsIsMutable();
        super.addAll(values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 2;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 matchId = 3;
      private int matchId_ ;
      /**
       * <code>optional int32 matchId = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 matchId = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional int32 matchId = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000004;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 matchId = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        matchId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 startTime = 4;
      private long startTime_ ;
      /**
       * <code>optional int64 startTime = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 startTime = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional int64 startTime = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000008;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTime = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 logicIndex = 5;
      private int logicIndex_ ;
      /**
       * <code>optional int32 logicIndex = 5;</code>
       */
      public boolean hasLogicIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 logicIndex = 5;</code>
       */
      public int getLogicIndex() {
        return logicIndex_;
      }
      /**
       * <code>optional int32 logicIndex = 5;</code>
       */
      public Builder setLogicIndex(int value) {
        bitField0_ |= 0x00000010;
        logicIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 logicIndex = 5;</code>
       */
      public Builder clearLogicIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        logicIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 failType = 6;
      private int failType_ ;
      /**
       * <code>optional int32 failType = 6;</code>
       */
      public boolean hasFailType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 failType = 6;</code>
       */
      public int getFailType() {
        return failType_;
      }
      /**
       * <code>optional int32 failType = 6;</code>
       */
      public Builder setFailType(int value) {
        bitField0_ |= 0x00000020;
        failType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 failType = 6;</code>
       */
      public Builder clearFailType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        failType_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 matchAdminIds = 7;
      private java.util.List<java.lang.Long> matchAdminIds_ = java.util.Collections.emptyList();
      private void ensureMatchAdminIdsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          matchAdminIds_ = new java.util.ArrayList<java.lang.Long>(matchAdminIds_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getMatchAdminIdsList() {
        return java.util.Collections.unmodifiableList(matchAdminIds_);
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public int getMatchAdminIdsCount() {
        return matchAdminIds_.size();
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public long getMatchAdminIds(int index) {
        return matchAdminIds_.get(index);
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public Builder setMatchAdminIds(
          int index, long value) {
        ensureMatchAdminIdsIsMutable();
        matchAdminIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public Builder addMatchAdminIds(long value) {
        ensureMatchAdminIdsIsMutable();
        matchAdminIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public Builder addAllMatchAdminIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMatchAdminIdsIsMutable();
        super.addAll(values, matchAdminIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 matchAdminIds = 7;</code>
       *
       * <pre>
       *比赛管理员ID
       * </pre>
       */
      public Builder clearMatchAdminIds() {
        matchAdminIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional bool isStop = 8;
      private boolean isStop_ ;
      /**
       * <code>optional bool isStop = 8;</code>
       *
       * <pre>
       *是否停止(关闭)比赛
       * </pre>
       */
      public boolean hasIsStop() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isStop = 8;</code>
       *
       * <pre>
       *是否停止(关闭)比赛
       * </pre>
       */
      public boolean getIsStop() {
        return isStop_;
      }
      /**
       * <code>optional bool isStop = 8;</code>
       *
       * <pre>
       *是否停止(关闭)比赛
       * </pre>
       */
      public Builder setIsStop(boolean value) {
        bitField0_ |= 0x00000080;
        isStop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isStop = 8;</code>
       *
       * <pre>
       *是否停止(关闭)比赛
       * </pre>
       */
      public Builder clearIsStop() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isStop_ = false;
        onChanged();
        return this;
      }

      // repeated int32 costTypes = 9;
      private java.util.List<java.lang.Integer> costTypes_ = java.util.Collections.emptyList();
      private void ensureCostTypesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          costTypes_ = new java.util.ArrayList<java.lang.Integer>(costTypes_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCostTypesList() {
        return java.util.Collections.unmodifiableList(costTypes_);
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public int getCostTypesCount() {
        return costTypes_.size();
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public int getCostTypes(int index) {
        return costTypes_.get(index);
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public Builder setCostTypes(
          int index, int value) {
        ensureCostTypesIsMutable();
        costTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public Builder addCostTypes(int value) {
        ensureCostTypesIsMutable();
        costTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public Builder addAllCostTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCostTypesIsMutable();
        super.addAll(values, costTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 costTypes = 9;</code>
       *
       * <pre>
       * 成员列表报名消费方式
       * </pre>
       */
      public Builder clearCostTypes() {
        costTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 randNum = 10;
      private int randNum_ ;
      /**
       * <code>optional int32 randNum = 10;</code>
       *
       * <pre>
       *随机添加的机器人数量
       * </pre>
       */
      public boolean hasRandNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 randNum = 10;</code>
       *
       * <pre>
       *随机添加的机器人数量
       * </pre>
       */
      public int getRandNum() {
        return randNum_;
      }
      /**
       * <code>optional int32 randNum = 10;</code>
       *
       * <pre>
       *随机添加的机器人数量
       * </pre>
       */
      public Builder setRandNum(int value) {
        bitField0_ |= 0x00000200;
        randNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 randNum = 10;</code>
       *
       * <pre>
       *随机添加的机器人数量
       * </pre>
       */
      public Builder clearRandNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        randNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 accountTimes = 11;
      private java.util.List<java.lang.Integer> accountTimes_ = java.util.Collections.emptyList();
      private void ensureAccountTimesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          accountTimes_ = new java.util.ArrayList<java.lang.Integer>(accountTimes_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAccountTimesList() {
        return java.util.Collections.unmodifiableList(accountTimes_);
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public int getAccountTimesCount() {
        return accountTimes_.size();
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public int getAccountTimes(int index) {
        return accountTimes_.get(index);
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public Builder setAccountTimes(
          int index, int value) {
        ensureAccountTimesIsMutable();
        accountTimes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public Builder addAccountTimes(int value) {
        ensureAccountTimesIsMutable();
        accountTimes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public Builder addAllAccountTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAccountTimesIsMutable();
        super.addAll(values, accountTimes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 accountTimes = 11;</code>
       *
       * <pre>
       *成员列表冲榜倍数
       * </pre>
       */
      public Builder clearAccountTimes() {
        accountTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional bool isTop = 12;
      private boolean isTop_ ;
      /**
       * <code>optional bool isTop = 12;</code>
       *
       * <pre>
       * 是否冲榜赛
       * </pre>
       */
      public boolean hasIsTop() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool isTop = 12;</code>
       *
       * <pre>
       * 是否冲榜赛
       * </pre>
       */
      public boolean getIsTop() {
        return isTop_;
      }
      /**
       * <code>optional bool isTop = 12;</code>
       *
       * <pre>
       * 是否冲榜赛
       * </pre>
       */
      public Builder setIsTop(boolean value) {
        bitField0_ |= 0x00000800;
        isTop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isTop = 12;</code>
       *
       * <pre>
       * 是否冲榜赛
       * </pre>
       */
      public Builder clearIsTop() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTop_ = false;
        onChanged();
        return this;
      }

      // optional int32 gamerNum = 13;
      private int gamerNum_ ;
      /**
       * <code>optional int32 gamerNum = 13;</code>
       *
       * <pre>
       *当前报名人数
       * </pre>
       */
      public boolean hasGamerNum() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 gamerNum = 13;</code>
       *
       * <pre>
       *当前报名人数
       * </pre>
       */
      public int getGamerNum() {
        return gamerNum_;
      }
      /**
       * <code>optional int32 gamerNum = 13;</code>
       *
       * <pre>
       *当前报名人数
       * </pre>
       */
      public Builder setGamerNum(int value) {
        bitField0_ |= 0x00001000;
        gamerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gamerNum = 13;</code>
       *
       * <pre>
       *当前报名人数
       * </pre>
       */
      public Builder clearGamerNum() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gamerNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerStartProto)
    }

    static {
      defaultInstance = new MatchServerStartProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerStartProto)
  }

  public interface MatchClientRequestWrapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional .matchHeader.MatchClientRequest request = 2;
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    boolean hasRequest();
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest getRequest();
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder getRequestOrBuilder();

    // optional int32 proxyIndex = 3;
    /**
     * <code>optional int32 proxyIndex = 3;</code>
     */
    boolean hasProxyIndex();
    /**
     * <code>optional int32 proxyIndex = 3;</code>
     */
    int getProxyIndex();

    // optional int32 id = 4;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *比赛Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *比赛Id
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code matchHeader.MatchClientRequestWrap}
   */
  public static final class MatchClientRequestWrap extends
      com.google.protobuf.GeneratedMessage
      implements MatchClientRequestWrapOrBuilder {
    // Use MatchClientRequestWrap.newBuilder() to construct.
    private MatchClientRequestWrap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchClientRequestWrap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchClientRequestWrap defaultInstance;
    public static MatchClientRequestWrap getDefaultInstance() {
      return defaultInstance;
    }

    public MatchClientRequestWrap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchClientRequestWrap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              proxyIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchClientRequestWrap_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchClientRequestWrap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.class, protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchClientRequestWrap> PARSER =
        new com.google.protobuf.AbstractParser<MatchClientRequestWrap>() {
      public MatchClientRequestWrap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchClientRequestWrap(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchClientRequestWrap> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional .matchHeader.MatchClientRequest request = 2;
    public static final int REQUEST_FIELD_NUMBER = 2;
    private protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest request_;
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    public protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest getRequest() {
      return request_;
    }
    /**
     * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
     */
    public protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder getRequestOrBuilder() {
      return request_;
    }

    // optional int32 proxyIndex = 3;
    public static final int PROXYINDEX_FIELD_NUMBER = 3;
    private int proxyIndex_;
    /**
     * <code>optional int32 proxyIndex = 3;</code>
     */
    public boolean hasProxyIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 proxyIndex = 3;</code>
     */
    public int getProxyIndex() {
      return proxyIndex_;
    }

    // optional int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *比赛Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 id = 4;</code>
     *
     * <pre>
     *比赛Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      accountId_ = 0L;
      request_ = protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.getDefaultInstance();
      proxyIndex_ = 0;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, request_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, proxyIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, request_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, proxyIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchClientRequestWrap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchClientRequestWrap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchClientRequestWrapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchClientRequestWrap_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchClientRequestWrap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.class, protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.getDefaultInstance();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        proxyIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchClientRequestWrap_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap build() {
        protobuf.clazz.match.MatchRsp.MatchClientRequestWrap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchClientRequestWrap buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchClientRequestWrap result = new protobuf.clazz.match.MatchRsp.MatchClientRequestWrap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.proxyIndex_ = proxyIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchClientRequestWrap) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchClientRequestWrap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchClientRequestWrap other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchClientRequestWrap.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasProxyIndex()) {
          setProxyIndex(other.getProxyIndex());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchClientRequestWrap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchClientRequestWrap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional .matchHeader.MatchClientRequest request = 2;
      private protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest request_ = protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder> requestBuilder_;
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public Builder setRequest(protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public Builder setRequest(
          protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public Builder mergeRequest(protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.getDefaultInstance()) {
            request_ =
              protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.getDefaultInstance();
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      public protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_;
        }
      }
      /**
       * <code>optional .matchHeader.MatchClientRequest request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequest.Builder, protobuf.clazz.match.MatchClientHeaderRsp.MatchClientRequestOrBuilder>(
                  request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      // optional int32 proxyIndex = 3;
      private int proxyIndex_ ;
      /**
       * <code>optional int32 proxyIndex = 3;</code>
       */
      public boolean hasProxyIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 proxyIndex = 3;</code>
       */
      public int getProxyIndex() {
        return proxyIndex_;
      }
      /**
       * <code>optional int32 proxyIndex = 3;</code>
       */
      public Builder setProxyIndex(int value) {
        bitField0_ |= 0x00000004;
        proxyIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 proxyIndex = 3;</code>
       */
      public Builder clearProxyIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        proxyIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 4;
      private int id_ ;
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *比赛Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *比赛Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *比赛Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000008;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 4;</code>
       *
       * <pre>
       *比赛Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchClientRequestWrap)
    }

    static {
      defaultInstance = new MatchClientRequestWrap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchClientRequestWrap)
  }

  public interface MatchServerTopStatusProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerTopStatusProto}
   */
  public static final class MatchServerTopStatusProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerTopStatusProtoOrBuilder {
    // Use MatchServerTopStatusProto.newBuilder() to construct.
    private MatchServerTopStatusProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerTopStatusProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerTopStatusProto defaultInstance;
    public static MatchServerTopStatusProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerTopStatusProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerTopStatusProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopStatusProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopStatusProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.class, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerTopStatusProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerTopStatusProto>() {
      public MatchServerTopStatusProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerTopStatusProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerTopStatusProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerTopStatusProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerTopStatusProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopStatusProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopStatusProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.class, protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopStatusProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto result = new protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerTopStatusProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerTopStatusProto)
    }

    static {
      defaultInstance = new MatchServerTopStatusProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerTopStatusProto)
  }

  public interface MatchServerTopOverProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 matchId = 1;
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    boolean hasMatchId();
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    int getMatchId();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    int getId();

    // repeated int64 accountIds = 3;
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    java.util.List<java.lang.Long> getAccountIdsList();
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    long getAccountIds(int index);

    // repeated int32 winScore = 4;
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinScoreList();
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    int getWinScoreCount();
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    int getWinScore(int index);

    // repeated bool isPayAccounts = 5;
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsPayAccountsList();
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    int getIsPayAccountsCount();
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    boolean getIsPayAccounts(int index);

    // repeated bool isNewAccounts = 6;
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsNewAccountsList();
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    int getIsNewAccountsCount();
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    boolean getIsNewAccounts(int index);

    // repeated int32 times = 7;
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getTimesList();
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimesCount();
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes(int index);

    // optional int64 startTime = 8;
    /**
     * <code>optional int64 startTime = 8;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional int64 startTime = 8;</code>
     *
     * <pre>
     * </pre>
     */
    long getStartTime();

    // repeated int32 winNum = 9;
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinNumList();
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    int getWinNumCount();
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    int getWinNum(int index);

    // repeated int32 singleNum = 10;
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getSingleNumList();
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    int getSingleNumCount();
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    int getSingleNum(int index);
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerTopOverProto}
   */
  public static final class MatchServerTopOverProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerTopOverProtoOrBuilder {
    // Use MatchServerTopOverProto.newBuilder() to construct.
    private MatchServerTopOverProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerTopOverProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerTopOverProto defaultInstance;
    public static MatchServerTopOverProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerTopOverProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerTopOverProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              matchId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              accountIds_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                winScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              winScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                winScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                winScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000010;
              }
              isPayAccounts_.add(input.readBool());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                isPayAccounts_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              isNewAccounts_.add(input.readBool());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                isNewAccounts_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              times_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                times_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readInt64();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              winNum_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                winNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                singleNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              singleNum_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                singleNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                singleNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          winScore_ = java.util.Collections.unmodifiableList(winScore_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          isPayAccounts_ = java.util.Collections.unmodifiableList(isPayAccounts_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          isNewAccounts_ = java.util.Collections.unmodifiableList(isNewAccounts_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          singleNum_ = java.util.Collections.unmodifiableList(singleNum_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopOverProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopOverProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.class, protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerTopOverProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerTopOverProto>() {
      public MatchServerTopOverProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerTopOverProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerTopOverProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 matchId = 1;
    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public int getMatchId() {
      return matchId_;
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // repeated int64 accountIds = 3;
    public static final int ACCOUNTIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> accountIds_;
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家ID
     * </pre>
     */
    public long getAccountIds(int index) {
      return accountIds_.get(index);
    }

    // repeated int32 winScore = 4;
    public static final int WINSCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> winScore_;
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinScoreList() {
      return winScore_;
    }
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    public int getWinScoreCount() {
      return winScore_.size();
    }
    /**
     * <code>repeated int32 winScore = 4;</code>
     *
     * <pre>
     *赢得的积分
     * </pre>
     */
    public int getWinScore(int index) {
      return winScore_.get(index);
    }

    // repeated bool isPayAccounts = 5;
    public static final int ISPAYACCOUNTS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Boolean> isPayAccounts_;
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsPayAccountsList() {
      return isPayAccounts_;
    }
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public int getIsPayAccountsCount() {
      return isPayAccounts_.size();
    }
    /**
     * <code>repeated bool isPayAccounts = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean getIsPayAccounts(int index) {
      return isPayAccounts_.get(index);
    }

    // repeated bool isNewAccounts = 6;
    public static final int ISNEWACCOUNTS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Boolean> isNewAccounts_;
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsNewAccountsList() {
      return isNewAccounts_;
    }
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public int getIsNewAccountsCount() {
      return isNewAccounts_.size();
    }
    /**
     * <code>repeated bool isNewAccounts = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean getIsNewAccounts(int index) {
      return isNewAccounts_.get(index);
    }

    // repeated int32 times = 7;
    public static final int TIMES_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> times_;
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTimesList() {
      return times_;
    }
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes(int index) {
      return times_.get(index);
    }

    // optional int64 startTime = 8;
    public static final int STARTTIME_FIELD_NUMBER = 8;
    private long startTime_;
    /**
     * <code>optional int64 startTime = 8;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 startTime = 8;</code>
     *
     * <pre>
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // repeated int32 winNum = 9;
    public static final int WINNUM_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> winNum_;
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinNumList() {
      return winNum_;
    }
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    public int getWinNumCount() {
      return winNum_.size();
    }
    /**
     * <code>repeated int32 winNum = 9;</code>
     *
     * <pre>
     *上游次数
     * </pre>
     */
    public int getWinNum(int index) {
      return winNum_.get(index);
    }

    // repeated int32 singleNum = 10;
    public static final int SINGLENUM_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> singleNum_;
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSingleNumList() {
      return singleNum_;
    }
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    public int getSingleNumCount() {
      return singleNum_.size();
    }
    /**
     * <code>repeated int32 singleNum = 10;</code>
     *
     * <pre>
     *报听次数
     * </pre>
     */
    public int getSingleNum(int index) {
      return singleNum_.get(index);
    }

    private void initFields() {
      matchId_ = 0;
      id_ = 0;
      accountIds_ = java.util.Collections.emptyList();
      winScore_ = java.util.Collections.emptyList();
      isPayAccounts_ = java.util.Collections.emptyList();
      isNewAccounts_ = java.util.Collections.emptyList();
      times_ = java.util.Collections.emptyList();
      startTime_ = 0L;
      winNum_ = java.util.Collections.emptyList();
      singleNum_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, matchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeInt64(3, accountIds_.get(i));
      }
      for (int i = 0; i < winScore_.size(); i++) {
        output.writeInt32(4, winScore_.get(i));
      }
      for (int i = 0; i < isPayAccounts_.size(); i++) {
        output.writeBool(5, isPayAccounts_.get(i));
      }
      for (int i = 0; i < isNewAccounts_.size(); i++) {
        output.writeBool(6, isNewAccounts_.get(i));
      }
      for (int i = 0; i < times_.size(); i++) {
        output.writeInt32(7, times_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(8, startTime_);
      }
      for (int i = 0; i < winNum_.size(); i++) {
        output.writeInt32(9, winNum_.get(i));
      }
      for (int i = 0; i < singleNum_.size(); i++) {
        output.writeInt32(10, singleNum_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winScore_.get(i));
        }
        size += dataSize;
        size += 1 * getWinScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsPayAccountsList().size();
        size += dataSize;
        size += 1 * getIsPayAccountsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsNewAccountsList().size();
        size += dataSize;
        size += 1 * getIsNewAccountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < times_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(times_.get(i));
        }
        size += dataSize;
        size += 1 * getTimesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, startTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winNum_.get(i));
        }
        size += dataSize;
        size += 1 * getWinNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < singleNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(singleNum_.get(i));
        }
        size += dataSize;
        size += 1 * getSingleNumList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerTopOverProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerTopOverProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerTopOverProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopOverProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopOverProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.class, protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        winScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        isPayAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        isNewAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        singleNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerTopOverProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerTopOverProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerTopOverProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerTopOverProto result = new protobuf.clazz.match.MatchRsp.MatchServerTopOverProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.accountIds_ = accountIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          winScore_ = java.util.Collections.unmodifiableList(winScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.winScore_ = winScore_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          isPayAccounts_ = java.util.Collections.unmodifiableList(isPayAccounts_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.isPayAccounts_ = isPayAccounts_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          isNewAccounts_ = java.util.Collections.unmodifiableList(isNewAccounts_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.isNewAccounts_ = isNewAccounts_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          times_ = java.util.Collections.unmodifiableList(times_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.winNum_ = winNum_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          singleNum_ = java.util.Collections.unmodifiableList(singleNum_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.singleNum_ = singleNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerTopOverProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerTopOverProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerTopOverProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerTopOverProto.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        if (!other.winScore_.isEmpty()) {
          if (winScore_.isEmpty()) {
            winScore_ = other.winScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureWinScoreIsMutable();
            winScore_.addAll(other.winScore_);
          }
          onChanged();
        }
        if (!other.isPayAccounts_.isEmpty()) {
          if (isPayAccounts_.isEmpty()) {
            isPayAccounts_ = other.isPayAccounts_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIsPayAccountsIsMutable();
            isPayAccounts_.addAll(other.isPayAccounts_);
          }
          onChanged();
        }
        if (!other.isNewAccounts_.isEmpty()) {
          if (isNewAccounts_.isEmpty()) {
            isNewAccounts_ = other.isNewAccounts_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureIsNewAccountsIsMutable();
            isNewAccounts_.addAll(other.isNewAccounts_);
          }
          onChanged();
        }
        if (!other.times_.isEmpty()) {
          if (times_.isEmpty()) {
            times_ = other.times_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTimesIsMutable();
            times_.addAll(other.times_);
          }
          onChanged();
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (!other.winNum_.isEmpty()) {
          if (winNum_.isEmpty()) {
            winNum_ = other.winNum_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureWinNumIsMutable();
            winNum_.addAll(other.winNum_);
          }
          onChanged();
        }
        if (!other.singleNum_.isEmpty()) {
          if (singleNum_.isEmpty()) {
            singleNum_ = other.singleNum_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureSingleNumIsMutable();
            singleNum_.addAll(other.singleNum_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerTopOverProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerTopOverProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 matchId = 1;
      private int matchId_ ;
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000001;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 accountIds = 3;
      private java.util.List<java.lang.Long> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = new java.util.ArrayList<java.lang.Long>(accountIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public long getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public Builder setAccountIds(
          int index, long value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public Builder addAccountIds(long value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAccountIdsIsMutable();
        super.addAll(values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家ID
       * </pre>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 winScore = 4;
      private java.util.List<java.lang.Integer> winScore_ = java.util.Collections.emptyList();
      private void ensureWinScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          winScore_ = new java.util.ArrayList<java.lang.Integer>(winScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinScoreList() {
        return java.util.Collections.unmodifiableList(winScore_);
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public int getWinScoreCount() {
        return winScore_.size();
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public int getWinScore(int index) {
        return winScore_.get(index);
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public Builder setWinScore(
          int index, int value) {
        ensureWinScoreIsMutable();
        winScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public Builder addWinScore(int value) {
        ensureWinScoreIsMutable();
        winScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public Builder addAllWinScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinScoreIsMutable();
        super.addAll(values, winScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winScore = 4;</code>
       *
       * <pre>
       *赢得的积分
       * </pre>
       */
      public Builder clearWinScore() {
        winScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated bool isPayAccounts = 5;
      private java.util.List<java.lang.Boolean> isPayAccounts_ = java.util.Collections.emptyList();
      private void ensureIsPayAccountsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>(isPayAccounts_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsPayAccountsList() {
        return java.util.Collections.unmodifiableList(isPayAccounts_);
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public int getIsPayAccountsCount() {
        return isPayAccounts_.size();
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean getIsPayAccounts(int index) {
        return isPayAccounts_.get(index);
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setIsPayAccounts(
          int index, boolean value) {
        ensureIsPayAccountsIsMutable();
        isPayAccounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addIsPayAccounts(boolean value) {
        ensureIsPayAccountsIsMutable();
        isPayAccounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllIsPayAccounts(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsPayAccountsIsMutable();
        super.addAll(values, isPayAccounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearIsPayAccounts() {
        isPayAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated bool isNewAccounts = 6;
      private java.util.List<java.lang.Boolean> isNewAccounts_ = java.util.Collections.emptyList();
      private void ensureIsNewAccountsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>(isNewAccounts_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsNewAccountsList() {
        return java.util.Collections.unmodifiableList(isNewAccounts_);
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public int getIsNewAccountsCount() {
        return isNewAccounts_.size();
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean getIsNewAccounts(int index) {
        return isNewAccounts_.get(index);
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setIsNewAccounts(
          int index, boolean value) {
        ensureIsNewAccountsIsMutable();
        isNewAccounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addIsNewAccounts(boolean value) {
        ensureIsNewAccountsIsMutable();
        isNewAccounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllIsNewAccounts(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsNewAccountsIsMutable();
        super.addAll(values, isNewAccounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearIsNewAccounts() {
        isNewAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 times = 7;
      private java.util.List<java.lang.Integer> times_ = java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          times_ = new java.util.ArrayList<java.lang.Integer>(times_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTimesList() {
        return java.util.Collections.unmodifiableList(times_);
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimesCount() {
        return times_.size();
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes(int index) {
        return times_.get(index);
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(
          int index, int value) {
        ensureTimesIsMutable();
        times_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addTimes(int value) {
        ensureTimesIsMutable();
        times_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimesIsMutable();
        super.addAll(values, times_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int64 startTime = 8;
      private long startTime_ ;
      /**
       * <code>optional int64 startTime = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 startTime = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional int64 startTime = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000080;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startTime = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 winNum = 9;
      private java.util.List<java.lang.Integer> winNum_ = java.util.Collections.emptyList();
      private void ensureWinNumIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          winNum_ = new java.util.ArrayList<java.lang.Integer>(winNum_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinNumList() {
        return java.util.Collections.unmodifiableList(winNum_);
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public int getWinNumCount() {
        return winNum_.size();
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public int getWinNum(int index) {
        return winNum_.get(index);
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public Builder setWinNum(
          int index, int value) {
        ensureWinNumIsMutable();
        winNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public Builder addWinNum(int value) {
        ensureWinNumIsMutable();
        winNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public Builder addAllWinNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinNumIsMutable();
        super.addAll(values, winNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winNum = 9;</code>
       *
       * <pre>
       *上游次数
       * </pre>
       */
      public Builder clearWinNum() {
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 singleNum = 10;
      private java.util.List<java.lang.Integer> singleNum_ = java.util.Collections.emptyList();
      private void ensureSingleNumIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          singleNum_ = new java.util.ArrayList<java.lang.Integer>(singleNum_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSingleNumList() {
        return java.util.Collections.unmodifiableList(singleNum_);
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public int getSingleNumCount() {
        return singleNum_.size();
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public int getSingleNum(int index) {
        return singleNum_.get(index);
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public Builder setSingleNum(
          int index, int value) {
        ensureSingleNumIsMutable();
        singleNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public Builder addSingleNum(int value) {
        ensureSingleNumIsMutable();
        singleNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public Builder addAllSingleNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSingleNumIsMutable();
        super.addAll(values, singleNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 singleNum = 10;</code>
       *
       * <pre>
       *报听次数
       * </pre>
       */
      public Builder clearSingleNum() {
        singleNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerTopOverProto)
    }

    static {
      defaultInstance = new MatchServerTopOverProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerTopOverProto)
  }

  public interface MatchServerOverProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    int getId();

    // optional int32 matchId = 2;
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    boolean hasMatchId();
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    int getMatchId();

    // repeated int64 accountIds = 3;
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    java.util.List<java.lang.Long> getAccountIdsList();
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    long getAccountIds(int index);

    // repeated int32 ranks = 4;
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    java.util.List<java.lang.Integer> getRanksList();
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    int getRanksCount();
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    int getRanks(int index);

    // optional int32 playTime = 5;
    /**
     * <code>optional int32 playTime = 5;</code>
     *
     * <pre>
     *游戏时长
     * </pre>
     */
    boolean hasPlayTime();
    /**
     * <code>optional int32 playTime = 5;</code>
     *
     * <pre>
     *游戏时长
     * </pre>
     */
    int getPlayTime();

    // optional int32 robotNum = 6;
    /**
     * <code>optional int32 robotNum = 6;</code>
     *
     * <pre>
     *机器人数量
     * </pre>
     */
    boolean hasRobotNum();
    /**
     * <code>optional int32 robotNum = 6;</code>
     *
     * <pre>
     *机器人数量
     * </pre>
     */
    int getRobotNum();

    // repeated bool isPayAccounts = 7;
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsPayAccountsList();
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    int getIsPayAccountsCount();
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    boolean getIsPayAccounts(int index);

    // repeated bool isNewAccounts = 8;
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsNewAccountsList();
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    int getIsNewAccountsCount();
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    boolean getIsNewAccounts(int index);

    // optional int32 playerCount = 9;
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    boolean hasPlayerCount();
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    int getPlayerCount();

    // repeated int32 roundNums = 10;
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundNumsList();
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    int getRoundNumsCount();
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    int getRoundNums(int index);
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerOverProto}
   */
  public static final class MatchServerOverProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerOverProtoOrBuilder {
    // Use MatchServerOverProto.newBuilder() to construct.
    private MatchServerOverProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerOverProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerOverProto defaultInstance;
    public static MatchServerOverProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerOverProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerOverProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              accountIds_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ranks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              ranks_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                ranks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                ranks_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              playTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              robotNum_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              isPayAccounts_.add(input.readBool());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                isPayAccounts_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              isNewAccounts_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                isNewAccounts_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              playerCount_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                roundNums_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              roundNums_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                roundNums_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundNums_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ranks_ = java.util.Collections.unmodifiableList(ranks_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          isPayAccounts_ = java.util.Collections.unmodifiableList(isPayAccounts_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          isNewAccounts_ = java.util.Collections.unmodifiableList(isNewAccounts_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          roundNums_ = java.util.Collections.unmodifiableList(roundNums_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOverProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOverProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerOverProto.class, protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerOverProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerOverProto>() {
      public MatchServerOverProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerOverProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerOverProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 matchId = 2;
    public static final int MATCHID_FIELD_NUMBER = 2;
    private int matchId_;
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public int getMatchId() {
      return matchId_;
    }

    // repeated int64 accountIds = 3;
    public static final int ACCOUNTIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> accountIds_;
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated int64 accountIds = 3;</code>
     *
     * <pre>
     * 玩家排名
     * </pre>
     */
    public long getAccountIds(int index) {
      return accountIds_.get(index);
    }

    // repeated int32 ranks = 4;
    public static final int RANKS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> ranks_;
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRanksList() {
      return ranks_;
    }
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    public int getRanksCount() {
      return ranks_.size();
    }
    /**
     * <code>repeated int32 ranks = 4;</code>
     *
     * <pre>
     * 排行
     * </pre>
     */
    public int getRanks(int index) {
      return ranks_.get(index);
    }

    // optional int32 playTime = 5;
    public static final int PLAYTIME_FIELD_NUMBER = 5;
    private int playTime_;
    /**
     * <code>optional int32 playTime = 5;</code>
     *
     * <pre>
     *游戏时长
     * </pre>
     */
    public boolean hasPlayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 playTime = 5;</code>
     *
     * <pre>
     *游戏时长
     * </pre>
     */
    public int getPlayTime() {
      return playTime_;
    }

    // optional int32 robotNum = 6;
    public static final int ROBOTNUM_FIELD_NUMBER = 6;
    private int robotNum_;
    /**
     * <code>optional int32 robotNum = 6;</code>
     *
     * <pre>
     *机器人数量
     * </pre>
     */
    public boolean hasRobotNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 robotNum = 6;</code>
     *
     * <pre>
     *机器人数量
     * </pre>
     */
    public int getRobotNum() {
      return robotNum_;
    }

    // repeated bool isPayAccounts = 7;
    public static final int ISPAYACCOUNTS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Boolean> isPayAccounts_;
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsPayAccountsList() {
      return isPayAccounts_;
    }
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    public int getIsPayAccountsCount() {
      return isPayAccounts_.size();
    }
    /**
     * <code>repeated bool isPayAccounts = 7;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean getIsPayAccounts(int index) {
      return isPayAccounts_.get(index);
    }

    // repeated bool isNewAccounts = 8;
    public static final int ISNEWACCOUNTS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> isNewAccounts_;
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsNewAccountsList() {
      return isNewAccounts_;
    }
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    public int getIsNewAccountsCount() {
      return isNewAccounts_.size();
    }
    /**
     * <code>repeated bool isNewAccounts = 8;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean getIsNewAccounts(int index) {
      return isNewAccounts_.get(index);
    }

    // optional int32 playerCount = 9;
    public static final int PLAYERCOUNT_FIELD_NUMBER = 9;
    private int playerCount_;
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    public boolean hasPlayerCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    public int getPlayerCount() {
      return playerCount_;
    }

    // repeated int32 roundNums = 10;
    public static final int ROUNDNUMS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> roundNums_;
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundNumsList() {
      return roundNums_;
    }
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public int getRoundNumsCount() {
      return roundNums_.size();
    }
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public int getRoundNums(int index) {
      return roundNums_.get(index);
    }

    private void initFields() {
      id_ = 0;
      matchId_ = 0;
      accountIds_ = java.util.Collections.emptyList();
      ranks_ = java.util.Collections.emptyList();
      playTime_ = 0;
      robotNum_ = 0;
      isPayAccounts_ = java.util.Collections.emptyList();
      isNewAccounts_ = java.util.Collections.emptyList();
      playerCount_ = 0;
      roundNums_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, matchId_);
      }
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeInt64(3, accountIds_.get(i));
      }
      for (int i = 0; i < ranks_.size(); i++) {
        output.writeInt32(4, ranks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, playTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, robotNum_);
      }
      for (int i = 0; i < isPayAccounts_.size(); i++) {
        output.writeBool(7, isPayAccounts_.get(i));
      }
      for (int i = 0; i < isNewAccounts_.size(); i++) {
        output.writeBool(8, isNewAccounts_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, playerCount_);
      }
      for (int i = 0; i < roundNums_.size(); i++) {
        output.writeInt32(10, roundNums_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, matchId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ranks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ranks_.get(i));
        }
        size += dataSize;
        size += 1 * getRanksList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, playTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, robotNum_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsPayAccountsList().size();
        size += dataSize;
        size += 1 * getIsPayAccountsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsNewAccountsList().size();
        size += dataSize;
        size += 1 * getIsNewAccountsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, playerCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundNums_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundNums_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundNumsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOverProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerOverProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerOverProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerOverProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOverProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOverProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerOverProto.class, protobuf.clazz.match.MatchRsp.MatchServerOverProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerOverProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        ranks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        playTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        robotNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isPayAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        isNewAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        playerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        roundNums_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOverProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOverProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOverProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerOverProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOverProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerOverProto result = new protobuf.clazz.match.MatchRsp.MatchServerOverProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.accountIds_ = accountIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ranks_ = java.util.Collections.unmodifiableList(ranks_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ranks_ = ranks_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playTime_ = playTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.robotNum_ = robotNum_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          isPayAccounts_ = java.util.Collections.unmodifiableList(isPayAccounts_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.isPayAccounts_ = isPayAccounts_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          isNewAccounts_ = java.util.Collections.unmodifiableList(isNewAccounts_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.isNewAccounts_ = isNewAccounts_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerCount_ = playerCount_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          roundNums_ = java.util.Collections.unmodifiableList(roundNums_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.roundNums_ = roundNums_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerOverProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerOverProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerOverProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerOverProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        if (!other.ranks_.isEmpty()) {
          if (ranks_.isEmpty()) {
            ranks_ = other.ranks_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRanksIsMutable();
            ranks_.addAll(other.ranks_);
          }
          onChanged();
        }
        if (other.hasPlayTime()) {
          setPlayTime(other.getPlayTime());
        }
        if (other.hasRobotNum()) {
          setRobotNum(other.getRobotNum());
        }
        if (!other.isPayAccounts_.isEmpty()) {
          if (isPayAccounts_.isEmpty()) {
            isPayAccounts_ = other.isPayAccounts_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureIsPayAccountsIsMutable();
            isPayAccounts_.addAll(other.isPayAccounts_);
          }
          onChanged();
        }
        if (!other.isNewAccounts_.isEmpty()) {
          if (isNewAccounts_.isEmpty()) {
            isNewAccounts_ = other.isNewAccounts_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureIsNewAccountsIsMutable();
            isNewAccounts_.addAll(other.isNewAccounts_);
          }
          onChanged();
        }
        if (other.hasPlayerCount()) {
          setPlayerCount(other.getPlayerCount());
        }
        if (!other.roundNums_.isEmpty()) {
          if (roundNums_.isEmpty()) {
            roundNums_ = other.roundNums_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRoundNumsIsMutable();
            roundNums_.addAll(other.roundNums_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerOverProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerOverProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 matchId = 2;
      private int matchId_ ;
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 accountIds = 3;
      private java.util.List<java.lang.Long> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          accountIds_ = new java.util.ArrayList<java.lang.Long>(accountIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public long getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public Builder setAccountIds(
          int index, long value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public Builder addAccountIds(long value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAccountIdsIsMutable();
        super.addAll(values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 3;</code>
       *
       * <pre>
       * 玩家排名
       * </pre>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 ranks = 4;
      private java.util.List<java.lang.Integer> ranks_ = java.util.Collections.emptyList();
      private void ensureRanksIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ranks_ = new java.util.ArrayList<java.lang.Integer>(ranks_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRanksList() {
        return java.util.Collections.unmodifiableList(ranks_);
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public int getRanksCount() {
        return ranks_.size();
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public int getRanks(int index) {
        return ranks_.get(index);
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public Builder setRanks(
          int index, int value) {
        ensureRanksIsMutable();
        ranks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public Builder addRanks(int value) {
        ensureRanksIsMutable();
        ranks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public Builder addAllRanks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRanksIsMutable();
        super.addAll(values, ranks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 4;</code>
       *
       * <pre>
       * 排行
       * </pre>
       */
      public Builder clearRanks() {
        ranks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 playTime = 5;
      private int playTime_ ;
      /**
       * <code>optional int32 playTime = 5;</code>
       *
       * <pre>
       *游戏时长
       * </pre>
       */
      public boolean hasPlayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       *
       * <pre>
       *游戏时长
       * </pre>
       */
      public int getPlayTime() {
        return playTime_;
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       *
       * <pre>
       *游戏时长
       * </pre>
       */
      public Builder setPlayTime(int value) {
        bitField0_ |= 0x00000010;
        playTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       *
       * <pre>
       *游戏时长
       * </pre>
       */
      public Builder clearPlayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 robotNum = 6;
      private int robotNum_ ;
      /**
       * <code>optional int32 robotNum = 6;</code>
       *
       * <pre>
       *机器人数量
       * </pre>
       */
      public boolean hasRobotNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 robotNum = 6;</code>
       *
       * <pre>
       *机器人数量
       * </pre>
       */
      public int getRobotNum() {
        return robotNum_;
      }
      /**
       * <code>optional int32 robotNum = 6;</code>
       *
       * <pre>
       *机器人数量
       * </pre>
       */
      public Builder setRobotNum(int value) {
        bitField0_ |= 0x00000020;
        robotNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 robotNum = 6;</code>
       *
       * <pre>
       *机器人数量
       * </pre>
       */
      public Builder clearRobotNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        robotNum_ = 0;
        onChanged();
        return this;
      }

      // repeated bool isPayAccounts = 7;
      private java.util.List<java.lang.Boolean> isPayAccounts_ = java.util.Collections.emptyList();
      private void ensureIsPayAccountsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          isPayAccounts_ = new java.util.ArrayList<java.lang.Boolean>(isPayAccounts_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsPayAccountsList() {
        return java.util.Collections.unmodifiableList(isPayAccounts_);
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public int getIsPayAccountsCount() {
        return isPayAccounts_.size();
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean getIsPayAccounts(int index) {
        return isPayAccounts_.get(index);
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setIsPayAccounts(
          int index, boolean value) {
        ensureIsPayAccountsIsMutable();
        isPayAccounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addIsPayAccounts(boolean value) {
        ensureIsPayAccountsIsMutable();
        isPayAccounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllIsPayAccounts(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsPayAccountsIsMutable();
        super.addAll(values, isPayAccounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPayAccounts = 7;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearIsPayAccounts() {
        isPayAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool isNewAccounts = 8;
      private java.util.List<java.lang.Boolean> isNewAccounts_ = java.util.Collections.emptyList();
      private void ensureIsNewAccountsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          isNewAccounts_ = new java.util.ArrayList<java.lang.Boolean>(isNewAccounts_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsNewAccountsList() {
        return java.util.Collections.unmodifiableList(isNewAccounts_);
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public int getIsNewAccountsCount() {
        return isNewAccounts_.size();
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean getIsNewAccounts(int index) {
        return isNewAccounts_.get(index);
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setIsNewAccounts(
          int index, boolean value) {
        ensureIsNewAccountsIsMutable();
        isNewAccounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addIsNewAccounts(boolean value) {
        ensureIsNewAccountsIsMutable();
        isNewAccounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllIsNewAccounts(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsNewAccountsIsMutable();
        super.addAll(values, isNewAccounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isNewAccounts = 8;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearIsNewAccounts() {
        isNewAccounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 playerCount = 9;
      private int playerCount_ ;
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public boolean hasPlayerCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public int getPlayerCount() {
        return playerCount_;
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public Builder setPlayerCount(int value) {
        bitField0_ |= 0x00000100;
        playerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public Builder clearPlayerCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        playerCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 roundNums = 10;
      private java.util.List<java.lang.Integer> roundNums_ = java.util.Collections.emptyList();
      private void ensureRoundNumsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          roundNums_ = new java.util.ArrayList<java.lang.Integer>(roundNums_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundNumsList() {
        return java.util.Collections.unmodifiableList(roundNums_);
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public int getRoundNumsCount() {
        return roundNums_.size();
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public int getRoundNums(int index) {
        return roundNums_.get(index);
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder setRoundNums(
          int index, int value) {
        ensureRoundNumsIsMutable();
        roundNums_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder addRoundNums(int value) {
        ensureRoundNumsIsMutable();
        roundNums_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder addAllRoundNums(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundNumsIsMutable();
        super.addAll(values, roundNums_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder clearRoundNums() {
        roundNums_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerOverProto)
    }

    static {
      defaultInstance = new MatchServerOverProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerOverProto)
  }

  public interface MatchServerOutProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 1;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    int getId();

    // optional int32 matchId = 2;
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    boolean hasMatchId();
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    int getMatchId();

    // optional int64 accountId = 3;
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    long getAccountId();

    // optional int32 rank = 4;
    /**
     * <code>optional int32 rank = 4;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    boolean hasRank();
    /**
     * <code>optional int32 rank = 4;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    int getRank();

    // repeated int64 accountIds = 5;
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    java.util.List<java.lang.Long> getAccountIdsList();
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    long getAccountIds(int index);

    // optional bool isPayAccount = 6;
    /**
     * <code>optional bool isPayAccount = 6;</code>
     */
    boolean hasIsPayAccount();
    /**
     * <code>optional bool isPayAccount = 6;</code>
     */
    boolean getIsPayAccount();

    // optional bool isNewAccount = 7;
    /**
     * <code>optional bool isNewAccount = 7;</code>
     */
    boolean hasIsNewAccount();
    /**
     * <code>optional bool isNewAccount = 7;</code>
     */
    boolean getIsNewAccount();

    // optional int32 playerCount = 9;
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    boolean hasPlayerCount();
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    int getPlayerCount();

    // repeated int32 roundNums = 10;
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundNumsList();
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    int getRoundNumsCount();
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    int getRoundNums(int index);
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerOutProto}
   *
   * <pre>
   *玩家出局了 获取比赛排名
   * </pre>
   */
  public static final class MatchServerOutProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerOutProtoOrBuilder {
    // Use MatchServerOutProto.newBuilder() to construct.
    private MatchServerOutProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerOutProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerOutProto defaultInstance;
    public static MatchServerOutProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerOutProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerOutProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              accountId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rank_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              accountIds_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              isPayAccount_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              isNewAccount_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              playerCount_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                roundNums_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              roundNums_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                roundNums_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundNums_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          roundNums_ = java.util.Collections.unmodifiableList(roundNums_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOutProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOutProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerOutProto.class, protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerOutProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerOutProto>() {
      public MatchServerOutProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerOutProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerOutProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 每场比赛的唯一Id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 matchId = 2;
    public static final int MATCHID_FIELD_NUMBER = 2;
    private int matchId_;
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 matchId = 2;</code>
     *
     * <pre>
     * 比赛Id
     * </pre>
     */
    public int getMatchId() {
      return matchId_;
    }

    // optional int64 accountId = 3;
    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 rank = 4;
    public static final int RANK_FIELD_NUMBER = 4;
    private int rank_;
    /**
     * <code>optional int32 rank = 4;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 rank = 4;</code>
     *
     * <pre>
     *排名
     * </pre>
     */
    public int getRank() {
      return rank_;
    }

    // repeated int64 accountIds = 5;
    public static final int ACCOUNTIDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> accountIds_;
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    public java.util.List<java.lang.Long>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated int64 accountIds = 5;</code>
     */
    public long getAccountIds(int index) {
      return accountIds_.get(index);
    }

    // optional bool isPayAccount = 6;
    public static final int ISPAYACCOUNT_FIELD_NUMBER = 6;
    private boolean isPayAccount_;
    /**
     * <code>optional bool isPayAccount = 6;</code>
     */
    public boolean hasIsPayAccount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool isPayAccount = 6;</code>
     */
    public boolean getIsPayAccount() {
      return isPayAccount_;
    }

    // optional bool isNewAccount = 7;
    public static final int ISNEWACCOUNT_FIELD_NUMBER = 7;
    private boolean isNewAccount_;
    /**
     * <code>optional bool isNewAccount = 7;</code>
     */
    public boolean hasIsNewAccount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isNewAccount = 7;</code>
     */
    public boolean getIsNewAccount() {
      return isNewAccount_;
    }

    // optional int32 playerCount = 9;
    public static final int PLAYERCOUNT_FIELD_NUMBER = 9;
    private int playerCount_;
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    public boolean hasPlayerCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 playerCount = 9;</code>
     *
     * <pre>
     *当前比赛人数
     * </pre>
     */
    public int getPlayerCount() {
      return playerCount_;
    }

    // repeated int32 roundNums = 10;
    public static final int ROUNDNUMS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> roundNums_;
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundNumsList() {
      return roundNums_;
    }
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public int getRoundNumsCount() {
      return roundNums_.size();
    }
    /**
     * <code>repeated int32 roundNums = 10;</code>
     *
     * <pre>
     *胜局数
     * </pre>
     */
    public int getRoundNums(int index) {
      return roundNums_.get(index);
    }

    private void initFields() {
      id_ = 0;
      matchId_ = 0;
      accountId_ = 0L;
      rank_ = 0;
      accountIds_ = java.util.Collections.emptyList();
      isPayAccount_ = false;
      isNewAccount_ = false;
      playerCount_ = 0;
      roundNums_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rank_);
      }
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeInt64(5, accountIds_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, isPayAccount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, isNewAccount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, playerCount_);
      }
      for (int i = 0; i < roundNums_.size(); i++) {
        output.writeInt32(10, roundNums_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, accountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rank_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isPayAccount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isNewAccount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, playerCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundNums_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundNums_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundNumsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerOutProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerOutProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerOutProto}
     *
     * <pre>
     *玩家出局了 获取比赛排名
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerOutProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOutProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOutProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerOutProto.class, protobuf.clazz.match.MatchRsp.MatchServerOutProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerOutProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        rank_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        isPayAccount_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isNewAccount_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        playerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        roundNums_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerOutProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOutProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOutProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerOutProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerOutProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerOutProto result = new protobuf.clazz.match.MatchRsp.MatchServerOutProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rank_ = rank_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.accountIds_ = accountIds_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isPayAccount_ = isPayAccount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isNewAccount_ = isNewAccount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerCount_ = playerCount_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          roundNums_ = java.util.Collections.unmodifiableList(roundNums_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.roundNums_ = roundNums_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerOutProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerOutProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerOutProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerOutProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        if (other.hasIsPayAccount()) {
          setIsPayAccount(other.getIsPayAccount());
        }
        if (other.hasIsNewAccount()) {
          setIsNewAccount(other.getIsNewAccount());
        }
        if (other.hasPlayerCount()) {
          setPlayerCount(other.getPlayerCount());
        }
        if (!other.roundNums_.isEmpty()) {
          if (roundNums_.isEmpty()) {
            roundNums_ = other.roundNums_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRoundNumsIsMutable();
            roundNums_.addAll(other.roundNums_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerOutProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerOutProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 1;
      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * 每场比赛的唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 matchId = 2;
      private int matchId_ ;
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 matchId = 2;</code>
       *
       * <pre>
       * 比赛Id
       * </pre>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 accountId = 3;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 rank = 4;
      private int rank_ ;
      /**
       * <code>optional int32 rank = 4;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 rank = 4;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>optional int32 rank = 4;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public Builder setRank(int value) {
        bitField0_ |= 0x00000008;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rank = 4;</code>
       *
       * <pre>
       *排名
       * </pre>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rank_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 accountIds = 5;
      private java.util.List<java.lang.Long> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          accountIds_ = new java.util.ArrayList<java.lang.Long>(accountIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public java.util.List<java.lang.Long>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public long getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public Builder setAccountIds(
          int index, long value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public Builder addAccountIds(long value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAccountIdsIsMutable();
        super.addAll(values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 accountIds = 5;</code>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional bool isPayAccount = 6;
      private boolean isPayAccount_ ;
      /**
       * <code>optional bool isPayAccount = 6;</code>
       */
      public boolean hasIsPayAccount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isPayAccount = 6;</code>
       */
      public boolean getIsPayAccount() {
        return isPayAccount_;
      }
      /**
       * <code>optional bool isPayAccount = 6;</code>
       */
      public Builder setIsPayAccount(boolean value) {
        bitField0_ |= 0x00000020;
        isPayAccount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isPayAccount = 6;</code>
       */
      public Builder clearIsPayAccount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isPayAccount_ = false;
        onChanged();
        return this;
      }

      // optional bool isNewAccount = 7;
      private boolean isNewAccount_ ;
      /**
       * <code>optional bool isNewAccount = 7;</code>
       */
      public boolean hasIsNewAccount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isNewAccount = 7;</code>
       */
      public boolean getIsNewAccount() {
        return isNewAccount_;
      }
      /**
       * <code>optional bool isNewAccount = 7;</code>
       */
      public Builder setIsNewAccount(boolean value) {
        bitField0_ |= 0x00000040;
        isNewAccount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isNewAccount = 7;</code>
       */
      public Builder clearIsNewAccount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isNewAccount_ = false;
        onChanged();
        return this;
      }

      // optional int32 playerCount = 9;
      private int playerCount_ ;
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public boolean hasPlayerCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public int getPlayerCount() {
        return playerCount_;
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public Builder setPlayerCount(int value) {
        bitField0_ |= 0x00000080;
        playerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerCount = 9;</code>
       *
       * <pre>
       *当前比赛人数
       * </pre>
       */
      public Builder clearPlayerCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        playerCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 roundNums = 10;
      private java.util.List<java.lang.Integer> roundNums_ = java.util.Collections.emptyList();
      private void ensureRoundNumsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          roundNums_ = new java.util.ArrayList<java.lang.Integer>(roundNums_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundNumsList() {
        return java.util.Collections.unmodifiableList(roundNums_);
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public int getRoundNumsCount() {
        return roundNums_.size();
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public int getRoundNums(int index) {
        return roundNums_.get(index);
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder setRoundNums(
          int index, int value) {
        ensureRoundNumsIsMutable();
        roundNums_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder addRoundNums(int value) {
        ensureRoundNumsIsMutable();
        roundNums_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder addAllRoundNums(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundNumsIsMutable();
        super.addAll(values, roundNums_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roundNums = 10;</code>
       *
       * <pre>
       *胜局数
       * </pre>
       */
      public Builder clearRoundNums() {
        roundNums_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerOutProto)
    }

    static {
      defaultInstance = new MatchServerOutProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerOutProto)
  }

  public interface MatchServerDataProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     */
    int getId();

    // repeated .matchHeader.MatchServerPlayerProto players = 1;
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> 
        getPlayersList();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerPlayerProto getPlayers(int index);
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerDataProto}
   */
  public static final class MatchServerDataProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerDataProtoOrBuilder {
    // Use MatchServerDataProto.newBuilder() to construct.
    private MatchServerDataProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerDataProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerDataProto defaultInstance;
    public static MatchServerDataProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerDataProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerDataProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerDataProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerDataProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerDataProto.class, protobuf.clazz.match.MatchRsp.MatchServerDataProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerDataProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerDataProto>() {
      public MatchServerDataProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerDataProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerDataProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    // repeated .matchHeader.MatchServerPlayerProto players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> players_;
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      id_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerDataProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerDataProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerDataProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerDataProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerDataProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerDataProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerDataProto.class, protobuf.clazz.match.MatchRsp.MatchServerDataProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerDataProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerDataProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerDataProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerDataProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerDataProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerDataProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerDataProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerDataProto result = new protobuf.clazz.match.MatchRsp.MatchServerDataProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerDataProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerDataProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerDataProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerDataProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerDataProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerDataProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated .matchHeader.MatchServerPlayerProto players = 1;
      private java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder> playersBuilder_;

      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder addPlayers(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProto> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto players = 1;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerPlayerProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerDataProto)
    }

    static {
      defaultInstance = new MatchServerDataProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerDataProto)
  }

  public interface MatchServerPlayerProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 nextRefreshTime = 1;
    /**
     * <code>optional int64 nextRefreshTime = 1;</code>
     */
    boolean hasNextRefreshTime();
    /**
     * <code>optional int64 nextRefreshTime = 1;</code>
     */
    long getNextRefreshTime();

    // repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> 
        getDatasList();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto getDatas(int index);
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    int getDatasCount();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder> 
        getDatasOrBuilderList();
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder getDatasOrBuilder(
        int index);

    // optional int64 accountId = 3;
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    long getAccountId();
  }
  /**
   * Protobuf type {@code matchHeader.MatchServerPlayerProto}
   */
  public static final class MatchServerPlayerProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchServerPlayerProtoOrBuilder {
    // Use MatchServerPlayerProto.newBuilder() to construct.
    private MatchServerPlayerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchServerPlayerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchServerPlayerProto defaultInstance;
    public static MatchServerPlayerProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchServerPlayerProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchServerPlayerProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nextRefreshTime_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                datas_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              datas_.add(input.readMessage(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              accountId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          datas_ = java.util.Collections.unmodifiableList(datas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.class, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchServerPlayerProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchServerPlayerProto>() {
      public MatchServerPlayerProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchServerPlayerProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchServerPlayerProto> getParserForType() {
      return PARSER;
    }

    public interface MatchServerPlayerMatchDataProtoOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 matchId = 1;
      /**
       * <code>optional int32 matchId = 1;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional int32 matchId = 1;</code>
       */
      int getMatchId();

      // optional int32 freeCount = 2;
      /**
       * <code>optional int32 freeCount = 2;</code>
       */
      boolean hasFreeCount();
      /**
       * <code>optional int32 freeCount = 2;</code>
       */
      int getFreeCount();

      // optional int32 shareCount = 3;
      /**
       * <code>optional int32 shareCount = 3;</code>
       */
      boolean hasShareCount();
      /**
       * <code>optional int32 shareCount = 3;</code>
       */
      int getShareCount();
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto}
     */
    public static final class MatchServerPlayerMatchDataProto extends
        com.google.protobuf.GeneratedMessage
        implements MatchServerPlayerMatchDataProtoOrBuilder {
      // Use MatchServerPlayerMatchDataProto.newBuilder() to construct.
      private MatchServerPlayerMatchDataProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MatchServerPlayerMatchDataProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MatchServerPlayerMatchDataProto defaultInstance;
      public static MatchServerPlayerMatchDataProto getDefaultInstance() {
        return defaultInstance;
      }

      public MatchServerPlayerMatchDataProto getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MatchServerPlayerMatchDataProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matchId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                freeCount_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                shareCount_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.class, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder.class);
      }

      public static com.google.protobuf.Parser<MatchServerPlayerMatchDataProto> PARSER =
          new com.google.protobuf.AbstractParser<MatchServerPlayerMatchDataProto>() {
        public MatchServerPlayerMatchDataProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MatchServerPlayerMatchDataProto(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MatchServerPlayerMatchDataProto> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int32 matchId = 1;
      public static final int MATCHID_FIELD_NUMBER = 1;
      private int matchId_;
      /**
       * <code>optional int32 matchId = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       */
      public int getMatchId() {
        return matchId_;
      }

      // optional int32 freeCount = 2;
      public static final int FREECOUNT_FIELD_NUMBER = 2;
      private int freeCount_;
      /**
       * <code>optional int32 freeCount = 2;</code>
       */
      public boolean hasFreeCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 freeCount = 2;</code>
       */
      public int getFreeCount() {
        return freeCount_;
      }

      // optional int32 shareCount = 3;
      public static final int SHARECOUNT_FIELD_NUMBER = 3;
      private int shareCount_;
      /**
       * <code>optional int32 shareCount = 3;</code>
       */
      public boolean hasShareCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 shareCount = 3;</code>
       */
      public int getShareCount() {
        return shareCount_;
      }

      private void initFields() {
        matchId_ = 0;
        freeCount_ = 0;
        shareCount_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, freeCount_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, shareCount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, freeCount_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, shareCount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.class, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder.class);
        }

        // Construct using protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          matchId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          freeCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          shareCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor;
        }

        public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto getDefaultInstanceForType() {
          return protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.getDefaultInstance();
        }

        public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto build() {
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto buildPartial() {
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto result = new protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.freeCount_ = freeCount_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shareCount_ = shareCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto) {
            return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto other) {
          if (other == protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.getDefaultInstance()) return this;
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasFreeCount()) {
            setFreeCount(other.getFreeCount());
          }
          if (other.hasShareCount()) {
            setShareCount(other.getShareCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 matchId = 1;
        private int matchId_ ;
        /**
         * <code>optional int32 matchId = 1;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 matchId = 1;</code>
         */
        public int getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional int32 matchId = 1;</code>
         */
        public Builder setMatchId(int value) {
          bitField0_ |= 0x00000001;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 matchId = 1;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchId_ = 0;
          onChanged();
          return this;
        }

        // optional int32 freeCount = 2;
        private int freeCount_ ;
        /**
         * <code>optional int32 freeCount = 2;</code>
         */
        public boolean hasFreeCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 freeCount = 2;</code>
         */
        public int getFreeCount() {
          return freeCount_;
        }
        /**
         * <code>optional int32 freeCount = 2;</code>
         */
        public Builder setFreeCount(int value) {
          bitField0_ |= 0x00000002;
          freeCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 freeCount = 2;</code>
         */
        public Builder clearFreeCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          freeCount_ = 0;
          onChanged();
          return this;
        }

        // optional int32 shareCount = 3;
        private int shareCount_ ;
        /**
         * <code>optional int32 shareCount = 3;</code>
         */
        public boolean hasShareCount() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 shareCount = 3;</code>
         */
        public int getShareCount() {
          return shareCount_;
        }
        /**
         * <code>optional int32 shareCount = 3;</code>
         */
        public Builder setShareCount(int value) {
          bitField0_ |= 0x00000004;
          shareCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 shareCount = 3;</code>
         */
        public Builder clearShareCount() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shareCount_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto)
      }

      static {
        defaultInstance = new MatchServerPlayerMatchDataProto(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto)
    }

    private int bitField0_;
    // optional int64 nextRefreshTime = 1;
    public static final int NEXTREFRESHTIME_FIELD_NUMBER = 1;
    private long nextRefreshTime_;
    /**
     * <code>optional int64 nextRefreshTime = 1;</code>
     */
    public boolean hasNextRefreshTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 nextRefreshTime = 1;</code>
     */
    public long getNextRefreshTime() {
      return nextRefreshTime_;
    }

    // repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;
    public static final int DATAS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> datas_;
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> getDatasList() {
      return datas_;
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder> 
        getDatasOrBuilderList() {
      return datas_;
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    public int getDatasCount() {
      return datas_.size();
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto getDatas(int index) {
      return datas_.get(index);
    }
    /**
     * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder getDatasOrBuilder(
        int index) {
      return datas_.get(index);
    }

    // optional int64 accountId = 3;
    public static final int ACCOUNTID_FIELD_NUMBER = 3;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 accountId = 3;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    private void initFields() {
      nextRefreshTime_ = 0L;
      datas_ = java.util.Collections.emptyList();
      accountId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, nextRefreshTime_);
      }
      for (int i = 0; i < datas_.size(); i++) {
        output.writeMessage(2, datas_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nextRefreshTime_);
      }
      for (int i = 0; i < datas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, datas_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchServerPlayerProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchServerPlayerProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.class, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nextRefreshTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (datasBuilder_ == null) {
          datas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          datasBuilder_.clear();
        }
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchServerPlayerProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto build() {
        protobuf.clazz.match.MatchRsp.MatchServerPlayerProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchServerPlayerProto result = new protobuf.clazz.match.MatchRsp.MatchServerPlayerProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nextRefreshTime_ = nextRefreshTime_;
        if (datasBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            datas_ = java.util.Collections.unmodifiableList(datas_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.datas_ = datas_;
        } else {
          result.datas_ = datasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchServerPlayerProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchServerPlayerProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.getDefaultInstance()) return this;
        if (other.hasNextRefreshTime()) {
          setNextRefreshTime(other.getNextRefreshTime());
        }
        if (datasBuilder_ == null) {
          if (!other.datas_.isEmpty()) {
            if (datas_.isEmpty()) {
              datas_ = other.datas_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDatasIsMutable();
              datas_.addAll(other.datas_);
            }
            onChanged();
          }
        } else {
          if (!other.datas_.isEmpty()) {
            if (datasBuilder_.isEmpty()) {
              datasBuilder_.dispose();
              datasBuilder_ = null;
              datas_ = other.datas_;
              bitField0_ = (bitField0_ & ~0x00000002);
              datasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDatasFieldBuilder() : null;
            } else {
              datasBuilder_.addAllMessages(other.datas_);
            }
          }
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchServerPlayerProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchServerPlayerProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 nextRefreshTime = 1;
      private long nextRefreshTime_ ;
      /**
       * <code>optional int64 nextRefreshTime = 1;</code>
       */
      public boolean hasNextRefreshTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 nextRefreshTime = 1;</code>
       */
      public long getNextRefreshTime() {
        return nextRefreshTime_;
      }
      /**
       * <code>optional int64 nextRefreshTime = 1;</code>
       */
      public Builder setNextRefreshTime(long value) {
        bitField0_ |= 0x00000001;
        nextRefreshTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 nextRefreshTime = 1;</code>
       */
      public Builder clearNextRefreshTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nextRefreshTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;
      private java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> datas_ =
        java.util.Collections.emptyList();
      private void ensureDatasIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          datas_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto>(datas_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder> datasBuilder_;

      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> getDatasList() {
        if (datasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(datas_);
        } else {
          return datasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public int getDatasCount() {
        if (datasBuilder_ == null) {
          return datas_.size();
        } else {
          return datasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto getDatas(int index) {
        if (datasBuilder_ == null) {
          return datas_.get(index);
        } else {
          return datasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder setDatas(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.set(index, value);
          onChanged();
        } else {
          datasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder setDatas(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.set(index, builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder addDatas(protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.add(value);
          onChanged();
        } else {
          datasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder addDatas(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.add(index, value);
          onChanged();
        } else {
          datasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder addDatas(
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.add(builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder addDatas(
          int index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.add(index, builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder addAllDatas(
          java.lang.Iterable<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto> values) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          super.addAll(values, datas_);
          onChanged();
        } else {
          datasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder clearDatas() {
        if (datasBuilder_ == null) {
          datas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          datasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public Builder removeDatas(int index) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.remove(index);
          onChanged();
        } else {
          datasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder getDatasBuilder(
          int index) {
        return getDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder getDatasOrBuilder(
          int index) {
        if (datasBuilder_ == null) {
          return datas_.get(index);  } else {
          return datasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder> 
           getDatasOrBuilderList() {
        if (datasBuilder_ != null) {
          return datasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(datas_);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder addDatasBuilder() {
        return getDatasFieldBuilder().addBuilder(
            protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder addDatasBuilder(
          int index) {
        return getDatasFieldBuilder().addBuilder(
            index, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchServerPlayerProto.MatchServerPlayerMatchDataProto datas = 2;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder> 
           getDatasBuilderList() {
        return getDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder> 
          getDatasFieldBuilder() {
        if (datasBuilder_ == null) {
          datasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProto.Builder, protobuf.clazz.match.MatchRsp.MatchServerPlayerProto.MatchServerPlayerMatchDataProtoOrBuilder>(
                  datas_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          datas_ = null;
        }
        return datasBuilder_;
      }

      // optional int64 accountId = 3;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000004;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 3;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchServerPlayerProto)
    }

    static {
      defaultInstance = new MatchServerPlayerProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchServerPlayerProto)
  }

  public interface MatchBaseServerProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 matchId = 1;
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * matchId
     * </pre>
     */
    boolean hasMatchId();
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * matchId
     * </pre>
     */
    int getMatchId();

    // repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> 
        getPlayerListList();
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto getPlayerList(int index);
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    int getPlayerListCount();
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder> 
        getPlayerListOrBuilderList();
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder getPlayerListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code matchHeader.MatchBaseServerProto}
   */
  public static final class MatchBaseServerProto extends
      com.google.protobuf.GeneratedMessage
      implements MatchBaseServerProtoOrBuilder {
    // Use MatchBaseServerProto.newBuilder() to construct.
    private MatchBaseServerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MatchBaseServerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MatchBaseServerProto defaultInstance;
    public static MatchBaseServerProto getDefaultInstance() {
      return defaultInstance;
    }

    public MatchBaseServerProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MatchBaseServerProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              matchId_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerList_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerList_.add(input.readMessage(protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerList_ = java.util.Collections.unmodifiableList(playerList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.match.MatchRsp.MatchBaseServerProto.class, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.Builder.class);
    }

    public static com.google.protobuf.Parser<MatchBaseServerProto> PARSER =
        new com.google.protobuf.AbstractParser<MatchBaseServerProto>() {
      public MatchBaseServerProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchBaseServerProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchBaseServerProto> getParserForType() {
      return PARSER;
    }

    public interface MatchBasePlayerServerProtoOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 accountId = 1;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      long getAccountId();

      // optional int32 costType = 2;
      /**
       * <code>optional int32 costType = 2;</code>
       */
      boolean hasCostType();
      /**
       * <code>optional int32 costType = 2;</code>
       */
      int getCostType();

      // optional int32 status = 3;
      /**
       * <code>optional int32 status = 3;</code>
       */
      boolean hasStatus();
      /**
       * <code>optional int32 status = 3;</code>
       */
      int getStatus();

      // optional string applyTime = 4;
      /**
       * <code>optional string applyTime = 4;</code>
       */
      boolean hasApplyTime();
      /**
       * <code>optional string applyTime = 4;</code>
       */
      java.lang.String getApplyTime();
      /**
       * <code>optional string applyTime = 4;</code>
       */
      com.google.protobuf.ByteString
          getApplyTimeBytes();

      // optional int32 opType = 5;
      /**
       * <code>optional int32 opType = 5;</code>
       */
      boolean hasOpType();
      /**
       * <code>optional int32 opType = 5;</code>
       */
      int getOpType();
    }
    /**
     * Protobuf type {@code matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto}
     */
    public static final class MatchBasePlayerServerProto extends
        com.google.protobuf.GeneratedMessage
        implements MatchBasePlayerServerProtoOrBuilder {
      // Use MatchBasePlayerServerProto.newBuilder() to construct.
      private MatchBasePlayerServerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MatchBasePlayerServerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MatchBasePlayerServerProto defaultInstance;
      public static MatchBasePlayerServerProto getDefaultInstance() {
        return defaultInstance;
      }

      public MatchBasePlayerServerProto getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MatchBasePlayerServerProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                costType_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                status_ = input.readInt32();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                applyTime_ = input.readBytes();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                opType_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.class, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder.class);
      }

      public static com.google.protobuf.Parser<MatchBasePlayerServerProto> PARSER =
          new com.google.protobuf.AbstractParser<MatchBasePlayerServerProto>() {
        public MatchBasePlayerServerProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MatchBasePlayerServerProto(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MatchBasePlayerServerProto> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int64 accountId = 1;
      public static final int ACCOUNTID_FIELD_NUMBER = 1;
      private long accountId_;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }

      // optional int32 costType = 2;
      public static final int COSTTYPE_FIELD_NUMBER = 2;
      private int costType_;
      /**
       * <code>optional int32 costType = 2;</code>
       */
      public boolean hasCostType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 costType = 2;</code>
       */
      public int getCostType() {
        return costType_;
      }

      // optional int32 status = 3;
      public static final int STATUS_FIELD_NUMBER = 3;
      private int status_;
      /**
       * <code>optional int32 status = 3;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 status = 3;</code>
       */
      public int getStatus() {
        return status_;
      }

      // optional string applyTime = 4;
      public static final int APPLYTIME_FIELD_NUMBER = 4;
      private java.lang.Object applyTime_;
      /**
       * <code>optional string applyTime = 4;</code>
       */
      public boolean hasApplyTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string applyTime = 4;</code>
       */
      public java.lang.String getApplyTime() {
        java.lang.Object ref = applyTime_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            applyTime_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string applyTime = 4;</code>
       */
      public com.google.protobuf.ByteString
          getApplyTimeBytes() {
        java.lang.Object ref = applyTime_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          applyTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional int32 opType = 5;
      public static final int OPTYPE_FIELD_NUMBER = 5;
      private int opType_;
      /**
       * <code>optional int32 opType = 5;</code>
       */
      public boolean hasOpType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 opType = 5;</code>
       */
      public int getOpType() {
        return opType_;
      }

      private void initFields() {
        accountId_ = 0L;
        costType_ = 0;
        status_ = 0;
        applyTime_ = "";
        opType_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, costType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, status_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getApplyTimeBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, opType_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, costType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, status_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getApplyTimeBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, opType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.class, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder.class);
        }

        // Construct using protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          costType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          status_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          applyTime_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          opType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor;
        }

        public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto getDefaultInstanceForType() {
          return protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.getDefaultInstance();
        }

        public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto build() {
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto buildPartial() {
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto result = new protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.costType_ = costType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.status_ = status_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.applyTime_ = applyTime_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.opType_ = opType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto) {
            return mergeFrom((protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto other) {
          if (other == protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasCostType()) {
            setCostType(other.getCostType());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          if (other.hasApplyTime()) {
            bitField0_ |= 0x00000008;
            applyTime_ = other.applyTime_;
            onChanged();
          }
          if (other.hasOpType()) {
            setOpType(other.getOpType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 accountId = 1;
        private long accountId_ ;
        /**
         * <code>optional int64 accountId = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 accountId = 1;</code>
         */
        public long getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional int64 accountId = 1;</code>
         */
        public Builder setAccountId(long value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 accountId = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0L;
          onChanged();
          return this;
        }

        // optional int32 costType = 2;
        private int costType_ ;
        /**
         * <code>optional int32 costType = 2;</code>
         */
        public boolean hasCostType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 costType = 2;</code>
         */
        public int getCostType() {
          return costType_;
        }
        /**
         * <code>optional int32 costType = 2;</code>
         */
        public Builder setCostType(int value) {
          bitField0_ |= 0x00000002;
          costType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 costType = 2;</code>
         */
        public Builder clearCostType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          costType_ = 0;
          onChanged();
          return this;
        }

        // optional int32 status = 3;
        private int status_ ;
        /**
         * <code>optional int32 status = 3;</code>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 status = 3;</code>
         */
        public int getStatus() {
          return status_;
        }
        /**
         * <code>optional int32 status = 3;</code>
         */
        public Builder setStatus(int value) {
          bitField0_ |= 0x00000004;
          status_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 status = 3;</code>
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000004);
          status_ = 0;
          onChanged();
          return this;
        }

        // optional string applyTime = 4;
        private java.lang.Object applyTime_ = "";
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public boolean hasApplyTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public java.lang.String getApplyTime() {
          java.lang.Object ref = applyTime_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            applyTime_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public com.google.protobuf.ByteString
            getApplyTimeBytes() {
          java.lang.Object ref = applyTime_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            applyTime_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public Builder setApplyTime(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          applyTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public Builder clearApplyTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          applyTime_ = getDefaultInstance().getApplyTime();
          onChanged();
          return this;
        }
        /**
         * <code>optional string applyTime = 4;</code>
         */
        public Builder setApplyTimeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          applyTime_ = value;
          onChanged();
          return this;
        }

        // optional int32 opType = 5;
        private int opType_ ;
        /**
         * <code>optional int32 opType = 5;</code>
         */
        public boolean hasOpType() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 opType = 5;</code>
         */
        public int getOpType() {
          return opType_;
        }
        /**
         * <code>optional int32 opType = 5;</code>
         */
        public Builder setOpType(int value) {
          bitField0_ |= 0x00000010;
          opType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 opType = 5;</code>
         */
        public Builder clearOpType() {
          bitField0_ = (bitField0_ & ~0x00000010);
          opType_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto)
      }

      static {
        defaultInstance = new MatchBasePlayerServerProto(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto)
    }

    private int bitField0_;
    // optional int32 matchId = 1;
    public static final int MATCHID_FIELD_NUMBER = 1;
    private int matchId_;
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * matchId
     * </pre>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 matchId = 1;</code>
     *
     * <pre>
     * matchId
     * </pre>
     */
    public int getMatchId() {
      return matchId_;
    }

    // repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;
    public static final int PLAYERLIST_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> playerList_;
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    public java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> getPlayerListList() {
      return playerList_;
    }
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder> 
        getPlayerListOrBuilderList() {
      return playerList_;
    }
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    public int getPlayerListCount() {
      return playerList_.size();
    }
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto getPlayerList(int index) {
      return playerList_.get(index);
    }
    /**
     * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
     */
    public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder getPlayerListOrBuilder(
        int index) {
      return playerList_.get(index);
    }

    private void initFields() {
      matchId_ = 0;
      playerList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, matchId_);
      }
      for (int i = 0; i < playerList_.size(); i++) {
        output.writeMessage(2, playerList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, matchId_);
      }
      for (int i = 0; i < playerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.match.MatchRsp.MatchBaseServerProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.match.MatchRsp.MatchBaseServerProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matchHeader.MatchBaseServerProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.match.MatchRsp.MatchBaseServerProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.match.MatchRsp.MatchBaseServerProto.class, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.Builder.class);
      }

      // Construct using protobuf.clazz.match.MatchRsp.MatchBaseServerProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        matchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.match.MatchRsp.internal_static_matchHeader_MatchBaseServerProto_descriptor;
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto getDefaultInstanceForType() {
        return protobuf.clazz.match.MatchRsp.MatchBaseServerProto.getDefaultInstance();
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto build() {
        protobuf.clazz.match.MatchRsp.MatchBaseServerProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto buildPartial() {
        protobuf.clazz.match.MatchRsp.MatchBaseServerProto result = new protobuf.clazz.match.MatchRsp.MatchBaseServerProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.matchId_ = matchId_;
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playerList_ = java.util.Collections.unmodifiableList(playerList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.match.MatchRsp.MatchBaseServerProto) {
          return mergeFrom((protobuf.clazz.match.MatchRsp.MatchBaseServerProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.match.MatchRsp.MatchBaseServerProto other) {
        if (other == protobuf.clazz.match.MatchRsp.MatchBaseServerProto.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (playerListBuilder_ == null) {
          if (!other.playerList_.isEmpty()) {
            if (playerList_.isEmpty()) {
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerListIsMutable();
              playerList_.addAll(other.playerList_);
            }
            onChanged();
          }
        } else {
          if (!other.playerList_.isEmpty()) {
            if (playerListBuilder_.isEmpty()) {
              playerListBuilder_.dispose();
              playerListBuilder_ = null;
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerListFieldBuilder() : null;
            } else {
              playerListBuilder_.addAllMessages(other.playerList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.match.MatchRsp.MatchBaseServerProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.match.MatchRsp.MatchBaseServerProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 matchId = 1;
      private int matchId_ ;
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * matchId
       * </pre>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * matchId
       * </pre>
       */
      public int getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * matchId
       * </pre>
       */
      public Builder setMatchId(int value) {
        bitField0_ |= 0x00000001;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 matchId = 1;</code>
       *
       * <pre>
       * matchId
       * </pre>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0;
        onChanged();
        return this;
      }

      // repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;
      private java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> playerList_ =
        java.util.Collections.emptyList();
      private void ensurePlayerListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerList_ = new java.util.ArrayList<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto>(playerList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder> playerListBuilder_;

      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> getPlayerListList() {
        if (playerListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerList_);
        } else {
          return playerListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public int getPlayerListCount() {
        if (playerListBuilder_ == null) {
          return playerList_.size();
        } else {
          return playerListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto getPlayerList(int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);
        } else {
          return playerListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder setPlayerList(
          int index, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.set(index, value);
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder setPlayerList(
          int index, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder addPlayerList(protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder addPlayerList(
          int index, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(index, value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder addPlayerList(
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder addPlayerList(
          int index, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto> values) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          super.addAll(values, playerList_);
          onChanged();
        } else {
          playerListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public Builder removePlayerList(int index) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.remove(index);
          onChanged();
        } else {
          playerListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder getPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder getPlayerListOrBuilder(
          int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);  } else {
          return playerListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder> 
           getPlayerListOrBuilderList() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerList_);
        }
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder addPlayerListBuilder() {
        return getPlayerListFieldBuilder().addBuilder(
            protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder addPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().addBuilder(
            index, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .matchHeader.MatchBaseServerProto.MatchBasePlayerServerProto playerList = 2;</code>
       */
      public java.util.List<protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder> 
           getPlayerListBuilderList() {
        return getPlayerListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder> 
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProto.Builder, protobuf.clazz.match.MatchRsp.MatchBaseServerProto.MatchBasePlayerServerProtoOrBuilder>(
                  playerList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:matchHeader.MatchBaseServerProto)
    }

    static {
      defaultInstance = new MatchBaseServerProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:matchHeader.MatchBaseServerProto)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchS2SRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchS2SRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchBaseRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchBaseRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerStartProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerStartProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchClientRequestWrap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchClientRequestWrap_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerTopStatusProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerTopStatusProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerTopOverProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerTopOverProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerOverProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerOverProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerOutProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerOutProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerDataProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerDataProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerPlayerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerPlayerProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchBaseServerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchBaseServerProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027match/MatchServer.proto\022\013matchHeader\032\024" +
      "s2s/baseServer.proto\032\035match/MatchClientH" +
      "eader.proto\"\300\003\n\017MatchS2SRequest\022%\n\003cmd\030\001" +
      " \001(\0162\030.matchHeader.MatchS2SCmd\0226\n\nmatchS" +
      "tart\030\002 \001(\0132\".matchHeader.MatchServerStar" +
      "tProto\0224\n\tmatchOver\030\003 \001(\0132!.matchHeader." +
      "MatchServerOverProto\022:\n\rclientRequest\030\004 " +
      "\001(\0132#.matchHeader.MatchClientRequestWrap" +
      "\022+\n\004base\030\005 \001(\0132\035.matchHeader.MatchBaseRe" +
      "quest\0223\n\tplayerOut\030\006 \001(\0132 .matchHeader.M",
      "atchServerOutProto\022:\n\014matchTopOver\030\007 \001(\013" +
      "2$.matchHeader.MatchServerTopOverProto\022>" +
      "\n\016matchTopStatus\030\010 \001(\0132&.matchHeader.Mat" +
      "chServerTopStatusProto\"%\n\020MatchBaseReque" +
      "st\022\021\n\taccountId\030\001 \001(\003\"\203\002\n\025MatchServerSta" +
      "rtProto\022\n\n\002id\030\001 \001(\005\022\022\n\naccountIds\030\002 \003(\003\022" +
      "\017\n\007matchId\030\003 \001(\005\022\021\n\tstartTime\030\004 \001(\003\022\022\n\nl" +
      "ogicIndex\030\005 \001(\005\022\020\n\010failType\030\006 \001(\005\022\025\n\rmat" +
      "chAdminIds\030\007 \003(\003\022\016\n\006isStop\030\010 \001(\010\022\021\n\tcost" +
      "Types\030\t \003(\005\022\017\n\007randNum\030\n \001(\005\022\024\n\014accountT",
      "imes\030\013 \003(\005\022\r\n\005isTop\030\014 \001(\010\022\020\n\010gamerNum\030\r " +
      "\001(\005\"}\n\026MatchClientRequestWrap\022\021\n\taccount" +
      "Id\030\001 \001(\003\0220\n\007request\030\002 \001(\0132\037.matchHeader." +
      "MatchClientRequest\022\022\n\nproxyIndex\030\003 \001(\005\022\n" +
      "\n\002id\030\004 \001(\005\"\'\n\031MatchServerTopStatusProto\022" +
      "\n\n\002id\030\001 \001(\005\"\317\001\n\027MatchServerTopOverProto\022" +
      "\017\n\007matchId\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\022\n\naccountI" +
      "ds\030\003 \003(\003\022\020\n\010winScore\030\004 \003(\005\022\025\n\risPayAccou" +
      "nts\030\005 \003(\010\022\025\n\risNewAccounts\030\006 \003(\010\022\r\n\005time" +
      "s\030\007 \003(\005\022\021\n\tstartTime\030\010 \001(\003\022\016\n\006winNum\030\t \003",
      "(\005\022\021\n\tsingleNum\030\n \003(\005\"\320\001\n\024MatchServerOve" +
      "rProto\022\n\n\002id\030\001 \001(\005\022\017\n\007matchId\030\002 \001(\005\022\022\n\na" +
      "ccountIds\030\003 \003(\003\022\r\n\005ranks\030\004 \003(\005\022\020\n\010playTi" +
      "me\030\005 \001(\005\022\020\n\010robotNum\030\006 \001(\005\022\025\n\risPayAccou" +
      "nts\030\007 \003(\010\022\025\n\risNewAccounts\030\010 \003(\010\022\023\n\013play" +
      "erCount\030\t \001(\005\022\021\n\troundNums\030\n \003(\005\"\273\001\n\023Mat" +
      "chServerOutProto\022\n\n\002id\030\001 \001(\005\022\017\n\007matchId\030" +
      "\002 \001(\005\022\021\n\taccountId\030\003 \001(\003\022\014\n\004rank\030\004 \001(\005\022\022" +
      "\n\naccountIds\030\005 \003(\003\022\024\n\014isPayAccount\030\006 \001(\010" +
      "\022\024\n\014isNewAccount\030\007 \001(\010\022\023\n\013playerCount\030\t ",
      "\001(\005\022\021\n\troundNums\030\n \003(\005\"X\n\024MatchServerDat" +
      "aProto\022\n\n\002id\030\002 \001(\005\0224\n\007players\030\001 \003(\0132#.ma" +
      "tchHeader.MatchServerPlayerProto\"\363\001\n\026Mat" +
      "chServerPlayerProto\022\027\n\017nextRefreshTime\030\001" +
      " \001(\003\022R\n\005datas\030\002 \003(\0132C.matchHeader.MatchS" +
      "erverPlayerProto.MatchServerPlayerMatchD" +
      "ataProto\022\021\n\taccountId\030\003 \001(\003\032Y\n\037MatchServ" +
      "erPlayerMatchDataProto\022\017\n\007matchId\030\001 \001(\005\022" +
      "\021\n\tfreeCount\030\002 \001(\005\022\022\n\nshareCount\030\003 \001(\005\"\357" +
      "\001\n\024MatchBaseServerProto\022\017\n\007matchId\030\001 \001(\005",
      "\022P\n\nplayerList\030\002 \003(\0132<.matchHeader.Match" +
      "BaseServerProto.MatchBasePlayerServerPro" +
      "to\032t\n\032MatchBasePlayerServerProto\022\021\n\tacco" +
      "untId\030\001 \001(\003\022\020\n\010costType\030\002 \001(\005\022\016\n\006status\030" +
      "\003 \001(\005\022\021\n\tapplyTime\030\004 \001(\t\022\016\n\006opType\030\005 \001(\005" +
      "*\354\001\n\013MatchS2SCmd\022\023\n\017S2S_MATCH_START\020\000\022\022\n" +
      "\016S2S_MATCH_OVER\020\001\022\024\n\020S2S_MATCH_CLIENT\020\002\022" +
      "\030\n\024S2S_MATCH_START_FAIL\020\003\022\030\n\024S2S_MATCH_P" +
      "LAYER_OUT\020\004\022\034\n\030S2S_MATCH_PLAYER_TIMEOUT\020" +
      "\005\022\032\n\026S2S_MATCH_PLAYER_LEAVE\020\006\022\026\n\022S2S_MAT",
      "CH_TOP_OVER\020\007\022\030\n\024S2S_MATCH_TOP_STATUS\020\010B" +
      " \n\024protobuf.clazz.matchB\010MatchRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_matchHeader_MatchS2SRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_matchHeader_MatchS2SRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchS2SRequest_descriptor,
              new java.lang.String[] { "Cmd", "MatchStart", "MatchOver", "ClientRequest", "Base", "PlayerOut", "MatchTopOver", "MatchTopStatus", });
          internal_static_matchHeader_MatchBaseRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_matchHeader_MatchBaseRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchBaseRequest_descriptor,
              new java.lang.String[] { "AccountId", });
          internal_static_matchHeader_MatchServerStartProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_matchHeader_MatchServerStartProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerStartProto_descriptor,
              new java.lang.String[] { "Id", "AccountIds", "MatchId", "StartTime", "LogicIndex", "FailType", "MatchAdminIds", "IsStop", "CostTypes", "RandNum", "AccountTimes", "IsTop", "GamerNum", });
          internal_static_matchHeader_MatchClientRequestWrap_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_matchHeader_MatchClientRequestWrap_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchClientRequestWrap_descriptor,
              new java.lang.String[] { "AccountId", "Request", "ProxyIndex", "Id", });
          internal_static_matchHeader_MatchServerTopStatusProto_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_matchHeader_MatchServerTopStatusProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerTopStatusProto_descriptor,
              new java.lang.String[] { "Id", });
          internal_static_matchHeader_MatchServerTopOverProto_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_matchHeader_MatchServerTopOverProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerTopOverProto_descriptor,
              new java.lang.String[] { "MatchId", "Id", "AccountIds", "WinScore", "IsPayAccounts", "IsNewAccounts", "Times", "StartTime", "WinNum", "SingleNum", });
          internal_static_matchHeader_MatchServerOverProto_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_matchHeader_MatchServerOverProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerOverProto_descriptor,
              new java.lang.String[] { "Id", "MatchId", "AccountIds", "Ranks", "PlayTime", "RobotNum", "IsPayAccounts", "IsNewAccounts", "PlayerCount", "RoundNums", });
          internal_static_matchHeader_MatchServerOutProto_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_matchHeader_MatchServerOutProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerOutProto_descriptor,
              new java.lang.String[] { "Id", "MatchId", "AccountId", "Rank", "AccountIds", "IsPayAccount", "IsNewAccount", "PlayerCount", "RoundNums", });
          internal_static_matchHeader_MatchServerDataProto_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_matchHeader_MatchServerDataProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerDataProto_descriptor,
              new java.lang.String[] { "Id", "Players", });
          internal_static_matchHeader_MatchServerPlayerProto_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_matchHeader_MatchServerPlayerProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerPlayerProto_descriptor,
              new java.lang.String[] { "NextRefreshTime", "Datas", "AccountId", });
          internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor =
            internal_static_matchHeader_MatchServerPlayerProto_descriptor.getNestedTypes().get(0);
          internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchServerPlayerProto_MatchServerPlayerMatchDataProto_descriptor,
              new java.lang.String[] { "MatchId", "FreeCount", "ShareCount", });
          internal_static_matchHeader_MatchBaseServerProto_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_matchHeader_MatchBaseServerProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchBaseServerProto_descriptor,
              new java.lang.String[] { "MatchId", "PlayerList", });
          internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor =
            internal_static_matchHeader_MatchBaseServerProto_descriptor.getNestedTypes().get(0);
          internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_matchHeader_MatchBaseServerProto_MatchBasePlayerServerProto_descriptor,
              new java.lang.String[] { "AccountId", "CostType", "Status", "ApplyTime", "OpType", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.BaseS2S.getDescriptor(),
          protobuf.clazz.match.MatchClientHeaderRsp.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
