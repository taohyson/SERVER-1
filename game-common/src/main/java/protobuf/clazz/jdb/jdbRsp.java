// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jdb/jdbProto.proto

package protobuf.clazz.jdb;

public final class jdbRsp {
  private jdbRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_id = 1;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional int32 game_type_index = 4;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameTypeIndex();

    // optional int32 game_rule_index = 2;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameRuleIndex();
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameRuleIndex();

    // optional string game_rule_des = 3;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    boolean hasGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    java.lang.String getGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameRuleDesBytes();

    // optional int32 game_round = 5;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    int getGameRound();

    // optional int32 cur_round = 6;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    int getCurRound();

    // optional int32 game_status = 7;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    int getGameStatus();

    // optional int64 create_player_id = 8;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    boolean hasCreatePlayerId();
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    long getCreatePlayerId();

    // optional int32 begin_left_card = 9;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    boolean hasBeginLeftCard();
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    int getBeginLeftCard();

    // optional int32 banker_player = 10;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional string create_name = 11;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    boolean hasCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    java.lang.String getCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateNameBytes();

    // optional int64 min_carry_momey = 12;
    /**
     * <code>optional int64 min_carry_momey = 12;</code>
     *
     * <pre>
     *最低携带量
     * </pre>
     */
    boolean hasMinCarryMomey();
    /**
     * <code>optional int64 min_carry_momey = 12;</code>
     *
     * <pre>
     *最低携带量
     * </pre>
     */
    long getMinCarryMomey();

    // optional int64 max_carry_momey = 13;
    /**
     * <code>optional int64 max_carry_momey = 13;</code>
     *
     * <pre>
     *最大携带量
     * </pre>
     */
    boolean hasMaxCarryMomey();
    /**
     * <code>optional int64 max_carry_momey = 13;</code>
     *
     * <pre>
     *最大携带量
     * </pre>
     */
    long getMaxCarryMomey();

    // optional int64 init_momey = 14;
    /**
     * <code>optional int64 init_momey = 14;</code>
     *
     * <pre>
     *初始分
     * </pre>
     */
    boolean hasInitMomey();
    /**
     * <code>optional int64 init_momey = 14;</code>
     *
     * <pre>
     *初始分
     * </pre>
     */
    long getInitMomey();

    // optional int64 enter_gold = 15;
    /**
     * <code>optional int64 enter_gold = 15;</code>
     *
     * <pre>
     *入场扣豆
     * </pre>
     */
    boolean hasEnterGold();
    /**
     * <code>optional int64 enter_gold = 15;</code>
     *
     * <pre>
     *入场扣豆
     * </pre>
     */
    long getEnterGold();

    // optional int64 pu_fen_glod = 16;
    /**
     * <code>optional int64 pu_fen_glod = 16;</code>
     *
     * <pre>
     *每次补分扣豆
     * </pre>
     */
    boolean hasPuFenGlod();
    /**
     * <code>optional int64 pu_fen_glod = 16;</code>
     *
     * <pre>
     *每次补分扣豆
     * </pre>
     */
    long getPuFenGlod();

    // optional int64 add_banker_glod = 17;
    /**
     * <code>optional int64 add_banker_glod = 17;</code>
     *
     * <pre>
     *添庄扣豆
     * </pre>
     */
    boolean hasAddBankerGlod();
    /**
     * <code>optional int64 add_banker_glod = 17;</code>
     *
     * <pre>
     *添庄扣豆
     * </pre>
     */
    long getAddBankerGlod();

    // optional int64 min_bu_money = 18;
    /**
     * <code>optional int64 min_bu_money = 18;</code>
     *
     * <pre>
     *最低补分
     * </pre>
     */
    boolean hasMinBuMoney();
    /**
     * <code>optional int64 min_bu_money = 18;</code>
     *
     * <pre>
     *最低补分
     * </pre>
     */
    long getMinBuMoney();

    // optional int64 max_bu_money = 19;
    /**
     * <code>optional int64 max_bu_money = 19;</code>
     *
     * <pre>
     *最高补分
     * </pre>
     */
    boolean hasMaxBuMoney();
    /**
     * <code>optional int64 max_bu_money = 19;</code>
     *
     * <pre>
     *最高补分
     * </pre>
     */
    long getMaxBuMoney();

    // optional int64 left_time = 20;
    /**
     * <code>optional int64 left_time = 20;</code>
     *
     * <pre>
     *剩余时间
     * </pre>
     */
    boolean hasLeftTime();
    /**
     * <code>optional int64 left_time = 20;</code>
     *
     * <pre>
     *剩余时间
     * </pre>
     */
    long getLeftTime();
  }
  /**
   * Protobuf type {@code jdb.RoomInfoJdb}
   *
   * <pre>
   *房间信息
   * </pre>
   */
  public static final class RoomInfoJdb extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoJdbOrBuilder {
    // Use RoomInfoJdb.newBuilder() to construct.
    private RoomInfoJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoJdb defaultInstance;
    public static RoomInfoJdb getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              gameRuleIndex_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              gameRuleDes_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              curRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gameStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createPlayerId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              beginLeftCard_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              createName_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              minCarryMomey_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              maxCarryMomey_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              initMomey_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              enterGold_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              puFenGlod_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              addBankerGlod_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              minBuMoney_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              maxBuMoney_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              leftTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomInfoJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomInfoJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.class, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoJdb> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoJdb>() {
      public RoomInfoJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_id = 1;
    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 game_type_index = 4;
    public static final int GAME_TYPE_INDEX_FIELD_NUMBER = 4;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 game_rule_index = 2;
    public static final int GAME_RULE_INDEX_FIELD_NUMBER = 2;
    private int gameRuleIndex_;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameRuleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameRuleIndex() {
      return gameRuleIndex_;
    }

    // optional string game_rule_des = 3;
    public static final int GAME_RULE_DES_FIELD_NUMBER = 3;
    private java.lang.Object gameRuleDes_;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public boolean hasGameRuleDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public java.lang.String getGameRuleDes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameRuleDes_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameRuleDesBytes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameRuleDes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round = 5;
    public static final int GAME_ROUND_FIELD_NUMBER = 5;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 cur_round = 6;
    public static final int CUR_ROUND_FIELD_NUMBER = 6;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_status = 7;
    public static final int GAME_STATUS_FIELD_NUMBER = 7;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int64 create_player_id = 8;
    public static final int CREATE_PLAYER_ID_FIELD_NUMBER = 8;
    private long createPlayerId_;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public boolean hasCreatePlayerId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public long getCreatePlayerId() {
      return createPlayerId_;
    }

    // optional int32 begin_left_card = 9;
    public static final int BEGIN_LEFT_CARD_FIELD_NUMBER = 9;
    private int beginLeftCard_;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public boolean hasBeginLeftCard() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public int getBeginLeftCard() {
      return beginLeftCard_;
    }

    // optional int32 banker_player = 10;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 10;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional string create_name = 11;
    public static final int CREATE_NAME_FIELD_NUMBER = 11;
    private java.lang.Object createName_;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public boolean hasCreateName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public java.lang.String getCreateName() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateNameBytes() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 min_carry_momey = 12;
    public static final int MIN_CARRY_MOMEY_FIELD_NUMBER = 12;
    private long minCarryMomey_;
    /**
     * <code>optional int64 min_carry_momey = 12;</code>
     *
     * <pre>
     *最低携带量
     * </pre>
     */
    public boolean hasMinCarryMomey() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 min_carry_momey = 12;</code>
     *
     * <pre>
     *最低携带量
     * </pre>
     */
    public long getMinCarryMomey() {
      return minCarryMomey_;
    }

    // optional int64 max_carry_momey = 13;
    public static final int MAX_CARRY_MOMEY_FIELD_NUMBER = 13;
    private long maxCarryMomey_;
    /**
     * <code>optional int64 max_carry_momey = 13;</code>
     *
     * <pre>
     *最大携带量
     * </pre>
     */
    public boolean hasMaxCarryMomey() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 max_carry_momey = 13;</code>
     *
     * <pre>
     *最大携带量
     * </pre>
     */
    public long getMaxCarryMomey() {
      return maxCarryMomey_;
    }

    // optional int64 init_momey = 14;
    public static final int INIT_MOMEY_FIELD_NUMBER = 14;
    private long initMomey_;
    /**
     * <code>optional int64 init_momey = 14;</code>
     *
     * <pre>
     *初始分
     * </pre>
     */
    public boolean hasInitMomey() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 init_momey = 14;</code>
     *
     * <pre>
     *初始分
     * </pre>
     */
    public long getInitMomey() {
      return initMomey_;
    }

    // optional int64 enter_gold = 15;
    public static final int ENTER_GOLD_FIELD_NUMBER = 15;
    private long enterGold_;
    /**
     * <code>optional int64 enter_gold = 15;</code>
     *
     * <pre>
     *入场扣豆
     * </pre>
     */
    public boolean hasEnterGold() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 enter_gold = 15;</code>
     *
     * <pre>
     *入场扣豆
     * </pre>
     */
    public long getEnterGold() {
      return enterGold_;
    }

    // optional int64 pu_fen_glod = 16;
    public static final int PU_FEN_GLOD_FIELD_NUMBER = 16;
    private long puFenGlod_;
    /**
     * <code>optional int64 pu_fen_glod = 16;</code>
     *
     * <pre>
     *每次补分扣豆
     * </pre>
     */
    public boolean hasPuFenGlod() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 pu_fen_glod = 16;</code>
     *
     * <pre>
     *每次补分扣豆
     * </pre>
     */
    public long getPuFenGlod() {
      return puFenGlod_;
    }

    // optional int64 add_banker_glod = 17;
    public static final int ADD_BANKER_GLOD_FIELD_NUMBER = 17;
    private long addBankerGlod_;
    /**
     * <code>optional int64 add_banker_glod = 17;</code>
     *
     * <pre>
     *添庄扣豆
     * </pre>
     */
    public boolean hasAddBankerGlod() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 add_banker_glod = 17;</code>
     *
     * <pre>
     *添庄扣豆
     * </pre>
     */
    public long getAddBankerGlod() {
      return addBankerGlod_;
    }

    // optional int64 min_bu_money = 18;
    public static final int MIN_BU_MONEY_FIELD_NUMBER = 18;
    private long minBuMoney_;
    /**
     * <code>optional int64 min_bu_money = 18;</code>
     *
     * <pre>
     *最低补分
     * </pre>
     */
    public boolean hasMinBuMoney() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 min_bu_money = 18;</code>
     *
     * <pre>
     *最低补分
     * </pre>
     */
    public long getMinBuMoney() {
      return minBuMoney_;
    }

    // optional int64 max_bu_money = 19;
    public static final int MAX_BU_MONEY_FIELD_NUMBER = 19;
    private long maxBuMoney_;
    /**
     * <code>optional int64 max_bu_money = 19;</code>
     *
     * <pre>
     *最高补分
     * </pre>
     */
    public boolean hasMaxBuMoney() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 max_bu_money = 19;</code>
     *
     * <pre>
     *最高补分
     * </pre>
     */
    public long getMaxBuMoney() {
      return maxBuMoney_;
    }

    // optional int64 left_time = 20;
    public static final int LEFT_TIME_FIELD_NUMBER = 20;
    private long leftTime_;
    /**
     * <code>optional int64 left_time = 20;</code>
     *
     * <pre>
     *剩余时间
     * </pre>
     */
    public boolean hasLeftTime() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 left_time = 20;</code>
     *
     * <pre>
     *剩余时间
     * </pre>
     */
    public long getLeftTime() {
      return leftTime_;
    }

    private void initFields() {
      roomId_ = 0;
      gameTypeIndex_ = 0;
      gameRuleIndex_ = 0;
      gameRuleDes_ = "";
      gameRound_ = 0;
      curRound_ = 0;
      gameStatus_ = 0;
      createPlayerId_ = 0L;
      beginLeftCard_ = 0;
      bankerPlayer_ = 0;
      createName_ = "";
      minCarryMomey_ = 0L;
      maxCarryMomey_ = 0L;
      initMomey_ = 0L;
      enterGold_ = 0L;
      puFenGlod_ = 0L;
      addBankerGlod_ = 0L;
      minBuMoney_ = 0L;
      maxBuMoney_ = 0L;
      leftTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCreateNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, minCarryMomey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, maxCarryMomey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, initMomey_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, enterGold_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, puFenGlod_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, addBankerGlod_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, minBuMoney_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, maxBuMoney_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(20, leftTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCreateNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, minCarryMomey_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, maxCarryMomey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, initMomey_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, enterGold_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, puFenGlod_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, addBankerGlod_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, minBuMoney_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, maxBuMoney_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, leftTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.RoomInfoJdb}
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomInfoJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomInfoJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.class, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRuleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleDes_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        createPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        beginLeftCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        createName_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        minCarryMomey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        maxCarryMomey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        initMomey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        enterGold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        puFenGlod_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        addBankerGlod_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        minBuMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        maxBuMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        leftTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomInfoJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb build() {
        protobuf.clazz.jdb.jdbRsp.RoomInfoJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.RoomInfoJdb result = new protobuf.clazz.jdb.jdbRsp.RoomInfoJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRuleIndex_ = gameRuleIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameRuleDes_ = gameRuleDes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createPlayerId_ = createPlayerId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.beginLeftCard_ = beginLeftCard_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.createName_ = createName_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.minCarryMomey_ = minCarryMomey_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxCarryMomey_ = maxCarryMomey_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.initMomey_ = initMomey_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.enterGold_ = enterGold_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.puFenGlod_ = puFenGlod_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.addBankerGlod_ = addBankerGlod_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.minBuMoney_ = minBuMoney_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.maxBuMoney_ = maxBuMoney_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.leftTime_ = leftTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.RoomInfoJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.RoomInfoJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasGameRuleIndex()) {
          setGameRuleIndex(other.getGameRuleIndex());
        }
        if (other.hasGameRuleDes()) {
          bitField0_ |= 0x00000008;
          gameRuleDes_ = other.gameRuleDes_;
          onChanged();
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasCreatePlayerId()) {
          setCreatePlayerId(other.getCreatePlayerId());
        }
        if (other.hasBeginLeftCard()) {
          setBeginLeftCard(other.getBeginLeftCard());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCreateName()) {
          bitField0_ |= 0x00000400;
          createName_ = other.createName_;
          onChanged();
        }
        if (other.hasMinCarryMomey()) {
          setMinCarryMomey(other.getMinCarryMomey());
        }
        if (other.hasMaxCarryMomey()) {
          setMaxCarryMomey(other.getMaxCarryMomey());
        }
        if (other.hasInitMomey()) {
          setInitMomey(other.getInitMomey());
        }
        if (other.hasEnterGold()) {
          setEnterGold(other.getEnterGold());
        }
        if (other.hasPuFenGlod()) {
          setPuFenGlod(other.getPuFenGlod());
        }
        if (other.hasAddBankerGlod()) {
          setAddBankerGlod(other.getAddBankerGlod());
        }
        if (other.hasMinBuMoney()) {
          setMinBuMoney(other.getMinBuMoney());
        }
        if (other.hasMaxBuMoney()) {
          setMaxBuMoney(other.getMaxBuMoney());
        }
        if (other.hasLeftTime()) {
          setLeftTime(other.getLeftTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.RoomInfoJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.RoomInfoJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_id = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_type_index = 4;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_rule_index = 2;
      private int gameRuleIndex_ ;
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameRuleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameRuleIndex() {
        return gameRuleIndex_;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameRuleIndex(int value) {
        bitField0_ |= 0x00000004;
        gameRuleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameRuleIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string game_rule_des = 3;
      private java.lang.Object gameRuleDes_ = "";
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public boolean hasGameRuleDes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public java.lang.String getGameRuleDes() {
        java.lang.Object ref = gameRuleDes_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameRuleDes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameRuleDesBytes() {
        java.lang.Object ref = gameRuleDes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameRuleDes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder clearGameRuleDes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRuleDes_ = getDefaultInstance().getGameRuleDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round = 5;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000010;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_round = 6;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000020;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 7;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000040;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int64 create_player_id = 8;
      private long createPlayerId_ ;
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public boolean hasCreatePlayerId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public long getCreatePlayerId() {
        return createPlayerId_;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder setCreatePlayerId(long value) {
        bitField0_ |= 0x00000080;
        createPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder clearCreatePlayerId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        createPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 begin_left_card = 9;
      private int beginLeftCard_ ;
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public boolean hasBeginLeftCard() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public int getBeginLeftCard() {
        return beginLeftCard_;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder setBeginLeftCard(int value) {
        bitField0_ |= 0x00000100;
        beginLeftCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder clearBeginLeftCard() {
        bitField0_ = (bitField0_ & ~0x00000100);
        beginLeftCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_player = 10;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000200;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional string create_name = 11;
      private java.lang.Object createName_ = "";
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public boolean hasCreateName() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public java.lang.String getCreateName() {
        java.lang.Object ref = createName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateNameBytes() {
        java.lang.Object ref = createName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        createName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder clearCreateName() {
        bitField0_ = (bitField0_ & ~0x00000400);
        createName_ = getDefaultInstance().getCreateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        createName_ = value;
        onChanged();
        return this;
      }

      // optional int64 min_carry_momey = 12;
      private long minCarryMomey_ ;
      /**
       * <code>optional int64 min_carry_momey = 12;</code>
       *
       * <pre>
       *最低携带量
       * </pre>
       */
      public boolean hasMinCarryMomey() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 min_carry_momey = 12;</code>
       *
       * <pre>
       *最低携带量
       * </pre>
       */
      public long getMinCarryMomey() {
        return minCarryMomey_;
      }
      /**
       * <code>optional int64 min_carry_momey = 12;</code>
       *
       * <pre>
       *最低携带量
       * </pre>
       */
      public Builder setMinCarryMomey(long value) {
        bitField0_ |= 0x00000800;
        minCarryMomey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 min_carry_momey = 12;</code>
       *
       * <pre>
       *最低携带量
       * </pre>
       */
      public Builder clearMinCarryMomey() {
        bitField0_ = (bitField0_ & ~0x00000800);
        minCarryMomey_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 max_carry_momey = 13;
      private long maxCarryMomey_ ;
      /**
       * <code>optional int64 max_carry_momey = 13;</code>
       *
       * <pre>
       *最大携带量
       * </pre>
       */
      public boolean hasMaxCarryMomey() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 max_carry_momey = 13;</code>
       *
       * <pre>
       *最大携带量
       * </pre>
       */
      public long getMaxCarryMomey() {
        return maxCarryMomey_;
      }
      /**
       * <code>optional int64 max_carry_momey = 13;</code>
       *
       * <pre>
       *最大携带量
       * </pre>
       */
      public Builder setMaxCarryMomey(long value) {
        bitField0_ |= 0x00001000;
        maxCarryMomey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 max_carry_momey = 13;</code>
       *
       * <pre>
       *最大携带量
       * </pre>
       */
      public Builder clearMaxCarryMomey() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxCarryMomey_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 init_momey = 14;
      private long initMomey_ ;
      /**
       * <code>optional int64 init_momey = 14;</code>
       *
       * <pre>
       *初始分
       * </pre>
       */
      public boolean hasInitMomey() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 init_momey = 14;</code>
       *
       * <pre>
       *初始分
       * </pre>
       */
      public long getInitMomey() {
        return initMomey_;
      }
      /**
       * <code>optional int64 init_momey = 14;</code>
       *
       * <pre>
       *初始分
       * </pre>
       */
      public Builder setInitMomey(long value) {
        bitField0_ |= 0x00002000;
        initMomey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 init_momey = 14;</code>
       *
       * <pre>
       *初始分
       * </pre>
       */
      public Builder clearInitMomey() {
        bitField0_ = (bitField0_ & ~0x00002000);
        initMomey_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 enter_gold = 15;
      private long enterGold_ ;
      /**
       * <code>optional int64 enter_gold = 15;</code>
       *
       * <pre>
       *入场扣豆
       * </pre>
       */
      public boolean hasEnterGold() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 enter_gold = 15;</code>
       *
       * <pre>
       *入场扣豆
       * </pre>
       */
      public long getEnterGold() {
        return enterGold_;
      }
      /**
       * <code>optional int64 enter_gold = 15;</code>
       *
       * <pre>
       *入场扣豆
       * </pre>
       */
      public Builder setEnterGold(long value) {
        bitField0_ |= 0x00004000;
        enterGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 enter_gold = 15;</code>
       *
       * <pre>
       *入场扣豆
       * </pre>
       */
      public Builder clearEnterGold() {
        bitField0_ = (bitField0_ & ~0x00004000);
        enterGold_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 pu_fen_glod = 16;
      private long puFenGlod_ ;
      /**
       * <code>optional int64 pu_fen_glod = 16;</code>
       *
       * <pre>
       *每次补分扣豆
       * </pre>
       */
      public boolean hasPuFenGlod() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 pu_fen_glod = 16;</code>
       *
       * <pre>
       *每次补分扣豆
       * </pre>
       */
      public long getPuFenGlod() {
        return puFenGlod_;
      }
      /**
       * <code>optional int64 pu_fen_glod = 16;</code>
       *
       * <pre>
       *每次补分扣豆
       * </pre>
       */
      public Builder setPuFenGlod(long value) {
        bitField0_ |= 0x00008000;
        puFenGlod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 pu_fen_glod = 16;</code>
       *
       * <pre>
       *每次补分扣豆
       * </pre>
       */
      public Builder clearPuFenGlod() {
        bitField0_ = (bitField0_ & ~0x00008000);
        puFenGlod_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 add_banker_glod = 17;
      private long addBankerGlod_ ;
      /**
       * <code>optional int64 add_banker_glod = 17;</code>
       *
       * <pre>
       *添庄扣豆
       * </pre>
       */
      public boolean hasAddBankerGlod() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 add_banker_glod = 17;</code>
       *
       * <pre>
       *添庄扣豆
       * </pre>
       */
      public long getAddBankerGlod() {
        return addBankerGlod_;
      }
      /**
       * <code>optional int64 add_banker_glod = 17;</code>
       *
       * <pre>
       *添庄扣豆
       * </pre>
       */
      public Builder setAddBankerGlod(long value) {
        bitField0_ |= 0x00010000;
        addBankerGlod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 add_banker_glod = 17;</code>
       *
       * <pre>
       *添庄扣豆
       * </pre>
       */
      public Builder clearAddBankerGlod() {
        bitField0_ = (bitField0_ & ~0x00010000);
        addBankerGlod_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 min_bu_money = 18;
      private long minBuMoney_ ;
      /**
       * <code>optional int64 min_bu_money = 18;</code>
       *
       * <pre>
       *最低补分
       * </pre>
       */
      public boolean hasMinBuMoney() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 min_bu_money = 18;</code>
       *
       * <pre>
       *最低补分
       * </pre>
       */
      public long getMinBuMoney() {
        return minBuMoney_;
      }
      /**
       * <code>optional int64 min_bu_money = 18;</code>
       *
       * <pre>
       *最低补分
       * </pre>
       */
      public Builder setMinBuMoney(long value) {
        bitField0_ |= 0x00020000;
        minBuMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 min_bu_money = 18;</code>
       *
       * <pre>
       *最低补分
       * </pre>
       */
      public Builder clearMinBuMoney() {
        bitField0_ = (bitField0_ & ~0x00020000);
        minBuMoney_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 max_bu_money = 19;
      private long maxBuMoney_ ;
      /**
       * <code>optional int64 max_bu_money = 19;</code>
       *
       * <pre>
       *最高补分
       * </pre>
       */
      public boolean hasMaxBuMoney() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 max_bu_money = 19;</code>
       *
       * <pre>
       *最高补分
       * </pre>
       */
      public long getMaxBuMoney() {
        return maxBuMoney_;
      }
      /**
       * <code>optional int64 max_bu_money = 19;</code>
       *
       * <pre>
       *最高补分
       * </pre>
       */
      public Builder setMaxBuMoney(long value) {
        bitField0_ |= 0x00040000;
        maxBuMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 max_bu_money = 19;</code>
       *
       * <pre>
       *最高补分
       * </pre>
       */
      public Builder clearMaxBuMoney() {
        bitField0_ = (bitField0_ & ~0x00040000);
        maxBuMoney_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 left_time = 20;
      private long leftTime_ ;
      /**
       * <code>optional int64 left_time = 20;</code>
       *
       * <pre>
       *剩余时间
       * </pre>
       */
      public boolean hasLeftTime() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 left_time = 20;</code>
       *
       * <pre>
       *剩余时间
       * </pre>
       */
      public long getLeftTime() {
        return leftTime_;
      }
      /**
       * <code>optional int64 left_time = 20;</code>
       *
       * <pre>
       *剩余时间
       * </pre>
       */
      public Builder setLeftTime(long value) {
        bitField0_ |= 0x00080000;
        leftTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 left_time = 20;</code>
       *
       * <pre>
       *剩余时间
       * </pre>
       */
      public Builder clearLeftTime() {
        bitField0_ = (bitField0_ & ~0x00080000);
        leftTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.RoomInfoJdb)
    }

    static {
      defaultInstance = new RoomInfoJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.RoomInfoJdb)
  }

  public interface RoomPlayerResponseJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();

    // optional int64 carry_money = 15;
    /**
     * <code>optional int64 carry_money = 15;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    boolean hasCarryMoney();
    /**
     * <code>optional int64 carry_money = 15;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    long getCarryMoney();

    // optional int32 apply_seat_index = 16;
    /**
     * <code>optional int32 apply_seat_index = 16;</code>
     *
     * <pre>
     *申请位置
     * </pre>
     */
    boolean hasApplySeatIndex();
    /**
     * <code>optional int32 apply_seat_index = 16;</code>
     *
     * <pre>
     *申请位置
     * </pre>
     */
    int getApplySeatIndex();

    // optional int64 bu_money = 17;
    /**
     * <code>optional int64 bu_money = 17;</code>
     *
     * <pre>
     *补分
     * </pre>
     */
    boolean hasBuMoney();
    /**
     * <code>optional int64 bu_money = 17;</code>
     *
     * <pre>
     *补分
     * </pre>
     */
    long getBuMoney();
  }
  /**
   * Protobuf type {@code jdb.RoomPlayerResponseJdb}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseJdb extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseJdbOrBuilder {
    // Use RoomPlayerResponseJdb.newBuilder() to construct.
    private RoomPlayerResponseJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseJdb defaultInstance;
    public static RoomPlayerResponseJdb getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              carryMoney_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              applySeatIndex_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              buMoney_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayerResponseJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayerResponseJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.class, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseJdb> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseJdb>() {
      public RoomPlayerResponseJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    // optional int64 carry_money = 15;
    public static final int CARRY_MONEY_FIELD_NUMBER = 15;
    private long carryMoney_;
    /**
     * <code>optional int64 carry_money = 15;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    public boolean hasCarryMoney() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 carry_money = 15;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    public long getCarryMoney() {
      return carryMoney_;
    }

    // optional int32 apply_seat_index = 16;
    public static final int APPLY_SEAT_INDEX_FIELD_NUMBER = 16;
    private int applySeatIndex_;
    /**
     * <code>optional int32 apply_seat_index = 16;</code>
     *
     * <pre>
     *申请位置
     * </pre>
     */
    public boolean hasApplySeatIndex() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 apply_seat_index = 16;</code>
     *
     * <pre>
     *申请位置
     * </pre>
     */
    public int getApplySeatIndex() {
      return applySeatIndex_;
    }

    // optional int64 bu_money = 17;
    public static final int BU_MONEY_FIELD_NUMBER = 17;
    private long buMoney_;
    /**
     * <code>optional int64 bu_money = 17;</code>
     *
     * <pre>
     *补分
     * </pre>
     */
    public boolean hasBuMoney() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 bu_money = 17;</code>
     *
     * <pre>
     *补分
     * </pre>
     */
    public long getBuMoney() {
      return buMoney_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
      carryMoney_ = 0L;
      applySeatIndex_ = 0;
      buMoney_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, carryMoney_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, applySeatIndex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, buMoney_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, carryMoney_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, applySeatIndex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, buMoney_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.RoomPlayerResponseJdb}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayerResponseJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayerResponseJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.class, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        carryMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        applySeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        buMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayerResponseJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb build() {
        protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb result = new protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.carryMoney_ = carryMoney_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.applySeatIndex_ = applySeatIndex_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.buMoney_ = buMoney_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasCarryMoney()) {
          setCarryMoney(other.getCarryMoney());
        }
        if (other.hasApplySeatIndex()) {
          setApplySeatIndex(other.getApplySeatIndex());
        }
        if (other.hasBuMoney()) {
          setBuMoney(other.getBuMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 carry_money = 15;
      private long carryMoney_ ;
      /**
       * <code>optional int64 carry_money = 15;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public boolean hasCarryMoney() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 carry_money = 15;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public long getCarryMoney() {
        return carryMoney_;
      }
      /**
       * <code>optional int64 carry_money = 15;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public Builder setCarryMoney(long value) {
        bitField0_ |= 0x00004000;
        carryMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 carry_money = 15;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public Builder clearCarryMoney() {
        bitField0_ = (bitField0_ & ~0x00004000);
        carryMoney_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 apply_seat_index = 16;
      private int applySeatIndex_ ;
      /**
       * <code>optional int32 apply_seat_index = 16;</code>
       *
       * <pre>
       *申请位置
       * </pre>
       */
      public boolean hasApplySeatIndex() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 apply_seat_index = 16;</code>
       *
       * <pre>
       *申请位置
       * </pre>
       */
      public int getApplySeatIndex() {
        return applySeatIndex_;
      }
      /**
       * <code>optional int32 apply_seat_index = 16;</code>
       *
       * <pre>
       *申请位置
       * </pre>
       */
      public Builder setApplySeatIndex(int value) {
        bitField0_ |= 0x00008000;
        applySeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 apply_seat_index = 16;</code>
       *
       * <pre>
       *申请位置
       * </pre>
       */
      public Builder clearApplySeatIndex() {
        bitField0_ = (bitField0_ & ~0x00008000);
        applySeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int64 bu_money = 17;
      private long buMoney_ ;
      /**
       * <code>optional int64 bu_money = 17;</code>
       *
       * <pre>
       *补分
       * </pre>
       */
      public boolean hasBuMoney() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 bu_money = 17;</code>
       *
       * <pre>
       *补分
       * </pre>
       */
      public long getBuMoney() {
        return buMoney_;
      }
      /**
       * <code>optional int64 bu_money = 17;</code>
       *
       * <pre>
       *补分
       * </pre>
       */
      public Builder setBuMoney(long value) {
        bitField0_ |= 0x00010000;
        buMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 bu_money = 17;</code>
       *
       * <pre>
       *补分
       * </pre>
       */
      public Builder clearBuMoney() {
        bitField0_ = (bitField0_ & ~0x00010000);
        buMoney_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.RoomPlayerResponseJdb)
    }

    static {
      defaultInstance = new RoomPlayerResponseJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.RoomPlayerResponseJdb)
  }

  public interface PlayerListJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .jdb.RoomPlayerResponseJdb players = 1;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code jdb.PlayerListJdb}
   *
   * <pre>
   *申请玩家列表
   * </pre>
   */
  public static final class PlayerListJdb extends
      com.google.protobuf.GeneratedMessage
      implements PlayerListJdbOrBuilder {
    // Use PlayerListJdb.newBuilder() to construct.
    private PlayerListJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerListJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerListJdb defaultInstance;
    public static PlayerListJdb getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerListJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerListJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000001;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerListJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerListJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.PlayerListJdb.class, protobuf.clazz.jdb.jdbRsp.PlayerListJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerListJdb> PARSER =
        new com.google.protobuf.AbstractParser<PlayerListJdb>() {
      public PlayerListJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerListJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerListJdb> getParserForType() {
      return PARSER;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerListJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.PlayerListJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.PlayerListJdb}
     *
     * <pre>
     *申请玩家列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.PlayerListJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerListJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerListJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.PlayerListJdb.class, protobuf.clazz.jdb.jdbRsp.PlayerListJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.PlayerListJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerListJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerListJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.PlayerListJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerListJdb build() {
        protobuf.clazz.jdb.jdbRsp.PlayerListJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerListJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.PlayerListJdb result = new protobuf.clazz.jdb.jdbRsp.PlayerListJdb(this);
        int from_bitField0_ = bitField0_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.PlayerListJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.PlayerListJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.PlayerListJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.PlayerListJdb.getDefaultInstance()) return this;
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.PlayerListJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.PlayerListJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .jdb.RoomPlayerResponseJdb players = 1;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:jdb.PlayerListJdb)
    }

    static {
      defaultInstance = new PlayerListJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.PlayerListJdb)
  }

  public interface PlayerResultJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .jdb.RoomPlayerResponseJdb players = 1;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);

    // optional int64 own_score = 2;
    /**
     * <code>optional int64 own_score = 2;</code>
     *
     * <pre>
     *我的积分
     * </pre>
     */
    boolean hasOwnScore();
    /**
     * <code>optional int64 own_score = 2;</code>
     *
     * <pre>
     *我的积分
     * </pre>
     */
    long getOwnScore();

    // optional int64 Total_record = 3;
    /**
     * <code>optional int64 Total_record = 3;</code>
     *
     * <pre>
     *总战绩
     * </pre>
     */
    boolean hasTotalRecord();
    /**
     * <code>optional int64 Total_record = 3;</code>
     *
     * <pre>
     *总战绩
     * </pre>
     */
    long getTotalRecord();

    // optional int64 dayingjia = 4;
    /**
     * <code>optional int64 dayingjia = 4;</code>
     *
     * <pre>
     *大结算的大赢家
     * </pre>
     */
    boolean hasDayingjia();
    /**
     * <code>optional int64 dayingjia = 4;</code>
     *
     * <pre>
     *大结算的大赢家
     * </pre>
     */
    long getDayingjia();

    // optional int64 start_time = 5;
    /**
     * <code>optional int64 start_time = 5;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional int64 start_time = 5;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    long getStartTime();

    // optional int64 end_time = 6;
    /**
     * <code>optional int64 end_time = 6;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int64 end_time = 6;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    long getEndTime();
  }
  /**
   * Protobuf type {@code jdb.PlayerResultJdb}
   *
   * <pre>
   *用户结束
   * </pre>
   */
  public static final class PlayerResultJdb extends
      com.google.protobuf.GeneratedMessage
      implements PlayerResultJdbOrBuilder {
    // Use PlayerResultJdb.newBuilder() to construct.
    private PlayerResultJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerResultJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerResultJdb defaultInstance;
    public static PlayerResultJdb getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerResultJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerResultJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000001;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              ownScore_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              totalRecord_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              dayingjia_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              startTime_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              endTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerResultJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerResultJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.class, protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerResultJdb> PARSER =
        new com.google.protobuf.AbstractParser<PlayerResultJdb>() {
      public PlayerResultJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerResultJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerResultJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .jdb.RoomPlayerResponseJdb players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
     *
     * <pre>
     *账号info
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int64 own_score = 2;
    public static final int OWN_SCORE_FIELD_NUMBER = 2;
    private long ownScore_;
    /**
     * <code>optional int64 own_score = 2;</code>
     *
     * <pre>
     *我的积分
     * </pre>
     */
    public boolean hasOwnScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 own_score = 2;</code>
     *
     * <pre>
     *我的积分
     * </pre>
     */
    public long getOwnScore() {
      return ownScore_;
    }

    // optional int64 Total_record = 3;
    public static final int TOTAL_RECORD_FIELD_NUMBER = 3;
    private long totalRecord_;
    /**
     * <code>optional int64 Total_record = 3;</code>
     *
     * <pre>
     *总战绩
     * </pre>
     */
    public boolean hasTotalRecord() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 Total_record = 3;</code>
     *
     * <pre>
     *总战绩
     * </pre>
     */
    public long getTotalRecord() {
      return totalRecord_;
    }

    // optional int64 dayingjia = 4;
    public static final int DAYINGJIA_FIELD_NUMBER = 4;
    private long dayingjia_;
    /**
     * <code>optional int64 dayingjia = 4;</code>
     *
     * <pre>
     *大结算的大赢家
     * </pre>
     */
    public boolean hasDayingjia() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 dayingjia = 4;</code>
     *
     * <pre>
     *大结算的大赢家
     * </pre>
     */
    public long getDayingjia() {
      return dayingjia_;
    }

    // optional int64 start_time = 5;
    public static final int START_TIME_FIELD_NUMBER = 5;
    private long startTime_;
    /**
     * <code>optional int64 start_time = 5;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 start_time = 5;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    // optional int64 end_time = 6;
    public static final int END_TIME_FIELD_NUMBER = 6;
    private long endTime_;
    /**
     * <code>optional int64 end_time = 6;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 end_time = 6;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    private void initFields() {
      players_ = java.util.Collections.emptyList();
      ownScore_ = 0L;
      totalRecord_ = 0L;
      dayingjia_ = 0L;
      startTime_ = 0L;
      endTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(2, ownScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, totalRecord_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, dayingjia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, endTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, ownScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, totalRecord_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, dayingjia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, endTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.PlayerResultJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.PlayerResultJdb}
     *
     * <pre>
     *用户结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerResultJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerResultJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.class, protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playersBuilder_.clear();
        }
        ownScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalRecord_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        dayingjia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PlayerResultJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb build() {
        protobuf.clazz.jdb.jdbRsp.PlayerResultJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.PlayerResultJdb result = new protobuf.clazz.jdb.jdbRsp.PlayerResultJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ownScore_ = ownScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalRecord_ = totalRecord_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dayingjia_ = dayingjia_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.PlayerResultJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.PlayerResultJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.PlayerResultJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance()) return this;
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasOwnScore()) {
          setOwnScore(other.getOwnScore());
        }
        if (other.hasTotalRecord()) {
          setTotalRecord(other.getTotalRecord());
        }
        if (other.hasDayingjia()) {
          setDayingjia(other.getDayingjia());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.PlayerResultJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.PlayerResultJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .jdb.RoomPlayerResponseJdb players = 1;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 1;</code>
       *
       * <pre>
       *账号info
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int64 own_score = 2;
      private long ownScore_ ;
      /**
       * <code>optional int64 own_score = 2;</code>
       *
       * <pre>
       *我的积分
       * </pre>
       */
      public boolean hasOwnScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 own_score = 2;</code>
       *
       * <pre>
       *我的积分
       * </pre>
       */
      public long getOwnScore() {
        return ownScore_;
      }
      /**
       * <code>optional int64 own_score = 2;</code>
       *
       * <pre>
       *我的积分
       * </pre>
       */
      public Builder setOwnScore(long value) {
        bitField0_ |= 0x00000002;
        ownScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 own_score = 2;</code>
       *
       * <pre>
       *我的积分
       * </pre>
       */
      public Builder clearOwnScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownScore_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 Total_record = 3;
      private long totalRecord_ ;
      /**
       * <code>optional int64 Total_record = 3;</code>
       *
       * <pre>
       *总战绩
       * </pre>
       */
      public boolean hasTotalRecord() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 Total_record = 3;</code>
       *
       * <pre>
       *总战绩
       * </pre>
       */
      public long getTotalRecord() {
        return totalRecord_;
      }
      /**
       * <code>optional int64 Total_record = 3;</code>
       *
       * <pre>
       *总战绩
       * </pre>
       */
      public Builder setTotalRecord(long value) {
        bitField0_ |= 0x00000004;
        totalRecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 Total_record = 3;</code>
       *
       * <pre>
       *总战绩
       * </pre>
       */
      public Builder clearTotalRecord() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalRecord_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 dayingjia = 4;
      private long dayingjia_ ;
      /**
       * <code>optional int64 dayingjia = 4;</code>
       *
       * <pre>
       *大结算的大赢家
       * </pre>
       */
      public boolean hasDayingjia() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 dayingjia = 4;</code>
       *
       * <pre>
       *大结算的大赢家
       * </pre>
       */
      public long getDayingjia() {
        return dayingjia_;
      }
      /**
       * <code>optional int64 dayingjia = 4;</code>
       *
       * <pre>
       *大结算的大赢家
       * </pre>
       */
      public Builder setDayingjia(long value) {
        bitField0_ |= 0x00000008;
        dayingjia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dayingjia = 4;</code>
       *
       * <pre>
       *大结算的大赢家
       * </pre>
       */
      public Builder clearDayingjia() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dayingjia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 start_time = 5;
      private long startTime_ ;
      /**
       * <code>optional int64 start_time = 5;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 start_time = 5;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional int64 start_time = 5;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000010;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 start_time = 5;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 end_time = 6;
      private long endTime_ ;
      /**
       * <code>optional int64 end_time = 6;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 end_time = 6;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int64 end_time = 6;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000020;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end_time = 6;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.PlayerResultJdb)
    }

    static {
      defaultInstance = new PlayerResultJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.PlayerResultJdb)
  }

  public interface PukeGameEndJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .jdb.RoomInfoJdb room_info = 1;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated .Int32ArrayResponse jetton_player = 5;
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getJettonPlayerList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index);
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    int getJettonPlayerCount();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonPlayerOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
        int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 reason = 7;
    /**
     * <code>optional int32 reason = 7;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 7;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .jdb.RoomPlayerResponseJdb players = 8;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);

    // optional .jdb.PlayerResultJdb player_result = 9;
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    boolean hasPlayerResult();
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.PlayerResultJdb getPlayerResult();
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder getPlayerResultOrBuilder();

    // optional int32 winner = 10;
    /**
     * <code>optional int32 winner = 10;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    boolean hasWinner();
    /**
     * <code>optional int32 winner = 10;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    int getWinner();

    // repeated int32 area_status = 12;
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    java.util.List<java.lang.Integer> getAreaStatusList();
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    int getAreaStatusCount();
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    int getAreaStatus(int index);

    // repeated int32 operate_button = 13;
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getOperateButtonList();
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    int getOperateButtonCount();
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    int getOperateButton(int index);

    // optional int32 add_banker_times = 14;
    /**
     * <code>optional int32 add_banker_times = 14;</code>
     *
     * <pre>
     *添庄次数
     * </pre>
     */
    boolean hasAddBankerTimes();
    /**
     * <code>optional int32 add_banker_times = 14;</code>
     *
     * <pre>
     *添庄次数
     * </pre>
     */
    int getAddBankerTimes();

    // optional int32 cur_banker = 15;
    /**
     * <code>optional int32 cur_banker = 15;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasCurBanker();
    /**
     * <code>optional int32 cur_banker = 15;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getCurBanker();
  }
  /**
   * Protobuf type {@code jdb.PukeGameEndJdb}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndJdb extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndJdbOrBuilder {
    // Use PukeGameEndJdb.newBuilder() to construct.
    private PukeGameEndJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndJdb defaultInstance;
    public static PukeGameEndJdb getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                jettonPlayer_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              jettonPlayer_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              reason_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000080;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = playerResult_.toBuilder();
              }
              playerResult_ = input.readMessage(protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerResult_);
                playerResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              winner_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              areaStatus_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                areaStatus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                operateButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              operateButton_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                operateButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                operateButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000040;
              addBankerTimes_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000080;
              curBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          jettonPlayer_ = java.util.Collections.unmodifiableList(jettonPlayer_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          operateButton_ = java.util.Collections.unmodifiableList(operateButton_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PukeGameEndJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PukeGameEndJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.class, protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndJdb> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndJdb>() {
      public PukeGameEndJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .jdb.RoomInfoJdb room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated .Int32ArrayResponse jetton_player = 5;
    public static final int JETTON_PLAYER_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonPlayer_;
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonPlayerList() {
      return jettonPlayer_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonPlayerOrBuilderList() {
      return jettonPlayer_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public int getJettonPlayerCount() {
      return jettonPlayer_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index) {
      return jettonPlayer_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
        int index) {
      return jettonPlayer_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 reason = 7;
    public static final int REASON_FIELD_NUMBER = 7;
    private int reason_;
    /**
     * <code>optional int32 reason = 7;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 reason = 7;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 8;
    public static final int PLAYERS_FIELD_NUMBER = 8;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional .jdb.PlayerResultJdb player_result = 9;
    public static final int PLAYER_RESULT_FIELD_NUMBER = 9;
    private protobuf.clazz.jdb.jdbRsp.PlayerResultJdb playerResult_;
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb getPlayerResult() {
      return playerResult_;
    }
    /**
     * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder getPlayerResultOrBuilder() {
      return playerResult_;
    }

    // optional int32 winner = 10;
    public static final int WINNER_FIELD_NUMBER = 10;
    private int winner_;
    /**
     * <code>optional int32 winner = 10;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 winner = 10;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public int getWinner() {
      return winner_;
    }

    // repeated int32 area_status = 12;
    public static final int AREA_STATUS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> areaStatus_;
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAreaStatusList() {
      return areaStatus_;
    }
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public int getAreaStatusCount() {
      return areaStatus_.size();
    }
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public int getAreaStatus(int index) {
      return areaStatus_.get(index);
    }

    // repeated int32 operate_button = 13;
    public static final int OPERATE_BUTTON_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> operateButton_;
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOperateButtonList() {
      return operateButton_;
    }
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    public int getOperateButtonCount() {
      return operateButton_.size();
    }
    /**
     * <code>repeated int32 operate_button = 13;</code>
     *
     * <pre>
     * 操作按钮
     * </pre>
     */
    public int getOperateButton(int index) {
      return operateButton_.get(index);
    }

    // optional int32 add_banker_times = 14;
    public static final int ADD_BANKER_TIMES_FIELD_NUMBER = 14;
    private int addBankerTimes_;
    /**
     * <code>optional int32 add_banker_times = 14;</code>
     *
     * <pre>
     *添庄次数
     * </pre>
     */
    public boolean hasAddBankerTimes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 add_banker_times = 14;</code>
     *
     * <pre>
     *添庄次数
     * </pre>
     */
    public int getAddBankerTimes() {
      return addBankerTimes_;
    }

    // optional int32 cur_banker = 15;
    public static final int CUR_BANKER_FIELD_NUMBER = 15;
    private int curBanker_;
    /**
     * <code>optional int32 cur_banker = 15;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasCurBanker() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 cur_banker = 15;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getCurBanker() {
      return curBanker_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      jettonPlayer_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      playerResult_ = protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance();
      winner_ = 0;
      areaStatus_ = java.util.Collections.emptyList();
      operateButton_ = java.util.Collections.emptyList();
      addBankerTimes_ = 0;
      curBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonPlayer_.size(); i++) {
        output.writeMessage(5, jettonPlayer_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(8, players_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(9, playerResult_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, winner_);
      }
      for (int i = 0; i < areaStatus_.size(); i++) {
        output.writeInt32(12, areaStatus_.get(i));
      }
      for (int i = 0; i < operateButton_.size(); i++) {
        output.writeInt32(13, operateButton_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(14, addBankerTimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(15, curBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonPlayer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, jettonPlayer_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, players_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, playerResult_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, winner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < areaStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(areaStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getAreaStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < operateButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(operateButton_.get(i));
        }
        size += dataSize;
        size += 1 * getOperateButtonList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, addBankerTimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, curBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.PukeGameEndJdb}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.PukeGameEndJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PukeGameEndJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PukeGameEndJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.class, protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getJettonPlayerFieldBuilder();
          getPlayersFieldBuilder();
          getPlayerResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        if (jettonPlayerBuilder_ == null) {
          jettonPlayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          jettonPlayerBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          playersBuilder_.clear();
        }
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        winner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        operateButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        addBankerTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        curBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PukeGameEndJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb build() {
        protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb result = new protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (jettonPlayerBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            jettonPlayer_ = java.util.Collections.unmodifiableList(jettonPlayer_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.jettonPlayer_ = jettonPlayer_;
        } else {
          result.jettonPlayer_ = jettonPlayerBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        if (playerResultBuilder_ == null) {
          result.playerResult_ = playerResult_;
        } else {
          result.playerResult_ = playerResultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.winner_ = winner_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.areaStatus_ = areaStatus_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          operateButton_ = java.util.Collections.unmodifiableList(operateButton_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.operateButton_ = operateButton_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.addBankerTimes_ = addBankerTimes_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.curBanker_ = curBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (jettonPlayerBuilder_ == null) {
          if (!other.jettonPlayer_.isEmpty()) {
            if (jettonPlayer_.isEmpty()) {
              jettonPlayer_ = other.jettonPlayer_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureJettonPlayerIsMutable();
              jettonPlayer_.addAll(other.jettonPlayer_);
            }
            onChanged();
          }
        } else {
          if (!other.jettonPlayer_.isEmpty()) {
            if (jettonPlayerBuilder_.isEmpty()) {
              jettonPlayerBuilder_.dispose();
              jettonPlayerBuilder_ = null;
              jettonPlayer_ = other.jettonPlayer_;
              bitField0_ = (bitField0_ & ~0x00000010);
              jettonPlayerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJettonPlayerFieldBuilder() : null;
            } else {
              jettonPlayerBuilder_.addAllMessages(other.jettonPlayer_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000080);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasPlayerResult()) {
          mergePlayerResult(other.getPlayerResult());
        }
        if (other.hasWinner()) {
          setWinner(other.getWinner());
        }
        if (!other.areaStatus_.isEmpty()) {
          if (areaStatus_.isEmpty()) {
            areaStatus_ = other.areaStatus_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureAreaStatusIsMutable();
            areaStatus_.addAll(other.areaStatus_);
          }
          onChanged();
        }
        if (!other.operateButton_.isEmpty()) {
          if (operateButton_.isEmpty()) {
            operateButton_ = other.operateButton_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureOperateButtonIsMutable();
            operateButton_.addAll(other.operateButton_);
          }
          onChanged();
        }
        if (other.hasAddBankerTimes()) {
          setAddBankerTimes(other.getAddBankerTimes());
        }
        if (other.hasCurBanker()) {
          setCurBanker(other.getCurBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.PukeGameEndJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .jdb.RoomInfoJdb room_info = 1;
      private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated .Int32ArrayResponse jetton_player = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonPlayer_ =
        java.util.Collections.emptyList();
      private void ensureJettonPlayerIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonPlayer_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(jettonPlayer_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> jettonPlayerBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonPlayerList() {
        if (jettonPlayerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jettonPlayer_);
        } else {
          return jettonPlayerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public int getJettonPlayerCount() {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.size();
        } else {
          return jettonPlayerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index) {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.get(index);
        } else {
          return jettonPlayerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder setJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.set(index, value);
          onChanged();
        } else {
          jettonPlayerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder setJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.set(index, builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(value);
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(index, value);
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(index, builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addAllJettonPlayer(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          super.addAll(values, jettonPlayer_);
          onChanged();
        } else {
          jettonPlayerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder clearJettonPlayer() {
        if (jettonPlayerBuilder_ == null) {
          jettonPlayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          jettonPlayerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder removeJettonPlayer(int index) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.remove(index);
          onChanged();
        } else {
          jettonPlayerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getJettonPlayerBuilder(
          int index) {
        return getJettonPlayerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
          int index) {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.get(index);  } else {
          return jettonPlayerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getJettonPlayerOrBuilderList() {
        if (jettonPlayerBuilder_ != null) {
          return jettonPlayerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jettonPlayer_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonPlayerBuilder() {
        return getJettonPlayerFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonPlayerBuilder(
          int index) {
        return getJettonPlayerFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 5;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getJettonPlayerBuilderList() {
        return getJettonPlayerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getJettonPlayerFieldBuilder() {
        if (jettonPlayerBuilder_ == null) {
          jettonPlayerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  jettonPlayer_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          jettonPlayer_ = null;
        }
        return jettonPlayerBuilder_;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 reason = 7;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 7;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 reason = 7;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 7;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000040;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 7;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 8;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 8;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional .jdb.PlayerResultJdb player_result = 9;
      private protobuf.clazz.jdb.jdbRsp.PlayerResultJdb playerResult_ = protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.PlayerResultJdb, protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder, protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder> playerResultBuilder_;
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public boolean hasPlayerResult() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb getPlayerResult() {
        if (playerResultBuilder_ == null) {
          return playerResult_;
        } else {
          return playerResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(protobuf.clazz.jdb.jdbRsp.PlayerResultJdb value) {
        if (playerResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerResult_ = value;
          onChanged();
        } else {
          playerResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(
          protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder builderForValue) {
        if (playerResultBuilder_ == null) {
          playerResult_ = builderForValue.build();
          onChanged();
        } else {
          playerResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder mergePlayerResult(protobuf.clazz.jdb.jdbRsp.PlayerResultJdb value) {
        if (playerResultBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              playerResult_ != protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance()) {
            playerResult_ =
              protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.newBuilder(playerResult_).mergeFrom(value).buildPartial();
          } else {
            playerResult_ = value;
          }
          onChanged();
        } else {
          playerResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearPlayerResult() {
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.getDefaultInstance();
          onChanged();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder getPlayerResultBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPlayerResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder getPlayerResultOrBuilder() {
        if (playerResultBuilder_ != null) {
          return playerResultBuilder_.getMessageOrBuilder();
        } else {
          return playerResult_;
        }
      }
      /**
       * <code>optional .jdb.PlayerResultJdb player_result = 9;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.PlayerResultJdb, protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder, protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder> 
          getPlayerResultFieldBuilder() {
        if (playerResultBuilder_ == null) {
          playerResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.PlayerResultJdb, protobuf.clazz.jdb.jdbRsp.PlayerResultJdb.Builder, protobuf.clazz.jdb.jdbRsp.PlayerResultJdbOrBuilder>(
                  playerResult_,
                  getParentForChildren(),
                  isClean());
          playerResult_ = null;
        }
        return playerResultBuilder_;
      }

      // optional int32 winner = 10;
      private int winner_ ;
      /**
       * <code>optional int32 winner = 10;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 winner = 10;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public int getWinner() {
        return winner_;
      }
      /**
       * <code>optional int32 winner = 10;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder setWinner(int value) {
        bitField0_ |= 0x00000200;
        winner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winner = 10;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00000200);
        winner_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 area_status = 12;
      private java.util.List<java.lang.Integer> areaStatus_ = java.util.Collections.emptyList();
      private void ensureAreaStatusIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          areaStatus_ = new java.util.ArrayList<java.lang.Integer>(areaStatus_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAreaStatusList() {
        return java.util.Collections.unmodifiableList(areaStatus_);
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public int getAreaStatusCount() {
        return areaStatus_.size();
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public int getAreaStatus(int index) {
        return areaStatus_.get(index);
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder setAreaStatus(
          int index, int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder addAreaStatus(int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder addAllAreaStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAreaStatusIsMutable();
        super.addAll(values, areaStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder clearAreaStatus() {
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 operate_button = 13;
      private java.util.List<java.lang.Integer> operateButton_ = java.util.Collections.emptyList();
      private void ensureOperateButtonIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          operateButton_ = new java.util.ArrayList<java.lang.Integer>(operateButton_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOperateButtonList() {
        return java.util.Collections.unmodifiableList(operateButton_);
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public int getOperateButtonCount() {
        return operateButton_.size();
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public int getOperateButton(int index) {
        return operateButton_.get(index);
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public Builder setOperateButton(
          int index, int value) {
        ensureOperateButtonIsMutable();
        operateButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public Builder addOperateButton(int value) {
        ensureOperateButtonIsMutable();
        operateButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public Builder addAllOperateButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOperateButtonIsMutable();
        super.addAll(values, operateButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 13;</code>
       *
       * <pre>
       * 操作按钮
       * </pre>
       */
      public Builder clearOperateButton() {
        operateButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 add_banker_times = 14;
      private int addBankerTimes_ ;
      /**
       * <code>optional int32 add_banker_times = 14;</code>
       *
       * <pre>
       *添庄次数
       * </pre>
       */
      public boolean hasAddBankerTimes() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 add_banker_times = 14;</code>
       *
       * <pre>
       *添庄次数
       * </pre>
       */
      public int getAddBankerTimes() {
        return addBankerTimes_;
      }
      /**
       * <code>optional int32 add_banker_times = 14;</code>
       *
       * <pre>
       *添庄次数
       * </pre>
       */
      public Builder setAddBankerTimes(int value) {
        bitField0_ |= 0x00001000;
        addBankerTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_banker_times = 14;</code>
       *
       * <pre>
       *添庄次数
       * </pre>
       */
      public Builder clearAddBankerTimes() {
        bitField0_ = (bitField0_ & ~0x00001000);
        addBankerTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_banker = 15;
      private int curBanker_ ;
      /**
       * <code>optional int32 cur_banker = 15;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasCurBanker() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 cur_banker = 15;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getCurBanker() {
        return curBanker_;
      }
      /**
       * <code>optional int32 cur_banker = 15;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setCurBanker(int value) {
        bitField0_ |= 0x00002000;
        curBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker = 15;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearCurBanker() {
        bitField0_ = (bitField0_ & ~0x00002000);
        curBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.PukeGameEndJdb)
    }

    static {
      defaultInstance = new PukeGameEndJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.PukeGameEndJdb)
  }

  public interface RecordListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cur_round = 1;
    /**
     * <code>optional int32 cur_round = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    int getCurRound();

    // repeated .Int32ArrayResponse cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated .Int32ArrayResponse jetton_player = 3;
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getJettonPlayerList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index);
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    int getJettonPlayerCount();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonPlayerOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
        int index);

    // repeated int32 end_score = 4;
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // repeated int32 area_status = 5;
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    java.util.List<java.lang.Integer> getAreaStatusList();
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    int getAreaStatusCount();
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    int getAreaStatus(int index);

    // optional int32 banker_seat = 6;
    /**
     * <code>optional int32 banker_seat = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerSeat();

    // repeated .jdb.RoomPlayerResponseJdb players = 7;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code jdb.RecordList}
   *
   * <pre>
   *战绩
   * </pre>
   */
  public static final class RecordList extends
      com.google.protobuf.GeneratedMessage
      implements RecordListOrBuilder {
    // Use RecordList.newBuilder() to construct.
    private RecordList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RecordList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RecordList defaultInstance;
    public static RecordList getDefaultInstance() {
      return defaultInstance;
    }

    public RecordList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RecordList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              curRound_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jettonPlayer_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000004;
              }
              jettonPlayer_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              areaStatus_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                areaStatus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000002;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000040;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jettonPlayer_ = java.util.Collections.unmodifiableList(jettonPlayer_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RecordList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RecordList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.RecordList.class, protobuf.clazz.jdb.jdbRsp.RecordList.Builder.class);
    }

    public static com.google.protobuf.Parser<RecordList> PARSER =
        new com.google.protobuf.AbstractParser<RecordList>() {
      public RecordList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecordList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RecordList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cur_round = 1;
    public static final int CUR_ROUND_FIELD_NUMBER = 1;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cur_round = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // repeated .Int32ArrayResponse cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated .Int32ArrayResponse jetton_player = 3;
    public static final int JETTON_PLAYER_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonPlayer_;
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonPlayerList() {
      return jettonPlayer_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonPlayerOrBuilderList() {
      return jettonPlayer_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public int getJettonPlayerCount() {
      return jettonPlayer_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index) {
      return jettonPlayer_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
        int index) {
      return jettonPlayer_.get(index);
    }

    // repeated int32 end_score = 4;
    public static final int END_SCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 4;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // repeated int32 area_status = 5;
    public static final int AREA_STATUS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> areaStatus_;
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAreaStatusList() {
      return areaStatus_;
    }
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public int getAreaStatusCount() {
      return areaStatus_.size();
    }
    /**
     * <code>repeated int32 area_status = 5;</code>
     *
     * <pre>
     *区域输赢
     * </pre>
     */
    public int getAreaStatus(int index) {
      return areaStatus_.get(index);
    }

    // optional int32 banker_seat = 6;
    public static final int BANKER_SEAT_FIELD_NUMBER = 6;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_seat = 6;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 7;
    public static final int PLAYERS_FIELD_NUMBER = 7;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      curRound_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      jettonPlayer_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      areaStatus_ = java.util.Collections.emptyList();
      bankerSeat_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, curRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(2, cardsData_.get(i));
      }
      for (int i = 0; i < jettonPlayer_.size(); i++) {
        output.writeMessage(3, jettonPlayer_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(4, endScore_.get(i));
      }
      for (int i = 0; i < areaStatus_.size(); i++) {
        output.writeInt32(5, areaStatus_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(6, bankerSeat_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(7, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, curRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cardsData_.get(i));
      }
      for (int i = 0; i < jettonPlayer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, jettonPlayer_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < areaStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(areaStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getAreaStatusList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bankerSeat_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RecordList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.RecordList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.RecordList}
     *
     * <pre>
     *战绩
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.RecordListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RecordList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RecordList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.RecordList.class, protobuf.clazz.jdb.jdbRsp.RecordList.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.RecordList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getJettonPlayerFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsDataBuilder_.clear();
        }
        if (jettonPlayerBuilder_ == null) {
          jettonPlayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          jettonPlayerBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RecordList_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.RecordList getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.RecordList.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.RecordList build() {
        protobuf.clazz.jdb.jdbRsp.RecordList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.RecordList buildPartial() {
        protobuf.clazz.jdb.jdbRsp.RecordList result = new protobuf.clazz.jdb.jdbRsp.RecordList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.curRound_ = curRound_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (jettonPlayerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            jettonPlayer_ = java.util.Collections.unmodifiableList(jettonPlayer_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.jettonPlayer_ = jettonPlayer_;
        } else {
          result.jettonPlayer_ = jettonPlayerBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.endScore_ = endScore_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.areaStatus_ = areaStatus_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerSeat_ = bankerSeat_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.RecordList) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.RecordList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.RecordList other) {
        if (other == protobuf.clazz.jdb.jdbRsp.RecordList.getDefaultInstance()) return this;
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (jettonPlayerBuilder_ == null) {
          if (!other.jettonPlayer_.isEmpty()) {
            if (jettonPlayer_.isEmpty()) {
              jettonPlayer_ = other.jettonPlayer_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureJettonPlayerIsMutable();
              jettonPlayer_.addAll(other.jettonPlayer_);
            }
            onChanged();
          }
        } else {
          if (!other.jettonPlayer_.isEmpty()) {
            if (jettonPlayerBuilder_.isEmpty()) {
              jettonPlayerBuilder_.dispose();
              jettonPlayerBuilder_ = null;
              jettonPlayer_ = other.jettonPlayer_;
              bitField0_ = (bitField0_ & ~0x00000004);
              jettonPlayerBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJettonPlayerFieldBuilder() : null;
            } else {
              jettonPlayerBuilder_.addAllMessages(other.jettonPlayer_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (!other.areaStatus_.isEmpty()) {
          if (areaStatus_.isEmpty()) {
            areaStatus_ = other.areaStatus_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAreaStatusIsMutable();
            areaStatus_.addAll(other.areaStatus_);
          }
          onChanged();
        }
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000040);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.RecordList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.RecordList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cur_round = 1;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cur_round = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000001;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated .Int32ArrayResponse jetton_player = 3;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonPlayer_ =
        java.util.Collections.emptyList();
      private void ensureJettonPlayerIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jettonPlayer_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(jettonPlayer_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> jettonPlayerBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonPlayerList() {
        if (jettonPlayerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jettonPlayer_);
        } else {
          return jettonPlayerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public int getJettonPlayerCount() {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.size();
        } else {
          return jettonPlayerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getJettonPlayer(int index) {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.get(index);
        } else {
          return jettonPlayerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder setJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.set(index, value);
          onChanged();
        } else {
          jettonPlayerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder setJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.set(index, builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(value);
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(index, value);
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addJettonPlayer(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.add(index, builderForValue.build());
          onChanged();
        } else {
          jettonPlayerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder addAllJettonPlayer(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          super.addAll(values, jettonPlayer_);
          onChanged();
        } else {
          jettonPlayerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder clearJettonPlayer() {
        if (jettonPlayerBuilder_ == null) {
          jettonPlayer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          jettonPlayerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public Builder removeJettonPlayer(int index) {
        if (jettonPlayerBuilder_ == null) {
          ensureJettonPlayerIsMutable();
          jettonPlayer_.remove(index);
          onChanged();
        } else {
          jettonPlayerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getJettonPlayerBuilder(
          int index) {
        return getJettonPlayerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonPlayerOrBuilder(
          int index) {
        if (jettonPlayerBuilder_ == null) {
          return jettonPlayer_.get(index);  } else {
          return jettonPlayerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getJettonPlayerOrBuilderList() {
        if (jettonPlayerBuilder_ != null) {
          return jettonPlayerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jettonPlayer_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonPlayerBuilder() {
        return getJettonPlayerFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonPlayerBuilder(
          int index) {
        return getJettonPlayerFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_player = 3;</code>
       *
       * <pre>
       *用户下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getJettonPlayerBuilderList() {
        return getJettonPlayerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getJettonPlayerFieldBuilder() {
        if (jettonPlayerBuilder_ == null) {
          jettonPlayerBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  jettonPlayer_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          jettonPlayer_ = null;
        }
        return jettonPlayerBuilder_;
      }

      // repeated int32 end_score = 4;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 4;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 area_status = 5;
      private java.util.List<java.lang.Integer> areaStatus_ = java.util.Collections.emptyList();
      private void ensureAreaStatusIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          areaStatus_ = new java.util.ArrayList<java.lang.Integer>(areaStatus_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAreaStatusList() {
        return java.util.Collections.unmodifiableList(areaStatus_);
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public int getAreaStatusCount() {
        return areaStatus_.size();
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public int getAreaStatus(int index) {
        return areaStatus_.get(index);
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder setAreaStatus(
          int index, int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder addAreaStatus(int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder addAllAreaStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAreaStatusIsMutable();
        super.addAll(values, areaStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 5;</code>
       *
       * <pre>
       *区域输赢
       * </pre>
       */
      public Builder clearAreaStatus() {
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 banker_seat = 6;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 banker_seat = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000020;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 6;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 7;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 7;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:jdb.RecordList)
    }

    static {
      defaultInstance = new RecordList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.RecordList)
  }

  public interface TableResponseJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional .jdb.RoomInfoJdb room_info = 2;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder();

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 jetton_button = 5;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonButtonList();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButtonCount();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButton(int index);

    // repeated .Int32ArrayResponse jetton_score = 6;
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getJettonScoreList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getJettonScore(int index);
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonScoreOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonScoreOrBuilder(
        int index);

    // repeated int32 open_card = 7;
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpenCardList();
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    int getOpenCardCount();
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    int getOpenCard(int index);

    // repeated bool liang_card = 8;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getLiangCardList();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    int getLiangCardCount();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    boolean getLiangCard(int index);

    // optional int32 scene_status = 9;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    boolean hasSceneStatus();
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    int getSceneStatus();

    // optional int32 display_time = 10;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 jdb_value = 11;
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    java.util.List<java.lang.Integer> getJdbValueList();
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    int getJdbValueCount();
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    int getJdbValue(int index);

    // repeated int32 area_status = 12;
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    java.util.List<java.lang.Integer> getAreaStatusList();
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    int getAreaStatusCount();
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    int getAreaStatus(int index);

    // repeated int32 player_score = 13;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScore(int index);

    // repeated int32 call_button = 14;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallButtonList();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButtonCount();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButton(int index);

    // repeated bool player_status = 15;
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    java.util.List<java.lang.Boolean> getPlayerStatusList();
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    int getPlayerStatusCount();
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    boolean getPlayerStatus(int index);

    // repeated int32 operate_button = 16;
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getOperateButtonList();
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    int getOperateButtonCount();
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    int getOperateButton(int index);

    // optional int64 hou_shou_score = 17;
    /**
     * <code>optional int64 hou_shou_score = 17;</code>
     *
     * <pre>
     *后手分
     * </pre>
     */
    boolean hasHouShouScore();
    /**
     * <code>optional int64 hou_shou_score = 17;</code>
     *
     * <pre>
     *后手分
     * </pre>
     */
    long getHouShouScore();

    // optional int32 qie_card = 18;
    /**
     * <code>optional int32 qie_card = 18;</code>
     *
     * <pre>
     *切牌
     * </pre>
     */
    boolean hasQieCard();
    /**
     * <code>optional int32 qie_card = 18;</code>
     *
     * <pre>
     *切牌
     * </pre>
     */
    int getQieCard();

    // repeated int32 call_banker = 19;
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallBankerList();
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    int getCallBankerCount();
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    int getCallBanker(int index);
  }
  /**
   * Protobuf type {@code jdb.TableResponseJdb}
   */
  public static final class TableResponseJdb extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseJdbOrBuilder {
    // Use TableResponseJdb.newBuilder() to construct.
    private TableResponseJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseJdb defaultInstance;
    public static TableResponseJdb getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 18: {
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              jettonButton_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                jettonScore_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000020;
              }
              jettonScore_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                openCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              openCard_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                openCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                openCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              liangCard_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                liangCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              sceneStatus_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                jdbValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              jdbValue_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                jdbValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                jdbValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              areaStatus_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                areaStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                areaStatus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              callButton_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                callButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                playerStatus_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00004000;
              }
              playerStatus_.add(input.readBool());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                playerStatus_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerStatus_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                operateButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              operateButton_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                operateButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                operateButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              bitField0_ |= 0x00000010;
              houShouScore_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000020;
              qieCard_ = input.readInt32();
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                callBanker_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              callBanker_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                callBanker_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                callBanker_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          jdbValue_ = java.util.Collections.unmodifiableList(jdbValue_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          playerStatus_ = java.util.Collections.unmodifiableList(playerStatus_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          operateButton_ = java.util.Collections.unmodifiableList(operateButton_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          callBanker_ = java.util.Collections.unmodifiableList(callBanker_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_TableResponseJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_TableResponseJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.TableResponseJdb.class, protobuf.clazz.jdb.jdbRsp.TableResponseJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseJdb> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseJdb>() {
      public TableResponseJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional .jdb.RoomInfoJdb room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 jetton_button = 5;
    public static final int JETTON_BUTTON_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> jettonButton_;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonButtonList() {
      return jettonButton_;
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButtonCount() {
      return jettonButton_.size();
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButton(int index) {
      return jettonButton_.get(index);
    }

    // repeated .Int32ArrayResponse jetton_score = 6;
    public static final int JETTON_SCORE_FIELD_NUMBER = 6;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonScore_;
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonScoreOrBuilderList() {
      return jettonScore_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getJettonScore(int index) {
      return jettonScore_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonScoreOrBuilder(
        int index) {
      return jettonScore_.get(index);
    }

    // repeated int32 open_card = 7;
    public static final int OPEN_CARD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> openCard_;
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpenCardList() {
      return openCard_;
    }
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public int getOpenCardCount() {
      return openCard_.size();
    }
    /**
     * <code>repeated int32 open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public int getOpenCard(int index) {
      return openCard_.get(index);
    }

    // repeated bool liang_card = 8;
    public static final int LIANG_CARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> liangCard_;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getLiangCardList() {
      return liangCard_;
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public int getLiangCardCount() {
      return liangCard_.size();
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public boolean getLiangCard(int index) {
      return liangCard_.get(index);
    }

    // optional int32 scene_status = 9;
    public static final int SCENE_STATUS_FIELD_NUMBER = 9;
    private int sceneStatus_;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public boolean hasSceneStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public int getSceneStatus() {
      return sceneStatus_;
    }

    // optional int32 display_time = 10;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 10;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 jdb_value = 11;
    public static final int JDB_VALUE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> jdbValue_;
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJdbValueList() {
      return jdbValue_;
    }
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public int getJdbValueCount() {
      return jdbValue_.size();
    }
    /**
     * <code>repeated int32 jdb_value = 11;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public int getJdbValue(int index) {
      return jdbValue_.get(index);
    }

    // repeated int32 area_status = 12;
    public static final int AREA_STATUS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> areaStatus_;
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAreaStatusList() {
      return areaStatus_;
    }
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    public int getAreaStatusCount() {
      return areaStatus_.size();
    }
    /**
     * <code>repeated int32 area_status = 12;</code>
     *
     * <pre>
     * 区域状态
     * </pre>
     */
    public int getAreaStatus(int index) {
      return areaStatus_.get(index);
    }

    // repeated int32 player_score = 13;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    // repeated int32 call_button = 14;
    public static final int CALL_BUTTON_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> callButton_;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallButtonList() {
      return callButton_;
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButtonCount() {
      return callButton_.size();
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButton(int index) {
      return callButton_.get(index);
    }

    // repeated bool player_status = 15;
    public static final int PLAYER_STATUS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Boolean> playerStatus_;
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getPlayerStatusList() {
      return playerStatus_;
    }
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public int getPlayerStatusCount() {
      return playerStatus_.size();
    }
    /**
     * <code>repeated bool player_status = 15;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public boolean getPlayerStatus(int index) {
      return playerStatus_.get(index);
    }

    // repeated int32 operate_button = 16;
    public static final int OPERATE_BUTTON_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> operateButton_;
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOperateButtonList() {
      return operateButton_;
    }
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public int getOperateButtonCount() {
      return operateButton_.size();
    }
    /**
     * <code>repeated int32 operate_button = 16;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public int getOperateButton(int index) {
      return operateButton_.get(index);
    }

    // optional int64 hou_shou_score = 17;
    public static final int HOU_SHOU_SCORE_FIELD_NUMBER = 17;
    private long houShouScore_;
    /**
     * <code>optional int64 hou_shou_score = 17;</code>
     *
     * <pre>
     *后手分
     * </pre>
     */
    public boolean hasHouShouScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 hou_shou_score = 17;</code>
     *
     * <pre>
     *后手分
     * </pre>
     */
    public long getHouShouScore() {
      return houShouScore_;
    }

    // optional int32 qie_card = 18;
    public static final int QIE_CARD_FIELD_NUMBER = 18;
    private int qieCard_;
    /**
     * <code>optional int32 qie_card = 18;</code>
     *
     * <pre>
     *切牌
     * </pre>
     */
    public boolean hasQieCard() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 qie_card = 18;</code>
     *
     * <pre>
     *切牌
     * </pre>
     */
    public int getQieCard() {
      return qieCard_;
    }

    // repeated int32 call_banker = 19;
    public static final int CALL_BANKER_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> callBanker_;
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallBankerList() {
      return callBanker_;
    }
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    public int getCallBankerCount() {
      return callBanker_.size();
    }
    /**
     * <code>repeated int32 call_banker = 19;</code>
     *
     * <pre>
     *抢庄按钮
     * </pre>
     */
    public int getCallBanker(int index) {
      return callBanker_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      jettonButton_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      openCard_ = java.util.Collections.emptyList();
      liangCard_ = java.util.Collections.emptyList();
      sceneStatus_ = 0;
      displayTime_ = 0;
      jdbValue_ = java.util.Collections.emptyList();
      areaStatus_ = java.util.Collections.emptyList();
      playerScore_ = java.util.Collections.emptyList();
      callButton_ = java.util.Collections.emptyList();
      playerStatus_ = java.util.Collections.emptyList();
      operateButton_ = java.util.Collections.emptyList();
      houShouScore_ = 0L;
      qieCard_ = 0;
      callBanker_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonButton_.size(); i++) {
        output.writeInt32(5, jettonButton_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeMessage(6, jettonScore_.get(i));
      }
      for (int i = 0; i < openCard_.size(); i++) {
        output.writeInt32(7, openCard_.get(i));
      }
      for (int i = 0; i < liangCard_.size(); i++) {
        output.writeBool(8, liangCard_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(10, displayTime_);
      }
      for (int i = 0; i < jdbValue_.size(); i++) {
        output.writeInt32(11, jdbValue_.get(i));
      }
      for (int i = 0; i < areaStatus_.size(); i++) {
        output.writeInt32(12, areaStatus_.get(i));
      }
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(13, playerScore_.get(i));
      }
      for (int i = 0; i < callButton_.size(); i++) {
        output.writeInt32(14, callButton_.get(i));
      }
      for (int i = 0; i < playerStatus_.size(); i++) {
        output.writeBool(15, playerStatus_.get(i));
      }
      for (int i = 0; i < operateButton_.size(); i++) {
        output.writeInt32(16, operateButton_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(17, houShouScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(18, qieCard_);
      }
      for (int i = 0; i < callBanker_.size(); i++) {
        output.writeInt32(19, callBanker_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonButton_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonButtonList().size();
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, jettonScore_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < openCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(openCard_.get(i));
        }
        size += dataSize;
        size += 1 * getOpenCardList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getLiangCardList().size();
        size += dataSize;
        size += 1 * getLiangCardList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jdbValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jdbValue_.get(i));
        }
        size += dataSize;
        size += 1 * getJdbValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < areaStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(areaStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getAreaStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callButton_.get(i));
        }
        size += dataSize;
        size += 1 * getCallButtonList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPlayerStatusList().size();
        size += dataSize;
        size += 1 * getPlayerStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < operateButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(operateButton_.get(i));
        }
        size += dataSize;
        size += 2 * getOperateButtonList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, houShouScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, qieCard_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callBanker_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callBanker_.get(i));
        }
        size += dataSize;
        size += 2 * getCallBankerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.TableResponseJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.TableResponseJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.TableResponseJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.TableResponseJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_TableResponseJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_TableResponseJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.TableResponseJdb.class, protobuf.clazz.jdb.jdbRsp.TableResponseJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.TableResponseJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
          getJettonScoreFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (jettonScoreBuilder_ == null) {
          jettonScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          jettonScoreBuilder_.clear();
        }
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        sceneStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        jdbValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        playerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        operateButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        houShouScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        qieCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        callBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_TableResponseJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.TableResponseJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.TableResponseJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.TableResponseJdb build() {
        protobuf.clazz.jdb.jdbRsp.TableResponseJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.TableResponseJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.TableResponseJdb result = new protobuf.clazz.jdb.jdbRsp.TableResponseJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.jettonButton_ = jettonButton_;
        if (jettonScoreBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.jettonScore_ = jettonScore_;
        } else {
          result.jettonScore_ = jettonScoreBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.openCard_ = openCard_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.liangCard_ = liangCard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sceneStatus_ = sceneStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          jdbValue_ = java.util.Collections.unmodifiableList(jdbValue_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.jdbValue_ = jdbValue_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          areaStatus_ = java.util.Collections.unmodifiableList(areaStatus_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.areaStatus_ = areaStatus_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.playerScore_ = playerScore_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.callButton_ = callButton_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          playerStatus_ = java.util.Collections.unmodifiableList(playerStatus_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.playerStatus_ = playerStatus_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          operateButton_ = java.util.Collections.unmodifiableList(operateButton_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.operateButton_ = operateButton_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000010;
        }
        result.houShouScore_ = houShouScore_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.qieCard_ = qieCard_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          callBanker_ = java.util.Collections.unmodifiableList(callBanker_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.callBanker_ = callBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.TableResponseJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.TableResponseJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.TableResponseJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.TableResponseJdb.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.jettonButton_.isEmpty()) {
          if (jettonButton_.isEmpty()) {
            jettonButton_ = other.jettonButton_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureJettonButtonIsMutable();
            jettonButton_.addAll(other.jettonButton_);
          }
          onChanged();
        }
        if (jettonScoreBuilder_ == null) {
          if (!other.jettonScore_.isEmpty()) {
            if (jettonScore_.isEmpty()) {
              jettonScore_ = other.jettonScore_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureJettonScoreIsMutable();
              jettonScore_.addAll(other.jettonScore_);
            }
            onChanged();
          }
        } else {
          if (!other.jettonScore_.isEmpty()) {
            if (jettonScoreBuilder_.isEmpty()) {
              jettonScoreBuilder_.dispose();
              jettonScoreBuilder_ = null;
              jettonScore_ = other.jettonScore_;
              bitField0_ = (bitField0_ & ~0x00000020);
              jettonScoreBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJettonScoreFieldBuilder() : null;
            } else {
              jettonScoreBuilder_.addAllMessages(other.jettonScore_);
            }
          }
        }
        if (!other.openCard_.isEmpty()) {
          if (openCard_.isEmpty()) {
            openCard_ = other.openCard_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOpenCardIsMutable();
            openCard_.addAll(other.openCard_);
          }
          onChanged();
        }
        if (!other.liangCard_.isEmpty()) {
          if (liangCard_.isEmpty()) {
            liangCard_ = other.liangCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLiangCardIsMutable();
            liangCard_.addAll(other.liangCard_);
          }
          onChanged();
        }
        if (other.hasSceneStatus()) {
          setSceneStatus(other.getSceneStatus());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.jdbValue_.isEmpty()) {
          if (jdbValue_.isEmpty()) {
            jdbValue_ = other.jdbValue_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureJdbValueIsMutable();
            jdbValue_.addAll(other.jdbValue_);
          }
          onChanged();
        }
        if (!other.areaStatus_.isEmpty()) {
          if (areaStatus_.isEmpty()) {
            areaStatus_ = other.areaStatus_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAreaStatusIsMutable();
            areaStatus_.addAll(other.areaStatus_);
          }
          onChanged();
        }
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        if (!other.callButton_.isEmpty()) {
          if (callButton_.isEmpty()) {
            callButton_ = other.callButton_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCallButtonIsMutable();
            callButton_.addAll(other.callButton_);
          }
          onChanged();
        }
        if (!other.playerStatus_.isEmpty()) {
          if (playerStatus_.isEmpty()) {
            playerStatus_ = other.playerStatus_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensurePlayerStatusIsMutable();
            playerStatus_.addAll(other.playerStatus_);
          }
          onChanged();
        }
        if (!other.operateButton_.isEmpty()) {
          if (operateButton_.isEmpty()) {
            operateButton_ = other.operateButton_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureOperateButtonIsMutable();
            operateButton_.addAll(other.operateButton_);
          }
          onChanged();
        }
        if (other.hasHouShouScore()) {
          setHouShouScore(other.getHouShouScore());
        }
        if (other.hasQieCard()) {
          setQieCard(other.getQieCard());
        }
        if (!other.callBanker_.isEmpty()) {
          if (callBanker_.isEmpty()) {
            callBanker_ = other.callBanker_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureCallBankerIsMutable();
            callBanker_.addAll(other.callBanker_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.TableResponseJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.TableResponseJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .jdb.RoomInfoJdb room_info = 2;
      private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              roomInfo_ != protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 3;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 jetton_button = 5;
      private java.util.List<java.lang.Integer> jettonButton_ = java.util.Collections.emptyList();
      private void ensureJettonButtonIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = new java.util.ArrayList<java.lang.Integer>(jettonButton_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonButtonList() {
        return java.util.Collections.unmodifiableList(jettonButton_);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButtonCount() {
        return jettonButton_.size();
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButton(int index) {
        return jettonButton_.get(index);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder setJettonButton(
          int index, int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addJettonButton(int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addAllJettonButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonButtonIsMutable();
        super.addAll(values, jettonButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder clearJettonButton() {
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse jetton_score = 6;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonScore_ =
        java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(jettonScore_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> jettonScoreBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonScoreList() {
        if (jettonScoreBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jettonScore_);
        } else {
          return jettonScoreBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        if (jettonScoreBuilder_ == null) {
          return jettonScore_.size();
        } else {
          return jettonScoreBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getJettonScore(int index) {
        if (jettonScoreBuilder_ == null) {
          return jettonScore_.get(index);
        } else {
          return jettonScoreBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonScoreIsMutable();
          jettonScore_.set(index, value);
          onChanged();
        } else {
          jettonScoreBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonScoreBuilder_ == null) {
          ensureJettonScoreIsMutable();
          jettonScore_.set(index, builderForValue.build());
          onChanged();
        } else {
          jettonScoreBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonScoreIsMutable();
          jettonScore_.add(value);
          onChanged();
        } else {
          jettonScoreBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonScoreIsMutable();
          jettonScore_.add(index, value);
          onChanged();
        } else {
          jettonScoreBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonScoreBuilder_ == null) {
          ensureJettonScoreIsMutable();
          jettonScore_.add(builderForValue.build());
          onChanged();
        } else {
          jettonScoreBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonScoreBuilder_ == null) {
          ensureJettonScoreIsMutable();
          jettonScore_.add(index, builderForValue.build());
          onChanged();
        } else {
          jettonScoreBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (jettonScoreBuilder_ == null) {
          ensureJettonScoreIsMutable();
          super.addAll(values, jettonScore_);
          onChanged();
        } else {
          jettonScoreBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        if (jettonScoreBuilder_ == null) {
          jettonScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          jettonScoreBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder removeJettonScore(int index) {
        if (jettonScoreBuilder_ == null) {
          ensureJettonScoreIsMutable();
          jettonScore_.remove(index);
          onChanged();
        } else {
          jettonScoreBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getJettonScoreBuilder(
          int index) {
        return getJettonScoreFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonScoreOrBuilder(
          int index) {
        if (jettonScoreBuilder_ == null) {
          return jettonScore_.get(index);  } else {
          return jettonScoreBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getJettonScoreOrBuilderList() {
        if (jettonScoreBuilder_ != null) {
          return jettonScoreBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jettonScore_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonScoreBuilder() {
        return getJettonScoreFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonScoreBuilder(
          int index) {
        return getJettonScoreFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getJettonScoreBuilderList() {
        return getJettonScoreFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getJettonScoreFieldBuilder() {
        if (jettonScoreBuilder_ == null) {
          jettonScoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  jettonScore_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          jettonScore_ = null;
        }
        return jettonScoreBuilder_;
      }

      // repeated int32 open_card = 7;
      private java.util.List<java.lang.Integer> openCard_ = java.util.Collections.emptyList();
      private void ensureOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = new java.util.ArrayList<java.lang.Integer>(openCard_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpenCardList() {
        return java.util.Collections.unmodifiableList(openCard_);
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public int getOpenCardCount() {
        return openCard_.size();
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public int getOpenCard(int index) {
        return openCard_.get(index);
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder setOpenCard(
          int index, int value) {
        ensureOpenCardIsMutable();
        openCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addOpenCard(int value) {
        ensureOpenCardIsMutable();
        openCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addAllOpenCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpenCardIsMutable();
        super.addAll(values, openCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder clearOpenCard() {
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool liang_card = 8;
      private java.util.List<java.lang.Boolean> liangCard_ = java.util.Collections.emptyList();
      private void ensureLiangCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = new java.util.ArrayList<java.lang.Boolean>(liangCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getLiangCardList() {
        return java.util.Collections.unmodifiableList(liangCard_);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public int getLiangCardCount() {
        return liangCard_.size();
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public boolean getLiangCard(int index) {
        return liangCard_.get(index);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder setLiangCard(
          int index, boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addLiangCard(boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addAllLiangCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureLiangCardIsMutable();
        super.addAll(values, liangCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder clearLiangCard() {
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 scene_status = 9;
      private int sceneStatus_ ;
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public boolean hasSceneStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public int getSceneStatus() {
        return sceneStatus_;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder setSceneStatus(int value) {
        bitField0_ |= 0x00000100;
        sceneStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder clearSceneStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sceneStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 10;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000200;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jdb_value = 11;
      private java.util.List<java.lang.Integer> jdbValue_ = java.util.Collections.emptyList();
      private void ensureJdbValueIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          jdbValue_ = new java.util.ArrayList<java.lang.Integer>(jdbValue_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJdbValueList() {
        return java.util.Collections.unmodifiableList(jdbValue_);
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public int getJdbValueCount() {
        return jdbValue_.size();
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public int getJdbValue(int index) {
        return jdbValue_.get(index);
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder setJdbValue(
          int index, int value) {
        ensureJdbValueIsMutable();
        jdbValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder addJdbValue(int value) {
        ensureJdbValueIsMutable();
        jdbValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder addAllJdbValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJdbValueIsMutable();
        super.addAll(values, jdbValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jdb_value = 11;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder clearJdbValue() {
        jdbValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 area_status = 12;
      private java.util.List<java.lang.Integer> areaStatus_ = java.util.Collections.emptyList();
      private void ensureAreaStatusIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          areaStatus_ = new java.util.ArrayList<java.lang.Integer>(areaStatus_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAreaStatusList() {
        return java.util.Collections.unmodifiableList(areaStatus_);
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public int getAreaStatusCount() {
        return areaStatus_.size();
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public int getAreaStatus(int index) {
        return areaStatus_.get(index);
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public Builder setAreaStatus(
          int index, int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public Builder addAreaStatus(int value) {
        ensureAreaStatusIsMutable();
        areaStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public Builder addAllAreaStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAreaStatusIsMutable();
        super.addAll(values, areaStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 area_status = 12;</code>
       *
       * <pre>
       * 区域状态
       * </pre>
       */
      public Builder clearAreaStatus() {
        areaStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 player_score = 13;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 call_button = 14;
      private java.util.List<java.lang.Integer> callButton_ = java.util.Collections.emptyList();
      private void ensureCallButtonIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = new java.util.ArrayList<java.lang.Integer>(callButton_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallButtonList() {
        return java.util.Collections.unmodifiableList(callButton_);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButtonCount() {
        return callButton_.size();
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButton(int index) {
        return callButton_.get(index);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder setCallButton(
          int index, int value) {
        ensureCallButtonIsMutable();
        callButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addCallButton(int value) {
        ensureCallButtonIsMutable();
        callButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addAllCallButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallButtonIsMutable();
        super.addAll(values, callButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder clearCallButton() {
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated bool player_status = 15;
      private java.util.List<java.lang.Boolean> playerStatus_ = java.util.Collections.emptyList();
      private void ensurePlayerStatusIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          playerStatus_ = new java.util.ArrayList<java.lang.Boolean>(playerStatus_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getPlayerStatusList() {
        return java.util.Collections.unmodifiableList(playerStatus_);
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public int getPlayerStatusCount() {
        return playerStatus_.size();
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public boolean getPlayerStatus(int index) {
        return playerStatus_.get(index);
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder setPlayerStatus(
          int index, boolean value) {
        ensurePlayerStatusIsMutable();
        playerStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder addPlayerStatus(boolean value) {
        ensurePlayerStatusIsMutable();
        playerStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder addAllPlayerStatus(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePlayerStatusIsMutable();
        super.addAll(values, playerStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 15;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder clearPlayerStatus() {
        playerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 operate_button = 16;
      private java.util.List<java.lang.Integer> operateButton_ = java.util.Collections.emptyList();
      private void ensureOperateButtonIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          operateButton_ = new java.util.ArrayList<java.lang.Integer>(operateButton_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOperateButtonList() {
        return java.util.Collections.unmodifiableList(operateButton_);
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public int getOperateButtonCount() {
        return operateButton_.size();
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public int getOperateButton(int index) {
        return operateButton_.get(index);
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder setOperateButton(
          int index, int value) {
        ensureOperateButtonIsMutable();
        operateButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder addOperateButton(int value) {
        ensureOperateButtonIsMutable();
        operateButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder addAllOperateButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOperateButtonIsMutable();
        super.addAll(values, operateButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 operate_button = 16;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder clearOperateButton() {
        operateButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional int64 hou_shou_score = 17;
      private long houShouScore_ ;
      /**
       * <code>optional int64 hou_shou_score = 17;</code>
       *
       * <pre>
       *后手分
       * </pre>
       */
      public boolean hasHouShouScore() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 hou_shou_score = 17;</code>
       *
       * <pre>
       *后手分
       * </pre>
       */
      public long getHouShouScore() {
        return houShouScore_;
      }
      /**
       * <code>optional int64 hou_shou_score = 17;</code>
       *
       * <pre>
       *后手分
       * </pre>
       */
      public Builder setHouShouScore(long value) {
        bitField0_ |= 0x00010000;
        houShouScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 hou_shou_score = 17;</code>
       *
       * <pre>
       *后手分
       * </pre>
       */
      public Builder clearHouShouScore() {
        bitField0_ = (bitField0_ & ~0x00010000);
        houShouScore_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 qie_card = 18;
      private int qieCard_ ;
      /**
       * <code>optional int32 qie_card = 18;</code>
       *
       * <pre>
       *切牌
       * </pre>
       */
      public boolean hasQieCard() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 qie_card = 18;</code>
       *
       * <pre>
       *切牌
       * </pre>
       */
      public int getQieCard() {
        return qieCard_;
      }
      /**
       * <code>optional int32 qie_card = 18;</code>
       *
       * <pre>
       *切牌
       * </pre>
       */
      public Builder setQieCard(int value) {
        bitField0_ |= 0x00020000;
        qieCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qie_card = 18;</code>
       *
       * <pre>
       *切牌
       * </pre>
       */
      public Builder clearQieCard() {
        bitField0_ = (bitField0_ & ~0x00020000);
        qieCard_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 call_banker = 19;
      private java.util.List<java.lang.Integer> callBanker_ = java.util.Collections.emptyList();
      private void ensureCallBankerIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          callBanker_ = new java.util.ArrayList<java.lang.Integer>(callBanker_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallBankerList() {
        return java.util.Collections.unmodifiableList(callBanker_);
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public int getCallBankerCount() {
        return callBanker_.size();
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public int getCallBanker(int index) {
        return callBanker_.get(index);
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public Builder setCallBanker(
          int index, int value) {
        ensureCallBankerIsMutable();
        callBanker_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public Builder addCallBanker(int value) {
        ensureCallBankerIsMutable();
        callBanker_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public Builder addAllCallBanker(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallBankerIsMutable();
        super.addAll(values, callBanker_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker = 19;</code>
       *
       * <pre>
       *抢庄按钮
       * </pre>
       */
      public Builder clearCallBanker() {
        callBanker_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.TableResponseJdb)
    }

    static {
      defaultInstance = new TableResponseJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.TableResponseJdb)
  }

  public interface PauseGameJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool opt_type = 1;
    /**
     * <code>optional bool opt_type = 1;</code>
     *
     * <pre>
     *操作类型，true暂停，
     * </pre>
     */
    boolean hasOptType();
    /**
     * <code>optional bool opt_type = 1;</code>
     *
     * <pre>
     *操作类型，true暂停，
     * </pre>
     */
    boolean getOptType();

    // optional string des = 2;
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    boolean hasDes();
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    java.lang.String getDes();
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDesBytes();
  }
  /**
   * Protobuf type {@code jdb.PauseGameJdb}
   */
  public static final class PauseGameJdb extends
      com.google.protobuf.GeneratedMessage
      implements PauseGameJdbOrBuilder {
    // Use PauseGameJdb.newBuilder() to construct.
    private PauseGameJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PauseGameJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PauseGameJdb defaultInstance;
    public static PauseGameJdb getDefaultInstance() {
      return defaultInstance;
    }

    public PauseGameJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PauseGameJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              optType_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              des_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PauseGameJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PauseGameJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.PauseGameJdb.class, protobuf.clazz.jdb.jdbRsp.PauseGameJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PauseGameJdb> PARSER =
        new com.google.protobuf.AbstractParser<PauseGameJdb>() {
      public PauseGameJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PauseGameJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PauseGameJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool opt_type = 1;
    public static final int OPT_TYPE_FIELD_NUMBER = 1;
    private boolean optType_;
    /**
     * <code>optional bool opt_type = 1;</code>
     *
     * <pre>
     *操作类型，true暂停，
     * </pre>
     */
    public boolean hasOptType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool opt_type = 1;</code>
     *
     * <pre>
     *操作类型，true暂停，
     * </pre>
     */
    public boolean getOptType() {
      return optType_;
    }

    // optional string des = 2;
    public static final int DES_FIELD_NUMBER = 2;
    private java.lang.Object des_;
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    public boolean hasDes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    public java.lang.String getDes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          des_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string des = 2;</code>
     *
     * <pre>
     *游戏描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDesBytes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        des_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      optType_ = false;
      des_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, optType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDesBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, optType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDesBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PauseGameJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.PauseGameJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.PauseGameJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.PauseGameJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PauseGameJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PauseGameJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.PauseGameJdb.class, protobuf.clazz.jdb.jdbRsp.PauseGameJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.PauseGameJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        optType_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        des_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PauseGameJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.PauseGameJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.PauseGameJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.PauseGameJdb build() {
        protobuf.clazz.jdb.jdbRsp.PauseGameJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.PauseGameJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.PauseGameJdb result = new protobuf.clazz.jdb.jdbRsp.PauseGameJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.optType_ = optType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.des_ = des_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.PauseGameJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.PauseGameJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.PauseGameJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.PauseGameJdb.getDefaultInstance()) return this;
        if (other.hasOptType()) {
          setOptType(other.getOptType());
        }
        if (other.hasDes()) {
          bitField0_ |= 0x00000002;
          des_ = other.des_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.PauseGameJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.PauseGameJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool opt_type = 1;
      private boolean optType_ ;
      /**
       * <code>optional bool opt_type = 1;</code>
       *
       * <pre>
       *操作类型，true暂停，
       * </pre>
       */
      public boolean hasOptType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool opt_type = 1;</code>
       *
       * <pre>
       *操作类型，true暂停，
       * </pre>
       */
      public boolean getOptType() {
        return optType_;
      }
      /**
       * <code>optional bool opt_type = 1;</code>
       *
       * <pre>
       *操作类型，true暂停，
       * </pre>
       */
      public Builder setOptType(boolean value) {
        bitField0_ |= 0x00000001;
        optType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool opt_type = 1;</code>
       *
       * <pre>
       *操作类型，true暂停，
       * </pre>
       */
      public Builder clearOptType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        optType_ = false;
        onChanged();
        return this;
      }

      // optional string des = 2;
      private java.lang.Object des_ = "";
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public boolean hasDes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public java.lang.String getDes() {
        java.lang.Object ref = des_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          des_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDesBytes() {
        java.lang.Object ref = des_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          des_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public Builder setDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        des_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public Builder clearDes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        des_ = getDefaultInstance().getDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 2;</code>
       *
       * <pre>
       *游戏描述
       * </pre>
       */
      public Builder setDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        des_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.PauseGameJdb)
    }

    static {
      defaultInstance = new PauseGameJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.PauseGameJdb)
  }

  public interface ButtonOperateJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    int getOpreateType();

    // optional int32 min_jetton_score = 2;
    /**
     * <code>optional int32 min_jetton_score = 2;</code>
     *
     * <pre>
     *下注最低分
     * </pre>
     */
    boolean hasMinJettonScore();
    /**
     * <code>optional int32 min_jetton_score = 2;</code>
     *
     * <pre>
     *下注最低分
     * </pre>
     */
    int getMinJettonScore();

    // optional int32 max_jetton_score = 3;
    /**
     * <code>optional int32 max_jetton_score = 3;</code>
     *
     * <pre>
     *下注最高分
     * </pre>
     */
    boolean hasMaxJettonScore();
    /**
     * <code>optional int32 max_jetton_score = 3;</code>
     *
     * <pre>
     *下注最高分
     * </pre>
     */
    int getMaxJettonScore();

    // repeated int32 button = 4;
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getButtonList();
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButtonCount();
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButton(int index);

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 is_showpass = 6;
    /**
     * <code>optional int32 is_showpass = 6;</code>
     *
     * <pre>
     *要不要显示pass按钮 0不显示 1显示
     * </pre>
     */
    boolean hasIsShowpass();
    /**
     * <code>optional int32 is_showpass = 6;</code>
     *
     * <pre>
     *要不要显示pass按钮 0不显示 1显示
     * </pre>
     */
    int getIsShowpass();

    // optional int64 max_table_jetton_score = 7;
    /**
     * <code>optional int64 max_table_jetton_score = 7;</code>
     *
     * <pre>
     *桌面最大下多少分
     * </pre>
     */
    boolean hasMaxTableJettonScore();
    /**
     * <code>optional int64 max_table_jetton_score = 7;</code>
     *
     * <pre>
     *桌面最大下多少分
     * </pre>
     */
    long getMaxTableJettonScore();
  }
  /**
   * Protobuf type {@code jdb.ButtonOperateJdb}
   */
  public static final class ButtonOperateJdb extends
      com.google.protobuf.GeneratedMessage
      implements ButtonOperateJdbOrBuilder {
    // Use ButtonOperateJdb.newBuilder() to construct.
    private ButtonOperateJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ButtonOperateJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ButtonOperateJdb defaultInstance;
    public static ButtonOperateJdb getDefaultInstance() {
      return defaultInstance;
    }

    public ButtonOperateJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonOperateJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minJettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxJettonScore_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              button_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                button_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              isShowpass_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              maxTableJettonScore_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          button_ = java.util.Collections.unmodifiableList(button_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ButtonOperateJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ButtonOperateJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.class, protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<ButtonOperateJdb> PARSER =
        new com.google.protobuf.AbstractParser<ButtonOperateJdb>() {
      public ButtonOperateJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ButtonOperateJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonOperateJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 min_jetton_score = 2;
    public static final int MIN_JETTON_SCORE_FIELD_NUMBER = 2;
    private int minJettonScore_;
    /**
     * <code>optional int32 min_jetton_score = 2;</code>
     *
     * <pre>
     *下注最低分
     * </pre>
     */
    public boolean hasMinJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 min_jetton_score = 2;</code>
     *
     * <pre>
     *下注最低分
     * </pre>
     */
    public int getMinJettonScore() {
      return minJettonScore_;
    }

    // optional int32 max_jetton_score = 3;
    public static final int MAX_JETTON_SCORE_FIELD_NUMBER = 3;
    private int maxJettonScore_;
    /**
     * <code>optional int32 max_jetton_score = 3;</code>
     *
     * <pre>
     *下注最高分
     * </pre>
     */
    public boolean hasMaxJettonScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 max_jetton_score = 3;</code>
     *
     * <pre>
     *下注最高分
     * </pre>
     */
    public int getMaxJettonScore() {
      return maxJettonScore_;
    }

    // repeated int32 button = 4;
    public static final int BUTTON_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> button_;
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getButtonList() {
      return button_;
    }
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButtonCount() {
      return button_.size();
    }
    /**
     * <code>repeated int32 button = 4;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButton(int index) {
      return button_.get(index);
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 is_showpass = 6;
    public static final int IS_SHOWPASS_FIELD_NUMBER = 6;
    private int isShowpass_;
    /**
     * <code>optional int32 is_showpass = 6;</code>
     *
     * <pre>
     *要不要显示pass按钮 0不显示 1显示
     * </pre>
     */
    public boolean hasIsShowpass() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 is_showpass = 6;</code>
     *
     * <pre>
     *要不要显示pass按钮 0不显示 1显示
     * </pre>
     */
    public int getIsShowpass() {
      return isShowpass_;
    }

    // optional int64 max_table_jetton_score = 7;
    public static final int MAX_TABLE_JETTON_SCORE_FIELD_NUMBER = 7;
    private long maxTableJettonScore_;
    /**
     * <code>optional int64 max_table_jetton_score = 7;</code>
     *
     * <pre>
     *桌面最大下多少分
     * </pre>
     */
    public boolean hasMaxTableJettonScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 max_table_jetton_score = 7;</code>
     *
     * <pre>
     *桌面最大下多少分
     * </pre>
     */
    public long getMaxTableJettonScore() {
      return maxTableJettonScore_;
    }

    private void initFields() {
      opreateType_ = 0;
      minJettonScore_ = 0;
      maxJettonScore_ = 0;
      button_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      isShowpass_ = 0;
      maxTableJettonScore_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, maxJettonScore_);
      }
      for (int i = 0; i < button_.size(); i++) {
        output.writeInt32(4, button_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, displayTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, isShowpass_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, maxTableJettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxJettonScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < button_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(button_.get(i));
        }
        size += dataSize;
        size += 1 * getButtonList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, isShowpass_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, maxTableJettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.ButtonOperateJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.ButtonOperateJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ButtonOperateJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ButtonOperateJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.class, protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        isShowpass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxTableJettonScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ButtonOperateJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb build() {
        protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb result = new protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minJettonScore_ = minJettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxJettonScore_ = maxJettonScore_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          button_ = java.util.Collections.unmodifiableList(button_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.button_ = button_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isShowpass_ = isShowpass_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.maxTableJettonScore_ = maxTableJettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasMinJettonScore()) {
          setMinJettonScore(other.getMinJettonScore());
        }
        if (other.hasMaxJettonScore()) {
          setMaxJettonScore(other.getMaxJettonScore());
        }
        if (!other.button_.isEmpty()) {
          if (button_.isEmpty()) {
            button_ = other.button_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureButtonIsMutable();
            button_.addAll(other.button_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasIsShowpass()) {
          setIsShowpass(other.getIsShowpass());
        }
        if (other.hasMaxTableJettonScore()) {
          setMaxTableJettonScore(other.getMaxTableJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.ButtonOperateJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 min_jetton_score = 2;
      private int minJettonScore_ ;
      /**
       * <code>optional int32 min_jetton_score = 2;</code>
       *
       * <pre>
       *下注最低分
       * </pre>
       */
      public boolean hasMinJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 min_jetton_score = 2;</code>
       *
       * <pre>
       *下注最低分
       * </pre>
       */
      public int getMinJettonScore() {
        return minJettonScore_;
      }
      /**
       * <code>optional int32 min_jetton_score = 2;</code>
       *
       * <pre>
       *下注最低分
       * </pre>
       */
      public Builder setMinJettonScore(int value) {
        bitField0_ |= 0x00000002;
        minJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_jetton_score = 2;</code>
       *
       * <pre>
       *下注最低分
       * </pre>
       */
      public Builder clearMinJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_jetton_score = 3;
      private int maxJettonScore_ ;
      /**
       * <code>optional int32 max_jetton_score = 3;</code>
       *
       * <pre>
       *下注最高分
       * </pre>
       */
      public boolean hasMaxJettonScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 max_jetton_score = 3;</code>
       *
       * <pre>
       *下注最高分
       * </pre>
       */
      public int getMaxJettonScore() {
        return maxJettonScore_;
      }
      /**
       * <code>optional int32 max_jetton_score = 3;</code>
       *
       * <pre>
       *下注最高分
       * </pre>
       */
      public Builder setMaxJettonScore(int value) {
        bitField0_ |= 0x00000004;
        maxJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_jetton_score = 3;</code>
       *
       * <pre>
       *下注最高分
       * </pre>
       */
      public Builder clearMaxJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxJettonScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 button = 4;
      private java.util.List<java.lang.Integer> button_ = java.util.Collections.emptyList();
      private void ensureButtonIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          button_ = new java.util.ArrayList<java.lang.Integer>(button_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getButtonList() {
        return java.util.Collections.unmodifiableList(button_);
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButtonCount() {
        return button_.size();
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButton(int index) {
        return button_.get(index);
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder setButton(
          int index, int value) {
        ensureButtonIsMutable();
        button_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addButton(int value) {
        ensureButtonIsMutable();
        button_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addAllButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureButtonIsMutable();
        super.addAll(values, button_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 4;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder clearButton() {
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_showpass = 6;
      private int isShowpass_ ;
      /**
       * <code>optional int32 is_showpass = 6;</code>
       *
       * <pre>
       *要不要显示pass按钮 0不显示 1显示
       * </pre>
       */
      public boolean hasIsShowpass() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 is_showpass = 6;</code>
       *
       * <pre>
       *要不要显示pass按钮 0不显示 1显示
       * </pre>
       */
      public int getIsShowpass() {
        return isShowpass_;
      }
      /**
       * <code>optional int32 is_showpass = 6;</code>
       *
       * <pre>
       *要不要显示pass按钮 0不显示 1显示
       * </pre>
       */
      public Builder setIsShowpass(int value) {
        bitField0_ |= 0x00000020;
        isShowpass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_showpass = 6;</code>
       *
       * <pre>
       *要不要显示pass按钮 0不显示 1显示
       * </pre>
       */
      public Builder clearIsShowpass() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isShowpass_ = 0;
        onChanged();
        return this;
      }

      // optional int64 max_table_jetton_score = 7;
      private long maxTableJettonScore_ ;
      /**
       * <code>optional int64 max_table_jetton_score = 7;</code>
       *
       * <pre>
       *桌面最大下多少分
       * </pre>
       */
      public boolean hasMaxTableJettonScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 max_table_jetton_score = 7;</code>
       *
       * <pre>
       *桌面最大下多少分
       * </pre>
       */
      public long getMaxTableJettonScore() {
        return maxTableJettonScore_;
      }
      /**
       * <code>optional int64 max_table_jetton_score = 7;</code>
       *
       * <pre>
       *桌面最大下多少分
       * </pre>
       */
      public Builder setMaxTableJettonScore(long value) {
        bitField0_ |= 0x00000040;
        maxTableJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 max_table_jetton_score = 7;</code>
       *
       * <pre>
       *桌面最大下多少分
       * </pre>
       */
      public Builder clearMaxTableJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxTableJettonScore_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.ButtonOperateJdb)
    }

    static {
      defaultInstance = new ButtonOperateJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.ButtonOperateJdb)
  }

  public interface JettonResultJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_seat = 1;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    boolean hasJettonSeat();
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    int getJettonSeat();

    // optional int64 jetton_score = 2;
    /**
     * <code>optional int64 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int64 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    long getJettonScore();

    // optional int64 jetton_area = 3;
    /**
     * <code>optional int64 jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    boolean hasJettonArea();
    /**
     * <code>optional int64 jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    long getJettonArea();

    // optional int64 player_max_jetton = 4;
    /**
     * <code>optional int64 player_max_jetton = 4;</code>
     *
     * <pre>
     *最多可以下注
     * </pre>
     */
    boolean hasPlayerMaxJetton();
    /**
     * <code>optional int64 player_max_jetton = 4;</code>
     *
     * <pre>
     *最多可以下注
     * </pre>
     */
    long getPlayerMaxJetton();
  }
  /**
   * Protobuf type {@code jdb.JettonResultJdb}
   */
  public static final class JettonResultJdb extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultJdbOrBuilder {
    // Use JettonResultJdb.newBuilder() to construct.
    private JettonResultJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResultJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResultJdb defaultInstance;
    public static JettonResultJdb getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResultJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResultJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              jettonArea_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerMaxJetton_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_JettonResultJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_JettonResultJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.JettonResultJdb.class, protobuf.clazz.jdb.jdbRsp.JettonResultJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResultJdb> PARSER =
        new com.google.protobuf.AbstractParser<JettonResultJdb>() {
      public JettonResultJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResultJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResultJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_seat = 1;
    public static final int JETTON_SEAT_FIELD_NUMBER = 1;
    private int jettonSeat_;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public boolean hasJettonSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public int getJettonSeat() {
      return jettonSeat_;
    }

    // optional int64 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private long jettonScore_;
    /**
     * <code>optional int64 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public long getJettonScore() {
      return jettonScore_;
    }

    // optional int64 jetton_area = 3;
    public static final int JETTON_AREA_FIELD_NUMBER = 3;
    private long jettonArea_;
    /**
     * <code>optional int64 jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    public boolean hasJettonArea() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    public long getJettonArea() {
      return jettonArea_;
    }

    // optional int64 player_max_jetton = 4;
    public static final int PLAYER_MAX_JETTON_FIELD_NUMBER = 4;
    private long playerMaxJetton_;
    /**
     * <code>optional int64 player_max_jetton = 4;</code>
     *
     * <pre>
     *最多可以下注
     * </pre>
     */
    public boolean hasPlayerMaxJetton() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 player_max_jetton = 4;</code>
     *
     * <pre>
     *最多可以下注
     * </pre>
     */
    public long getPlayerMaxJetton() {
      return playerMaxJetton_;
    }

    private void initFields() {
      jettonSeat_ = 0;
      jettonScore_ = 0L;
      jettonArea_ = 0L;
      playerMaxJetton_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, jettonArea_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, playerMaxJetton_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, jettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, jettonArea_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, playerMaxJetton_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.JettonResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.JettonResultJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.JettonResultJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.JettonResultJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_JettonResultJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_JettonResultJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.JettonResultJdb.class, protobuf.clazz.jdb.jdbRsp.JettonResultJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.JettonResultJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonArea_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerMaxJetton_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_JettonResultJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.JettonResultJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.JettonResultJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.JettonResultJdb build() {
        protobuf.clazz.jdb.jdbRsp.JettonResultJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.JettonResultJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.JettonResultJdb result = new protobuf.clazz.jdb.jdbRsp.JettonResultJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonSeat_ = jettonSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jettonArea_ = jettonArea_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerMaxJetton_ = playerMaxJetton_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.JettonResultJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.JettonResultJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.JettonResultJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.JettonResultJdb.getDefaultInstance()) return this;
        if (other.hasJettonSeat()) {
          setJettonSeat(other.getJettonSeat());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasJettonArea()) {
          setJettonArea(other.getJettonArea());
        }
        if (other.hasPlayerMaxJetton()) {
          setPlayerMaxJetton(other.getPlayerMaxJetton());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.JettonResultJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.JettonResultJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_seat = 1;
      private int jettonSeat_ ;
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public boolean hasJettonSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public int getJettonSeat() {
        return jettonSeat_;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder setJettonSeat(int value) {
        bitField0_ |= 0x00000001;
        jettonSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder clearJettonSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int64 jetton_score = 2;
      private long jettonScore_ ;
      /**
       * <code>optional int64 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public long getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int64 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder setJettonScore(long value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 jetton_area = 3;
      private long jettonArea_ ;
      /**
       * <code>optional int64 jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public boolean hasJettonArea() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public long getJettonArea() {
        return jettonArea_;
      }
      /**
       * <code>optional int64 jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public Builder setJettonArea(long value) {
        bitField0_ |= 0x00000004;
        jettonArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public Builder clearJettonArea() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jettonArea_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 player_max_jetton = 4;
      private long playerMaxJetton_ ;
      /**
       * <code>optional int64 player_max_jetton = 4;</code>
       *
       * <pre>
       *最多可以下注
       * </pre>
       */
      public boolean hasPlayerMaxJetton() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 player_max_jetton = 4;</code>
       *
       * <pre>
       *最多可以下注
       * </pre>
       */
      public long getPlayerMaxJetton() {
        return playerMaxJetton_;
      }
      /**
       * <code>optional int64 player_max_jetton = 4;</code>
       *
       * <pre>
       *最多可以下注
       * </pre>
       */
      public Builder setPlayerMaxJetton(long value) {
        bitField0_ |= 0x00000008;
        playerMaxJetton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 player_max_jetton = 4;</code>
       *
       * <pre>
       *最多可以下注
       * </pre>
       */
      public Builder clearPlayerMaxJetton() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerMaxJetton_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.JettonResultJdb)
    }

    static {
      defaultInstance = new JettonResultJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.JettonResultJdb)
  }

  public interface PopupMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 displaytime = 1;
    /**
     * <code>optional int32 displaytime = 1;</code>
     *
     * <pre>
     * 显示时间 -1没有时间
     * </pre>
     */
    boolean hasDisplaytime();
    /**
     * <code>optional int32 displaytime = 1;</code>
     *
     * <pre>
     * 显示时间 -1没有时间
     * </pre>
     */
    int getDisplaytime();

    // optional int32 operate_button = 2;
    /**
     * <code>optional int32 operate_button = 2;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    boolean hasOperateButton();
    /**
     * <code>optional int32 operate_button = 2;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    int getOperateButton();

    // optional int32 operate_type = 3;
    /**
     * <code>optional int32 operate_type = 3;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    boolean hasOperateType();
    /**
     * <code>optional int32 operate_type = 3;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    int getOperateType();

    // optional string des = 4;
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    boolean hasDes();
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    java.lang.String getDes();
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getDesBytes();
  }
  /**
   * Protobuf type {@code jdb.PopupMessage}
   */
  public static final class PopupMessage extends
      com.google.protobuf.GeneratedMessage
      implements PopupMessageOrBuilder {
    // Use PopupMessage.newBuilder() to construct.
    private PopupMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PopupMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PopupMessage defaultInstance;
    public static PopupMessage getDefaultInstance() {
      return defaultInstance;
    }

    public PopupMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PopupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              displaytime_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              operateButton_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              operateType_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              des_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PopupMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PopupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.PopupMessage.class, protobuf.clazz.jdb.jdbRsp.PopupMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<PopupMessage> PARSER =
        new com.google.protobuf.AbstractParser<PopupMessage>() {
      public PopupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PopupMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PopupMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 displaytime = 1;
    public static final int DISPLAYTIME_FIELD_NUMBER = 1;
    private int displaytime_;
    /**
     * <code>optional int32 displaytime = 1;</code>
     *
     * <pre>
     * 显示时间 -1没有时间
     * </pre>
     */
    public boolean hasDisplaytime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 displaytime = 1;</code>
     *
     * <pre>
     * 显示时间 -1没有时间
     * </pre>
     */
    public int getDisplaytime() {
      return displaytime_;
    }

    // optional int32 operate_button = 2;
    public static final int OPERATE_BUTTON_FIELD_NUMBER = 2;
    private int operateButton_;
    /**
     * <code>optional int32 operate_button = 2;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public boolean hasOperateButton() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 operate_button = 2;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public int getOperateButton() {
      return operateButton_;
    }

    // optional int32 operate_type = 3;
    public static final int OPERATE_TYPE_FIELD_NUMBER = 3;
    private int operateType_;
    /**
     * <code>optional int32 operate_type = 3;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    public boolean hasOperateType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 operate_type = 3;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    public int getOperateType() {
      return operateType_;
    }

    // optional string des = 4;
    public static final int DES_FIELD_NUMBER = 4;
    private java.lang.Object des_;
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    public boolean hasDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    public java.lang.String getDes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          des_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string des = 4;</code>
     *
     * <pre>
     *描述内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDesBytes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        des_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      displaytime_ = 0;
      operateButton_ = 0;
      operateType_ = 0;
      des_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, displaytime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, operateButton_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, operateType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDesBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, displaytime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, operateButton_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, operateType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDesBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.PopupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.PopupMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.PopupMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.PopupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PopupMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PopupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.PopupMessage.class, protobuf.clazz.jdb.jdbRsp.PopupMessage.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.PopupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        displaytime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        operateButton_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        des_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_PopupMessage_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.PopupMessage getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.PopupMessage.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.PopupMessage build() {
        protobuf.clazz.jdb.jdbRsp.PopupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.PopupMessage buildPartial() {
        protobuf.clazz.jdb.jdbRsp.PopupMessage result = new protobuf.clazz.jdb.jdbRsp.PopupMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displaytime_ = displaytime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operateButton_ = operateButton_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operateType_ = operateType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.des_ = des_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.PopupMessage) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.PopupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.PopupMessage other) {
        if (other == protobuf.clazz.jdb.jdbRsp.PopupMessage.getDefaultInstance()) return this;
        if (other.hasDisplaytime()) {
          setDisplaytime(other.getDisplaytime());
        }
        if (other.hasOperateButton()) {
          setOperateButton(other.getOperateButton());
        }
        if (other.hasOperateType()) {
          setOperateType(other.getOperateType());
        }
        if (other.hasDes()) {
          bitField0_ |= 0x00000008;
          des_ = other.des_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.PopupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.PopupMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 displaytime = 1;
      private int displaytime_ ;
      /**
       * <code>optional int32 displaytime = 1;</code>
       *
       * <pre>
       * 显示时间 -1没有时间
       * </pre>
       */
      public boolean hasDisplaytime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       *
       * <pre>
       * 显示时间 -1没有时间
       * </pre>
       */
      public int getDisplaytime() {
        return displaytime_;
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       *
       * <pre>
       * 显示时间 -1没有时间
       * </pre>
       */
      public Builder setDisplaytime(int value) {
        bitField0_ |= 0x00000001;
        displaytime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 displaytime = 1;</code>
       *
       * <pre>
       * 显示时间 -1没有时间
       * </pre>
       */
      public Builder clearDisplaytime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        displaytime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_button = 2;
      private int operateButton_ ;
      /**
       * <code>optional int32 operate_button = 2;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public boolean hasOperateButton() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 operate_button = 2;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public int getOperateButton() {
        return operateButton_;
      }
      /**
       * <code>optional int32 operate_button = 2;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder setOperateButton(int value) {
        bitField0_ |= 0x00000002;
        operateButton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_button = 2;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder clearOperateButton() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operateButton_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_type = 3;
      private int operateType_ ;
      /**
       * <code>optional int32 operate_type = 3;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public boolean hasOperateType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 operate_type = 3;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public int getOperateType() {
        return operateType_;
      }
      /**
       * <code>optional int32 operate_type = 3;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public Builder setOperateType(int value) {
        bitField0_ |= 0x00000004;
        operateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_type = 3;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public Builder clearOperateType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operateType_ = 0;
        onChanged();
        return this;
      }

      // optional string des = 4;
      private java.lang.Object des_ = "";
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public boolean hasDes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public java.lang.String getDes() {
        java.lang.Object ref = des_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          des_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDesBytes() {
        java.lang.Object ref = des_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          des_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public Builder setDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        des_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public Builder clearDes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        des_ = getDefaultInstance().getDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 4;</code>
       *
       * <pre>
       *描述内容
       * </pre>
       */
      public Builder setDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        des_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.PopupMessage)
    }

    static {
      defaultInstance = new PopupMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.PopupMessage)
  }

  public interface GameStartJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .jdb.RoomInfoJdb room_info = 1;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder();

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code jdb.GameStartJdb}
   */
  public static final class GameStartJdb extends
      com.google.protobuf.GeneratedMessage
      implements GameStartJdbOrBuilder {
    // Use GameStartJdb.newBuilder() to construct.
    private GameStartJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartJdb defaultInstance;
    public static GameStartJdb getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_GameStartJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_GameStartJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.GameStartJdb.class, protobuf.clazz.jdb.jdbRsp.GameStartJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartJdb> PARSER =
        new com.google.protobuf.AbstractParser<GameStartJdb>() {
      public GameStartJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .jdb.RoomInfoJdb room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.GameStartJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.GameStartJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.GameStartJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.GameStartJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_GameStartJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_GameStartJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.GameStartJdb.class, protobuf.clazz.jdb.jdbRsp.GameStartJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.GameStartJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_GameStartJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.GameStartJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.GameStartJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.GameStartJdb build() {
        protobuf.clazz.jdb.jdbRsp.GameStartJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.GameStartJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.GameStartJdb result = new protobuf.clazz.jdb.jdbRsp.GameStartJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.GameStartJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.GameStartJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.GameStartJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.GameStartJdb.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.GameStartJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.GameStartJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .jdb.RoomInfoJdb room_info = 1;
      private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 3;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:jdb.GameStartJdb)
    }

    static {
      defaultInstance = new GameStartJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.GameStartJdb)
  }

  public interface SelectdBankerJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code jdb.SelectdBankerJdb}
   */
  public static final class SelectdBankerJdb extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerJdbOrBuilder {
    // Use SelectdBankerJdb.newBuilder() to construct.
    private SelectdBankerJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerJdb defaultInstance;
    public static SelectdBankerJdb getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.class, protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerJdb> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerJdb>() {
      public SelectdBankerJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.SelectdBankerJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.SelectdBankerJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.class, protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb build() {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb result = new protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.SelectdBankerJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.SelectdBankerJdb)
    }

    static {
      defaultInstance = new SelectdBankerJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.SelectdBankerJdb)
  }

  public interface SeatFristOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card = 1;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    int getCard();

    // optional int32 first_seat_idex = 2;
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *椅子号
     * </pre>
     */
    boolean hasFirstSeatIdex();
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *椅子号
     * </pre>
     */
    int getFirstSeatIdex();
  }
  /**
   * Protobuf type {@code jdb.SeatFrist}
   */
  public static final class SeatFrist extends
      com.google.protobuf.GeneratedMessage
      implements SeatFristOrBuilder {
    // Use SeatFrist.newBuilder() to construct.
    private SeatFrist(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SeatFrist(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SeatFrist defaultInstance;
    public static SeatFrist getDefaultInstance() {
      return defaultInstance;
    }

    public SeatFrist getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SeatFrist(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              card_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              firstSeatIdex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SeatFrist_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SeatFrist_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.SeatFrist.class, protobuf.clazz.jdb.jdbRsp.SeatFrist.Builder.class);
    }

    public static com.google.protobuf.Parser<SeatFrist> PARSER =
        new com.google.protobuf.AbstractParser<SeatFrist>() {
      public SeatFrist parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SeatFrist(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SeatFrist> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private int card_;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 first_seat_idex = 2;
    public static final int FIRST_SEAT_IDEX_FIELD_NUMBER = 2;
    private int firstSeatIdex_;
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *椅子号
     * </pre>
     */
    public boolean hasFirstSeatIdex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *椅子号
     * </pre>
     */
    public int getFirstSeatIdex() {
      return firstSeatIdex_;
    }

    private void initFields() {
      card_ = 0;
      firstSeatIdex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, firstSeatIdex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, firstSeatIdex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SeatFrist parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.SeatFrist prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.SeatFrist}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.SeatFristOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SeatFrist_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SeatFrist_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.SeatFrist.class, protobuf.clazz.jdb.jdbRsp.SeatFrist.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.SeatFrist.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        firstSeatIdex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SeatFrist_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.SeatFrist getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.SeatFrist.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.SeatFrist build() {
        protobuf.clazz.jdb.jdbRsp.SeatFrist result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.SeatFrist buildPartial() {
        protobuf.clazz.jdb.jdbRsp.SeatFrist result = new protobuf.clazz.jdb.jdbRsp.SeatFrist(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firstSeatIdex_ = firstSeatIdex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.SeatFrist) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.SeatFrist)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.SeatFrist other) {
        if (other == protobuf.clazz.jdb.jdbRsp.SeatFrist.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasFirstSeatIdex()) {
          setFirstSeatIdex(other.getFirstSeatIdex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.SeatFrist parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.SeatFrist) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card = 1;
      private int card_ ;
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000001;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 first_seat_idex = 2;
      private int firstSeatIdex_ ;
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *椅子号
       * </pre>
       */
      public boolean hasFirstSeatIdex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *椅子号
       * </pre>
       */
      public int getFirstSeatIdex() {
        return firstSeatIdex_;
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *椅子号
       * </pre>
       */
      public Builder setFirstSeatIdex(int value) {
        bitField0_ |= 0x00000002;
        firstSeatIdex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *椅子号
       * </pre>
       */
      public Builder clearFirstSeatIdex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firstSeatIdex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.SeatFrist)
    }

    static {
      defaultInstance = new SeatFrist(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.SeatFrist)
  }

  public interface SelectdBankerResultJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int64 hou_shou_score = 2;
    /**
     * <code>optional int64 hou_shou_score = 2;</code>
     *
     * <pre>
     *庄家后手分
     * </pre>
     */
    boolean hasHouShouScore();
    /**
     * <code>optional int64 hou_shou_score = 2;</code>
     *
     * <pre>
     *庄家后手分
     * </pre>
     */
    long getHouShouScore();

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code jdb.SelectdBankerResultJdb}
   */
  public static final class SelectdBankerResultJdb extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerResultJdbOrBuilder {
    // Use SelectdBankerResultJdb.newBuilder() to construct.
    private SelectdBankerResultJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerResultJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerResultJdb defaultInstance;
    public static SelectdBankerResultJdb getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerResultJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerResultJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              houShouScore_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerResultJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerResultJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.class, protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerResultJdb> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerResultJdb>() {
      public SelectdBankerResultJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerResultJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerResultJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int64 hou_shou_score = 2;
    public static final int HOU_SHOU_SCORE_FIELD_NUMBER = 2;
    private long houShouScore_;
    /**
     * <code>optional int64 hou_shou_score = 2;</code>
     *
     * <pre>
     *庄家后手分
     * </pre>
     */
    public boolean hasHouShouScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 hou_shou_score = 2;</code>
     *
     * <pre>
     *庄家后手分
     * </pre>
     */
    public long getHouShouScore() {
      return houShouScore_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      bankerSeat_ = 0;
      houShouScore_ = 0L;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, houShouScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, houShouScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.SelectdBankerResultJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerResultJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerResultJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.class, protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        houShouScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SelectdBankerResultJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb build() {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb result = new protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.houShouScore_ = houShouScore_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasHouShouScore()) {
          setHouShouScore(other.getHouShouScore());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.SelectdBankerResultJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int64 hou_shou_score = 2;
      private long houShouScore_ ;
      /**
       * <code>optional int64 hou_shou_score = 2;</code>
       *
       * <pre>
       *庄家后手分
       * </pre>
       */
      public boolean hasHouShouScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 hou_shou_score = 2;</code>
       *
       * <pre>
       *庄家后手分
       * </pre>
       */
      public long getHouShouScore() {
        return houShouScore_;
      }
      /**
       * <code>optional int64 hou_shou_score = 2;</code>
       *
       * <pre>
       *庄家后手分
       * </pre>
       */
      public Builder setHouShouScore(long value) {
        bitField0_ |= 0x00000002;
        houShouScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 hou_shou_score = 2;</code>
       *
       * <pre>
       *庄家后手分
       * </pre>
       */
      public Builder clearHouShouScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        houShouScore_ = 0L;
        onChanged();
        return this;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 3;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:jdb.SelectdBankerResultJdb)
    }

    static {
      defaultInstance = new SelectdBankerResultJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.SelectdBankerResultJdb)
  }

  public interface SendCardJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    int getOpreateType();

    // repeated .Int32ArrayResponse send_card = 2;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code jdb.SendCardJdb}
   */
  public static final class SendCardJdb extends
      com.google.protobuf.GeneratedMessage
      implements SendCardJdbOrBuilder {
    // Use SendCardJdb.newBuilder() to construct.
    private SendCardJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardJdb defaultInstance;
    public static SendCardJdb getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SendCardJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SendCardJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.SendCardJdb.class, protobuf.clazz.jdb.jdbRsp.SendCardJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardJdb> PARSER =
        new com.google.protobuf.AbstractParser<SendCardJdb>() {
      public SendCardJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated .Int32ArrayResponse send_card = 2;
    public static final int SEND_CARD_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      opreateType_ = 0;
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.SendCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.SendCardJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.SendCardJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.SendCardJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SendCardJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SendCardJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.SendCardJdb.class, protobuf.clazz.jdb.jdbRsp.SendCardJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.SendCardJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_SendCardJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.SendCardJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.SendCardJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.SendCardJdb build() {
        protobuf.clazz.jdb.jdbRsp.SendCardJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.SendCardJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.SendCardJdb result = new protobuf.clazz.jdb.jdbRsp.SendCardJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.SendCardJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.SendCardJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.SendCardJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.SendCardJdb.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.SendCardJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.SendCardJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse send_card = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.SendCardJdb)
    }

    static {
      defaultInstance = new SendCardJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.SendCardJdb)
  }

  public interface OpenCardJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 open_card = 1;
    /**
     * <code>optional int32 open_card = 1;</code>
     */
    boolean hasOpenCard();
    /**
     * <code>optional int32 open_card = 1;</code>
     */
    int getOpenCard();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);

    // optional int32 jdb_value = 4;
    /**
     * <code>optional int32 jdb_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasJdbValue();
    /**
     * <code>optional int32 jdb_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getJdbValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code jdb.OpenCardJdb}
   */
  public static final class OpenCardJdb extends
      com.google.protobuf.GeneratedMessage
      implements OpenCardJdbOrBuilder {
    // Use OpenCardJdb.newBuilder() to construct.
    private OpenCardJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCardJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCardJdb defaultInstance;
    public static OpenCardJdb getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCardJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCardJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              openCard_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              jdbValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_OpenCardJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_OpenCardJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.OpenCardJdb.class, protobuf.clazz.jdb.jdbRsp.OpenCardJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCardJdb> PARSER =
        new com.google.protobuf.AbstractParser<OpenCardJdb>() {
      public OpenCardJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCardJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCardJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 open_card = 1;
    public static final int OPEN_CARD_FIELD_NUMBER = 1;
    private int openCard_;
    /**
     * <code>optional int32 open_card = 1;</code>
     */
    public boolean hasOpenCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 open_card = 1;</code>
     */
    public int getOpenCard() {
      return openCard_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 jdb_value = 4;
    public static final int JDB_VALUE_FIELD_NUMBER = 4;
    private int jdbValue_;
    /**
     * <code>optional int32 jdb_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasJdbValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jdb_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getJdbValue() {
      return jdbValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    private void initFields() {
      openCard_ = 0;
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      jdbValue_ = 0;
      times_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, jdbValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, jdbValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.OpenCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.OpenCardJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.OpenCardJdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.OpenCardJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_OpenCardJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_OpenCardJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.OpenCardJdb.class, protobuf.clazz.jdb.jdbRsp.OpenCardJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.OpenCardJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        openCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        jdbValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_OpenCardJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.OpenCardJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.OpenCardJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.OpenCardJdb build() {
        protobuf.clazz.jdb.jdbRsp.OpenCardJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.OpenCardJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.OpenCardJdb result = new protobuf.clazz.jdb.jdbRsp.OpenCardJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jdbValue_ = jdbValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.OpenCardJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.OpenCardJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.OpenCardJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.OpenCardJdb.getDefaultInstance()) return this;
        if (other.hasOpenCard()) {
          setOpenCard(other.getOpenCard());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasJdbValue()) {
          setJdbValue(other.getJdbValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.OpenCardJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.OpenCardJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 open_card = 1;
      private int openCard_ ;
      /**
       * <code>optional int32 open_card = 1;</code>
       */
      public boolean hasOpenCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 open_card = 1;</code>
       */
      public int getOpenCard() {
        return openCard_;
      }
      /**
       * <code>optional int32 open_card = 1;</code>
       */
      public Builder setOpenCard(int value) {
        bitField0_ |= 0x00000001;
        openCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 open_card = 1;</code>
       */
      public Builder clearOpenCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        openCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 jdb_value = 4;
      private int jdbValue_ ;
      /**
       * <code>optional int32 jdb_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasJdbValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 jdb_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getJdbValue() {
        return jdbValue_;
      }
      /**
       * <code>optional int32 jdb_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setJdbValue(int value) {
        bitField0_ |= 0x00000008;
        jdbValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jdb_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearJdbValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        jdbValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.OpenCardJdb)
    }

    static {
      defaultInstance = new OpenCardJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.OpenCardJdb)
  }

  public interface LiangCardJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCards(int index);

    // optional int32 jdb_value = 3;
    /**
     * <code>optional int32 jdb_value = 3;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasJdbValue();
    /**
     * <code>optional int32 jdb_value = 3;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getJdbValue();

    // optional int32 times = 4;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code jdb.LiangCardJdb}
   *
   * <pre>
   *亮牌结算
   * </pre>
   */
  public static final class LiangCardJdb extends
      com.google.protobuf.GeneratedMessage
      implements LiangCardJdbOrBuilder {
    // Use LiangCardJdb.newBuilder() to construct.
    private LiangCardJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiangCardJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiangCardJdb defaultInstance;
    public static LiangCardJdb getDefaultInstance() {
      return defaultInstance;
    }

    public LiangCardJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiangCardJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              jdbValue_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_LiangCardJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_LiangCardJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.LiangCardJdb.class, protobuf.clazz.jdb.jdbRsp.LiangCardJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<LiangCardJdb> PARSER =
        new com.google.protobuf.AbstractParser<LiangCardJdb>() {
      public LiangCardJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiangCardJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiangCardJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 jdb_value = 3;
    public static final int JDB_VALUE_FIELD_NUMBER = 3;
    private int jdbValue_;
    /**
     * <code>optional int32 jdb_value = 3;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasJdbValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jdb_value = 3;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getJdbValue() {
      return jdbValue_;
    }

    // optional int32 times = 4;
    public static final int TIMES_FIELD_NUMBER = 4;
    private int times_;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    private void initFields() {
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      jdbValue_ = 0;
      times_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, jdbValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, times_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, jdbValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, times_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.LiangCardJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.LiangCardJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.LiangCardJdb}
     *
     * <pre>
     *亮牌结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.LiangCardJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_LiangCardJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_LiangCardJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.LiangCardJdb.class, protobuf.clazz.jdb.jdbRsp.LiangCardJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.LiangCardJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        jdbValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_LiangCardJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.LiangCardJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.LiangCardJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.LiangCardJdb build() {
        protobuf.clazz.jdb.jdbRsp.LiangCardJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.LiangCardJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.LiangCardJdb result = new protobuf.clazz.jdb.jdbRsp.LiangCardJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jdbValue_ = jdbValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.LiangCardJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.LiangCardJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.LiangCardJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.LiangCardJdb.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasJdbValue()) {
          setJdbValue(other.getJdbValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.LiangCardJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.LiangCardJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 jdb_value = 3;
      private int jdbValue_ ;
      /**
       * <code>optional int32 jdb_value = 3;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasJdbValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 jdb_value = 3;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getJdbValue() {
        return jdbValue_;
      }
      /**
       * <code>optional int32 jdb_value = 3;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setJdbValue(int value) {
        bitField0_ |= 0x00000004;
        jdbValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jdb_value = 3;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearJdbValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jdbValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 4;
      private int times_ ;
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000008;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.LiangCardJdb)
    }

    static {
      defaultInstance = new LiangCardJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.LiangCardJdb)
  }

  public interface RoomPlayInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .jdb.RoomInfoJdb room_info = 2;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo();
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder();

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> 
        getPlayersList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index);
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    int getPlayersCount();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code jdb.RoomPlayInfo}
   *
   * <pre>
   *旁观消息
   * </pre>
   */
  public static final class RoomPlayInfo extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayInfoOrBuilder {
    // Use RoomPlayInfo.newBuilder() to construct.
    private RoomPlayInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayInfo defaultInstance;
    public static RoomPlayInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.class, protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayInfo> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayInfo>() {
      public RoomPlayInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .jdb.RoomInfoJdb room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_;
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
     *
     * <pre>
     *房间消息
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .jdb.RoomPlayerResponseJdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_;
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
     *
     * <pre>
     *用户消息
     * </pre>
     */
    public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.RoomPlayInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.RoomPlayInfo}
     *
     * <pre>
     *旁观消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.RoomPlayInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.class, protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_RoomPlayInfo_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayInfo getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayInfo build() {
        protobuf.clazz.jdb.jdbRsp.RoomPlayInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.RoomPlayInfo buildPartial() {
        protobuf.clazz.jdb.jdbRsp.RoomPlayInfo result = new protobuf.clazz.jdb.jdbRsp.RoomPlayInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.RoomPlayInfo) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.RoomPlayInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.RoomPlayInfo other) {
        if (other == protobuf.clazz.jdb.jdbRsp.RoomPlayInfo.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.RoomPlayInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.RoomPlayInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .jdb.RoomInfoJdb room_info = 2;
      private protobuf.clazz.jdb.jdbRsp.RoomInfoJdb roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public Builder setRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public Builder setRoomInfo(
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public Builder mergeRoomInfo(protobuf.clazz.jdb.jdbRsp.RoomInfoJdb value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .jdb.RoomInfoJdb room_info = 2;</code>
       *
       * <pre>
       *房间消息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomInfoJdb, protobuf.clazz.jdb.jdbRsp.RoomInfoJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomInfoJdbOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .jdb.RoomPlayerResponseJdb players = 3;
      private java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder addPlayers(protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder addPlayers(
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.getDefaultInstance());
      }
      /**
       * <code>repeated .jdb.RoomPlayerResponseJdb players = 3;</code>
       *
       * <pre>
       *用户消息
       * </pre>
       */
      public java.util.List<protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdb.Builder, protobuf.clazz.jdb.jdbRsp.RoomPlayerResponseJdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:jdb.RoomPlayInfo)
    }

    static {
      defaultInstance = new RoomPlayInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.RoomPlayInfo)
  }

  public interface ReturnDataJdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opt_type = 1;
    /**
     * <code>optional int32 opt_type = 1;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    boolean hasOptType();
    /**
     * <code>optional int32 opt_type = 1;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    int getOptType();

    // optional bool is_success = 2;
    /**
     * <code>optional bool is_success = 2;</code>
     *
     * <pre>
     *是否成功 true 成功，false不成功
     * </pre>
     */
    boolean hasIsSuccess();
    /**
     * <code>optional bool is_success = 2;</code>
     *
     * <pre>
     *是否成功 true 成功，false不成功
     * </pre>
     */
    boolean getIsSuccess();

    // optional string des = 3;
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    boolean hasDes();
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    java.lang.String getDes();
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDesBytes();
  }
  /**
   * Protobuf type {@code jdb.ReturnDataJdb}
   *
   * <pre>
   *返回数据
   * </pre>
   */
  public static final class ReturnDataJdb extends
      com.google.protobuf.GeneratedMessage
      implements ReturnDataJdbOrBuilder {
    // Use ReturnDataJdb.newBuilder() to construct.
    private ReturnDataJdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReturnDataJdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReturnDataJdb defaultInstance;
    public static ReturnDataJdb getDefaultInstance() {
      return defaultInstance;
    }

    public ReturnDataJdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReturnDataJdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              optType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isSuccess_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              des_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ReturnDataJdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ReturnDataJdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.class, protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.Builder.class);
    }

    public static com.google.protobuf.Parser<ReturnDataJdb> PARSER =
        new com.google.protobuf.AbstractParser<ReturnDataJdb>() {
      public ReturnDataJdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReturnDataJdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReturnDataJdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opt_type = 1;
    public static final int OPT_TYPE_FIELD_NUMBER = 1;
    private int optType_;
    /**
     * <code>optional int32 opt_type = 1;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    public boolean hasOptType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opt_type = 1;</code>
     *
     * <pre>
     *操作类型
     * </pre>
     */
    public int getOptType() {
      return optType_;
    }

    // optional bool is_success = 2;
    public static final int IS_SUCCESS_FIELD_NUMBER = 2;
    private boolean isSuccess_;
    /**
     * <code>optional bool is_success = 2;</code>
     *
     * <pre>
     *是否成功 true 成功，false不成功
     * </pre>
     */
    public boolean hasIsSuccess() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_success = 2;</code>
     *
     * <pre>
     *是否成功 true 成功，false不成功
     * </pre>
     */
    public boolean getIsSuccess() {
      return isSuccess_;
    }

    // optional string des = 3;
    public static final int DES_FIELD_NUMBER = 3;
    private java.lang.Object des_;
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    public boolean hasDes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    public java.lang.String getDes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          des_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string des = 3;</code>
     *
     * <pre>
     *文字描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDesBytes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        des_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      optType_ = 0;
      isSuccess_ = false;
      des_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, optType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isSuccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDesBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, optType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isSuccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDesBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.ReturnDataJdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.ReturnDataJdb}
     *
     * <pre>
     *返回数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.ReturnDataJdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ReturnDataJdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ReturnDataJdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.class, protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        optType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSuccess_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        des_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_ReturnDataJdb_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.ReturnDataJdb getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.ReturnDataJdb build() {
        protobuf.clazz.jdb.jdbRsp.ReturnDataJdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.ReturnDataJdb buildPartial() {
        protobuf.clazz.jdb.jdbRsp.ReturnDataJdb result = new protobuf.clazz.jdb.jdbRsp.ReturnDataJdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.optType_ = optType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSuccess_ = isSuccess_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.des_ = des_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.ReturnDataJdb) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.ReturnDataJdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.ReturnDataJdb other) {
        if (other == protobuf.clazz.jdb.jdbRsp.ReturnDataJdb.getDefaultInstance()) return this;
        if (other.hasOptType()) {
          setOptType(other.getOptType());
        }
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        if (other.hasDes()) {
          bitField0_ |= 0x00000004;
          des_ = other.des_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.ReturnDataJdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.ReturnDataJdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opt_type = 1;
      private int optType_ ;
      /**
       * <code>optional int32 opt_type = 1;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public boolean hasOptType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opt_type = 1;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public int getOptType() {
        return optType_;
      }
      /**
       * <code>optional int32 opt_type = 1;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public Builder setOptType(int value) {
        bitField0_ |= 0x00000001;
        optType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opt_type = 1;</code>
       *
       * <pre>
       *操作类型
       * </pre>
       */
      public Builder clearOptType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        optType_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_success = 2;
      private boolean isSuccess_ ;
      /**
       * <code>optional bool is_success = 2;</code>
       *
       * <pre>
       *是否成功 true 成功，false不成功
       * </pre>
       */
      public boolean hasIsSuccess() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_success = 2;</code>
       *
       * <pre>
       *是否成功 true 成功，false不成功
       * </pre>
       */
      public boolean getIsSuccess() {
        return isSuccess_;
      }
      /**
       * <code>optional bool is_success = 2;</code>
       *
       * <pre>
       *是否成功 true 成功，false不成功
       * </pre>
       */
      public Builder setIsSuccess(boolean value) {
        bitField0_ |= 0x00000002;
        isSuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_success = 2;</code>
       *
       * <pre>
       *是否成功 true 成功，false不成功
       * </pre>
       */
      public Builder clearIsSuccess() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSuccess_ = false;
        onChanged();
        return this;
      }

      // optional string des = 3;
      private java.lang.Object des_ = "";
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public boolean hasDes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public java.lang.String getDes() {
        java.lang.Object ref = des_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          des_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDesBytes() {
        java.lang.Object ref = des_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          des_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public Builder setDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        des_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public Builder clearDes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        des_ = getDefaultInstance().getDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string des = 3;</code>
       *
       * <pre>
       *文字描述
       * </pre>
       */
      public Builder setDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        des_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.ReturnDataJdb)
    }

    static {
      defaultInstance = new ReturnDataJdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.ReturnDataJdb)
  }

  public interface Opreate_Jdb_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
     * </pre>
     */
    int getOpreateType();

    // optional int32 sub_btn = 2;
    /**
     * <code>optional int32 sub_btn = 2;</code>
     *
     * <pre>
     *按钮下标
     * </pre>
     */
    boolean hasSubBtn();
    /**
     * <code>optional int32 sub_btn = 2;</code>
     *
     * <pre>
     *按钮下标
     * </pre>
     */
    int getSubBtn();

    // optional int32 add_jetton_area = 3;
    /**
     * <code>optional int32 add_jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    boolean hasAddJettonArea();
    /**
     * <code>optional int32 add_jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    int getAddJettonArea();

    // optional bool is_creator_operate = 4;
    /**
     * <code>optional bool is_creator_operate = 4;</code>
     *
     * <pre>
     *true:坐下， false忽略
     * </pre>
     */
    boolean hasIsCreatorOperate();
    /**
     * <code>optional bool is_creator_operate = 4;</code>
     *
     * <pre>
     *true:坐下， false忽略
     * </pre>
     */
    boolean getIsCreatorOperate();

    // optional int64 apply_account_id = 5;
    /**
     * <code>optional int64 apply_account_id = 5;</code>
     *
     * <pre>
     *申请帐号ID
     * </pre>
     */
    boolean hasApplyAccountId();
    /**
     * <code>optional int64 apply_account_id = 5;</code>
     *
     * <pre>
     *申请帐号ID
     * </pre>
     */
    long getApplyAccountId();

    // optional int32 seat_index = 6;
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *选择坐下的位置
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *选择坐下的位置
     * </pre>
     */
    int getSeatIndex();

    // optional int64 momey = 7;
    /**
     * <code>optional int64 momey = 7;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    boolean hasMomey();
    /**
     * <code>optional int64 momey = 7;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    long getMomey();

    // optional int32 jetton_score = 8;
    /**
     * <code>optional int32 jetton_score = 8;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 8;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    int getJettonScore();

    // optional int32 operate_button = 9;
    /**
     * <code>optional int32 operate_button = 9;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    boolean hasOperateButton();
    /**
     * <code>optional int32 operate_button = 9;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    int getOperateButton();

    // optional int32 apply_round = 10;
    /**
     * <code>optional int32 apply_round = 10;</code>
     *
     * <pre>
     *请求局数
     * </pre>
     */
    boolean hasApplyRound();
    /**
     * <code>optional int32 apply_round = 10;</code>
     *
     * <pre>
     *请求局数
     * </pre>
     */
    int getApplyRound();
  }
  /**
   * Protobuf type {@code jdb.Opreate_Jdb_Request}
   */
  public static final class Opreate_Jdb_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Jdb_RequestOrBuilder {
    // Use Opreate_Jdb_Request.newBuilder() to construct.
    private Opreate_Jdb_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Jdb_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Jdb_Request defaultInstance;
    public static Opreate_Jdb_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Jdb_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Jdb_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subBtn_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              addJettonArea_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isCreatorOperate_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              applyAccountId_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              seatIndex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              momey_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              jettonScore_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              operateButton_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              applyRound_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_Opreate_Jdb_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_Opreate_Jdb_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.class, protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Jdb_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Jdb_Request>() {
      public Opreate_Jdb_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Jdb_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Jdb_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 sub_btn = 2;
    public static final int SUB_BTN_FIELD_NUMBER = 2;
    private int subBtn_;
    /**
     * <code>optional int32 sub_btn = 2;</code>
     *
     * <pre>
     *按钮下标
     * </pre>
     */
    public boolean hasSubBtn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sub_btn = 2;</code>
     *
     * <pre>
     *按钮下标
     * </pre>
     */
    public int getSubBtn() {
      return subBtn_;
    }

    // optional int32 add_jetton_area = 3;
    public static final int ADD_JETTON_AREA_FIELD_NUMBER = 3;
    private int addJettonArea_;
    /**
     * <code>optional int32 add_jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    public boolean hasAddJettonArea() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 add_jetton_area = 3;</code>
     *
     * <pre>
     *下注区域
     * </pre>
     */
    public int getAddJettonArea() {
      return addJettonArea_;
    }

    // optional bool is_creator_operate = 4;
    public static final int IS_CREATOR_OPERATE_FIELD_NUMBER = 4;
    private boolean isCreatorOperate_;
    /**
     * <code>optional bool is_creator_operate = 4;</code>
     *
     * <pre>
     *true:坐下， false忽略
     * </pre>
     */
    public boolean hasIsCreatorOperate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool is_creator_operate = 4;</code>
     *
     * <pre>
     *true:坐下， false忽略
     * </pre>
     */
    public boolean getIsCreatorOperate() {
      return isCreatorOperate_;
    }

    // optional int64 apply_account_id = 5;
    public static final int APPLY_ACCOUNT_ID_FIELD_NUMBER = 5;
    private long applyAccountId_;
    /**
     * <code>optional int64 apply_account_id = 5;</code>
     *
     * <pre>
     *申请帐号ID
     * </pre>
     */
    public boolean hasApplyAccountId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 apply_account_id = 5;</code>
     *
     * <pre>
     *申请帐号ID
     * </pre>
     */
    public long getApplyAccountId() {
      return applyAccountId_;
    }

    // optional int32 seat_index = 6;
    public static final int SEAT_INDEX_FIELD_NUMBER = 6;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *选择坐下的位置
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *选择坐下的位置
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int64 momey = 7;
    public static final int MOMEY_FIELD_NUMBER = 7;
    private long momey_;
    /**
     * <code>optional int64 momey = 7;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    public boolean hasMomey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 momey = 7;</code>
     *
     * <pre>
     *携带金币
     * </pre>
     */
    public long getMomey() {
      return momey_;
    }

    // optional int32 jetton_score = 8;
    public static final int JETTON_SCORE_FIELD_NUMBER = 8;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 8;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 jetton_score = 8;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // optional int32 operate_button = 9;
    public static final int OPERATE_BUTTON_FIELD_NUMBER = 9;
    private int operateButton_;
    /**
     * <code>optional int32 operate_button = 9;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public boolean hasOperateButton() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 operate_button = 9;</code>
     *
     * <pre>
     *操作按钮
     * </pre>
     */
    public int getOperateButton() {
      return operateButton_;
    }

    // optional int32 apply_round = 10;
    public static final int APPLY_ROUND_FIELD_NUMBER = 10;
    private int applyRound_;
    /**
     * <code>optional int32 apply_round = 10;</code>
     *
     * <pre>
     *请求局数
     * </pre>
     */
    public boolean hasApplyRound() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 apply_round = 10;</code>
     *
     * <pre>
     *请求局数
     * </pre>
     */
    public int getApplyRound() {
      return applyRound_;
    }

    private void initFields() {
      opreateType_ = 0;
      subBtn_ = 0;
      addJettonArea_ = 0;
      isCreatorOperate_ = false;
      applyAccountId_ = 0L;
      seatIndex_ = 0;
      momey_ = 0L;
      jettonScore_ = 0;
      operateButton_ = 0;
      applyRound_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, subBtn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, addJettonArea_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isCreatorOperate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, applyAccountId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, seatIndex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, momey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, jettonScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, operateButton_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, applyRound_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, subBtn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, addJettonArea_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isCreatorOperate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, applyAccountId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seatIndex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, momey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, jettonScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, operateButton_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, applyRound_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jdb.Opreate_Jdb_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_Opreate_Jdb_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_Opreate_Jdb_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.class, protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.Builder.class);
      }

      // Construct using protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subBtn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonArea_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isCreatorOperate_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        applyAccountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        momey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        operateButton_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        applyRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.jdb.jdbRsp.internal_static_jdb_Opreate_Jdb_Request_descriptor;
      }

      public protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request getDefaultInstanceForType() {
        return protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.getDefaultInstance();
      }

      public protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request build() {
        protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request buildPartial() {
        protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request result = new protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subBtn_ = subBtn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addJettonArea_ = addJettonArea_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isCreatorOperate_ = isCreatorOperate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.applyAccountId_ = applyAccountId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.momey_ = momey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.operateButton_ = operateButton_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.applyRound_ = applyRound_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request) {
          return mergeFrom((protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request other) {
        if (other == protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasSubBtn()) {
          setSubBtn(other.getSubBtn());
        }
        if (other.hasAddJettonArea()) {
          setAddJettonArea(other.getAddJettonArea());
        }
        if (other.hasIsCreatorOperate()) {
          setIsCreatorOperate(other.getIsCreatorOperate());
        }
        if (other.hasApplyAccountId()) {
          setApplyAccountId(other.getApplyAccountId());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasMomey()) {
          setMomey(other.getMomey());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasOperateButton()) {
          setOperateButton(other.getOperateButton());
        }
        if (other.hasApplyRound()) {
          setApplyRound(other.getApplyRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.jdb.jdbRsp.Opreate_Jdb_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌 4：房主回复申请 5:申请进入
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sub_btn = 2;
      private int subBtn_ ;
      /**
       * <code>optional int32 sub_btn = 2;</code>
       *
       * <pre>
       *按钮下标
       * </pre>
       */
      public boolean hasSubBtn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sub_btn = 2;</code>
       *
       * <pre>
       *按钮下标
       * </pre>
       */
      public int getSubBtn() {
        return subBtn_;
      }
      /**
       * <code>optional int32 sub_btn = 2;</code>
       *
       * <pre>
       *按钮下标
       * </pre>
       */
      public Builder setSubBtn(int value) {
        bitField0_ |= 0x00000002;
        subBtn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sub_btn = 2;</code>
       *
       * <pre>
       *按钮下标
       * </pre>
       */
      public Builder clearSubBtn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subBtn_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_area = 3;
      private int addJettonArea_ ;
      /**
       * <code>optional int32 add_jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public boolean hasAddJettonArea() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 add_jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public int getAddJettonArea() {
        return addJettonArea_;
      }
      /**
       * <code>optional int32 add_jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public Builder setAddJettonArea(int value) {
        bitField0_ |= 0x00000004;
        addJettonArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_area = 3;</code>
       *
       * <pre>
       *下注区域
       * </pre>
       */
      public Builder clearAddJettonArea() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addJettonArea_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_creator_operate = 4;
      private boolean isCreatorOperate_ ;
      /**
       * <code>optional bool is_creator_operate = 4;</code>
       *
       * <pre>
       *true:坐下， false忽略
       * </pre>
       */
      public boolean hasIsCreatorOperate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool is_creator_operate = 4;</code>
       *
       * <pre>
       *true:坐下， false忽略
       * </pre>
       */
      public boolean getIsCreatorOperate() {
        return isCreatorOperate_;
      }
      /**
       * <code>optional bool is_creator_operate = 4;</code>
       *
       * <pre>
       *true:坐下， false忽略
       * </pre>
       */
      public Builder setIsCreatorOperate(boolean value) {
        bitField0_ |= 0x00000008;
        isCreatorOperate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_creator_operate = 4;</code>
       *
       * <pre>
       *true:坐下， false忽略
       * </pre>
       */
      public Builder clearIsCreatorOperate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isCreatorOperate_ = false;
        onChanged();
        return this;
      }

      // optional int64 apply_account_id = 5;
      private long applyAccountId_ ;
      /**
       * <code>optional int64 apply_account_id = 5;</code>
       *
       * <pre>
       *申请帐号ID
       * </pre>
       */
      public boolean hasApplyAccountId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 apply_account_id = 5;</code>
       *
       * <pre>
       *申请帐号ID
       * </pre>
       */
      public long getApplyAccountId() {
        return applyAccountId_;
      }
      /**
       * <code>optional int64 apply_account_id = 5;</code>
       *
       * <pre>
       *申请帐号ID
       * </pre>
       */
      public Builder setApplyAccountId(long value) {
        bitField0_ |= 0x00000010;
        applyAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 apply_account_id = 5;</code>
       *
       * <pre>
       *申请帐号ID
       * </pre>
       */
      public Builder clearApplyAccountId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        applyAccountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 6;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *选择坐下的位置
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *选择坐下的位置
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *选择坐下的位置
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000020;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *选择坐下的位置
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int64 momey = 7;
      private long momey_ ;
      /**
       * <code>optional int64 momey = 7;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public boolean hasMomey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 momey = 7;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public long getMomey() {
        return momey_;
      }
      /**
       * <code>optional int64 momey = 7;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public Builder setMomey(long value) {
        bitField0_ |= 0x00000040;
        momey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 momey = 7;</code>
       *
       * <pre>
       *携带金币
       * </pre>
       */
      public Builder clearMomey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        momey_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 8;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 8;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 jetton_score = 8;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 8;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000080;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 8;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_button = 9;
      private int operateButton_ ;
      /**
       * <code>optional int32 operate_button = 9;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public boolean hasOperateButton() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 operate_button = 9;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public int getOperateButton() {
        return operateButton_;
      }
      /**
       * <code>optional int32 operate_button = 9;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder setOperateButton(int value) {
        bitField0_ |= 0x00000100;
        operateButton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_button = 9;</code>
       *
       * <pre>
       *操作按钮
       * </pre>
       */
      public Builder clearOperateButton() {
        bitField0_ = (bitField0_ & ~0x00000100);
        operateButton_ = 0;
        onChanged();
        return this;
      }

      // optional int32 apply_round = 10;
      private int applyRound_ ;
      /**
       * <code>optional int32 apply_round = 10;</code>
       *
       * <pre>
       *请求局数
       * </pre>
       */
      public boolean hasApplyRound() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 apply_round = 10;</code>
       *
       * <pre>
       *请求局数
       * </pre>
       */
      public int getApplyRound() {
        return applyRound_;
      }
      /**
       * <code>optional int32 apply_round = 10;</code>
       *
       * <pre>
       *请求局数
       * </pre>
       */
      public Builder setApplyRound(int value) {
        bitField0_ |= 0x00000200;
        applyRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 apply_round = 10;</code>
       *
       * <pre>
       *请求局数
       * </pre>
       */
      public Builder clearApplyRound() {
        bitField0_ = (bitField0_ & ~0x00000200);
        applyRound_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jdb.Opreate_Jdb_Request)
    }

    static {
      defaultInstance = new Opreate_Jdb_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jdb.Opreate_Jdb_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_RoomInfoJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_RoomInfoJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_RoomPlayerResponseJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_RoomPlayerResponseJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_PlayerListJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_PlayerListJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_PlayerResultJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_PlayerResultJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_PukeGameEndJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_PukeGameEndJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_RecordList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_RecordList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_TableResponseJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_TableResponseJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_PauseGameJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_PauseGameJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_ButtonOperateJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_ButtonOperateJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_JettonResultJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_JettonResultJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_PopupMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_PopupMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_GameStartJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_GameStartJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_SelectdBankerJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_SelectdBankerJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_SeatFrist_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_SeatFrist_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_SelectdBankerResultJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_SelectdBankerResultJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_SendCardJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_SendCardJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_OpenCardJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_OpenCardJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_LiangCardJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_LiangCardJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_RoomPlayInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_RoomPlayInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_ReturnDataJdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_ReturnDataJdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jdb_Opreate_Jdb_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jdb_Opreate_Jdb_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022jdb/jdbProto.proto\022\003jdb\032\024basic/protoco" +
      "l.proto\"\311\003\n\013RoomInfoJdb\022\017\n\007room_id\030\001 \001(\005" +
      "\022\027\n\017game_type_index\030\004 \001(\005\022\027\n\017game_rule_i" +
      "ndex\030\002 \001(\005\022\025\n\rgame_rule_des\030\003 \001(\t\022\022\n\ngam" +
      "e_round\030\005 \001(\005\022\021\n\tcur_round\030\006 \001(\005\022\023\n\013game" +
      "_status\030\007 \001(\005\022\030\n\020create_player_id\030\010 \001(\003\022" +
      "\027\n\017begin_left_card\030\t \001(\005\022\025\n\rbanker_playe" +
      "r\030\n \001(\005\022\023\n\013create_name\030\013 \001(\t\022\027\n\017min_carr" +
      "y_momey\030\014 \001(\003\022\027\n\017max_carry_momey\030\r \001(\003\022\022" +
      "\n\ninit_momey\030\016 \001(\003\022\022\n\nenter_gold\030\017 \001(\003\022\023",
      "\n\013pu_fen_glod\030\020 \001(\003\022\027\n\017add_banker_glod\030\021" +
      " \001(\003\022\024\n\014min_bu_money\030\022 \001(\003\022\024\n\014max_bu_mon" +
      "ey\030\023 \001(\003\022\021\n\tleft_time\030\024 \001(\003\"\331\002\n\025RoomPlay" +
      "erResponseJdb\022\022\n\naccount_id\030\001 \001(\003\022\021\n\tuse" +
      "r_name\030\002 \001(\t\022\024\n\014head_img_url\030\003 \001(\t\022\022\n\nse" +
      "at_index\030\004 \001(\005\022\n\n\002ip\030\005 \001(\t\022\016\n\006online\030\006 \001" +
      "(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005score\030\010 \001(\002\022\r\n\005ready\030" +
      "\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022%\n\rlocationInfor\030" +
      "\013 \001(\0132\016.LocationInfor\022\022\n\nis_trustee\030\014 \001(" +
      "\010\022\r\n\005money\030\r \001(\003\022\014\n\004gold\030\016 \001(\003\022\023\n\013carry_",
      "money\030\017 \001(\003\022\030\n\020apply_seat_index\030\020 \001(\005\022\020\n" +
      "\010bu_money\030\021 \001(\003\"<\n\rPlayerListJdb\022+\n\007play" +
      "ers\030\001 \003(\0132\032.jdb.RoomPlayerResponseJdb\"\240\001" +
      "\n\017PlayerResultJdb\022+\n\007players\030\001 \003(\0132\032.jdb" +
      ".RoomPlayerResponseJdb\022\021\n\town_score\030\002 \001(" +
      "\003\022\024\n\014Total_record\030\003 \001(\003\022\021\n\tdayingjia\030\004 \001" +
      "(\003\022\022\n\nstart_time\030\005 \001(\003\022\020\n\010end_time\030\006 \001(\003" +
      "\"\231\003\n\016PukeGameEndJdb\022#\n\troom_info\030\001 \001(\0132\020" +
      ".jdb.RoomInfoJdb\022\021\n\tcur_round\030\002 \001(\005\022\022\n\ng" +
      "ame_round\030\003 \001(\005\022\'\n\ncards_data\030\004 \003(\0132\023.In",
      "t32ArrayResponse\022*\n\rjetton_player\030\005 \003(\0132" +
      "\023.Int32ArrayResponse\022\021\n\tend_score\030\006 \003(\005\022" +
      "\016\n\006reason\030\007 \001(\005\022+\n\007players\030\010 \003(\0132\032.jdb.R" +
      "oomPlayerResponseJdb\022+\n\rplayer_result\030\t " +
      "\001(\0132\024.jdb.PlayerResultJdb\022\016\n\006winner\030\n \001(" +
      "\005\022\023\n\013area_status\030\014 \003(\005\022\026\n\016operate_button" +
      "\030\r \003(\005\022\030\n\020add_banker_times\030\016 \001(\005\022\022\n\ncur_" +
      "banker\030\017 \001(\005\"\336\001\n\nRecordList\022\021\n\tcur_round" +
      "\030\001 \001(\005\022\'\n\ncards_data\030\002 \003(\0132\023.Int32ArrayR" +
      "esponse\022*\n\rjetton_player\030\003 \003(\0132\023.Int32Ar",
      "rayResponse\022\021\n\tend_score\030\004 \003(\005\022\023\n\013area_s" +
      "tatus\030\005 \003(\005\022\023\n\013banker_seat\030\006 \001(\005\022+\n\007play" +
      "ers\030\007 \003(\0132\032.jdb.RoomPlayerResponseJdb\"\372\003" +
      "\n\020TableResponseJdb\022\025\n\rbanker_player\030\001 \001(" +
      "\005\022#\n\troom_info\030\002 \001(\0132\020.jdb.RoomInfoJdb\022+" +
      "\n\007players\030\003 \003(\0132\032.jdb.RoomPlayerResponse" +
      "Jdb\022\'\n\ncards_data\030\004 \003(\0132\023.Int32ArrayResp" +
      "onse\022\025\n\rjetton_button\030\005 \003(\005\022)\n\014jetton_sc" +
      "ore\030\006 \003(\0132\023.Int32ArrayResponse\022\021\n\topen_c" +
      "ard\030\007 \003(\005\022\022\n\nliang_card\030\010 \003(\010\022\024\n\014scene_s",
      "tatus\030\t \001(\005\022\024\n\014display_time\030\n \001(\005\022\021\n\tjdb" +
      "_value\030\013 \003(\005\022\023\n\013area_status\030\014 \003(\005\022\024\n\014pla" +
      "yer_score\030\r \003(\005\022\023\n\013call_button\030\016 \003(\005\022\025\n\r" +
      "player_status\030\017 \003(\010\022\026\n\016operate_button\030\020 " +
      "\003(\005\022\026\n\016hou_shou_score\030\021 \001(\003\022\020\n\010qie_card\030" +
      "\022 \001(\005\022\023\n\013call_banker\030\023 \003(\005\"-\n\014PauseGameJ" +
      "db\022\020\n\010opt_type\030\001 \001(\010\022\013\n\003des\030\002 \001(\t\"\267\001\n\020Bu" +
      "ttonOperateJdb\022\024\n\014opreate_type\030\001 \001(\005\022\030\n\020" +
      "min_jetton_score\030\002 \001(\005\022\030\n\020max_jetton_sco" +
      "re\030\003 \001(\005\022\016\n\006button\030\004 \003(\005\022\024\n\014display_time",
      "\030\005 \001(\005\022\023\n\013is_showpass\030\006 \001(\005\022\036\n\026max_table" +
      "_jetton_score\030\007 \001(\003\"l\n\017JettonResultJdb\022\023" +
      "\n\013jetton_seat\030\001 \001(\005\022\024\n\014jetton_score\030\002 \001(" +
      "\003\022\023\n\013jetton_area\030\003 \001(\003\022\031\n\021player_max_jet" +
      "ton\030\004 \001(\003\"^\n\014PopupMessage\022\023\n\013displaytime" +
      "\030\001 \001(\005\022\026\n\016operate_button\030\002 \001(\005\022\024\n\014operat" +
      "e_type\030\003 \001(\005\022\013\n\003des\030\004 \001(\t\"`\n\014GameStartJd" +
      "b\022#\n\troom_info\030\001 \001(\0132\020.jdb.RoomInfoJdb\022+" +
      "\n\007players\030\003 \003(\0132\032.jdb.RoomPlayerResponse" +
      "Jdb\"=\n\020SelectdBankerJdb\022\023\n\013banker_seat\030\001",
      " \001(\005\022\024\n\014banker_score\030\002 \001(\005\"2\n\tSeatFrist\022" +
      "\014\n\004card\030\001 \001(\005\022\027\n\017first_seat_idex\030\002 \001(\005\"r" +
      "\n\026SelectdBankerResultJdb\022\023\n\013banker_seat\030" +
      "\001 \001(\005\022\026\n\016hou_shou_score\030\002 \001(\003\022+\n\007players" +
      "\030\003 \003(\0132\032.jdb.RoomPlayerResponseJdb\"a\n\013Se" +
      "ndCardJdb\022\024\n\014opreate_type\030\001 \001(\005\022&\n\tsend_" +
      "card\030\002 \003(\0132\023.Int32ArrayResponse\022\024\n\014displ" +
      "ay_time\030\003 \001(\005\"e\n\013OpenCardJdb\022\021\n\topen_car" +
      "d\030\001 \001(\005\022\022\n\nseat_index\030\002 \001(\005\022\r\n\005cards\030\003 \003" +
      "(\005\022\021\n\tjdb_value\030\004 \001(\005\022\r\n\005times\030\005 \001(\005\"S\n\014",
      "LiangCardJdb\022\022\n\nseat_index\030\001 \001(\005\022\r\n\005card" +
      "s\030\002 \003(\005\022\021\n\tjdb_value\030\003 \001(\005\022\r\n\005times\030\004 \001(" +
      "\005\"`\n\014RoomPlayInfo\022#\n\troom_info\030\002 \001(\0132\020.j" +
      "db.RoomInfoJdb\022+\n\007players\030\003 \003(\0132\032.jdb.Ro" +
      "omPlayerResponseJdb\"B\n\rReturnDataJdb\022\020\n\010" +
      "opt_type\030\001 \001(\005\022\022\n\nis_success\030\002 \001(\010\022\013\n\003de" +
      "s\030\003 \001(\t\"\361\001\n\023Opreate_Jdb_Request\022\024\n\014oprea" +
      "te_type\030\001 \001(\005\022\017\n\007sub_btn\030\002 \001(\005\022\027\n\017add_je" +
      "tton_area\030\003 \001(\005\022\032\n\022is_creator_operate\030\004 " +
      "\001(\010\022\030\n\020apply_account_id\030\005 \001(\003\022\022\n\nseat_in",
      "dex\030\006 \001(\005\022\r\n\005momey\030\007 \001(\003\022\024\n\014jetton_score" +
      "\030\010 \001(\005\022\026\n\016operate_button\030\t \001(\005\022\023\n\013apply_" +
      "round\030\n \001(\005B\034\n\022protobuf.clazz.jdbB\006jdbRs" +
      "p"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_jdb_RoomInfoJdb_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_jdb_RoomInfoJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_RoomInfoJdb_descriptor,
              new java.lang.String[] { "RoomId", "GameTypeIndex", "GameRuleIndex", "GameRuleDes", "GameRound", "CurRound", "GameStatus", "CreatePlayerId", "BeginLeftCard", "BankerPlayer", "CreateName", "MinCarryMomey", "MaxCarryMomey", "InitMomey", "EnterGold", "PuFenGlod", "AddBankerGlod", "MinBuMoney", "MaxBuMoney", "LeftTime", });
          internal_static_jdb_RoomPlayerResponseJdb_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_jdb_RoomPlayerResponseJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_RoomPlayerResponseJdb_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", "CarryMoney", "ApplySeatIndex", "BuMoney", });
          internal_static_jdb_PlayerListJdb_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_jdb_PlayerListJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_PlayerListJdb_descriptor,
              new java.lang.String[] { "Players", });
          internal_static_jdb_PlayerResultJdb_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_jdb_PlayerResultJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_PlayerResultJdb_descriptor,
              new java.lang.String[] { "Players", "OwnScore", "TotalRecord", "Dayingjia", "StartTime", "EndTime", });
          internal_static_jdb_PukeGameEndJdb_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_jdb_PukeGameEndJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_PukeGameEndJdb_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardsData", "JettonPlayer", "EndScore", "Reason", "Players", "PlayerResult", "Winner", "AreaStatus", "OperateButton", "AddBankerTimes", "CurBanker", });
          internal_static_jdb_RecordList_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_jdb_RecordList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_RecordList_descriptor,
              new java.lang.String[] { "CurRound", "CardsData", "JettonPlayer", "EndScore", "AreaStatus", "BankerSeat", "Players", });
          internal_static_jdb_TableResponseJdb_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_jdb_TableResponseJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_TableResponseJdb_descriptor,
              new java.lang.String[] { "BankerPlayer", "RoomInfo", "Players", "CardsData", "JettonButton", "JettonScore", "OpenCard", "LiangCard", "SceneStatus", "DisplayTime", "JdbValue", "AreaStatus", "PlayerScore", "CallButton", "PlayerStatus", "OperateButton", "HouShouScore", "QieCard", "CallBanker", });
          internal_static_jdb_PauseGameJdb_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_jdb_PauseGameJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_PauseGameJdb_descriptor,
              new java.lang.String[] { "OptType", "Des", });
          internal_static_jdb_ButtonOperateJdb_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_jdb_ButtonOperateJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_ButtonOperateJdb_descriptor,
              new java.lang.String[] { "OpreateType", "MinJettonScore", "MaxJettonScore", "Button", "DisplayTime", "IsShowpass", "MaxTableJettonScore", });
          internal_static_jdb_JettonResultJdb_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_jdb_JettonResultJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_JettonResultJdb_descriptor,
              new java.lang.String[] { "JettonSeat", "JettonScore", "JettonArea", "PlayerMaxJetton", });
          internal_static_jdb_PopupMessage_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_jdb_PopupMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_PopupMessage_descriptor,
              new java.lang.String[] { "Displaytime", "OperateButton", "OperateType", "Des", });
          internal_static_jdb_GameStartJdb_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_jdb_GameStartJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_GameStartJdb_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", });
          internal_static_jdb_SelectdBankerJdb_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_jdb_SelectdBankerJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_SelectdBankerJdb_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_jdb_SeatFrist_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_jdb_SeatFrist_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_SeatFrist_descriptor,
              new java.lang.String[] { "Card", "FirstSeatIdex", });
          internal_static_jdb_SelectdBankerResultJdb_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_jdb_SelectdBankerResultJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_SelectdBankerResultJdb_descriptor,
              new java.lang.String[] { "BankerSeat", "HouShouScore", "Players", });
          internal_static_jdb_SendCardJdb_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_jdb_SendCardJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_SendCardJdb_descriptor,
              new java.lang.String[] { "OpreateType", "SendCard", "DisplayTime", });
          internal_static_jdb_OpenCardJdb_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_jdb_OpenCardJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_OpenCardJdb_descriptor,
              new java.lang.String[] { "OpenCard", "SeatIndex", "Cards", "JdbValue", "Times", });
          internal_static_jdb_LiangCardJdb_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_jdb_LiangCardJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_LiangCardJdb_descriptor,
              new java.lang.String[] { "SeatIndex", "Cards", "JdbValue", "Times", });
          internal_static_jdb_RoomPlayInfo_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_jdb_RoomPlayInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_RoomPlayInfo_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", });
          internal_static_jdb_ReturnDataJdb_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_jdb_ReturnDataJdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_ReturnDataJdb_descriptor,
              new java.lang.String[] { "OptType", "IsSuccess", "Des", });
          internal_static_jdb_Opreate_Jdb_Request_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_jdb_Opreate_Jdb_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jdb_Opreate_Jdb_Request_descriptor,
              new java.lang.String[] { "OpreateType", "SubBtn", "AddJettonArea", "IsCreatorOperate", "ApplyAccountId", "SeatIndex", "Momey", "JettonScore", "OperateButton", "ApplyRound", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
