// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sj/lldq.proto

package protobuf.clazz.lldq;

public final class lldqRsp {
  private lldqRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface OutCardDataLldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 out_card_player = 1;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    boolean hasOutCardPlayer();
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    int getOutCardPlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 cards_count = 3;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    boolean hasCardsCount();
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getCardsCount();

    // optional int32 card_type = 4;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType();

    // optional int32 cur_player = 5;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurPlayer();
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurPlayer();

    // repeated int32 pr_cards_data = 6;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 7;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 8;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional int32 display_time = 9;
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated .Int32ArrayResponse hand_card_data = 10;
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    int getHandCardDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardDataOrBuilder(
        int index);

    // repeated int32 hand_card_count = 11;
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    int getHandCardCount(int index);

    // optional int32 max_value_seat = 12;
    /**
     * <code>optional int32 max_value_seat = 12;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    boolean hasMaxValueSeat();
    /**
     * <code>optional int32 max_value_seat = 12;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    int getMaxValueSeat();

    // repeated int32 user_can_out_data = 13;
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutDataList();
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    int getUserCanOutData(int index);

    // optional int32 user_can_out_count = 14;
    /**
     * <code>optional int32 user_can_out_count = 14;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    boolean hasUserCanOutCount();
    /**
     * <code>optional int32 user_can_out_count = 14;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    int getUserCanOutCount();

    // optional int32 is_current_first_out = 15;
    /**
     * <code>optional int32 is_current_first_out = 15;</code>
     *
     * <pre>
     *是否首出
     * </pre>
     */
    boolean hasIsCurrentFirstOut();
    /**
     * <code>optional int32 is_current_first_out = 15;</code>
     *
     * <pre>
     *是否首出
     * </pre>
     */
    int getIsCurrentFirstOut();

    // optional bool isround = 16;
    /**
     * <code>optional bool isround = 16;</code>
     *
     * <pre>
     *一圈出完
     * </pre>
     */
    boolean hasIsround();
    /**
     * <code>optional bool isround = 16;</code>
     *
     * <pre>
     *一圈出完
     * </pre>
     */
    boolean getIsround();

    // repeated int32 card_data_failure = 17;
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardDataFailureList();
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    int getCardDataFailureCount();
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    int getCardDataFailure(int index);
  }
  /**
   * Protobuf type {@code lldq.OutCardDataLldq}
   *
   * <pre>
   *用户出牌 1003
   * </pre>
   */
  public static final class OutCardDataLldq extends
      com.google.protobuf.GeneratedMessage
      implements OutCardDataLldqOrBuilder {
    // Use OutCardDataLldq.newBuilder() to construct.
    private OutCardDataLldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OutCardDataLldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OutCardDataLldq defaultInstance;
    public static OutCardDataLldq getDefaultInstance() {
      return defaultInstance;
    }

    public OutCardDataLldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OutCardDataLldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              outCardPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardsCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              curPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              displayTime_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                handCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000200;
              }
              handCardData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              maxValueSeat_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              userCanOutData_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              userCanOutCount_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              isCurrentFirstOut_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              isround_ = input.readBool();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                cardDataFailure_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              cardDataFailure_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                cardDataFailure_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardDataFailure_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          handCardData_ = java.util.Collections.unmodifiableList(handCardData_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          cardDataFailure_ = java.util.Collections.unmodifiableList(cardDataFailure_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_OutCardDataLldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_OutCardDataLldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.class, protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.Builder.class);
    }

    public static com.google.protobuf.Parser<OutCardDataLldq> PARSER =
        new com.google.protobuf.AbstractParser<OutCardDataLldq>() {
      public OutCardDataLldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutCardDataLldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OutCardDataLldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 out_card_player = 1;
    public static final int OUT_CARD_PLAYER_FIELD_NUMBER = 1;
    private int outCardPlayer_;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public boolean hasOutCardPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public int getOutCardPlayer() {
      return outCardPlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 cards_count = 3;
    public static final int CARDS_COUNT_FIELD_NUMBER = 3;
    private int cardsCount_;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public boolean hasCardsCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getCardsCount() {
      return cardsCount_;
    }

    // optional int32 card_type = 4;
    public static final int CARD_TYPE_FIELD_NUMBER = 4;
    private int cardType_;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 cur_player = 5;
    public static final int CUR_PLAYER_FIELD_NUMBER = 5;
    private int curPlayer_;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurPlayer() {
      return curPlayer_;
    }

    // repeated int32 pr_cards_data = 6;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 7;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 7;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 8;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 8;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional int32 display_time = 9;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 9;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 display_time = 9;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated .Int32ArrayResponse hand_card_data = 10;
    public static final int HAND_CARD_DATA_FIELD_NUMBER = 10;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardDataList() {
      return handCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardDataOrBuilderList() {
      return handCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    public int getHandCardDataCount() {
      return handCardData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardData(int index) {
      return handCardData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
     *
     * <pre>
     *手牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardDataOrBuilder(
        int index) {
      return handCardData_.get(index);
    }

    // repeated int32 hand_card_count = 11;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 11;</code>
     *
     * <pre>
     *手牌数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // optional int32 max_value_seat = 12;
    public static final int MAX_VALUE_SEAT_FIELD_NUMBER = 12;
    private int maxValueSeat_;
    /**
     * <code>optional int32 max_value_seat = 12;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    public boolean hasMaxValueSeat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 max_value_seat = 12;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    public int getMaxValueSeat() {
      return maxValueSeat_;
    }

    // repeated int32 user_can_out_data = 13;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> userCanOutData_;
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated int32 user_can_out_data = 13;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public int getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }

    // optional int32 user_can_out_count = 14;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 14;
    private int userCanOutCount_;
    /**
     * <code>optional int32 user_can_out_count = 14;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    public boolean hasUserCanOutCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 user_can_out_count = 14;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    public int getUserCanOutCount() {
      return userCanOutCount_;
    }

    // optional int32 is_current_first_out = 15;
    public static final int IS_CURRENT_FIRST_OUT_FIELD_NUMBER = 15;
    private int isCurrentFirstOut_;
    /**
     * <code>optional int32 is_current_first_out = 15;</code>
     *
     * <pre>
     *是否首出
     * </pre>
     */
    public boolean hasIsCurrentFirstOut() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 is_current_first_out = 15;</code>
     *
     * <pre>
     *是否首出
     * </pre>
     */
    public int getIsCurrentFirstOut() {
      return isCurrentFirstOut_;
    }

    // optional bool isround = 16;
    public static final int ISROUND_FIELD_NUMBER = 16;
    private boolean isround_;
    /**
     * <code>optional bool isround = 16;</code>
     *
     * <pre>
     *一圈出完
     * </pre>
     */
    public boolean hasIsround() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool isround = 16;</code>
     *
     * <pre>
     *一圈出完
     * </pre>
     */
    public boolean getIsround() {
      return isround_;
    }

    // repeated int32 card_data_failure = 17;
    public static final int CARD_DATA_FAILURE_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> cardDataFailure_;
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardDataFailureList() {
      return cardDataFailure_;
    }
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    public int getCardDataFailureCount() {
      return cardDataFailure_.size();
    }
    /**
     * <code>repeated int32 card_data_failure = 17;</code>
     *
     * <pre>
     *数据
     * </pre>
     */
    public int getCardDataFailure(int index) {
      return cardDataFailure_.get(index);
    }

    private void initFields() {
      outCardPlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardsCount_ = 0;
      cardType_ = 0;
      curPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      displayTime_ = 0;
      handCardData_ = java.util.Collections.emptyList();
      handCardCount_ = java.util.Collections.emptyList();
      maxValueSeat_ = 0;
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = 0;
      isCurrentFirstOut_ = 0;
      isround_ = false;
      cardDataFailure_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, outCardPlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, curPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(6, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, displayTime_);
      }
      for (int i = 0; i < handCardData_.size(); i++) {
        output.writeMessage(10, handCardData_.get(i));
      }
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(11, handCardCount_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, maxValueSeat_);
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeInt32(13, userCanOutData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(14, userCanOutCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(15, isCurrentFirstOut_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(16, isround_);
      }
      for (int i = 0; i < cardDataFailure_.size(); i++) {
        output.writeInt32(17, cardDataFailure_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, curPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, displayTime_);
      }
      for (int i = 0; i < handCardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, handCardData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, maxValueSeat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutData_.get(i));
        }
        size += dataSize;
        size += 1 * getUserCanOutDataList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, userCanOutCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, isCurrentFirstOut_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, isround_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardDataFailure_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardDataFailure_.get(i));
        }
        size += dataSize;
        size += 2 * getCardDataFailureList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.OutCardDataLldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.OutCardDataLldq}
     *
     * <pre>
     *用户出牌 1003
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.OutCardDataLldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_OutCardDataLldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_OutCardDataLldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.class, protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandCardDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        outCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        curPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (handCardDataBuilder_ == null) {
          handCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          handCardDataBuilder_.clear();
        }
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        maxValueSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        userCanOutCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        isCurrentFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        isround_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        cardDataFailure_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_OutCardDataLldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.OutCardDataLldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.OutCardDataLldq build() {
        protobuf.clazz.lldq.lldqRsp.OutCardDataLldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.OutCardDataLldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.OutCardDataLldq result = new protobuf.clazz.lldq.lldqRsp.OutCardDataLldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outCardPlayer_ = outCardPlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardsCount_ = cardsCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curPlayer_ = curPlayer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.displayTime_ = displayTime_;
        if (handCardDataBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            handCardData_ = java.util.Collections.unmodifiableList(handCardData_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.handCardData_ = handCardData_;
        } else {
          result.handCardData_ = handCardDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.handCardCount_ = handCardCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxValueSeat_ = maxValueSeat_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.userCanOutData_ = userCanOutData_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isCurrentFirstOut_ = isCurrentFirstOut_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isround_ = isround_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          cardDataFailure_ = java.util.Collections.unmodifiableList(cardDataFailure_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.cardDataFailure_ = cardDataFailure_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.OutCardDataLldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.OutCardDataLldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.OutCardDataLldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.OutCardDataLldq.getDefaultInstance()) return this;
        if (other.hasOutCardPlayer()) {
          setOutCardPlayer(other.getOutCardPlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardsCount()) {
          setCardsCount(other.getCardsCount());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasCurPlayer()) {
          setCurPlayer(other.getCurPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (handCardDataBuilder_ == null) {
          if (!other.handCardData_.isEmpty()) {
            if (handCardData_.isEmpty()) {
              handCardData_ = other.handCardData_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureHandCardDataIsMutable();
              handCardData_.addAll(other.handCardData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardData_.isEmpty()) {
            if (handCardDataBuilder_.isEmpty()) {
              handCardDataBuilder_.dispose();
              handCardDataBuilder_ = null;
              handCardData_ = other.handCardData_;
              bitField0_ = (bitField0_ & ~0x00000200);
              handCardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardDataFieldBuilder() : null;
            } else {
              handCardDataBuilder_.addAllMessages(other.handCardData_);
            }
          }
        }
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (other.hasMaxValueSeat()) {
          setMaxValueSeat(other.getMaxValueSeat());
        }
        if (!other.userCanOutData_.isEmpty()) {
          if (userCanOutData_.isEmpty()) {
            userCanOutData_ = other.userCanOutData_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureUserCanOutDataIsMutable();
            userCanOutData_.addAll(other.userCanOutData_);
          }
          onChanged();
        }
        if (other.hasUserCanOutCount()) {
          setUserCanOutCount(other.getUserCanOutCount());
        }
        if (other.hasIsCurrentFirstOut()) {
          setIsCurrentFirstOut(other.getIsCurrentFirstOut());
        }
        if (other.hasIsround()) {
          setIsround(other.getIsround());
        }
        if (!other.cardDataFailure_.isEmpty()) {
          if (cardDataFailure_.isEmpty()) {
            cardDataFailure_ = other.cardDataFailure_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureCardDataFailureIsMutable();
            cardDataFailure_.addAll(other.cardDataFailure_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.OutCardDataLldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.OutCardDataLldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 out_card_player = 1;
      private int outCardPlayer_ ;
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public boolean hasOutCardPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public int getOutCardPlayer() {
        return outCardPlayer_;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder setOutCardPlayer(int value) {
        bitField0_ |= 0x00000001;
        outCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder clearOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 cards_count = 3;
      private int cardsCount_ ;
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public boolean hasCardsCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getCardsCount() {
        return cardsCount_;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setCardsCount(int value) {
        bitField0_ |= 0x00000004;
        cardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_type = 4;
      private int cardType_ ;
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000008;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_player = 5;
      private int curPlayer_ ;
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurPlayer() {
        return curPlayer_;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurPlayer(int value) {
        bitField0_ |= 0x00000010;
        curPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        curPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 6;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 7;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000040;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 8;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000080;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 9;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000100;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 9;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_card_data = 10;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardDataIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          handCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardData_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardDataList() {
        if (handCardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardData_);
        } else {
          return handCardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public int getHandCardDataCount() {
        if (handCardDataBuilder_ == null) {
          return handCardData_.size();
        } else {
          return handCardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardData(int index) {
        if (handCardDataBuilder_ == null) {
          return handCardData_.get(index);
        } else {
          return handCardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder setHandCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardDataIsMutable();
          handCardData_.set(index, value);
          onChanged();
        } else {
          handCardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder setHandCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardDataBuilder_ == null) {
          ensureHandCardDataIsMutable();
          handCardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder addHandCardData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardDataIsMutable();
          handCardData_.add(value);
          onChanged();
        } else {
          handCardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder addHandCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardDataIsMutable();
          handCardData_.add(index, value);
          onChanged();
        } else {
          handCardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder addHandCardData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardDataBuilder_ == null) {
          ensureHandCardDataIsMutable();
          handCardData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder addHandCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardDataBuilder_ == null) {
          ensureHandCardDataIsMutable();
          handCardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder addAllHandCardData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardDataBuilder_ == null) {
          ensureHandCardDataIsMutable();
          super.addAll(values, handCardData_);
          onChanged();
        } else {
          handCardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder clearHandCardData() {
        if (handCardDataBuilder_ == null) {
          handCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          handCardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public Builder removeHandCardData(int index) {
        if (handCardDataBuilder_ == null) {
          ensureHandCardDataIsMutable();
          handCardData_.remove(index);
          onChanged();
        } else {
          handCardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardDataBuilder(
          int index) {
        return getHandCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardDataOrBuilder(
          int index) {
        if (handCardDataBuilder_ == null) {
          return handCardData_.get(index);  } else {
          return handCardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardDataOrBuilderList() {
        if (handCardDataBuilder_ != null) {
          return handCardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardDataBuilder() {
        return getHandCardDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardDataBuilder(
          int index) {
        return getHandCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_card_data = 10;</code>
       *
       * <pre>
       *手牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardDataBuilderList() {
        return getHandCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardDataFieldBuilder() {
        if (handCardDataBuilder_ == null) {
          handCardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardData_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          handCardData_ = null;
        }
        return handCardDataBuilder_;
      }

      // repeated int32 hand_card_count = 11;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 11;</code>
       *
       * <pre>
       *手牌数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional int32 max_value_seat = 12;
      private int maxValueSeat_ ;
      /**
       * <code>optional int32 max_value_seat = 12;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public boolean hasMaxValueSeat() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 max_value_seat = 12;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public int getMaxValueSeat() {
        return maxValueSeat_;
      }
      /**
       * <code>optional int32 max_value_seat = 12;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public Builder setMaxValueSeat(int value) {
        bitField0_ |= 0x00000800;
        maxValueSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_value_seat = 12;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public Builder clearMaxValueSeat() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxValueSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 user_can_out_data = 13;
      private java.util.List<java.lang.Integer> userCanOutData_ = java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutData_ = new java.util.ArrayList<java.lang.Integer>(userCanOutData_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutDataList() {
        return java.util.Collections.unmodifiableList(userCanOutData_);
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        return userCanOutData_.size();
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public int getUserCanOutData(int index) {
        return userCanOutData_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutDataIsMutable();
        super.addAll(values, userCanOutData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 13;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional int32 user_can_out_count = 14;
      private int userCanOutCount_ ;
      /**
       * <code>optional int32 user_can_out_count = 14;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public boolean hasUserCanOutCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 user_can_out_count = 14;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public int getUserCanOutCount() {
        return userCanOutCount_;
      }
      /**
       * <code>optional int32 user_can_out_count = 14;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public Builder setUserCanOutCount(int value) {
        bitField0_ |= 0x00002000;
        userCanOutCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_can_out_count = 14;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        userCanOutCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_current_first_out = 15;
      private int isCurrentFirstOut_ ;
      /**
       * <code>optional int32 is_current_first_out = 15;</code>
       *
       * <pre>
       *是否首出
       * </pre>
       */
      public boolean hasIsCurrentFirstOut() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 is_current_first_out = 15;</code>
       *
       * <pre>
       *是否首出
       * </pre>
       */
      public int getIsCurrentFirstOut() {
        return isCurrentFirstOut_;
      }
      /**
       * <code>optional int32 is_current_first_out = 15;</code>
       *
       * <pre>
       *是否首出
       * </pre>
       */
      public Builder setIsCurrentFirstOut(int value) {
        bitField0_ |= 0x00004000;
        isCurrentFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_current_first_out = 15;</code>
       *
       * <pre>
       *是否首出
       * </pre>
       */
      public Builder clearIsCurrentFirstOut() {
        bitField0_ = (bitField0_ & ~0x00004000);
        isCurrentFirstOut_ = 0;
        onChanged();
        return this;
      }

      // optional bool isround = 16;
      private boolean isround_ ;
      /**
       * <code>optional bool isround = 16;</code>
       *
       * <pre>
       *一圈出完
       * </pre>
       */
      public boolean hasIsround() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool isround = 16;</code>
       *
       * <pre>
       *一圈出完
       * </pre>
       */
      public boolean getIsround() {
        return isround_;
      }
      /**
       * <code>optional bool isround = 16;</code>
       *
       * <pre>
       *一圈出完
       * </pre>
       */
      public Builder setIsround(boolean value) {
        bitField0_ |= 0x00008000;
        isround_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isround = 16;</code>
       *
       * <pre>
       *一圈出完
       * </pre>
       */
      public Builder clearIsround() {
        bitField0_ = (bitField0_ & ~0x00008000);
        isround_ = false;
        onChanged();
        return this;
      }

      // repeated int32 card_data_failure = 17;
      private java.util.List<java.lang.Integer> cardDataFailure_ = java.util.Collections.emptyList();
      private void ensureCardDataFailureIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          cardDataFailure_ = new java.util.ArrayList<java.lang.Integer>(cardDataFailure_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardDataFailureList() {
        return java.util.Collections.unmodifiableList(cardDataFailure_);
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public int getCardDataFailureCount() {
        return cardDataFailure_.size();
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public int getCardDataFailure(int index) {
        return cardDataFailure_.get(index);
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public Builder setCardDataFailure(
          int index, int value) {
        ensureCardDataFailureIsMutable();
        cardDataFailure_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public Builder addCardDataFailure(int value) {
        ensureCardDataFailureIsMutable();
        cardDataFailure_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public Builder addAllCardDataFailure(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataFailureIsMutable();
        super.addAll(values, cardDataFailure_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data_failure = 17;</code>
       *
       * <pre>
       *数据
       * </pre>
       */
      public Builder clearCardDataFailure() {
        cardDataFailure_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.OutCardDataLldq)
    }

    static {
      defaultInstance = new OutCardDataLldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.OutCardDataLldq)
  }

  public interface PukeGameEndLldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional int32 player_num = 6;
    /**
     * <code>optional int32 player_num = 6;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 6;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 banker_player = 7;
    /**
     * <code>optional int32 banker_player = 7;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 7;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated int32 game_score = 9;
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameScoreList();
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getGameScoreCount();
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getGameScore(int index);

    // repeated int32 init_di_pai = 10;
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getInitDiPaiList();
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    int getInitDiPaiCount();
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    int getInitDiPai(int index);

    // repeated int32 banker_mai_pai = 11;
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getBankerMaiPaiList();
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    int getBankerMaiPaiCount();
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    int getBankerMaiPai(int index);

    // optional int32 zhua_fen = 12;
    /**
     * <code>optional int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    boolean hasZhuaFen();
    /**
     * <code>optional int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getZhuaFen();

    // optional int32 kou_di_score = 15;
    /**
     * <code>optional int32 kou_di_score = 15;</code>
     *
     * <pre>
     *扣底分
     * </pre>
     */
    boolean hasKouDiScore();
    /**
     * <code>optional int32 kou_di_score = 15;</code>
     *
     * <pre>
     *扣底分
     * </pre>
     */
    int getKouDiScore();

    // optional int32 kou_di_times = 16;
    /**
     * <code>optional int32 kou_di_times = 16;</code>
     *
     * <pre>
     *扣抵翻倍
     * </pre>
     */
    boolean hasKouDiTimes();
    /**
     * <code>optional int32 kou_di_times = 16;</code>
     *
     * <pre>
     *扣抵翻倍
     * </pre>
     */
    int getKouDiTimes();

    // optional int32 all_zhua_score = 17;
    /**
     * <code>optional int32 all_zhua_score = 17;</code>
     *
     * <pre>
     *总抓分
     * </pre>
     */
    boolean hasAllZhuaScore();
    /**
     * <code>optional int32 all_zhua_score = 17;</code>
     *
     * <pre>
     *总抓分
     * </pre>
     */
    int getAllZhuaScore();

    // optional int32 kou_di_sj = 18;
    /**
     * <code>optional int32 kou_di_sj = 18;</code>
     *
     * <pre>
     *扣抵升级
     * </pre>
     */
    boolean hasKouDiSj();
    /**
     * <code>optional int32 kou_di_sj = 18;</code>
     *
     * <pre>
     *扣抵升级
     * </pre>
     */
    int getKouDiSj();

    // optional int32 other_banker = 20;
    /**
     * <code>optional int32 other_banker = 20;</code>
     *
     * <pre>
     *工友
     * </pre>
     */
    boolean hasOtherBanker();
    /**
     * <code>optional int32 other_banker = 20;</code>
     *
     * <pre>
     *工友
     * </pre>
     */
    int getOtherBanker();

    // repeated int32 all_end_score = 13;
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated .RoomPlayerResponse players = 14;
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 total_win_times = 19;
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getTotalWinTimesList();
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    int getTotalWinTimesCount();
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    int getTotalWinTimes(int index);
  }
  /**
   * Protobuf type {@code lldq.PukeGameEndLldq}
   *
   * <pre>
   *结算 1004
   * </pre>
   */
  public static final class PukeGameEndLldq extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndLldqOrBuilder {
    // Use PukeGameEndLldq.newBuilder() to construct.
    private PukeGameEndLldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndLldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndLldq defaultInstance;
    public static PukeGameEndLldq getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndLldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndLldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              reason_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                gameScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              gameScore_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                gameScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                initDiPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              initDiPai_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                initDiPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                initDiPai_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                bankerMaiPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              bankerMaiPai_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                bankerMaiPai_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                bankerMaiPai_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              zhuaFen_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00040000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 120: {
              bitField0_ |= 0x00000080;
              kouDiScore_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000100;
              kouDiTimes_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000200;
              allZhuaScore_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000400;
              kouDiSj_ = input.readInt32();
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                totalWinTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              totalWinTimes_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                totalWinTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalWinTimes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              bitField0_ |= 0x00000800;
              otherBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          gameScore_ = java.util.Collections.unmodifiableList(gameScore_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          initDiPai_ = java.util.Collections.unmodifiableList(initDiPai_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          bankerMaiPai_ = java.util.Collections.unmodifiableList(bankerMaiPai_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          totalWinTimes_ = java.util.Collections.unmodifiableList(totalWinTimes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_PukeGameEndLldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_PukeGameEndLldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.class, protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndLldq> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndLldq>() {
      public PukeGameEndLldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndLldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndLldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional int32 player_num = 6;
    public static final int PLAYER_NUM_FIELD_NUMBER = 6;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 6;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 6;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 banker_player = 7;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 7;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 7;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 banker_player = 7;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated int32 game_score = 9;
    public static final int GAME_SCORE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> gameScore_;
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameScoreList() {
      return gameScore_;
    }
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getGameScoreCount() {
      return gameScore_.size();
    }
    /**
     * <code>repeated int32 game_score = 9;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getGameScore(int index) {
      return gameScore_.get(index);
    }

    // repeated int32 init_di_pai = 10;
    public static final int INIT_DI_PAI_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> initDiPai_;
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInitDiPaiList() {
      return initDiPai_;
    }
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    public int getInitDiPaiCount() {
      return initDiPai_.size();
    }
    /**
     * <code>repeated int32 init_di_pai = 10;</code>
     *
     * <pre>
     *初始底牌
     * </pre>
     */
    public int getInitDiPai(int index) {
      return initDiPai_.get(index);
    }

    // repeated int32 banker_mai_pai = 11;
    public static final int BANKER_MAI_PAI_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> bankerMaiPai_;
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBankerMaiPaiList() {
      return bankerMaiPai_;
    }
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    public int getBankerMaiPaiCount() {
      return bankerMaiPai_.size();
    }
    /**
     * <code>repeated int32 banker_mai_pai = 11;</code>
     *
     * <pre>
     *庄家埋牌
     * </pre>
     */
    public int getBankerMaiPai(int index) {
      return bankerMaiPai_.get(index);
    }

    // optional int32 zhua_fen = 12;
    public static final int ZHUA_FEN_FIELD_NUMBER = 12;
    private int zhuaFen_;
    /**
     * <code>optional int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public boolean hasZhuaFen() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getZhuaFen() {
      return zhuaFen_;
    }

    // optional int32 kou_di_score = 15;
    public static final int KOU_DI_SCORE_FIELD_NUMBER = 15;
    private int kouDiScore_;
    /**
     * <code>optional int32 kou_di_score = 15;</code>
     *
     * <pre>
     *扣底分
     * </pre>
     */
    public boolean hasKouDiScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 kou_di_score = 15;</code>
     *
     * <pre>
     *扣底分
     * </pre>
     */
    public int getKouDiScore() {
      return kouDiScore_;
    }

    // optional int32 kou_di_times = 16;
    public static final int KOU_DI_TIMES_FIELD_NUMBER = 16;
    private int kouDiTimes_;
    /**
     * <code>optional int32 kou_di_times = 16;</code>
     *
     * <pre>
     *扣抵翻倍
     * </pre>
     */
    public boolean hasKouDiTimes() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 kou_di_times = 16;</code>
     *
     * <pre>
     *扣抵翻倍
     * </pre>
     */
    public int getKouDiTimes() {
      return kouDiTimes_;
    }

    // optional int32 all_zhua_score = 17;
    public static final int ALL_ZHUA_SCORE_FIELD_NUMBER = 17;
    private int allZhuaScore_;
    /**
     * <code>optional int32 all_zhua_score = 17;</code>
     *
     * <pre>
     *总抓分
     * </pre>
     */
    public boolean hasAllZhuaScore() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 all_zhua_score = 17;</code>
     *
     * <pre>
     *总抓分
     * </pre>
     */
    public int getAllZhuaScore() {
      return allZhuaScore_;
    }

    // optional int32 kou_di_sj = 18;
    public static final int KOU_DI_SJ_FIELD_NUMBER = 18;
    private int kouDiSj_;
    /**
     * <code>optional int32 kou_di_sj = 18;</code>
     *
     * <pre>
     *扣抵升级
     * </pre>
     */
    public boolean hasKouDiSj() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 kou_di_sj = 18;</code>
     *
     * <pre>
     *扣抵升级
     * </pre>
     */
    public int getKouDiSj() {
      return kouDiSj_;
    }

    // optional int32 other_banker = 20;
    public static final int OTHER_BANKER_FIELD_NUMBER = 20;
    private int otherBanker_;
    /**
     * <code>optional int32 other_banker = 20;</code>
     *
     * <pre>
     *工友
     * </pre>
     */
    public boolean hasOtherBanker() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 other_banker = 20;</code>
     *
     * <pre>
     *工友
     * </pre>
     */
    public int getOtherBanker() {
      return otherBanker_;
    }

    // repeated int32 all_end_score = 13;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 13;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated .RoomPlayerResponse players = 14;
    public static final int PLAYERS_FIELD_NUMBER = 14;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 14;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 total_win_times = 19;
    public static final int TOTAL_WIN_TIMES_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> totalWinTimes_;
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTotalWinTimesList() {
      return totalWinTimes_;
    }
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    public int getTotalWinTimesCount() {
      return totalWinTimes_.size();
    }
    /**
     * <code>repeated int32 total_win_times = 19;</code>
     *
     * <pre>
     *赢次数
     * </pre>
     */
    public int getTotalWinTimes(int index) {
      return totalWinTimes_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      bankerPlayer_ = 0;
      reason_ = 0;
      gameScore_ = java.util.Collections.emptyList();
      initDiPai_ = java.util.Collections.emptyList();
      bankerMaiPai_ = java.util.Collections.emptyList();
      zhuaFen_ = 0;
      kouDiScore_ = 0;
      kouDiTimes_ = 0;
      allZhuaScore_ = 0;
      kouDiSj_ = 0;
      otherBanker_ = 0;
      allEndScore_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
      totalWinTimes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < gameScore_.size(); i++) {
        output.writeInt32(9, gameScore_.get(i));
      }
      for (int i = 0; i < initDiPai_.size(); i++) {
        output.writeInt32(10, initDiPai_.get(i));
      }
      for (int i = 0; i < bankerMaiPai_.size(); i++) {
        output.writeInt32(11, bankerMaiPai_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(12, zhuaFen_);
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(13, allEndScore_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(14, players_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(15, kouDiScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(16, kouDiTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(17, allZhuaScore_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(18, kouDiSj_);
      }
      for (int i = 0; i < totalWinTimes_.size(); i++) {
        output.writeInt32(19, totalWinTimes_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(20, otherBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameScore_.get(i));
        }
        size += dataSize;
        size += 1 * getGameScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < initDiPai_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(initDiPai_.get(i));
        }
        size += dataSize;
        size += 1 * getInitDiPaiList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bankerMaiPai_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bankerMaiPai_.get(i));
        }
        size += dataSize;
        size += 1 * getBankerMaiPaiList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, zhuaFen_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, players_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, kouDiScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, kouDiTimes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, allZhuaScore_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, kouDiSj_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalWinTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalWinTimes_.get(i));
        }
        size += dataSize;
        size += 2 * getTotalWinTimesList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, otherBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.PukeGameEndLldq}
     *
     * <pre>
     *结算 1004
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.PukeGameEndLldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_PukeGameEndLldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_PukeGameEndLldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.class, protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        gameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        initDiPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        bankerMaiPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        zhuaFen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        kouDiScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        kouDiTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        allZhuaScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        kouDiSj_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        otherBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          playersBuilder_.clear();
        }
        totalWinTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_PukeGameEndLldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq build() {
        protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq result = new protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.reason_ = reason_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          gameScore_ = java.util.Collections.unmodifiableList(gameScore_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.gameScore_ = gameScore_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          initDiPai_ = java.util.Collections.unmodifiableList(initDiPai_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.initDiPai_ = initDiPai_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          bankerMaiPai_ = java.util.Collections.unmodifiableList(bankerMaiPai_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.bankerMaiPai_ = bankerMaiPai_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        result.zhuaFen_ = zhuaFen_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.kouDiScore_ = kouDiScore_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.kouDiTimes_ = kouDiTimes_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.allZhuaScore_ = allZhuaScore_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.kouDiSj_ = kouDiSj_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.otherBanker_ = otherBanker_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.allEndScore_ = allEndScore_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          totalWinTimes_ = java.util.Collections.unmodifiableList(totalWinTimes_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.totalWinTimes_ = totalWinTimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (!other.gameScore_.isEmpty()) {
          if (gameScore_.isEmpty()) {
            gameScore_ = other.gameScore_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureGameScoreIsMutable();
            gameScore_.addAll(other.gameScore_);
          }
          onChanged();
        }
        if (!other.initDiPai_.isEmpty()) {
          if (initDiPai_.isEmpty()) {
            initDiPai_ = other.initDiPai_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureInitDiPaiIsMutable();
            initDiPai_.addAll(other.initDiPai_);
          }
          onChanged();
        }
        if (!other.bankerMaiPai_.isEmpty()) {
          if (bankerMaiPai_.isEmpty()) {
            bankerMaiPai_ = other.bankerMaiPai_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureBankerMaiPaiIsMutable();
            bankerMaiPai_.addAll(other.bankerMaiPai_);
          }
          onChanged();
        }
        if (other.hasZhuaFen()) {
          setZhuaFen(other.getZhuaFen());
        }
        if (other.hasKouDiScore()) {
          setKouDiScore(other.getKouDiScore());
        }
        if (other.hasKouDiTimes()) {
          setKouDiTimes(other.getKouDiTimes());
        }
        if (other.hasAllZhuaScore()) {
          setAllZhuaScore(other.getAllZhuaScore());
        }
        if (other.hasKouDiSj()) {
          setKouDiSj(other.getKouDiSj());
        }
        if (other.hasOtherBanker()) {
          setOtherBanker(other.getOtherBanker());
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.totalWinTimes_.isEmpty()) {
          if (totalWinTimes_.isEmpty()) {
            totalWinTimes_ = other.totalWinTimes_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureTotalWinTimesIsMutable();
            totalWinTimes_.addAll(other.totalWinTimes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.PukeGameEndLldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional int32 player_num = 6;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 6;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 player_num = 6;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 6;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000020;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 6;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_player = 7;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 7;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 banker_player = 7;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 7;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000040;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 7;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 game_score = 9;
      private java.util.List<java.lang.Integer> gameScore_ = java.util.Collections.emptyList();
      private void ensureGameScoreIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          gameScore_ = new java.util.ArrayList<java.lang.Integer>(gameScore_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameScoreList() {
        return java.util.Collections.unmodifiableList(gameScore_);
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getGameScoreCount() {
        return gameScore_.size();
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getGameScore(int index) {
        return gameScore_.get(index);
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setGameScore(
          int index, int value) {
        ensureGameScoreIsMutable();
        gameScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder addGameScore(int value) {
        ensureGameScoreIsMutable();
        gameScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder addAllGameScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameScoreIsMutable();
        super.addAll(values, gameScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 9;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearGameScore() {
        gameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 init_di_pai = 10;
      private java.util.List<java.lang.Integer> initDiPai_ = java.util.Collections.emptyList();
      private void ensureInitDiPaiIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          initDiPai_ = new java.util.ArrayList<java.lang.Integer>(initDiPai_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInitDiPaiList() {
        return java.util.Collections.unmodifiableList(initDiPai_);
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public int getInitDiPaiCount() {
        return initDiPai_.size();
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public int getInitDiPai(int index) {
        return initDiPai_.get(index);
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public Builder setInitDiPai(
          int index, int value) {
        ensureInitDiPaiIsMutable();
        initDiPai_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public Builder addInitDiPai(int value) {
        ensureInitDiPaiIsMutable();
        initDiPai_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public Builder addAllInitDiPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInitDiPaiIsMutable();
        super.addAll(values, initDiPai_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 init_di_pai = 10;</code>
       *
       * <pre>
       *初始底牌
       * </pre>
       */
      public Builder clearInitDiPai() {
        initDiPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 banker_mai_pai = 11;
      private java.util.List<java.lang.Integer> bankerMaiPai_ = java.util.Collections.emptyList();
      private void ensureBankerMaiPaiIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          bankerMaiPai_ = new java.util.ArrayList<java.lang.Integer>(bankerMaiPai_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBankerMaiPaiList() {
        return java.util.Collections.unmodifiableList(bankerMaiPai_);
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public int getBankerMaiPaiCount() {
        return bankerMaiPai_.size();
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public int getBankerMaiPai(int index) {
        return bankerMaiPai_.get(index);
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public Builder setBankerMaiPai(
          int index, int value) {
        ensureBankerMaiPaiIsMutable();
        bankerMaiPai_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public Builder addBankerMaiPai(int value) {
        ensureBankerMaiPaiIsMutable();
        bankerMaiPai_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public Builder addAllBankerMaiPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBankerMaiPaiIsMutable();
        super.addAll(values, bankerMaiPai_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_mai_pai = 11;</code>
       *
       * <pre>
       *庄家埋牌
       * </pre>
       */
      public Builder clearBankerMaiPai() {
        bankerMaiPai_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional int32 zhua_fen = 12;
      private int zhuaFen_ ;
      /**
       * <code>optional int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public boolean hasZhuaFen() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getZhuaFen() {
        return zhuaFen_;
      }
      /**
       * <code>optional int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder setZhuaFen(int value) {
        bitField0_ |= 0x00000800;
        zhuaFen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder clearZhuaFen() {
        bitField0_ = (bitField0_ & ~0x00000800);
        zhuaFen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 kou_di_score = 15;
      private int kouDiScore_ ;
      /**
       * <code>optional int32 kou_di_score = 15;</code>
       *
       * <pre>
       *扣底分
       * </pre>
       */
      public boolean hasKouDiScore() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 kou_di_score = 15;</code>
       *
       * <pre>
       *扣底分
       * </pre>
       */
      public int getKouDiScore() {
        return kouDiScore_;
      }
      /**
       * <code>optional int32 kou_di_score = 15;</code>
       *
       * <pre>
       *扣底分
       * </pre>
       */
      public Builder setKouDiScore(int value) {
        bitField0_ |= 0x00001000;
        kouDiScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kou_di_score = 15;</code>
       *
       * <pre>
       *扣底分
       * </pre>
       */
      public Builder clearKouDiScore() {
        bitField0_ = (bitField0_ & ~0x00001000);
        kouDiScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 kou_di_times = 16;
      private int kouDiTimes_ ;
      /**
       * <code>optional int32 kou_di_times = 16;</code>
       *
       * <pre>
       *扣抵翻倍
       * </pre>
       */
      public boolean hasKouDiTimes() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 kou_di_times = 16;</code>
       *
       * <pre>
       *扣抵翻倍
       * </pre>
       */
      public int getKouDiTimes() {
        return kouDiTimes_;
      }
      /**
       * <code>optional int32 kou_di_times = 16;</code>
       *
       * <pre>
       *扣抵翻倍
       * </pre>
       */
      public Builder setKouDiTimes(int value) {
        bitField0_ |= 0x00002000;
        kouDiTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kou_di_times = 16;</code>
       *
       * <pre>
       *扣抵翻倍
       * </pre>
       */
      public Builder clearKouDiTimes() {
        bitField0_ = (bitField0_ & ~0x00002000);
        kouDiTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 all_zhua_score = 17;
      private int allZhuaScore_ ;
      /**
       * <code>optional int32 all_zhua_score = 17;</code>
       *
       * <pre>
       *总抓分
       * </pre>
       */
      public boolean hasAllZhuaScore() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 all_zhua_score = 17;</code>
       *
       * <pre>
       *总抓分
       * </pre>
       */
      public int getAllZhuaScore() {
        return allZhuaScore_;
      }
      /**
       * <code>optional int32 all_zhua_score = 17;</code>
       *
       * <pre>
       *总抓分
       * </pre>
       */
      public Builder setAllZhuaScore(int value) {
        bitField0_ |= 0x00004000;
        allZhuaScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 all_zhua_score = 17;</code>
       *
       * <pre>
       *总抓分
       * </pre>
       */
      public Builder clearAllZhuaScore() {
        bitField0_ = (bitField0_ & ~0x00004000);
        allZhuaScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 kou_di_sj = 18;
      private int kouDiSj_ ;
      /**
       * <code>optional int32 kou_di_sj = 18;</code>
       *
       * <pre>
       *扣抵升级
       * </pre>
       */
      public boolean hasKouDiSj() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 kou_di_sj = 18;</code>
       *
       * <pre>
       *扣抵升级
       * </pre>
       */
      public int getKouDiSj() {
        return kouDiSj_;
      }
      /**
       * <code>optional int32 kou_di_sj = 18;</code>
       *
       * <pre>
       *扣抵升级
       * </pre>
       */
      public Builder setKouDiSj(int value) {
        bitField0_ |= 0x00008000;
        kouDiSj_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kou_di_sj = 18;</code>
       *
       * <pre>
       *扣抵升级
       * </pre>
       */
      public Builder clearKouDiSj() {
        bitField0_ = (bitField0_ & ~0x00008000);
        kouDiSj_ = 0;
        onChanged();
        return this;
      }

      // optional int32 other_banker = 20;
      private int otherBanker_ ;
      /**
       * <code>optional int32 other_banker = 20;</code>
       *
       * <pre>
       *工友
       * </pre>
       */
      public boolean hasOtherBanker() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 other_banker = 20;</code>
       *
       * <pre>
       *工友
       * </pre>
       */
      public int getOtherBanker() {
        return otherBanker_;
      }
      /**
       * <code>optional int32 other_banker = 20;</code>
       *
       * <pre>
       *工友
       * </pre>
       */
      public Builder setOtherBanker(int value) {
        bitField0_ |= 0x00010000;
        otherBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 other_banker = 20;</code>
       *
       * <pre>
       *工友
       * </pre>
       */
      public Builder clearOtherBanker() {
        bitField0_ = (bitField0_ & ~0x00010000);
        otherBanker_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 13;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 13;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated .RoomPlayerResponse players = 14;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 14;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 total_win_times = 19;
      private java.util.List<java.lang.Integer> totalWinTimes_ = java.util.Collections.emptyList();
      private void ensureTotalWinTimesIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          totalWinTimes_ = new java.util.ArrayList<java.lang.Integer>(totalWinTimes_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTotalWinTimesList() {
        return java.util.Collections.unmodifiableList(totalWinTimes_);
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public int getTotalWinTimesCount() {
        return totalWinTimes_.size();
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public int getTotalWinTimes(int index) {
        return totalWinTimes_.get(index);
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public Builder setTotalWinTimes(
          int index, int value) {
        ensureTotalWinTimesIsMutable();
        totalWinTimes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public Builder addTotalWinTimes(int value) {
        ensureTotalWinTimesIsMutable();
        totalWinTimes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public Builder addAllTotalWinTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalWinTimesIsMutable();
        super.addAll(values, totalWinTimes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_times = 19;</code>
       *
       * <pre>
       *赢次数
       * </pre>
       */
      public Builder clearTotalWinTimes() {
        totalWinTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.PukeGameEndLldq)
    }

    static {
      defaultInstance = new PukeGameEndLldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.PukeGameEndLldq)
  }

  public interface TableResponse_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // repeated bool trustee = 4;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    java.util.List<java.lang.Boolean> getTrusteeList();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    int getTrusteeCount();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    boolean getTrustee(int index);

    // repeated .Int32ArrayResponse out_cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getOutCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getOutCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index);

    // repeated int32 out_cards_count = 6;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsCountList();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCountCount();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCount(int index);

    // repeated int32 out_cards_type = 7;
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsTypeList();
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    int getOutCardsTypeCount();
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    int getOutCardsType(int index);

    // repeated int32 card_type = 8;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType(int index);

    // optional int32 pr_out_card_player = 9;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    boolean hasPrOutCardPlayer();
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    int getPrOutCardPlayer();

    // repeated int32 pr_cards_data = 10;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 11;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 12;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional int32 is_first_out = 13;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    int getIsFirstOut();

    // optional int32 display_time = 14;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 card_count = 15;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 16;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional .RoomInfo room_info = 17;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 18;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 user_can_out_data = 19;
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutDataList();
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    int getUserCanOutData(int index);

    // optional int32 user_can_out_count = 20;
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    boolean hasUserCanOutCount();
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    int getUserCanOutCount();

    // optional int32 zhu_type = 21;
    /**
     * <code>optional int32 zhu_type = 21;</code>
     *
     * <pre>
     *主牌类型
     * </pre>
     */
    boolean hasZhuType();
    /**
     * <code>optional int32 zhu_type = 21;</code>
     *
     * <pre>
     *主牌类型
     * </pre>
     */
    int getZhuType();

    // optional int32 max_card_seat = 22;
    /**
     * <code>optional int32 max_card_seat = 22;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    boolean hasMaxCardSeat();
    /**
     * <code>optional int32 max_card_seat = 22;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    int getMaxCardSeat();

    // repeated int32 select_card = 23;
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelectCardList();
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    int getSelectCardCount();
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    int getSelectCard(int index);

    // optional int32 select_card_status = 24;
    /**
     * <code>optional int32 select_card_status = 24;</code>
     *
     * <pre>
     *1：上面 2：下面 3翻牌
     * </pre>
     */
    boolean hasSelectCardStatus();
    /**
     * <code>optional int32 select_card_status = 24;</code>
     *
     * <pre>
     *1：上面 2：下面 3翻牌
     * </pre>
     */
    int getSelectCardStatus();

    // optional int32 select_seat_index = 25;
    /**
     * <code>optional int32 select_seat_index = 25;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasSelectSeatIndex();
    /**
     * <code>optional int32 select_seat_index = 25;</code>
     *
     * <pre>
     * </pre>
     */
    int getSelectSeatIndex();

    // optional int32 fan_pai_card = 26;
    /**
     * <code>optional int32 fan_pai_card = 26;</code>
     *
     * <pre>
     *翻牌数据
     * </pre>
     */
    boolean hasFanPaiCard();
    /**
     * <code>optional int32 fan_pai_card = 26;</code>
     *
     * <pre>
     *翻牌数据
     * </pre>
     */
    int getFanPaiCard();

    // optional int32 other_banker = 27;
    /**
     * <code>optional int32 other_banker = 27;</code>
     *
     * <pre>
     *另一庄家
     * </pre>
     */
    boolean hasOtherBanker();
    /**
     * <code>optional int32 other_banker = 27;</code>
     *
     * <pre>
     *另一庄家
     * </pre>
     */
    int getOtherBanker();
  }
  /**
   * Protobuf type {@code lldq.TableResponse_Lldq}
   *
   * <pre>
   *1002
   * </pre>
   */
  public static final class TableResponse_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements TableResponse_LldqOrBuilder {
    // Use TableResponse_Lldq.newBuilder() to construct.
    private TableResponse_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse_Lldq defaultInstance;
    public static TableResponse_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              trustee_.add(input.readBool());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                trustee_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              outCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              outCardsCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCardsCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                outCardsType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              outCardsType_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                outCardsType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCardsType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              prOutCardPlayer_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              isFirstOut_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00008000;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00020000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              userCanOutData_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              bitField0_ |= 0x00000200;
              userCanOutCount_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00000400;
              zhuType_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00000800;
              maxCardSeat_ = input.readInt32();
              break;
            }
            case 184: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                selectCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              selectCard_.add(input.readInt32());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                selectCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                selectCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 192: {
              bitField0_ |= 0x00001000;
              selectCardStatus_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00002000;
              selectSeatIndex_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00004000;
              fanPaiCard_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00008000;
              otherBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          outCardsType_ = java.util.Collections.unmodifiableList(outCardsType_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          selectCard_ = java.util.Collections.unmodifiableList(selectCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableResponse_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableResponse_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.class, protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse_Lldq>() {
      public TableResponse_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // repeated bool trustee = 4;
    public static final int TRUSTEE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Boolean> trustee_;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getTrusteeList() {
      return trustee_;
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public int getTrusteeCount() {
      return trustee_.size();
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public boolean getTrustee(int index) {
      return trustee_.get(index);
    }

    // repeated .Int32ArrayResponse out_cards_data = 5;
    public static final int OUT_CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getOutCardsDataCount() {
      return outCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
      return outCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index) {
      return outCardsData_.get(index);
    }

    // repeated int32 out_cards_count = 6;
    public static final int OUT_CARDS_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> outCardsCount_;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsCountList() {
      return outCardsCount_;
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCountCount() {
      return outCardsCount_.size();
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCount(int index) {
      return outCardsCount_.get(index);
    }

    // repeated int32 out_cards_type = 7;
    public static final int OUT_CARDS_TYPE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> outCardsType_;
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsTypeList() {
      return outCardsType_;
    }
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    public int getOutCardsTypeCount() {
      return outCardsType_.size();
    }
    /**
     * <code>repeated int32 out_cards_type = 7;</code>
     *
     * <pre>
     *本轮出牌类型
     * </pre>
     */
    public int getOutCardsType(int index) {
      return outCardsType_.get(index);
    }

    // repeated int32 card_type = 8;
    public static final int CARD_TYPE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // optional int32 pr_out_card_player = 9;
    public static final int PR_OUT_CARD_PLAYER_FIELD_NUMBER = 9;
    private int prOutCardPlayer_;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public boolean hasPrOutCardPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public int getPrOutCardPlayer() {
      return prOutCardPlayer_;
    }

    // repeated int32 pr_cards_data = 10;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 11;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 11;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 12;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 12;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional int32 is_first_out = 13;
    public static final int IS_FIRST_OUT_FIELD_NUMBER = 13;
    private int isFirstOut_;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public int getIsFirstOut() {
      return isFirstOut_;
    }

    // optional int32 display_time = 14;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 14;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 card_count = 15;
    public static final int CARD_COUNT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 16;
    public static final int CARDS_DATA_FIELD_NUMBER = 16;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional .RoomInfo room_info = 17;
    public static final int ROOM_INFO_FIELD_NUMBER = 17;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 18;
    public static final int PLAYERS_FIELD_NUMBER = 18;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 user_can_out_data = 19;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> userCanOutData_;
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *可出牌数据
     * </pre>
     */
    public int getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }

    // optional int32 user_can_out_count = 20;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 20;
    private int userCanOutCount_;
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    public boolean hasUserCanOutCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *可出牌数目
     * </pre>
     */
    public int getUserCanOutCount() {
      return userCanOutCount_;
    }

    // optional int32 zhu_type = 21;
    public static final int ZHU_TYPE_FIELD_NUMBER = 21;
    private int zhuType_;
    /**
     * <code>optional int32 zhu_type = 21;</code>
     *
     * <pre>
     *主牌类型
     * </pre>
     */
    public boolean hasZhuType() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 zhu_type = 21;</code>
     *
     * <pre>
     *主牌类型
     * </pre>
     */
    public int getZhuType() {
      return zhuType_;
    }

    // optional int32 max_card_seat = 22;
    public static final int MAX_CARD_SEAT_FIELD_NUMBER = 22;
    private int maxCardSeat_;
    /**
     * <code>optional int32 max_card_seat = 22;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    public boolean hasMaxCardSeat() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 max_card_seat = 22;</code>
     *
     * <pre>
     *最大牌位置
     * </pre>
     */
    public int getMaxCardSeat() {
      return maxCardSeat_;
    }

    // repeated int32 select_card = 23;
    public static final int SELECT_CARD_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Integer> selectCard_;
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelectCardList() {
      return selectCard_;
    }
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    public int getSelectCardCount() {
      return selectCard_.size();
    }
    /**
     * <code>repeated int32 select_card = 23;</code>
     *
     * <pre>
     *玩家叫主
     * </pre>
     */
    public int getSelectCard(int index) {
      return selectCard_.get(index);
    }

    // optional int32 select_card_status = 24;
    public static final int SELECT_CARD_STATUS_FIELD_NUMBER = 24;
    private int selectCardStatus_;
    /**
     * <code>optional int32 select_card_status = 24;</code>
     *
     * <pre>
     *1：上面 2：下面 3翻牌
     * </pre>
     */
    public boolean hasSelectCardStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 select_card_status = 24;</code>
     *
     * <pre>
     *1：上面 2：下面 3翻牌
     * </pre>
     */
    public int getSelectCardStatus() {
      return selectCardStatus_;
    }

    // optional int32 select_seat_index = 25;
    public static final int SELECT_SEAT_INDEX_FIELD_NUMBER = 25;
    private int selectSeatIndex_;
    /**
     * <code>optional int32 select_seat_index = 25;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasSelectSeatIndex() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 select_seat_index = 25;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSelectSeatIndex() {
      return selectSeatIndex_;
    }

    // optional int32 fan_pai_card = 26;
    public static final int FAN_PAI_CARD_FIELD_NUMBER = 26;
    private int fanPaiCard_;
    /**
     * <code>optional int32 fan_pai_card = 26;</code>
     *
     * <pre>
     *翻牌数据
     * </pre>
     */
    public boolean hasFanPaiCard() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 fan_pai_card = 26;</code>
     *
     * <pre>
     *翻牌数据
     * </pre>
     */
    public int getFanPaiCard() {
      return fanPaiCard_;
    }

    // optional int32 other_banker = 27;
    public static final int OTHER_BANKER_FIELD_NUMBER = 27;
    private int otherBanker_;
    /**
     * <code>optional int32 other_banker = 27;</code>
     *
     * <pre>
     *另一庄家
     * </pre>
     */
    public boolean hasOtherBanker() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 other_banker = 27;</code>
     *
     * <pre>
     *另一庄家
     * </pre>
     */
    public int getOtherBanker() {
      return otherBanker_;
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      trustee_ = java.util.Collections.emptyList();
      outCardsData_ = java.util.Collections.emptyList();
      outCardsCount_ = java.util.Collections.emptyList();
      outCardsType_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      prOutCardPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      isFirstOut_ = 0;
      displayTime_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = 0;
      zhuType_ = 0;
      maxCardSeat_ = 0;
      selectCard_ = java.util.Collections.emptyList();
      selectCardStatus_ = 0;
      selectSeatIndex_ = 0;
      fanPaiCard_ = 0;
      otherBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      for (int i = 0; i < trustee_.size(); i++) {
        output.writeBool(4, trustee_.get(i));
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        output.writeMessage(5, outCardsData_.get(i));
      }
      for (int i = 0; i < outCardsCount_.size(); i++) {
        output.writeInt32(6, outCardsCount_.get(i));
      }
      for (int i = 0; i < outCardsType_.size(); i++) {
        output.writeInt32(7, outCardsType_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(8, cardType_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, prOutCardPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(10, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, displayTime_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(15, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(18, players_.get(i));
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeInt32(19, userCanOutData_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(20, userCanOutCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(21, zhuType_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(22, maxCardSeat_);
      }
      for (int i = 0; i < selectCard_.size(); i++) {
        output.writeInt32(23, selectCard_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(24, selectCardStatus_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(25, selectSeatIndex_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(26, fanPaiCard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(27, otherBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTrusteeList().size();
        size += dataSize;
        size += 1 * getTrusteeList().size();
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCardsCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCardsCount_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCardsType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCardsType_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, prOutCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutData_.get(i));
        }
        size += dataSize;
        size += 2 * getUserCanOutDataList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, userCanOutCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, zhuType_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, maxCardSeat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selectCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selectCard_.get(i));
        }
        size += dataSize;
        size += 2 * getSelectCardList().size();
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, selectCardStatus_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, selectSeatIndex_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, fanPaiCard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, otherBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.TableResponse_Lldq}
     *
     * <pre>
     *1002
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.TableResponse_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableResponse_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableResponse_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.class, protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutCardsDataFieldBuilder();
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          outCardsDataBuilder_.clear();
        }
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        outCardsType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        isFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          cardsDataBuilder_.clear();
        }
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          playersBuilder_.clear();
        }
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        userCanOutCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        zhuType_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        maxCardSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        selectCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        selectCardStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        selectSeatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        fanPaiCard_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        otherBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableResponse_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq result = new protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.trustee_ = trustee_;
        if (outCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outCardsData_ = outCardsData_;
        } else {
          result.outCardsData_ = outCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.outCardsCount_ = outCardsCount_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          outCardsType_ = java.util.Collections.unmodifiableList(outCardsType_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.outCardsType_ = outCardsType_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prOutCardPlayer_ = prOutCardPlayer_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.userCanOutData_ = userCanOutData_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.zhuType_ = zhuType_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxCardSeat_ = maxCardSeat_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          selectCard_ = java.util.Collections.unmodifiableList(selectCard_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.selectCard_ = selectCard_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.selectCardStatus_ = selectCardStatus_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.selectSeatIndex_ = selectSeatIndex_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fanPaiCard_ = fanPaiCard_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.otherBanker_ = otherBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (!other.trustee_.isEmpty()) {
          if (trustee_.isEmpty()) {
            trustee_ = other.trustee_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTrusteeIsMutable();
            trustee_.addAll(other.trustee_);
          }
          onChanged();
        }
        if (outCardsDataBuilder_ == null) {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsData_.isEmpty()) {
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutCardsDataIsMutable();
              outCardsData_.addAll(other.outCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsDataBuilder_.isEmpty()) {
              outCardsDataBuilder_.dispose();
              outCardsDataBuilder_ = null;
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutCardsDataFieldBuilder() : null;
            } else {
              outCardsDataBuilder_.addAllMessages(other.outCardsData_);
            }
          }
        }
        if (!other.outCardsCount_.isEmpty()) {
          if (outCardsCount_.isEmpty()) {
            outCardsCount_ = other.outCardsCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureOutCardsCountIsMutable();
            outCardsCount_.addAll(other.outCardsCount_);
          }
          onChanged();
        }
        if (!other.outCardsType_.isEmpty()) {
          if (outCardsType_.isEmpty()) {
            outCardsType_ = other.outCardsType_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOutCardsTypeIsMutable();
            outCardsType_.addAll(other.outCardsType_);
          }
          onChanged();
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (other.hasPrOutCardPlayer()) {
          setPrOutCardPlayer(other.getPrOutCardPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.userCanOutData_.isEmpty()) {
          if (userCanOutData_.isEmpty()) {
            userCanOutData_ = other.userCanOutData_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureUserCanOutDataIsMutable();
            userCanOutData_.addAll(other.userCanOutData_);
          }
          onChanged();
        }
        if (other.hasUserCanOutCount()) {
          setUserCanOutCount(other.getUserCanOutCount());
        }
        if (other.hasZhuType()) {
          setZhuType(other.getZhuType());
        }
        if (other.hasMaxCardSeat()) {
          setMaxCardSeat(other.getMaxCardSeat());
        }
        if (!other.selectCard_.isEmpty()) {
          if (selectCard_.isEmpty()) {
            selectCard_ = other.selectCard_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureSelectCardIsMutable();
            selectCard_.addAll(other.selectCard_);
          }
          onChanged();
        }
        if (other.hasSelectCardStatus()) {
          setSelectCardStatus(other.getSelectCardStatus());
        }
        if (other.hasSelectSeatIndex()) {
          setSelectSeatIndex(other.getSelectSeatIndex());
        }
        if (other.hasFanPaiCard()) {
          setFanPaiCard(other.getFanPaiCard());
        }
        if (other.hasOtherBanker()) {
          setOtherBanker(other.getOtherBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.TableResponse_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated bool trustee = 4;
      private java.util.List<java.lang.Boolean> trustee_ = java.util.Collections.emptyList();
      private void ensureTrusteeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = new java.util.ArrayList<java.lang.Boolean>(trustee_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getTrusteeList() {
        return java.util.Collections.unmodifiableList(trustee_);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public int getTrusteeCount() {
        return trustee_.size();
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public boolean getTrustee(int index) {
        return trustee_.get(index);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder setTrustee(
          int index, boolean value) {
        ensureTrusteeIsMutable();
        trustee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addTrustee(boolean value) {
        ensureTrusteeIsMutable();
        trustee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addAllTrustee(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTrusteeIsMutable();
        super.addAll(values, trustee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder clearTrustee() {
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse out_cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_ =
        java.util.Collections.emptyList();
      private void ensureOutCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(outCardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> outCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
        if (outCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outCardsData_);
        } else {
          return outCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getOutCardsDataCount() {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.size();
        } else {
          return outCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);
        } else {
          return outCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addAllOutCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          super.addAll(values, outCardsData_);
          onChanged();
        } else {
          outCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder clearOutCardsData() {
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder removeOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.remove(index);
          onChanged();
        } else {
          outCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
          int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);  } else {
          return outCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getOutCardsDataOrBuilderList() {
        if (outCardsDataBuilder_ != null) {
          return outCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder() {
        return getOutCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getOutCardsDataBuilderList() {
        return getOutCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getOutCardsDataFieldBuilder() {
        if (outCardsDataBuilder_ == null) {
          outCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  outCardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          outCardsData_ = null;
        }
        return outCardsDataBuilder_;
      }

      // repeated int32 out_cards_count = 6;
      private java.util.List<java.lang.Integer> outCardsCount_ = java.util.Collections.emptyList();
      private void ensureOutCardsCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = new java.util.ArrayList<java.lang.Integer>(outCardsCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsCountList() {
        return java.util.Collections.unmodifiableList(outCardsCount_);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCountCount() {
        return outCardsCount_.size();
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCount(int index) {
        return outCardsCount_.get(index);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder setOutCardsCount(
          int index, int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addOutCardsCount(int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addAllOutCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsCountIsMutable();
        super.addAll(values, outCardsCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder clearOutCardsCount() {
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 out_cards_type = 7;
      private java.util.List<java.lang.Integer> outCardsType_ = java.util.Collections.emptyList();
      private void ensureOutCardsTypeIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          outCardsType_ = new java.util.ArrayList<java.lang.Integer>(outCardsType_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsTypeList() {
        return java.util.Collections.unmodifiableList(outCardsType_);
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public int getOutCardsTypeCount() {
        return outCardsType_.size();
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public int getOutCardsType(int index) {
        return outCardsType_.get(index);
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public Builder setOutCardsType(
          int index, int value) {
        ensureOutCardsTypeIsMutable();
        outCardsType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public Builder addOutCardsType(int value) {
        ensureOutCardsTypeIsMutable();
        outCardsType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public Builder addAllOutCardsType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsTypeIsMutable();
        super.addAll(values, outCardsType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_type = 7;</code>
       *
       * <pre>
       *本轮出牌类型
       * </pre>
       */
      public Builder clearOutCardsType() {
        outCardsType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 card_type = 8;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_player = 9;
      private int prOutCardPlayer_ ;
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public boolean hasPrOutCardPlayer() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public int getPrOutCardPlayer() {
        return prOutCardPlayer_;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder setPrOutCardPlayer(int value) {
        bitField0_ |= 0x00000100;
        prOutCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder clearPrOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000100);
        prOutCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 10;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 11;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000400;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 12;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000800;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_first_out = 13;
      private int isFirstOut_ ;
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public int getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder setIsFirstOut(int value) {
        bitField0_ |= 0x00001000;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isFirstOut_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 14;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00002000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 15;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 16;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional .RoomInfo room_info = 17;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 18;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 user_can_out_data = 19;
      private java.util.List<java.lang.Integer> userCanOutData_ = java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = new java.util.ArrayList<java.lang.Integer>(userCanOutData_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutDataList() {
        return java.util.Collections.unmodifiableList(userCanOutData_);
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        return userCanOutData_.size();
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public int getUserCanOutData(int index) {
        return userCanOutData_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutDataIsMutable();
        super.addAll(values, userCanOutData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *可出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // optional int32 user_can_out_count = 20;
      private int userCanOutCount_ ;
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public boolean hasUserCanOutCount() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public int getUserCanOutCount() {
        return userCanOutCount_;
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public Builder setUserCanOutCount(int value) {
        bitField0_ |= 0x00080000;
        userCanOutCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *可出牌数目
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        bitField0_ = (bitField0_ & ~0x00080000);
        userCanOutCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 zhu_type = 21;
      private int zhuType_ ;
      /**
       * <code>optional int32 zhu_type = 21;</code>
       *
       * <pre>
       *主牌类型
       * </pre>
       */
      public boolean hasZhuType() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 zhu_type = 21;</code>
       *
       * <pre>
       *主牌类型
       * </pre>
       */
      public int getZhuType() {
        return zhuType_;
      }
      /**
       * <code>optional int32 zhu_type = 21;</code>
       *
       * <pre>
       *主牌类型
       * </pre>
       */
      public Builder setZhuType(int value) {
        bitField0_ |= 0x00100000;
        zhuType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhu_type = 21;</code>
       *
       * <pre>
       *主牌类型
       * </pre>
       */
      public Builder clearZhuType() {
        bitField0_ = (bitField0_ & ~0x00100000);
        zhuType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_card_seat = 22;
      private int maxCardSeat_ ;
      /**
       * <code>optional int32 max_card_seat = 22;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public boolean hasMaxCardSeat() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 max_card_seat = 22;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public int getMaxCardSeat() {
        return maxCardSeat_;
      }
      /**
       * <code>optional int32 max_card_seat = 22;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public Builder setMaxCardSeat(int value) {
        bitField0_ |= 0x00200000;
        maxCardSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_card_seat = 22;</code>
       *
       * <pre>
       *最大牌位置
       * </pre>
       */
      public Builder clearMaxCardSeat() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxCardSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 select_card = 23;
      private java.util.List<java.lang.Integer> selectCard_ = java.util.Collections.emptyList();
      private void ensureSelectCardIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          selectCard_ = new java.util.ArrayList<java.lang.Integer>(selectCard_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelectCardList() {
        return java.util.Collections.unmodifiableList(selectCard_);
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public int getSelectCardCount() {
        return selectCard_.size();
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public int getSelectCard(int index) {
        return selectCard_.get(index);
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public Builder setSelectCard(
          int index, int value) {
        ensureSelectCardIsMutable();
        selectCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public Builder addSelectCard(int value) {
        ensureSelectCardIsMutable();
        selectCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public Builder addAllSelectCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelectCardIsMutable();
        super.addAll(values, selectCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 select_card = 23;</code>
       *
       * <pre>
       *玩家叫主
       * </pre>
       */
      public Builder clearSelectCard() {
        selectCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // optional int32 select_card_status = 24;
      private int selectCardStatus_ ;
      /**
       * <code>optional int32 select_card_status = 24;</code>
       *
       * <pre>
       *1：上面 2：下面 3翻牌
       * </pre>
       */
      public boolean hasSelectCardStatus() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 select_card_status = 24;</code>
       *
       * <pre>
       *1：上面 2：下面 3翻牌
       * </pre>
       */
      public int getSelectCardStatus() {
        return selectCardStatus_;
      }
      /**
       * <code>optional int32 select_card_status = 24;</code>
       *
       * <pre>
       *1：上面 2：下面 3翻牌
       * </pre>
       */
      public Builder setSelectCardStatus(int value) {
        bitField0_ |= 0x00800000;
        selectCardStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 select_card_status = 24;</code>
       *
       * <pre>
       *1：上面 2：下面 3翻牌
       * </pre>
       */
      public Builder clearSelectCardStatus() {
        bitField0_ = (bitField0_ & ~0x00800000);
        selectCardStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 select_seat_index = 25;
      private int selectSeatIndex_ ;
      /**
       * <code>optional int32 select_seat_index = 25;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasSelectSeatIndex() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 select_seat_index = 25;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSelectSeatIndex() {
        return selectSeatIndex_;
      }
      /**
       * <code>optional int32 select_seat_index = 25;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setSelectSeatIndex(int value) {
        bitField0_ |= 0x01000000;
        selectSeatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 select_seat_index = 25;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearSelectSeatIndex() {
        bitField0_ = (bitField0_ & ~0x01000000);
        selectSeatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fan_pai_card = 26;
      private int fanPaiCard_ ;
      /**
       * <code>optional int32 fan_pai_card = 26;</code>
       *
       * <pre>
       *翻牌数据
       * </pre>
       */
      public boolean hasFanPaiCard() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 fan_pai_card = 26;</code>
       *
       * <pre>
       *翻牌数据
       * </pre>
       */
      public int getFanPaiCard() {
        return fanPaiCard_;
      }
      /**
       * <code>optional int32 fan_pai_card = 26;</code>
       *
       * <pre>
       *翻牌数据
       * </pre>
       */
      public Builder setFanPaiCard(int value) {
        bitField0_ |= 0x02000000;
        fanPaiCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fan_pai_card = 26;</code>
       *
       * <pre>
       *翻牌数据
       * </pre>
       */
      public Builder clearFanPaiCard() {
        bitField0_ = (bitField0_ & ~0x02000000);
        fanPaiCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 other_banker = 27;
      private int otherBanker_ ;
      /**
       * <code>optional int32 other_banker = 27;</code>
       *
       * <pre>
       *另一庄家
       * </pre>
       */
      public boolean hasOtherBanker() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 other_banker = 27;</code>
       *
       * <pre>
       *另一庄家
       * </pre>
       */
      public int getOtherBanker() {
        return otherBanker_;
      }
      /**
       * <code>optional int32 other_banker = 27;</code>
       *
       * <pre>
       *另一庄家
       * </pre>
       */
      public Builder setOtherBanker(int value) {
        bitField0_ |= 0x04000000;
        otherBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 other_banker = 27;</code>
       *
       * <pre>
       *另一庄家
       * </pre>
       */
      public Builder clearOtherBanker() {
        bitField0_ = (bitField0_ & ~0x04000000);
        otherBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.TableResponse_Lldq)
    }

    static {
      defaultInstance = new TableResponse_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.TableResponse_Lldq)
  }

  public interface GameStart_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 2;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code lldq.GameStart_Lldq}
   *
   * <pre>
   *1001
   * </pre>
   */
  public static final class GameStart_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements GameStart_LldqOrBuilder {
    // Use GameStart_Lldq.newBuilder() to construct.
    private GameStart_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStart_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStart_Lldq defaultInstance;
    public static GameStart_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public GameStart_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStart_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_GameStart_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_GameStart_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.class, protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStart_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<GameStart_Lldq>() {
      public GameStart_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStart_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStart_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.GameStart_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.GameStart_Lldq}
     *
     * <pre>
     *1001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.GameStart_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_GameStart_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_GameStart_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.class, protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_GameStart_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.GameStart_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.GameStart_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.GameStart_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.GameStart_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.GameStart_Lldq result = new protobuf.clazz.lldq.lldqRsp.GameStart_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.GameStart_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.GameStart_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.GameStart_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.GameStart_Lldq.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.GameStart_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.GameStart_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 2;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:lldq.GameStart_Lldq)
    }

    static {
      defaultInstance = new GameStart_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.GameStart_Lldq)
  }

  public interface SendCard_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_count = 1;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 hand_card_count = 3;
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code lldq.SendCard_Lldq}
   *
   * <pre>
   *1005
   * </pre>
   */
  public static final class SendCard_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements SendCard_LldqOrBuilder {
    // Use SendCard_Lldq.newBuilder() to construct.
    private SendCard_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCard_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCard_Lldq defaultInstance;
    public static SendCard_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public SendCard_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCard_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCard_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCard_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.class, protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCard_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<SendCard_Lldq>() {
      public SendCard_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCard_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCard_Lldq> getParserForType() {
      return PARSER;
    }

    // repeated int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 hand_card_count = 3;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 4;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    private void initFields() {
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(1, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(2, cardsData_.get(i));
      }
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(3, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(4, handCardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, handCardsData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.SendCard_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.SendCard_Lldq}
     *
     * <pre>
     *1005
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.SendCard_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCard_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCard_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.class, protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsDataBuilder_.clear();
        }
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCard_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.SendCard_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.SendCard_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.SendCard_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.SendCard_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.SendCard_Lldq result = new protobuf.clazz.lldq.lldqRsp.SendCard_Lldq(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.SendCard_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.SendCard_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.SendCard_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.SendCard_Lldq.getDefaultInstance()) return this;
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.SendCard_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.SendCard_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_count = 1;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 hand_card_count = 3;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:lldq.SendCard_Lldq)
    }

    static {
      defaultInstance = new SendCard_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.SendCard_Lldq)
  }

  public interface RefreshCardData_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 hand_card_count = 1;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);

    // optional int32 is_nomal = 3;
    /**
     * <code>optional int32 is_nomal = 3;</code>
     *
     * <pre>
     *1正常刷新不弹起来 0：弹起底牌
     * </pre>
     */
    boolean hasIsNomal();
    /**
     * <code>optional int32 is_nomal = 3;</code>
     *
     * <pre>
     *1正常刷新不弹起来 0：弹起底牌
     * </pre>
     */
    int getIsNomal();
  }
  /**
   * Protobuf type {@code lldq.RefreshCardData_Lldq}
   *
   * <pre>
   *1016
   * </pre>
   */
  public static final class RefreshCardData_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements RefreshCardData_LldqOrBuilder {
    // Use RefreshCardData_Lldq.newBuilder() to construct.
    private RefreshCardData_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshCardData_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshCardData_Lldq defaultInstance;
    public static RefreshCardData_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshCardData_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshCardData_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              isNomal_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_RefreshCardData_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_RefreshCardData_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.class, protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshCardData_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<RefreshCardData_Lldq>() {
      public RefreshCardData_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshCardData_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshCardData_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 hand_card_count = 1;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    // optional int32 is_nomal = 3;
    public static final int IS_NOMAL_FIELD_NUMBER = 3;
    private int isNomal_;
    /**
     * <code>optional int32 is_nomal = 3;</code>
     *
     * <pre>
     *1正常刷新不弹起来 0：弹起底牌
     * </pre>
     */
    public boolean hasIsNomal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 is_nomal = 3;</code>
     *
     * <pre>
     *1正常刷新不弹起来 0：弹起底牌
     * </pre>
     */
    public int getIsNomal() {
      return isNomal_;
    }

    private void initFields() {
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
      isNomal_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(1, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(2, handCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, isNomal_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, handCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, isNomal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.RefreshCardData_Lldq}
     *
     * <pre>
     *1016
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.RefreshCardData_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_RefreshCardData_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_RefreshCardData_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.class, protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          handCardsDataBuilder_.clear();
        }
        isNomal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_RefreshCardData_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq result = new protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isNomal_ = isNomal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq.getDefaultInstance()) return this;
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        if (other.hasIsNomal()) {
          setIsNomal(other.getIsNomal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.RefreshCardData_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 hand_card_count = 1;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // optional int32 is_nomal = 3;
      private int isNomal_ ;
      /**
       * <code>optional int32 is_nomal = 3;</code>
       *
       * <pre>
       *1正常刷新不弹起来 0：弹起底牌
       * </pre>
       */
      public boolean hasIsNomal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 is_nomal = 3;</code>
       *
       * <pre>
       *1正常刷新不弹起来 0：弹起底牌
       * </pre>
       */
      public int getIsNomal() {
        return isNomal_;
      }
      /**
       * <code>optional int32 is_nomal = 3;</code>
       *
       * <pre>
       *1正常刷新不弹起来 0：弹起底牌
       * </pre>
       */
      public Builder setIsNomal(int value) {
        bitField0_ |= 0x00000004;
        isNomal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_nomal = 3;</code>
       *
       * <pre>
       *1正常刷新不弹起来 0：弹起底牌
       * </pre>
       */
      public Builder clearIsNomal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isNomal_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.RefreshCardData_Lldq)
    }

    static {
      defaultInstance = new RefreshCardData_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.RefreshCardData_Lldq)
  }

  public interface CallBankerResponse_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 type = 3;
    /**
     * <code>optional int32 type = 3;</code>
     *
     * <pre>
     *叫主类型 1:亮 2：反主 3双亮 4:亮首七
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 3;</code>
     *
     * <pre>
     *叫主类型 1:亮 2：反主 3双亮 4:亮首七
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code lldq.CallBankerResponse_Lldq}
   *
   * <pre>
   *叫庄结果 1006
   * </pre>
   */
  public static final class CallBankerResponse_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements CallBankerResponse_LldqOrBuilder {
    // Use CallBankerResponse_Lldq.newBuilder() to construct.
    private CallBankerResponse_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CallBankerResponse_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CallBankerResponse_Lldq defaultInstance;
    public static CallBankerResponse_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public CallBankerResponse_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CallBankerResponse_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_CallBankerResponse_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_CallBankerResponse_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.class, protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<CallBankerResponse_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<CallBankerResponse_Lldq>() {
      public CallBankerResponse_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallBankerResponse_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CallBankerResponse_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>optional int32 type = 3;</code>
     *
     * <pre>
     *叫主类型 1:亮 2：反主 3双亮 4:亮首七
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 3;</code>
     *
     * <pre>
     *叫主类型 1:亮 2：反主 3双亮 4:亮首七
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      seatIndex_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.CallBankerResponse_Lldq}
     *
     * <pre>
     *叫庄结果 1006
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.CallBankerResponse_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_CallBankerResponse_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_CallBankerResponse_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.class, protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_CallBankerResponse_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq result = new protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.CallBankerResponse_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 type = 3;
      private int type_ ;
      /**
       * <code>optional int32 type = 3;</code>
       *
       * <pre>
       *叫主类型 1:亮 2：反主 3双亮 4:亮首七
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 type = 3;</code>
       *
       * <pre>
       *叫主类型 1:亮 2：反主 3双亮 4:亮首七
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 3;</code>
       *
       * <pre>
       *叫主类型 1:亮 2：反主 3双亮 4:亮首七
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 3;</code>
       *
       * <pre>
       *叫主类型 1:亮 2：反主 3双亮 4:亮首七
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.CallBankerResponse_Lldq)
    }

    static {
      defaultInstance = new CallBankerResponse_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.CallBankerResponse_Lldq)
  }

  public interface Zhu_Count_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 count = 1;
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCountList();
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    int getCountCount();
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    int getCount(int index);

    // repeated bool is_liang = 2;
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsLiangList();
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    int getIsLiangCount();
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    boolean getIsLiang(int index);
  }
  /**
   * Protobuf type {@code lldq.Zhu_Count_Lldq}
   *
   * <pre>
   *1011
   * </pre>
   */
  public static final class Zhu_Count_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements Zhu_Count_LldqOrBuilder {
    // Use Zhu_Count_Lldq.newBuilder() to construct.
    private Zhu_Count_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Zhu_Count_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Zhu_Count_Lldq defaultInstance;
    public static Zhu_Count_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public Zhu_Count_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Zhu_Count_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                count_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              count_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                count_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                count_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                isLiang_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000002;
              }
              isLiang_.add(input.readBool());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                isLiang_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                isLiang_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          count_ = java.util.Collections.unmodifiableList(count_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          isLiang_ = java.util.Collections.unmodifiableList(isLiang_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_Count_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_Count_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.class, protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<Zhu_Count_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<Zhu_Count_Lldq>() {
      public Zhu_Count_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Zhu_Count_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Zhu_Count_Lldq> getParserForType() {
      return PARSER;
    }

    // repeated int32 count = 1;
    public static final int COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> count_;
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCountList() {
      return count_;
    }
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    public int getCountCount() {
      return count_.size();
    }
    /**
     * <code>repeated int32 count = 1;</code>
     *
     * <pre>
     *大王小王黑红梅方翻牌
     * </pre>
     */
    public int getCount(int index) {
      return count_.get(index);
    }

    // repeated bool is_liang = 2;
    public static final int IS_LIANG_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Boolean> isLiang_;
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsLiangList() {
      return isLiang_;
    }
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    public int getIsLiangCount() {
      return isLiang_.size();
    }
    /**
     * <code>repeated bool is_liang = 2;</code>
     *
     * <pre>
     *是否亮
     * </pre>
     */
    public boolean getIsLiang(int index) {
      return isLiang_.get(index);
    }

    private void initFields() {
      count_ = java.util.Collections.emptyList();
      isLiang_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < count_.size(); i++) {
        output.writeInt32(1, count_.get(i));
      }
      for (int i = 0; i < isLiang_.size(); i++) {
        output.writeBool(2, isLiang_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < count_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(count_.get(i));
        }
        size += dataSize;
        size += 1 * getCountList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsLiangList().size();
        size += dataSize;
        size += 1 * getIsLiangList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.Zhu_Count_Lldq}
     *
     * <pre>
     *1011
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.Zhu_Count_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_Count_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_Count_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.class, protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        count_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isLiang_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_Count_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq result = new protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          count_ = java.util.Collections.unmodifiableList(count_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.count_ = count_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          isLiang_ = java.util.Collections.unmodifiableList(isLiang_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.isLiang_ = isLiang_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq.getDefaultInstance()) return this;
        if (!other.count_.isEmpty()) {
          if (count_.isEmpty()) {
            count_ = other.count_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCountIsMutable();
            count_.addAll(other.count_);
          }
          onChanged();
        }
        if (!other.isLiang_.isEmpty()) {
          if (isLiang_.isEmpty()) {
            isLiang_ = other.isLiang_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIsLiangIsMutable();
            isLiang_.addAll(other.isLiang_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.Zhu_Count_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 count = 1;
      private java.util.List<java.lang.Integer> count_ = java.util.Collections.emptyList();
      private void ensureCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          count_ = new java.util.ArrayList<java.lang.Integer>(count_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCountList() {
        return java.util.Collections.unmodifiableList(count_);
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public int getCountCount() {
        return count_.size();
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public int getCount(int index) {
        return count_.get(index);
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public Builder setCount(
          int index, int value) {
        ensureCountIsMutable();
        count_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public Builder addCount(int value) {
        ensureCountIsMutable();
        count_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public Builder addAllCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCountIsMutable();
        super.addAll(values, count_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 count = 1;</code>
       *
       * <pre>
       *大王小王黑红梅方翻牌
       * </pre>
       */
      public Builder clearCount() {
        count_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated bool is_liang = 2;
      private java.util.List<java.lang.Boolean> isLiang_ = java.util.Collections.emptyList();
      private void ensureIsLiangIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          isLiang_ = new java.util.ArrayList<java.lang.Boolean>(isLiang_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsLiangList() {
        return java.util.Collections.unmodifiableList(isLiang_);
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public int getIsLiangCount() {
        return isLiang_.size();
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public boolean getIsLiang(int index) {
        return isLiang_.get(index);
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public Builder setIsLiang(
          int index, boolean value) {
        ensureIsLiangIsMutable();
        isLiang_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public Builder addIsLiang(boolean value) {
        ensureIsLiangIsMutable();
        isLiang_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public Builder addAllIsLiang(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsLiangIsMutable();
        super.addAll(values, isLiang_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_liang = 2;</code>
       *
       * <pre>
       *是否亮
       * </pre>
       */
      public Builder clearIsLiang() {
        isLiang_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.Zhu_Count_Lldq)
    }

    static {
      defaultInstance = new Zhu_Count_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.Zhu_Count_Lldq)
  }

  public interface MaiDiBegin_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    int getSeatIndex();

    // optional int32 display_time = 2;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code lldq.MaiDiBegin_Lldq}
   *
   * <pre>
   *1008
   * </pre>
   */
  public static final class MaiDiBegin_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements MaiDiBegin_LldqOrBuilder {
    // Use MaiDiBegin_Lldq.newBuilder() to construct.
    private MaiDiBegin_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaiDiBegin_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaiDiBegin_Lldq defaultInstance;
    public static MaiDiBegin_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public MaiDiBegin_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaiDiBegin_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiBegin_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiBegin_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.class, protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<MaiDiBegin_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<MaiDiBegin_Lldq>() {
      public MaiDiBegin_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaiDiBegin_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaiDiBegin_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 display_time = 2;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 2;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      seatIndex_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.MaiDiBegin_Lldq}
     *
     * <pre>
     *1008
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.MaiDiBegin_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiBegin_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiBegin_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.class, protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiBegin_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq result = new protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.MaiDiBegin_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 2;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000002;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.MaiDiBegin_Lldq)
    }

    static {
      defaultInstance = new MaiDiBegin_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.MaiDiBegin_Lldq)
  }

  public interface MaiDiOpreate_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 opreate = 1;
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpreateList();
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    int getOpreateCount();
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    int getOpreate(int index);
  }
  /**
   * Protobuf type {@code lldq.MaiDiOpreate_Lldq}
   *
   * <pre>
   *1009
   * </pre>
   */
  public static final class MaiDiOpreate_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements MaiDiOpreate_LldqOrBuilder {
    // Use MaiDiOpreate_Lldq.newBuilder() to construct.
    private MaiDiOpreate_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaiDiOpreate_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaiDiOpreate_Lldq defaultInstance;
    public static MaiDiOpreate_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public MaiDiOpreate_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaiDiOpreate_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                opreate_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              opreate_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                opreate_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                opreate_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          opreate_ = java.util.Collections.unmodifiableList(opreate_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiOpreate_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiOpreate_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.class, protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<MaiDiOpreate_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<MaiDiOpreate_Lldq>() {
      public MaiDiOpreate_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaiDiOpreate_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaiDiOpreate_Lldq> getParserForType() {
      return PARSER;
    }

    // repeated int32 opreate = 1;
    public static final int OPREATE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> opreate_;
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpreateList() {
      return opreate_;
    }
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    public int getOpreateCount() {
      return opreate_.size();
    }
    /**
     * <code>repeated int32 opreate = 1;</code>
     *
     * <pre>
     *1投降 2：拿底牌 3：埋底牌
     * </pre>
     */
    public int getOpreate(int index) {
      return opreate_.get(index);
    }

    private void initFields() {
      opreate_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < opreate_.size(); i++) {
        output.writeInt32(1, opreate_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < opreate_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(opreate_.get(i));
        }
        size += dataSize;
        size += 1 * getOpreateList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.MaiDiOpreate_Lldq}
     *
     * <pre>
     *1009
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiOpreate_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiOpreate_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.class, protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_MaiDiOpreate_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq result = new protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          opreate_ = java.util.Collections.unmodifiableList(opreate_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.opreate_ = opreate_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq.getDefaultInstance()) return this;
        if (!other.opreate_.isEmpty()) {
          if (opreate_.isEmpty()) {
            opreate_ = other.opreate_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOpreateIsMutable();
            opreate_.addAll(other.opreate_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.MaiDiOpreate_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 opreate = 1;
      private java.util.List<java.lang.Integer> opreate_ = java.util.Collections.emptyList();
      private void ensureOpreateIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          opreate_ = new java.util.ArrayList<java.lang.Integer>(opreate_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpreateList() {
        return java.util.Collections.unmodifiableList(opreate_);
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public int getOpreateCount() {
        return opreate_.size();
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public int getOpreate(int index) {
        return opreate_.get(index);
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public Builder setOpreate(
          int index, int value) {
        ensureOpreateIsMutable();
        opreate_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public Builder addOpreate(int value) {
        ensureOpreateIsMutable();
        opreate_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public Builder addAllOpreate(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpreateIsMutable();
        super.addAll(values, opreate_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 opreate = 1;</code>
       *
       * <pre>
       *1投降 2：拿底牌 3：埋底牌
       * </pre>
       */
      public Builder clearOpreate() {
        opreate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.MaiDiOpreate_Lldq)
    }

    static {
      defaultInstance = new MaiDiOpreate_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.MaiDiOpreate_Lldq)
  }

  public interface SendCardEnd_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card_count = 1;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *底牌数目
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *底牌数目
     * </pre>
     */
    int getCardCount();

    // optional int32 is_animal = 2;
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    boolean hasIsAnimal();
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    int getIsAnimal();
  }
  /**
   * Protobuf type {@code lldq.SendCardEnd_Lldq}
   *
   * <pre>
   *1012
   * </pre>
   */
  public static final class SendCardEnd_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements SendCardEnd_LldqOrBuilder {
    // Use SendCardEnd_Lldq.newBuilder() to construct.
    private SendCardEnd_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardEnd_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardEnd_Lldq defaultInstance;
    public static SendCardEnd_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardEnd_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardEnd_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isAnimal_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCardEnd_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCardEnd_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.class, protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardEnd_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<SendCardEnd_Lldq>() {
      public SendCardEnd_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardEnd_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardEnd_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *底牌数目
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_count = 1;</code>
     *
     * <pre>
     *底牌数目
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    // optional int32 is_animal = 2;
    public static final int IS_ANIMAL_FIELD_NUMBER = 2;
    private int isAnimal_;
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    public boolean hasIsAnimal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    public int getIsAnimal() {
      return isAnimal_;
    }

    private void initFields() {
      cardCount_ = 0;
      isAnimal_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cardCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, isAnimal_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cardCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isAnimal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.SendCardEnd_Lldq}
     *
     * <pre>
     *1012
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.SendCardEnd_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCardEnd_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCardEnd_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.class, protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isAnimal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_SendCardEnd_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq result = new protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardCount_ = cardCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isAnimal_ = isAnimal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq.getDefaultInstance()) return this;
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        if (other.hasIsAnimal()) {
          setIsAnimal(other.getIsAnimal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.SendCardEnd_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card_count = 1;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *底牌数目
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *底牌数目
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *底牌数目
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000001;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 1;</code>
       *
       * <pre>
       *底牌数目
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_animal = 2;
      private int isAnimal_ ;
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public boolean hasIsAnimal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public int getIsAnimal() {
        return isAnimal_;
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public Builder setIsAnimal(int value) {
        bitField0_ |= 0x00000002;
        isAnimal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public Builder clearIsAnimal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isAnimal_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.SendCardEnd_Lldq)
    }

    static {
      defaultInstance = new SendCardEnd_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.SendCardEnd_Lldq)
  }

  public interface Card_ArraryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse card_data = 1;
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardDataList();
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardData(int index);
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    int getCardDataCount();
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code lldq.Card_Arrary}
   *
   * <pre>
   *二维数组
   * </pre>
   */
  public static final class Card_Arrary extends
      com.google.protobuf.GeneratedMessage
      implements Card_ArraryOrBuilder {
    // Use Card_Arrary.newBuilder() to construct.
    private Card_Arrary(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Card_Arrary(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Card_Arrary defaultInstance;
    public static Card_Arrary getDefaultInstance() {
      return defaultInstance;
    }

    public Card_Arrary getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Card_Arrary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Card_Arrary_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Card_Arrary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.Card_Arrary.class, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder.class);
    }

    public static com.google.protobuf.Parser<Card_Arrary> PARSER =
        new com.google.protobuf.AbstractParser<Card_Arrary>() {
      public Card_Arrary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Card_Arrary(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Card_Arrary> getParserForType() {
      return PARSER;
    }

    // repeated .Int32ArrayResponse card_data = 1;
    public static final int CARD_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardData_;
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardDataOrBuilderList() {
      return cardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardData(int index) {
      return cardData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse card_data = 1;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardDataOrBuilder(
        int index) {
      return cardData_.get(index);
    }

    private void initFields() {
      cardData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeMessage(1, cardData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Card_Arrary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.Card_Arrary prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.Card_Arrary}
     *
     * <pre>
     *二维数组
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Card_Arrary_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Card_Arrary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.Card_Arrary.class, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.Card_Arrary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardDataBuilder_ == null) {
          cardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Card_Arrary_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.Card_Arrary getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.Card_Arrary.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.Card_Arrary build() {
        protobuf.clazz.lldq.lldqRsp.Card_Arrary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.Card_Arrary buildPartial() {
        protobuf.clazz.lldq.lldqRsp.Card_Arrary result = new protobuf.clazz.lldq.lldqRsp.Card_Arrary(this);
        int from_bitField0_ = bitField0_;
        if (cardDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardData_ = java.util.Collections.unmodifiableList(cardData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardData_ = cardData_;
        } else {
          result.cardData_ = cardDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.Card_Arrary) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.Card_Arrary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.Card_Arrary other) {
        if (other == protobuf.clazz.lldq.lldqRsp.Card_Arrary.getDefaultInstance()) return this;
        if (cardDataBuilder_ == null) {
          if (!other.cardData_.isEmpty()) {
            if (cardData_.isEmpty()) {
              cardData_ = other.cardData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardDataIsMutable();
              cardData_.addAll(other.cardData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardData_.isEmpty()) {
            if (cardDataBuilder_.isEmpty()) {
              cardDataBuilder_.dispose();
              cardDataBuilder_ = null;
              cardData_ = other.cardData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardDataFieldBuilder() : null;
            } else {
              cardDataBuilder_.addAllMessages(other.cardData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.Card_Arrary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.Card_Arrary) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse card_data = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardData_ =
        java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardDataList() {
        if (cardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardData_);
        } else {
          return cardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public int getCardDataCount() {
        if (cardDataBuilder_ == null) {
          return cardData_.size();
        } else {
          return cardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardData(int index) {
        if (cardDataBuilder_ == null) {
          return cardData_.get(index);
        } else {
          return cardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder setCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.set(index, value);
          onChanged();
        } else {
          cardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder setCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder addCardData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.add(value);
          onChanged();
        } else {
          cardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder addCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.add(index, value);
          onChanged();
        } else {
          cardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder addCardData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.add(builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder addCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          super.addAll(values, cardData_);
          onChanged();
        } else {
          cardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder clearCardData() {
        if (cardDataBuilder_ == null) {
          cardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public Builder removeCardData(int index) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.remove(index);
          onChanged();
        } else {
          cardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardDataBuilder(
          int index) {
        return getCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardDataOrBuilder(
          int index) {
        if (cardDataBuilder_ == null) {
          return cardData_.get(index);  } else {
          return cardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardDataOrBuilderList() {
        if (cardDataBuilder_ != null) {
          return cardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardDataBuilder() {
        return getCardDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardDataBuilder(
          int index) {
        return getCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse card_data = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardDataBuilderList() {
        return getCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardDataFieldBuilder() {
        if (cardDataBuilder_ == null) {
          cardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardData_ = null;
        }
        return cardDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:lldq.Card_Arrary)
    }

    static {
      defaultInstance = new Card_Arrary(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.Card_Arrary)
  }

  public interface DiPaiCard_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_data = 1;
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardDataList();
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    int getCardDataCount();
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    int getCardData(int index);
  }
  /**
   * Protobuf type {@code lldq.DiPaiCard_Lldq}
   *
   * <pre>
   *1013
   * </pre>
   */
  public static final class DiPaiCard_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements DiPaiCard_LldqOrBuilder {
    // Use DiPaiCard_Lldq.newBuilder() to construct.
    private DiPaiCard_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DiPaiCard_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DiPaiCard_Lldq defaultInstance;
    public static DiPaiCard_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public DiPaiCard_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DiPaiCard_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardData_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_DiPaiCard_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_DiPaiCard_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.class, protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<DiPaiCard_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<DiPaiCard_Lldq>() {
      public DiPaiCard_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DiPaiCard_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DiPaiCard_Lldq> getParserForType() {
      return PARSER;
    }

    // repeated int32 card_data = 1;
    public static final int CARD_DATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardData_;
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *底牌数据
     * </pre>
     */
    public int getCardData(int index) {
      return cardData_.get(index);
    }

    private void initFields() {
      cardData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeInt32(1, cardData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.DiPaiCard_Lldq}
     *
     * <pre>
     *1013
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.DiPaiCard_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_DiPaiCard_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_DiPaiCard_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.class, protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_DiPaiCard_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq result = new protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardData_ = cardData_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq.getDefaultInstance()) return this;
        if (!other.cardData_.isEmpty()) {
          if (cardData_.isEmpty()) {
            cardData_ = other.cardData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardDataIsMutable();
            cardData_.addAll(other.cardData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.DiPaiCard_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_data = 1;
      private java.util.List<java.lang.Integer> cardData_ = java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = new java.util.ArrayList<java.lang.Integer>(cardData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardDataList() {
        return java.util.Collections.unmodifiableList(cardData_);
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public int getCardDataCount() {
        return cardData_.size();
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public int getCardData(int index) {
        return cardData_.get(index);
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public Builder setCardData(
          int index, int value) {
        ensureCardDataIsMutable();
        cardData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public Builder addCardData(int value) {
        ensureCardDataIsMutable();
        cardData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataIsMutable();
        super.addAll(values, cardData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *底牌数据
       * </pre>
       */
      public Builder clearCardData() {
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.DiPaiCard_Lldq)
    }

    static {
      defaultInstance = new DiPaiCard_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.DiPaiCard_Lldq)
  }

  public interface effect_typeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     */
    int getType();

    // optional int32 data = 3;
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
     * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
     * 18:小光 19：大光 20：满广
     * </pre>
     */
    boolean hasData();
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
     * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
     * 18:小光 19：大光 20：满广
     * </pre>
     */
    int getData();
  }
  /**
   * Protobuf type {@code lldq.effect_type}
   *
   * <pre>
   *1014
   * </pre>
   */
  public static final class effect_type extends
      com.google.protobuf.GeneratedMessage
      implements effect_typeOrBuilder {
    // Use effect_type.newBuilder() to construct.
    private effect_type(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private effect_type(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final effect_type defaultInstance;
    public static effect_type getDefaultInstance() {
      return defaultInstance;
    }

    public effect_type getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private effect_type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              data_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_effect_type_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_effect_type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.effect_type.class, protobuf.clazz.lldq.lldqRsp.effect_type.Builder.class);
    }

    public static com.google.protobuf.Parser<effect_type> PARSER =
        new com.google.protobuf.AbstractParser<effect_type>() {
      public effect_type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new effect_type(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<effect_type> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    // optional int32 data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private int data_;
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
     * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
     * 18:小光 19：大光 20：满广
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
     * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
     * 18:小光 19：大光 20：满广
     * </pre>
     */
    public int getData() {
      return data_;
    }

    private void initFields() {
      seatIndex_ = 0;
      type_ = 0;
      data_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.effect_type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.effect_type prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.effect_type}
     *
     * <pre>
     *1014
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.effect_typeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_effect_type_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_effect_type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.effect_type.class, protobuf.clazz.lldq.lldqRsp.effect_type.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.effect_type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_effect_type_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.effect_type getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.effect_type.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.effect_type build() {
        protobuf.clazz.lldq.lldqRsp.effect_type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.effect_type buildPartial() {
        protobuf.clazz.lldq.lldqRsp.effect_type result = new protobuf.clazz.lldq.lldqRsp.effect_type(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.effect_type) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.effect_type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.effect_type other) {
        if (other == protobuf.clazz.lldq.lldqRsp.effect_type.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.effect_type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.effect_type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 data = 3;
      private int data_ ;
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
       * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
       * 18:小光 19：大光 20：满广
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
       * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
       * 18:小光 19：大光 20：满广
       * </pre>
       */
      public int getData() {
        return data_;
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
       * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
       * 18:小光 19：大光 20：满广
       * </pre>
       */
      public Builder setData(int value) {
        bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *1：飞底牌 2：工头 3:公友 4:垫牌 5：毙了 6：打住 7：钓主 8：飞分数
       * 9:翻牌红色10:翻牌变白 11:底牌隐藏 12请选择亮主七或翻牌 13等待玩家亮首七 14请选择底牌 15再次点击双亮 16:隐藏叫主面板
       * 18:小光 19：大光 20：满广
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.effect_type)
    }

    static {
      defaultInstance = new effect_type(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.effect_type)
  }

  public interface sound_typeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：扣底音效 2：出牌音效
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：扣底音效 2：出牌音效
     * </pre>
     */
    int getType();

    // optional int32 card_sound = 3;
    /**
     * <code>optional int32 card_sound = 3;</code>
     *
     * <pre>
     *牌型音效
     * </pre>
     */
    boolean hasCardSound();
    /**
     * <code>optional int32 card_sound = 3;</code>
     *
     * <pre>
     *牌型音效
     * </pre>
     */
    int getCardSound();

    // optional int32 effect_sound = 4;
    /**
     * <code>optional int32 effect_sound = 4;</code>
     *
     * <pre>
     *特效音效
     * </pre>
     */
    boolean hasEffectSound();
    /**
     * <code>optional int32 effect_sound = 4;</code>
     *
     * <pre>
     *特效音效
     * </pre>
     */
    int getEffectSound();

    // repeated int32 card_data = 5;
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    java.util.List<java.lang.Integer> getCardDataList();
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    int getCardDataCount();
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    int getCardData(int index);
  }
  /**
   * Protobuf type {@code lldq.sound_type}
   *
   * <pre>
   *1017
   * </pre>
   */
  public static final class sound_type extends
      com.google.protobuf.GeneratedMessage
      implements sound_typeOrBuilder {
    // Use sound_type.newBuilder() to construct.
    private sound_type(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private sound_type(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final sound_type defaultInstance;
    public static sound_type getDefaultInstance() {
      return defaultInstance;
    }

    public sound_type getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private sound_type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cardSound_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              effectSound_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardData_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_sound_type_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_sound_type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.sound_type.class, protobuf.clazz.lldq.lldqRsp.sound_type.Builder.class);
    }

    public static com.google.protobuf.Parser<sound_type> PARSER =
        new com.google.protobuf.AbstractParser<sound_type>() {
      public sound_type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new sound_type(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<sound_type> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：扣底音效 2：出牌音效
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：扣底音效 2：出牌音效
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 card_sound = 3;
    public static final int CARD_SOUND_FIELD_NUMBER = 3;
    private int cardSound_;
    /**
     * <code>optional int32 card_sound = 3;</code>
     *
     * <pre>
     *牌型音效
     * </pre>
     */
    public boolean hasCardSound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card_sound = 3;</code>
     *
     * <pre>
     *牌型音效
     * </pre>
     */
    public int getCardSound() {
      return cardSound_;
    }

    // optional int32 effect_sound = 4;
    public static final int EFFECT_SOUND_FIELD_NUMBER = 4;
    private int effectSound_;
    /**
     * <code>optional int32 effect_sound = 4;</code>
     *
     * <pre>
     *特效音效
     * </pre>
     */
    public boolean hasEffectSound() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 effect_sound = 4;</code>
     *
     * <pre>
     *特效音效
     * </pre>
     */
    public int getEffectSound() {
      return effectSound_;
    }

    // repeated int32 card_data = 5;
    public static final int CARD_DATA_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cardData_;
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated int32 card_data = 5;</code>
     */
    public int getCardData(int index) {
      return cardData_.get(index);
    }

    private void initFields() {
      seatIndex_ = 0;
      type_ = 0;
      cardSound_ = 0;
      effectSound_ = 0;
      cardData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cardSound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, effectSound_);
      }
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeInt32(5, cardData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardSound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, effectSound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.sound_type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.sound_type prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.sound_type}
     *
     * <pre>
     *1017
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.sound_typeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_sound_type_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_sound_type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.sound_type.class, protobuf.clazz.lldq.lldqRsp.sound_type.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.sound_type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardSound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        effectSound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_sound_type_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.sound_type getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.sound_type.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.sound_type build() {
        protobuf.clazz.lldq.lldqRsp.sound_type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.sound_type buildPartial() {
        protobuf.clazz.lldq.lldqRsp.sound_type result = new protobuf.clazz.lldq.lldqRsp.sound_type(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardSound_ = cardSound_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.effectSound_ = effectSound_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardData_ = cardData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.sound_type) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.sound_type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.sound_type other) {
        if (other == protobuf.clazz.lldq.lldqRsp.sound_type.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCardSound()) {
          setCardSound(other.getCardSound());
        }
        if (other.hasEffectSound()) {
          setEffectSound(other.getEffectSound());
        }
        if (!other.cardData_.isEmpty()) {
          if (cardData_.isEmpty()) {
            cardData_ = other.cardData_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardDataIsMutable();
            cardData_.addAll(other.cardData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.sound_type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.sound_type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：扣底音效 2：出牌音效
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：扣底音效 2：出牌音效
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：扣底音效 2：出牌音效
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：扣底音效 2：出牌音效
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_sound = 3;
      private int cardSound_ ;
      /**
       * <code>optional int32 card_sound = 3;</code>
       *
       * <pre>
       *牌型音效
       * </pre>
       */
      public boolean hasCardSound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 card_sound = 3;</code>
       *
       * <pre>
       *牌型音效
       * </pre>
       */
      public int getCardSound() {
        return cardSound_;
      }
      /**
       * <code>optional int32 card_sound = 3;</code>
       *
       * <pre>
       *牌型音效
       * </pre>
       */
      public Builder setCardSound(int value) {
        bitField0_ |= 0x00000004;
        cardSound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_sound = 3;</code>
       *
       * <pre>
       *牌型音效
       * </pre>
       */
      public Builder clearCardSound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardSound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 effect_sound = 4;
      private int effectSound_ ;
      /**
       * <code>optional int32 effect_sound = 4;</code>
       *
       * <pre>
       *特效音效
       * </pre>
       */
      public boolean hasEffectSound() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 effect_sound = 4;</code>
       *
       * <pre>
       *特效音效
       * </pre>
       */
      public int getEffectSound() {
        return effectSound_;
      }
      /**
       * <code>optional int32 effect_sound = 4;</code>
       *
       * <pre>
       *特效音效
       * </pre>
       */
      public Builder setEffectSound(int value) {
        bitField0_ |= 0x00000008;
        effectSound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 effect_sound = 4;</code>
       *
       * <pre>
       *特效音效
       * </pre>
       */
      public Builder clearEffectSound() {
        bitField0_ = (bitField0_ & ~0x00000008);
        effectSound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_data = 5;
      private java.util.List<java.lang.Integer> cardData_ = java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardData_ = new java.util.ArrayList<java.lang.Integer>(cardData_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardDataList() {
        return java.util.Collections.unmodifiableList(cardData_);
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public int getCardDataCount() {
        return cardData_.size();
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public int getCardData(int index) {
        return cardData_.get(index);
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public Builder setCardData(
          int index, int value) {
        ensureCardDataIsMutable();
        cardData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public Builder addCardData(int value) {
        ensureCardDataIsMutable();
        cardData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataIsMutable();
        super.addAll(values, cardData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 5;</code>
       */
      public Builder clearCardData() {
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.sound_type)
    }

    static {
      defaultInstance = new sound_type(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.sound_type)
  }

  public interface Zhu_card_DataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_data = 1;
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardDataList();
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    int getCardDataCount();
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    int getCardData(int index);

    // optional int32 is_animal = 2;
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    boolean hasIsAnimal();
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    int getIsAnimal();

    // optional int32 seat_index = 3;
    /**
     * <code>optional int32 seat_index = 3;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 3;</code>
     */
    int getSeatIndex();

    // optional int32 is_fan_pai = 4;
    /**
     * <code>optional int32 is_fan_pai = 4;</code>
     *
     * <pre>
     *是否翻牌
     * </pre>
     */
    boolean hasIsFanPai();
    /**
     * <code>optional int32 is_fan_pai = 4;</code>
     *
     * <pre>
     *是否翻牌
     * </pre>
     */
    int getIsFanPai();
  }
  /**
   * Protobuf type {@code lldq.Zhu_card_Data}
   *
   * <pre>
   *1015
   * </pre>
   */
  public static final class Zhu_card_Data extends
      com.google.protobuf.GeneratedMessage
      implements Zhu_card_DataOrBuilder {
    // Use Zhu_card_Data.newBuilder() to construct.
    private Zhu_card_Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Zhu_card_Data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Zhu_card_Data defaultInstance;
    public static Zhu_card_Data getDefaultInstance() {
      return defaultInstance;
    }

    public Zhu_card_Data getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Zhu_card_Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardData_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isAnimal_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isFanPai_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_card_Data_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_card_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.class, protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.Builder.class);
    }

    public static com.google.protobuf.Parser<Zhu_card_Data> PARSER =
        new com.google.protobuf.AbstractParser<Zhu_card_Data>() {
      public Zhu_card_Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Zhu_card_Data(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Zhu_card_Data> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 card_data = 1;
    public static final int CARD_DATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardData_;
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated int32 card_data = 1;</code>
     *
     * <pre>
     *主牌数据
     * </pre>
     */
    public int getCardData(int index) {
      return cardData_.get(index);
    }

    // optional int32 is_animal = 2;
    public static final int IS_ANIMAL_FIELD_NUMBER = 2;
    private int isAnimal_;
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    public boolean hasIsAnimal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 is_animal = 2;</code>
     *
     * <pre>
     *是否动画 1:需要动画 0：直接显示数据
     * </pre>
     */
    public int getIsAnimal() {
      return isAnimal_;
    }

    // optional int32 seat_index = 3;
    public static final int SEAT_INDEX_FIELD_NUMBER = 3;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 3;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 3;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 is_fan_pai = 4;
    public static final int IS_FAN_PAI_FIELD_NUMBER = 4;
    private int isFanPai_;
    /**
     * <code>optional int32 is_fan_pai = 4;</code>
     *
     * <pre>
     *是否翻牌
     * </pre>
     */
    public boolean hasIsFanPai() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 is_fan_pai = 4;</code>
     *
     * <pre>
     *是否翻牌
     * </pre>
     */
    public int getIsFanPai() {
      return isFanPai_;
    }

    private void initFields() {
      cardData_ = java.util.Collections.emptyList();
      isAnimal_ = 0;
      seatIndex_ = 0;
      isFanPai_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeInt32(1, cardData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isAnimal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, isFanPai_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isAnimal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isFanPai_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.Zhu_card_Data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.Zhu_card_Data}
     *
     * <pre>
     *1015
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.Zhu_card_DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_card_Data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_card_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.class, protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isAnimal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isFanPai_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Zhu_card_Data_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_card_Data getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_card_Data build() {
        protobuf.clazz.lldq.lldqRsp.Zhu_card_Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.Zhu_card_Data buildPartial() {
        protobuf.clazz.lldq.lldqRsp.Zhu_card_Data result = new protobuf.clazz.lldq.lldqRsp.Zhu_card_Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardData_ = cardData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isAnimal_ = isAnimal_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isFanPai_ = isFanPai_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.Zhu_card_Data) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.Zhu_card_Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.Zhu_card_Data other) {
        if (other == protobuf.clazz.lldq.lldqRsp.Zhu_card_Data.getDefaultInstance()) return this;
        if (!other.cardData_.isEmpty()) {
          if (cardData_.isEmpty()) {
            cardData_ = other.cardData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardDataIsMutable();
            cardData_.addAll(other.cardData_);
          }
          onChanged();
        }
        if (other.hasIsAnimal()) {
          setIsAnimal(other.getIsAnimal());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIsFanPai()) {
          setIsFanPai(other.getIsFanPai());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.Zhu_card_Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.Zhu_card_Data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_data = 1;
      private java.util.List<java.lang.Integer> cardData_ = java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = new java.util.ArrayList<java.lang.Integer>(cardData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardDataList() {
        return java.util.Collections.unmodifiableList(cardData_);
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public int getCardDataCount() {
        return cardData_.size();
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public int getCardData(int index) {
        return cardData_.get(index);
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public Builder setCardData(
          int index, int value) {
        ensureCardDataIsMutable();
        cardData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public Builder addCardData(int value) {
        ensureCardDataIsMutable();
        cardData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataIsMutable();
        super.addAll(values, cardData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 1;</code>
       *
       * <pre>
       *主牌数据
       * </pre>
       */
      public Builder clearCardData() {
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 is_animal = 2;
      private int isAnimal_ ;
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public boolean hasIsAnimal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public int getIsAnimal() {
        return isAnimal_;
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public Builder setIsAnimal(int value) {
        bitField0_ |= 0x00000002;
        isAnimal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_animal = 2;</code>
       *
       * <pre>
       *是否动画 1:需要动画 0：直接显示数据
       * </pre>
       */
      public Builder clearIsAnimal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isAnimal_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 3;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 3;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 seat_index = 3;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 3;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000004;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 3;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_fan_pai = 4;
      private int isFanPai_ ;
      /**
       * <code>optional int32 is_fan_pai = 4;</code>
       *
       * <pre>
       *是否翻牌
       * </pre>
       */
      public boolean hasIsFanPai() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 is_fan_pai = 4;</code>
       *
       * <pre>
       *是否翻牌
       * </pre>
       */
      public int getIsFanPai() {
        return isFanPai_;
      }
      /**
       * <code>optional int32 is_fan_pai = 4;</code>
       *
       * <pre>
       *是否翻牌
       * </pre>
       */
      public Builder setIsFanPai(int value) {
        bitField0_ |= 0x00000008;
        isFanPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_fan_pai = 4;</code>
       *
       * <pre>
       *是否翻牌
       * </pre>
       */
      public Builder clearIsFanPai() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isFanPai_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.Zhu_card_Data)
    }

    static {
      defaultInstance = new Zhu_card_Data(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.Zhu_card_Data)
  }

  public interface LiShiCard_XfgdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .lldq.Card_Arrary card_data = 1;
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary> 
        getCardDataList();
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    protobuf.clazz.lldq.lldqRsp.Card_Arrary getCardData(int index);
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    int getCardDataCount();
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder> 
        getCardDataOrBuilderList();
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder getCardDataOrBuilder(
        int index);

    // optional int32 banker_player = 2;
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerPlayer();
  }
  /**
   * Protobuf type {@code lldq.LiShiCard_Xfgd}
   */
  public static final class LiShiCard_Xfgd extends
      com.google.protobuf.GeneratedMessage
      implements LiShiCard_XfgdOrBuilder {
    // Use LiShiCard_Xfgd.newBuilder() to construct.
    private LiShiCard_Xfgd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiShiCard_Xfgd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiShiCard_Xfgd defaultInstance;
    public static LiShiCard_Xfgd getDefaultInstance() {
      return defaultInstance;
    }

    public LiShiCard_Xfgd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiShiCard_Xfgd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardData_ = new java.util.ArrayList<protobuf.clazz.lldq.lldqRsp.Card_Arrary>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardData_.add(input.readMessage(protobuf.clazz.lldq.lldqRsp.Card_Arrary.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_LiShiCard_Xfgd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_LiShiCard_Xfgd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.class, protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.Builder.class);
    }

    public static com.google.protobuf.Parser<LiShiCard_Xfgd> PARSER =
        new com.google.protobuf.AbstractParser<LiShiCard_Xfgd>() {
      public LiShiCard_Xfgd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiShiCard_Xfgd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiShiCard_Xfgd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .lldq.Card_Arrary card_data = 1;
    public static final int CARD_DATA_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary> cardData_;
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary> getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder> 
        getCardDataOrBuilderList() {
      return cardData_;
    }
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    public protobuf.clazz.lldq.lldqRsp.Card_Arrary getCardData(int index) {
      return cardData_.get(index);
    }
    /**
     * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
     *
     * <pre>
     *历史数据
     * </pre>
     */
    public protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder getCardDataOrBuilder(
        int index) {
      return cardData_.get(index);
    }

    // optional int32 banker_player = 2;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 2;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    private void initFields() {
      cardData_ = java.util.Collections.emptyList();
      bankerPlayer_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeMessage(1, cardData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, bankerPlayer_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerPlayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.LiShiCard_Xfgd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.LiShiCard_XfgdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_LiShiCard_Xfgd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_LiShiCard_Xfgd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.class, protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardDataBuilder_ == null) {
          cardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardDataBuilder_.clear();
        }
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_LiShiCard_Xfgd_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd build() {
        protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd buildPartial() {
        protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd result = new protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardData_ = java.util.Collections.unmodifiableList(cardData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardData_ = cardData_;
        } else {
          result.cardData_ = cardDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd other) {
        if (other == protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd.getDefaultInstance()) return this;
        if (cardDataBuilder_ == null) {
          if (!other.cardData_.isEmpty()) {
            if (cardData_.isEmpty()) {
              cardData_ = other.cardData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardDataIsMutable();
              cardData_.addAll(other.cardData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardData_.isEmpty()) {
            if (cardDataBuilder_.isEmpty()) {
              cardDataBuilder_.dispose();
              cardDataBuilder_ = null;
              cardData_ = other.cardData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardDataFieldBuilder() : null;
            } else {
              cardDataBuilder_.addAllMessages(other.cardData_);
            }
          }
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.LiShiCard_Xfgd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .lldq.Card_Arrary card_data = 1;
      private java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary> cardData_ =
        java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardData_ = new java.util.ArrayList<protobuf.clazz.lldq.lldqRsp.Card_Arrary>(cardData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.lldq.lldqRsp.Card_Arrary, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder, protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder> cardDataBuilder_;

      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary> getCardDataList() {
        if (cardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardData_);
        } else {
          return cardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public int getCardDataCount() {
        if (cardDataBuilder_ == null) {
          return cardData_.size();
        } else {
          return cardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public protobuf.clazz.lldq.lldqRsp.Card_Arrary getCardData(int index) {
        if (cardDataBuilder_ == null) {
          return cardData_.get(index);
        } else {
          return cardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder setCardData(
          int index, protobuf.clazz.lldq.lldqRsp.Card_Arrary value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.set(index, value);
          onChanged();
        } else {
          cardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder setCardData(
          int index, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder addCardData(protobuf.clazz.lldq.lldqRsp.Card_Arrary value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.add(value);
          onChanged();
        } else {
          cardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder addCardData(
          int index, protobuf.clazz.lldq.lldqRsp.Card_Arrary value) {
        if (cardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardDataIsMutable();
          cardData_.add(index, value);
          onChanged();
        } else {
          cardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder addCardData(
          protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.add(builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder addCardData(
          int index, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder builderForValue) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends protobuf.clazz.lldq.lldqRsp.Card_Arrary> values) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          super.addAll(values, cardData_);
          onChanged();
        } else {
          cardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder clearCardData() {
        if (cardDataBuilder_ == null) {
          cardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public Builder removeCardData(int index) {
        if (cardDataBuilder_ == null) {
          ensureCardDataIsMutable();
          cardData_.remove(index);
          onChanged();
        } else {
          cardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder getCardDataBuilder(
          int index) {
        return getCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder getCardDataOrBuilder(
          int index) {
        if (cardDataBuilder_ == null) {
          return cardData_.get(index);  } else {
          return cardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder> 
           getCardDataOrBuilderList() {
        if (cardDataBuilder_ != null) {
          return cardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardData_);
        }
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder addCardDataBuilder() {
        return getCardDataFieldBuilder().addBuilder(
            protobuf.clazz.lldq.lldqRsp.Card_Arrary.getDefaultInstance());
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder addCardDataBuilder(
          int index) {
        return getCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.lldq.lldqRsp.Card_Arrary.getDefaultInstance());
      }
      /**
       * <code>repeated .lldq.Card_Arrary card_data = 1;</code>
       *
       * <pre>
       *历史数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder> 
           getCardDataBuilderList() {
        return getCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.lldq.lldqRsp.Card_Arrary, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder, protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder> 
          getCardDataFieldBuilder() {
        if (cardDataBuilder_ == null) {
          cardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.lldq.lldqRsp.Card_Arrary, protobuf.clazz.lldq.lldqRsp.Card_Arrary.Builder, protobuf.clazz.lldq.lldqRsp.Card_ArraryOrBuilder>(
                  cardData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardData_ = null;
        }
        return cardDataBuilder_;
      }

      // optional int32 banker_player = 2;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000002;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.LiShiCard_Xfgd)
    }

    static {
      defaultInstance = new LiShiCard_Xfgd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.LiShiCard_Xfgd)
  }

  public interface TableScore_LldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 get_score = 1;
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    java.util.List<java.lang.Integer> getGetScoreList();
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    int getGetScoreCount();
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    int getGetScore(int index);

    // optional int32 table_score = 2;
    /**
     * <code>optional int32 table_score = 2;</code>
     */
    boolean hasTableScore();
    /**
     * <code>optional int32 table_score = 2;</code>
     */
    int getTableScore();

    // optional int32 is_delay = 3;
    /**
     * <code>optional int32 is_delay = 3;</code>
     *
     * <pre>
     *0:不需要 1：需要
     * </pre>
     */
    boolean hasIsDelay();
    /**
     * <code>optional int32 is_delay = 3;</code>
     *
     * <pre>
     *0:不需要 1：需要
     * </pre>
     */
    int getIsDelay();
  }
  /**
   * Protobuf type {@code lldq.TableScore_Lldq}
   *
   * <pre>
   *1010
   * </pre>
   */
  public static final class TableScore_Lldq extends
      com.google.protobuf.GeneratedMessage
      implements TableScore_LldqOrBuilder {
    // Use TableScore_Lldq.newBuilder() to construct.
    private TableScore_Lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableScore_Lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableScore_Lldq defaultInstance;
    public static TableScore_Lldq getDefaultInstance() {
      return defaultInstance;
    }

    public TableScore_Lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableScore_Lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              getScore_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                getScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              tableScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isDelay_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableScore_Lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableScore_Lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.class, protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<TableScore_Lldq> PARSER =
        new com.google.protobuf.AbstractParser<TableScore_Lldq>() {
      public TableScore_Lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableScore_Lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableScore_Lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 get_score = 1;
    public static final int GET_SCORE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> getScore_;
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getGetScoreList() {
      return getScore_;
    }
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    public int getGetScoreCount() {
      return getScore_.size();
    }
    /**
     * <code>repeated int32 get_score = 1;</code>
     */
    public int getGetScore(int index) {
      return getScore_.get(index);
    }

    // optional int32 table_score = 2;
    public static final int TABLE_SCORE_FIELD_NUMBER = 2;
    private int tableScore_;
    /**
     * <code>optional int32 table_score = 2;</code>
     */
    public boolean hasTableScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 table_score = 2;</code>
     */
    public int getTableScore() {
      return tableScore_;
    }

    // optional int32 is_delay = 3;
    public static final int IS_DELAY_FIELD_NUMBER = 3;
    private int isDelay_;
    /**
     * <code>optional int32 is_delay = 3;</code>
     *
     * <pre>
     *0:不需要 1：需要
     * </pre>
     */
    public boolean hasIsDelay() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 is_delay = 3;</code>
     *
     * <pre>
     *0:不需要 1：需要
     * </pre>
     */
    public int getIsDelay() {
      return isDelay_;
    }

    private void initFields() {
      getScore_ = java.util.Collections.emptyList();
      tableScore_ = 0;
      isDelay_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < getScore_.size(); i++) {
        output.writeInt32(1, getScore_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, tableScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, isDelay_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < getScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(getScore_.get(i));
        }
        size += dataSize;
        size += 1 * getGetScoreList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tableScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, isDelay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.TableScore_Lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.TableScore_Lldq}
     *
     * <pre>
     *1010
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.TableScore_LldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableScore_Lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableScore_Lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.class, protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        tableScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isDelay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_TableScore_Lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.TableScore_Lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.TableScore_Lldq build() {
        protobuf.clazz.lldq.lldqRsp.TableScore_Lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.TableScore_Lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.TableScore_Lldq result = new protobuf.clazz.lldq.lldqRsp.TableScore_Lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.getScore_ = getScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableScore_ = tableScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isDelay_ = isDelay_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.TableScore_Lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.TableScore_Lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.TableScore_Lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.TableScore_Lldq.getDefaultInstance()) return this;
        if (!other.getScore_.isEmpty()) {
          if (getScore_.isEmpty()) {
            getScore_ = other.getScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGetScoreIsMutable();
            getScore_.addAll(other.getScore_);
          }
          onChanged();
        }
        if (other.hasTableScore()) {
          setTableScore(other.getTableScore());
        }
        if (other.hasIsDelay()) {
          setIsDelay(other.getIsDelay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.TableScore_Lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.TableScore_Lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 get_score = 1;
      private java.util.List<java.lang.Integer> getScore_ = java.util.Collections.emptyList();
      private void ensureGetScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = new java.util.ArrayList<java.lang.Integer>(getScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getGetScoreList() {
        return java.util.Collections.unmodifiableList(getScore_);
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public int getGetScoreCount() {
        return getScore_.size();
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public int getGetScore(int index) {
        return getScore_.get(index);
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public Builder setGetScore(
          int index, int value) {
        ensureGetScoreIsMutable();
        getScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public Builder addGetScore(int value) {
        ensureGetScoreIsMutable();
        getScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public Builder addAllGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGetScoreIsMutable();
        super.addAll(values, getScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       */
      public Builder clearGetScore() {
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 table_score = 2;
      private int tableScore_ ;
      /**
       * <code>optional int32 table_score = 2;</code>
       */
      public boolean hasTableScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       */
      public int getTableScore() {
        return tableScore_;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       */
      public Builder setTableScore(int value) {
        bitField0_ |= 0x00000002;
        tableScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       */
      public Builder clearTableScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_delay = 3;
      private int isDelay_ ;
      /**
       * <code>optional int32 is_delay = 3;</code>
       *
       * <pre>
       *0:不需要 1：需要
       * </pre>
       */
      public boolean hasIsDelay() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 is_delay = 3;</code>
       *
       * <pre>
       *0:不需要 1：需要
       * </pre>
       */
      public int getIsDelay() {
        return isDelay_;
      }
      /**
       * <code>optional int32 is_delay = 3;</code>
       *
       * <pre>
       *0:不需要 1：需要
       * </pre>
       */
      public Builder setIsDelay(int value) {
        bitField0_ |= 0x00000004;
        isDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_delay = 3;</code>
       *
       * <pre>
       *0:不需要 1：需要
       * </pre>
       */
      public Builder clearIsDelay() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isDelay_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.TableScore_Lldq)
    }

    static {
      defaultInstance = new TableScore_Lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.TableScore_Lldq)
  }

  public interface Refresh_ClockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 display_time = 1;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时钟
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时钟
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code lldq.Refresh_Clock}
   */
  public static final class Refresh_Clock extends
      com.google.protobuf.GeneratedMessage
      implements Refresh_ClockOrBuilder {
    // Use Refresh_Clock.newBuilder() to construct.
    private Refresh_Clock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Refresh_Clock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Refresh_Clock defaultInstance;
    public static Refresh_Clock getDefaultInstance() {
      return defaultInstance;
    }

    public Refresh_Clock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Refresh_Clock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Refresh_Clock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Refresh_Clock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.Refresh_Clock.class, protobuf.clazz.lldq.lldqRsp.Refresh_Clock.Builder.class);
    }

    public static com.google.protobuf.Parser<Refresh_Clock> PARSER =
        new com.google.protobuf.AbstractParser<Refresh_Clock>() {
      public Refresh_Clock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Refresh_Clock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Refresh_Clock> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 display_time = 1;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 1;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时钟
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时钟
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Refresh_Clock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.Refresh_Clock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.Refresh_Clock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.Refresh_ClockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Refresh_Clock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Refresh_Clock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.Refresh_Clock.class, protobuf.clazz.lldq.lldqRsp.Refresh_Clock.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.Refresh_Clock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Refresh_Clock_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.Refresh_Clock getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.Refresh_Clock.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.Refresh_Clock build() {
        protobuf.clazz.lldq.lldqRsp.Refresh_Clock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.Refresh_Clock buildPartial() {
        protobuf.clazz.lldq.lldqRsp.Refresh_Clock result = new protobuf.clazz.lldq.lldqRsp.Refresh_Clock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.Refresh_Clock) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.Refresh_Clock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.Refresh_Clock other) {
        if (other == protobuf.clazz.lldq.lldqRsp.Refresh_Clock.getDefaultInstance()) return this;
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.Refresh_Clock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.Refresh_Clock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 display_time = 1;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时钟
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时钟
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时钟
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000001;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时钟
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.Refresh_Clock)
    }

    static {
      defaultInstance = new Refresh_Clock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.Refresh_Clock)
  }

  public interface Opreate_RequestWsk_lldqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:叫主 2:投降 3：拿底牌，4：埋底牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:叫主 2:投降 3：拿底牌，4：埋底牌
     * </pre>
     */
    int getOpreateType();

    // optional int32 select_type = 2;
    /**
     * <code>optional int32 select_type = 2;</code>
     *
     * <pre>
     *0123456:黑红梅方小王大王翻牌
     * </pre>
     */
    boolean hasSelectType();
    /**
     * <code>optional int32 select_type = 2;</code>
     *
     * <pre>
     *0123456:黑红梅方小王大王翻牌
     * </pre>
     */
    int getSelectType();

    // repeated int32 cards_data = 4;
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    int getCardsData(int index);
  }
  /**
   * Protobuf type {@code lldq.Opreate_RequestWsk_lldq}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_RequestWsk_lldq extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_RequestWsk_lldqOrBuilder {
    // Use Opreate_RequestWsk_lldq.newBuilder() to construct.
    private Opreate_RequestWsk_lldq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_RequestWsk_lldq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_RequestWsk_lldq defaultInstance;
    public static Opreate_RequestWsk_lldq getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_RequestWsk_lldq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_RequestWsk_lldq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              selectType_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Opreate_RequestWsk_lldq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Opreate_RequestWsk_lldq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.class, protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_RequestWsk_lldq> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_RequestWsk_lldq>() {
      public Opreate_RequestWsk_lldq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_RequestWsk_lldq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_RequestWsk_lldq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:叫主 2:投降 3：拿底牌，4：埋底牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:叫主 2:投降 3：拿底牌，4：埋底牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 select_type = 2;
    public static final int SELECT_TYPE_FIELD_NUMBER = 2;
    private int selectType_;
    /**
     * <code>optional int32 select_type = 2;</code>
     *
     * <pre>
     *0123456:黑红梅方小王大王翻牌
     * </pre>
     */
    public boolean hasSelectType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 select_type = 2;</code>
     *
     * <pre>
     *0123456:黑红梅方小王大王翻牌
     * </pre>
     */
    public int getSelectType() {
      return selectType_;
    }

    // repeated int32 cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 4;</code>
     *
     * <pre>
     *埋底扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    private void initFields() {
      opreateType_ = 0;
      selectType_ = 0;
      cardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, selectType_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(4, cardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, selectType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lldq.Opreate_RequestWsk_lldq}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Opreate_RequestWsk_lldq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Opreate_RequestWsk_lldq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.class, protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.Builder.class);
      }

      // Construct using protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        selectType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.lldq.lldqRsp.internal_static_lldq_Opreate_RequestWsk_lldq_descriptor;
      }

      public protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq getDefaultInstanceForType() {
        return protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.getDefaultInstance();
      }

      public protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq build() {
        protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq buildPartial() {
        protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq result = new protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.selectType_ = selectType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardsData_ = cardsData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq) {
          return mergeFrom((protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq other) {
        if (other == protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasSelectType()) {
          setSelectType(other.getSelectType());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.lldq.lldqRsp.Opreate_RequestWsk_lldq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:叫主 2:投降 3：拿底牌，4：埋底牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:叫主 2:投降 3：拿底牌，4：埋底牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:叫主 2:投降 3：拿底牌，4：埋底牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:叫主 2:投降 3：拿底牌，4：埋底牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 select_type = 2;
      private int selectType_ ;
      /**
       * <code>optional int32 select_type = 2;</code>
       *
       * <pre>
       *0123456:黑红梅方小王大王翻牌
       * </pre>
       */
      public boolean hasSelectType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 select_type = 2;</code>
       *
       * <pre>
       *0123456:黑红梅方小王大王翻牌
       * </pre>
       */
      public int getSelectType() {
        return selectType_;
      }
      /**
       * <code>optional int32 select_type = 2;</code>
       *
       * <pre>
       *0123456:黑红梅方小王大王翻牌
       * </pre>
       */
      public Builder setSelectType(int value) {
        bitField0_ |= 0x00000002;
        selectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 select_type = 2;</code>
       *
       * <pre>
       *0123456:黑红梅方小王大王翻牌
       * </pre>
       */
      public Builder clearSelectType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selectType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 4;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 4;</code>
       *
       * <pre>
       *埋底扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lldq.Opreate_RequestWsk_lldq)
    }

    static {
      defaultInstance = new Opreate_RequestWsk_lldq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lldq.Opreate_RequestWsk_lldq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_OutCardDataLldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_OutCardDataLldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_PukeGameEndLldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_PukeGameEndLldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_TableResponse_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_TableResponse_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_GameStart_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_GameStart_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_SendCard_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_SendCard_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_RefreshCardData_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_RefreshCardData_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_CallBankerResponse_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_CallBankerResponse_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_Zhu_Count_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_Zhu_Count_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_MaiDiBegin_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_MaiDiBegin_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_MaiDiOpreate_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_MaiDiOpreate_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_SendCardEnd_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_SendCardEnd_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_Card_Arrary_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_Card_Arrary_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_DiPaiCard_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_DiPaiCard_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_effect_type_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_effect_type_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_sound_type_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_sound_type_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_Zhu_card_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_Zhu_card_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_LiShiCard_Xfgd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_LiShiCard_Xfgd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_TableScore_Lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_TableScore_Lldq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_Refresh_Clock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_Refresh_Clock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lldq_Opreate_RequestWsk_lldq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lldq_Opreate_RequestWsk_lldq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rsj/lldq.proto\022\004lldq\032\024basic/protocol.pr" +
      "oto\"\270\003\n\017OutCardDataLldq\022\027\n\017out_card_play" +
      "er\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\023\n\013cards_co" +
      "unt\030\003 \001(\005\022\021\n\tcard_type\030\004 \001(\005\022\022\n\ncur_play" +
      "er\030\005 \001(\005\022\025\n\rpr_cards_data\030\006 \003(\005\022\026\n\016pr_ca" +
      "rds_count\030\007 \001(\005\022\030\n\020pr_out_card_type\030\010 \001(" +
      "\005\022\024\n\014display_time\030\t \001(\005\022+\n\016hand_card_dat" +
      "a\030\n \003(\0132\023.Int32ArrayResponse\022\027\n\017hand_car" +
      "d_count\030\013 \003(\005\022\026\n\016max_value_seat\030\014 \001(\005\022\031\n" +
      "\021user_can_out_data\030\r \003(\005\022\032\n\022user_can_out",
      "_count\030\016 \001(\005\022\034\n\024is_current_first_out\030\017 \001" +
      "(\005\022\017\n\007isround\030\020 \001(\010\022\031\n\021card_data_failure" +
      "\030\021 \003(\005\"\344\003\n\017PukeGameEndLldq\022\034\n\troom_info\030" +
      "\001 \001(\0132\t.RoomInfo\022\021\n\tcur_round\030\002 \001(\005\022\022\n\ng" +
      "ame_round\030\003 \001(\005\022\022\n\ncard_count\030\004 \003(\005\022\'\n\nc" +
      "ards_data\030\005 \003(\0132\023.Int32ArrayResponse\022\022\n\n" +
      "player_num\030\006 \001(\005\022\025\n\rbanker_player\030\007 \001(\005\022" +
      "\016\n\006reason\030\010 \001(\005\022\022\n\ngame_score\030\t \003(\005\022\023\n\013i" +
      "nit_di_pai\030\n \003(\005\022\026\n\016banker_mai_pai\030\013 \003(\005" +
      "\022\020\n\010zhua_fen\030\014 \001(\005\022\024\n\014kou_di_score\030\017 \001(\005",
      "\022\024\n\014kou_di_times\030\020 \001(\005\022\026\n\016all_zhua_score" +
      "\030\021 \001(\005\022\021\n\tkou_di_sj\030\022 \001(\005\022\024\n\014other_banke" +
      "r\030\024 \001(\005\022\025\n\rall_end_score\030\r \003(\005\022$\n\007player" +
      "s\030\016 \003(\0132\023.RoomPlayerResponse\022\027\n\017total_wi" +
      "n_times\030\023 \003(\005\"\304\005\n\022TableResponse_Lldq\022\025\n\r" +
      "banker_player\030\001 \001(\005\022\026\n\016current_player\030\002 " +
      "\001(\005\022\023\n\013prev_player\030\003 \001(\005\022\017\n\007trustee\030\004 \003(" +
      "\010\022+\n\016out_cards_data\030\005 \003(\0132\023.Int32ArrayRe" +
      "sponse\022\027\n\017out_cards_count\030\006 \003(\005\022\026\n\016out_c" +
      "ards_type\030\007 \003(\005\022\021\n\tcard_type\030\010 \003(\005\022\032\n\022pr",
      "_out_card_player\030\t \001(\005\022\025\n\rpr_cards_data\030" +
      "\n \003(\005\022\026\n\016pr_cards_count\030\013 \001(\005\022\030\n\020pr_out_" +
      "card_type\030\014 \001(\005\022\024\n\014is_first_out\030\r \001(\005\022\024\n" +
      "\014display_time\030\016 \001(\005\022\022\n\ncard_count\030\017 \003(\005\022" +
      "\'\n\ncards_data\030\020 \003(\0132\023.Int32ArrayResponse" +
      "\022\034\n\troom_info\030\021 \001(\0132\t.RoomInfo\022$\n\007player" +
      "s\030\022 \003(\0132\023.RoomPlayerResponse\022\031\n\021user_can" +
      "_out_data\030\023 \003(\005\022\032\n\022user_can_out_count\030\024 " +
      "\001(\005\022\020\n\010zhu_type\030\025 \001(\005\022\025\n\rmax_card_seat\030\026" +
      " \001(\005\022\023\n\013select_card\030\027 \003(\005\022\032\n\022select_card",
      "_status\030\030 \001(\005\022\031\n\021select_seat_index\030\031 \001(\005" +
      "\022\024\n\014fan_pai_card\030\032 \001(\005\022\024\n\014other_banker\030\033" +
      " \001(\005\"T\n\016GameStart_Lldq\022\034\n\troom_info\030\001 \001(" +
      "\0132\t.RoomInfo\022$\n\007players\030\002 \003(\0132\023.RoomPlay" +
      "erResponse\"\223\001\n\rSendCard_Lldq\022\022\n\ncard_cou" +
      "nt\030\001 \003(\005\022\'\n\ncards_data\030\002 \003(\0132\023.Int32Arra" +
      "yResponse\022\027\n\017hand_card_count\030\003 \003(\005\022,\n\017ha" +
      "nd_cards_data\030\004 \003(\0132\023.Int32ArrayResponse" +
      "\"o\n\024RefreshCardData_Lldq\022\027\n\017hand_card_co" +
      "unt\030\001 \003(\005\022,\n\017hand_cards_data\030\002 \003(\0132\023.Int",
      "32ArrayResponse\022\020\n\010is_nomal\030\003 \001(\005\"O\n\027Cal" +
      "lBankerResponse_Lldq\022\022\n\nseat_index\030\001 \001(\005" +
      "\022\022\n\ncards_data\030\002 \003(\005\022\014\n\004type\030\003 \001(\005\"1\n\016Zh" +
      "u_Count_Lldq\022\r\n\005count\030\001 \003(\005\022\020\n\010is_liang\030" +
      "\002 \003(\010\";\n\017MaiDiBegin_Lldq\022\022\n\nseat_index\030\001" +
      " \001(\005\022\024\n\014display_time\030\002 \001(\005\"$\n\021MaiDiOprea" +
      "te_Lldq\022\017\n\007opreate\030\001 \003(\005\"9\n\020SendCardEnd_" +
      "Lldq\022\022\n\ncard_count\030\001 \001(\005\022\021\n\tis_animal\030\002 " +
      "\001(\005\"5\n\013Card_Arrary\022&\n\tcard_data\030\001 \003(\0132\023." +
      "Int32ArrayResponse\"#\n\016DiPaiCard_Lldq\022\021\n\t",
      "card_data\030\001 \003(\005\"=\n\013effect_type\022\022\n\nseat_i" +
      "ndex\030\002 \001(\005\022\014\n\004type\030\001 \001(\005\022\014\n\004data\030\003 \001(\005\"k" +
      "\n\nsound_type\022\022\n\nseat_index\030\002 \001(\005\022\014\n\004type" +
      "\030\001 \001(\005\022\022\n\ncard_sound\030\003 \001(\005\022\024\n\014effect_sou" +
      "nd\030\004 \001(\005\022\021\n\tcard_data\030\005 \003(\005\"]\n\rZhu_card_" +
      "Data\022\021\n\tcard_data\030\001 \003(\005\022\021\n\tis_animal\030\002 \001" +
      "(\005\022\022\n\nseat_index\030\003 \001(\005\022\022\n\nis_fan_pai\030\004 \001" +
      "(\005\"M\n\016LiShiCard_Xfgd\022$\n\tcard_data\030\001 \003(\0132" +
      "\021.lldq.Card_Arrary\022\025\n\rbanker_player\030\002 \001(" +
      "\005\"K\n\017TableScore_Lldq\022\021\n\tget_score\030\001 \003(\005\022",
      "\023\n\013table_score\030\002 \001(\005\022\020\n\010is_delay\030\003 \001(\005\"%" +
      "\n\rRefresh_Clock\022\024\n\014display_time\030\001 \001(\005\"X\n" +
      "\027Opreate_RequestWsk_lldq\022\024\n\014opreate_type" +
      "\030\001 \001(\005\022\023\n\013select_type\030\002 \001(\005\022\022\n\ncards_dat" +
      "a\030\004 \003(\005B\036\n\023protobuf.clazz.lldqB\007lldqRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_lldq_OutCardDataLldq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_lldq_OutCardDataLldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_OutCardDataLldq_descriptor,
              new java.lang.String[] { "OutCardPlayer", "CardsData", "CardsCount", "CardType", "CurPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "DisplayTime", "HandCardData", "HandCardCount", "MaxValueSeat", "UserCanOutData", "UserCanOutCount", "IsCurrentFirstOut", "Isround", "CardDataFailure", });
          internal_static_lldq_PukeGameEndLldq_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_lldq_PukeGameEndLldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_PukeGameEndLldq_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "PlayerNum", "BankerPlayer", "Reason", "GameScore", "InitDiPai", "BankerMaiPai", "ZhuaFen", "KouDiScore", "KouDiTimes", "AllZhuaScore", "KouDiSj", "OtherBanker", "AllEndScore", "Players", "TotalWinTimes", });
          internal_static_lldq_TableResponse_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_lldq_TableResponse_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_TableResponse_Lldq_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "Trustee", "OutCardsData", "OutCardsCount", "OutCardsType", "CardType", "PrOutCardPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "IsFirstOut", "DisplayTime", "CardCount", "CardsData", "RoomInfo", "Players", "UserCanOutData", "UserCanOutCount", "ZhuType", "MaxCardSeat", "SelectCard", "SelectCardStatus", "SelectSeatIndex", "FanPaiCard", "OtherBanker", });
          internal_static_lldq_GameStart_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_lldq_GameStart_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_GameStart_Lldq_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", });
          internal_static_lldq_SendCard_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_lldq_SendCard_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_SendCard_Lldq_descriptor,
              new java.lang.String[] { "CardCount", "CardsData", "HandCardCount", "HandCardsData", });
          internal_static_lldq_RefreshCardData_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_lldq_RefreshCardData_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_RefreshCardData_Lldq_descriptor,
              new java.lang.String[] { "HandCardCount", "HandCardsData", "IsNomal", });
          internal_static_lldq_CallBankerResponse_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_lldq_CallBankerResponse_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_CallBankerResponse_Lldq_descriptor,
              new java.lang.String[] { "SeatIndex", "CardsData", "Type", });
          internal_static_lldq_Zhu_Count_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_lldq_Zhu_Count_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_Zhu_Count_Lldq_descriptor,
              new java.lang.String[] { "Count", "IsLiang", });
          internal_static_lldq_MaiDiBegin_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_lldq_MaiDiBegin_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_MaiDiBegin_Lldq_descriptor,
              new java.lang.String[] { "SeatIndex", "DisplayTime", });
          internal_static_lldq_MaiDiOpreate_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_lldq_MaiDiOpreate_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_MaiDiOpreate_Lldq_descriptor,
              new java.lang.String[] { "Opreate", });
          internal_static_lldq_SendCardEnd_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_lldq_SendCardEnd_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_SendCardEnd_Lldq_descriptor,
              new java.lang.String[] { "CardCount", "IsAnimal", });
          internal_static_lldq_Card_Arrary_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_lldq_Card_Arrary_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_Card_Arrary_descriptor,
              new java.lang.String[] { "CardData", });
          internal_static_lldq_DiPaiCard_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_lldq_DiPaiCard_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_DiPaiCard_Lldq_descriptor,
              new java.lang.String[] { "CardData", });
          internal_static_lldq_effect_type_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_lldq_effect_type_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_effect_type_descriptor,
              new java.lang.String[] { "SeatIndex", "Type", "Data", });
          internal_static_lldq_sound_type_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_lldq_sound_type_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_sound_type_descriptor,
              new java.lang.String[] { "SeatIndex", "Type", "CardSound", "EffectSound", "CardData", });
          internal_static_lldq_Zhu_card_Data_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_lldq_Zhu_card_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_Zhu_card_Data_descriptor,
              new java.lang.String[] { "CardData", "IsAnimal", "SeatIndex", "IsFanPai", });
          internal_static_lldq_LiShiCard_Xfgd_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_lldq_LiShiCard_Xfgd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_LiShiCard_Xfgd_descriptor,
              new java.lang.String[] { "CardData", "BankerPlayer", });
          internal_static_lldq_TableScore_Lldq_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_lldq_TableScore_Lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_TableScore_Lldq_descriptor,
              new java.lang.String[] { "GetScore", "TableScore", "IsDelay", });
          internal_static_lldq_Refresh_Clock_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_lldq_Refresh_Clock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_Refresh_Clock_descriptor,
              new java.lang.String[] { "DisplayTime", });
          internal_static_lldq_Opreate_RequestWsk_lldq_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_lldq_Opreate_RequestWsk_lldq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lldq_Opreate_RequestWsk_lldq_descriptor,
              new java.lang.String[] { "OpreateType", "SelectType", "CardsData", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
