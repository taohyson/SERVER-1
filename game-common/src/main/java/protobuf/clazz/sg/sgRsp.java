// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sg/sgProto.proto

package protobuf.clazz.sg;

public final class sgRsp {
  private sgRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomPlayerResponseSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code fkn.RoomPlayerResponseSg}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseSg extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseSgOrBuilder {
    // Use RoomPlayerResponseSg.newBuilder() to construct.
    private RoomPlayerResponseSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseSg defaultInstance;
    public static RoomPlayerResponseSg getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_RoomPlayerResponseSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_RoomPlayerResponseSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.class, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseSg> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseSg>() {
      public RoomPlayerResponseSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.RoomPlayerResponseSg}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_RoomPlayerResponseSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_RoomPlayerResponseSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.class, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_RoomPlayerResponseSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg build() {
        protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg buildPartial() {
        protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg result = new protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg other) {
        if (other == protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.RoomPlayerResponseSg)
    }

    static {
      defaultInstance = new RoomPlayerResponseSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.RoomPlayerResponseSg)
  }

  public interface PlayerResultSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 player_score = 6;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScore(int index);
  }
  /**
   * Protobuf type {@code fkn.PlayerResultSg}
   *
   * <pre>
   *用户结束
   * </pre>
   */
  public static final class PlayerResultSg extends
      com.google.protobuf.GeneratedMessage
      implements PlayerResultSgOrBuilder {
    // Use PlayerResultSg.newBuilder() to construct.
    private PlayerResultSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerResultSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerResultSg defaultInstance;
    public static PlayerResultSg getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerResultSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerResultSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_PlayerResultSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_PlayerResultSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.PlayerResultSg.class, protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerResultSg> PARSER =
        new com.google.protobuf.AbstractParser<PlayerResultSg>() {
      public PlayerResultSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerResultSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerResultSg> getParserForType() {
      return PARSER;
    }

    // repeated int32 player_score = 6;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    private void initFields() {
      playerScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(6, playerScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PlayerResultSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.PlayerResultSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.PlayerResultSg}
     *
     * <pre>
     *用户结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PlayerResultSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PlayerResultSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.PlayerResultSg.class, protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.PlayerResultSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PlayerResultSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.PlayerResultSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.PlayerResultSg build() {
        protobuf.clazz.sg.sgRsp.PlayerResultSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.PlayerResultSg buildPartial() {
        protobuf.clazz.sg.sgRsp.PlayerResultSg result = new protobuf.clazz.sg.sgRsp.PlayerResultSg(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.playerScore_ = playerScore_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.PlayerResultSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.PlayerResultSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.PlayerResultSg other) {
        if (other == protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance()) return this;
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.PlayerResultSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.PlayerResultSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 player_score = 6;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.PlayerResultSg)
    }

    static {
      defaultInstance = new PlayerResultSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.PlayerResultSg)
  }

  public interface PukeGameEndSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_type = 5;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardType(int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .fkn.RoomPlayerResponseSg players = 9;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> 
        getPlayersList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index);
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index);

    // optional .fkn.PlayerResultSg player_result = 10;
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    boolean hasPlayerResult();
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.sg.sgRsp.PlayerResultSg getPlayerResult();
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder getPlayerResultOrBuilder();

    // optional int32 winner = 11;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    boolean hasWinner();
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    int getWinner();

    // repeated string str_sg_value = 12;
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrSgValueList();
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    int getStrSgValueCount();
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    java.lang.String getStrSgValue(int index);
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrSgValueBytes(int index);

    // optional int32 display = 13;
    /**
     * <code>optional int32 display = 13;</code>
     *
     * <pre>
     *准备时间
     * </pre>
     */
    boolean hasDisplay();
    /**
     * <code>optional int32 display = 13;</code>
     *
     * <pre>
     *准备时间
     * </pre>
     */
    int getDisplay();
  }
  /**
   * Protobuf type {@code fkn.PukeGameEndSg}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndSg extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndSgOrBuilder {
    // Use PukeGameEndSg.newBuilder() to construct.
    private PukeGameEndSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndSg defaultInstance;
    public static PukeGameEndSg getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playerResult_.toBuilder();
              }
              playerResult_ = input.readMessage(protobuf.clazz.sg.sgRsp.PlayerResultSg.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerResult_);
                playerResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              winner_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                strSgValue_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000800;
              }
              strSgValue_.add(input.readBytes());
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              display_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          strSgValue_ = new com.google.protobuf.UnmodifiableLazyStringList(strSgValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_PukeGameEndSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_PukeGameEndSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.PukeGameEndSg.class, protobuf.clazz.sg.sgRsp.PukeGameEndSg.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndSg> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndSg>() {
      public PukeGameEndSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_type = 5;
    public static final int CARD_TYPE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .fkn.RoomPlayerResponseSg players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional .fkn.PlayerResultSg player_result = 10;
    public static final int PLAYER_RESULT_FIELD_NUMBER = 10;
    private protobuf.clazz.sg.sgRsp.PlayerResultSg playerResult_;
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.sg.sgRsp.PlayerResultSg getPlayerResult() {
      return playerResult_;
    }
    /**
     * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder getPlayerResultOrBuilder() {
      return playerResult_;
    }

    // optional int32 winner = 11;
    public static final int WINNER_FIELD_NUMBER = 11;
    private int winner_;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public int getWinner() {
      return winner_;
    }

    // repeated string str_sg_value = 12;
    public static final int STR_SG_VALUE_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList strSgValue_;
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrSgValueList() {
      return strSgValue_;
    }
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    public int getStrSgValueCount() {
      return strSgValue_.size();
    }
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    public java.lang.String getStrSgValue(int index) {
      return strSgValue_.get(index);
    }
    /**
     * <code>repeated string str_sg_value = 12;</code>
     *
     * <pre>
     *类型描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrSgValueBytes(int index) {
      return strSgValue_.getByteString(index);
    }

    // optional int32 display = 13;
    public static final int DISPLAY_FIELD_NUMBER = 13;
    private int display_;
    /**
     * <code>optional int32 display = 13;</code>
     *
     * <pre>
     *准备时间
     * </pre>
     */
    public boolean hasDisplay() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display = 13;</code>
     *
     * <pre>
     *准备时间
     * </pre>
     */
    public int getDisplay() {
      return display_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      playerResult_ = protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance();
      winner_ = 0;
      strSgValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      display_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(5, cardType_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, winner_);
      }
      for (int i = 0; i < strSgValue_.size(); i++) {
        output.writeBytes(12, strSgValue_.getByteString(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, display_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, winner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strSgValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strSgValue_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStrSgValueList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, display_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.PukeGameEndSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.PukeGameEndSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.PukeGameEndSg}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.PukeGameEndSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PukeGameEndSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PukeGameEndSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.PukeGameEndSg.class, protobuf.clazz.sg.sgRsp.PukeGameEndSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.PukeGameEndSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
          getPlayerResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        winner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        strSgValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        display_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_PukeGameEndSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.PukeGameEndSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.PukeGameEndSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.PukeGameEndSg build() {
        protobuf.clazz.sg.sgRsp.PukeGameEndSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.PukeGameEndSg buildPartial() {
        protobuf.clazz.sg.sgRsp.PukeGameEndSg result = new protobuf.clazz.sg.sgRsp.PukeGameEndSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardType_ = cardType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playerResultBuilder_ == null) {
          result.playerResult_ = playerResult_;
        } else {
          result.playerResult_ = playerResultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winner_ = winner_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          strSgValue_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strSgValue_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.strSgValue_ = strSgValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.display_ = display_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.PukeGameEndSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.PukeGameEndSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.PukeGameEndSg other) {
        if (other == protobuf.clazz.sg.sgRsp.PukeGameEndSg.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasPlayerResult()) {
          mergePlayerResult(other.getPlayerResult());
        }
        if (other.hasWinner()) {
          setWinner(other.getWinner());
        }
        if (!other.strSgValue_.isEmpty()) {
          if (strSgValue_.isEmpty()) {
            strSgValue_ = other.strSgValue_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureStrSgValueIsMutable();
            strSgValue_.addAll(other.strSgValue_);
          }
          onChanged();
        }
        if (other.hasDisplay()) {
          setDisplay(other.getDisplay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.PukeGameEndSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.PukeGameEndSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_type = 5;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .fkn.RoomPlayerResponseSg players = 9;
      private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> playersBuilder_;

      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 9;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional .fkn.PlayerResultSg player_result = 10;
      private protobuf.clazz.sg.sgRsp.PlayerResultSg playerResult_ = protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.sg.sgRsp.PlayerResultSg, protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder, protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder> playerResultBuilder_;
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public boolean hasPlayerResult() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.sg.sgRsp.PlayerResultSg getPlayerResult() {
        if (playerResultBuilder_ == null) {
          return playerResult_;
        } else {
          return playerResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(protobuf.clazz.sg.sgRsp.PlayerResultSg value) {
        if (playerResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerResult_ = value;
          onChanged();
        } else {
          playerResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(
          protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder builderForValue) {
        if (playerResultBuilder_ == null) {
          playerResult_ = builderForValue.build();
          onChanged();
        } else {
          playerResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder mergePlayerResult(protobuf.clazz.sg.sgRsp.PlayerResultSg value) {
        if (playerResultBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              playerResult_ != protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance()) {
            playerResult_ =
              protobuf.clazz.sg.sgRsp.PlayerResultSg.newBuilder(playerResult_).mergeFrom(value).buildPartial();
          } else {
            playerResult_ = value;
          }
          onChanged();
        } else {
          playerResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearPlayerResult() {
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.sg.sgRsp.PlayerResultSg.getDefaultInstance();
          onChanged();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder getPlayerResultBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getPlayerResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder getPlayerResultOrBuilder() {
        if (playerResultBuilder_ != null) {
          return playerResultBuilder_.getMessageOrBuilder();
        } else {
          return playerResult_;
        }
      }
      /**
       * <code>optional .fkn.PlayerResultSg player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.sg.sgRsp.PlayerResultSg, protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder, protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder> 
          getPlayerResultFieldBuilder() {
        if (playerResultBuilder_ == null) {
          playerResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.sg.sgRsp.PlayerResultSg, protobuf.clazz.sg.sgRsp.PlayerResultSg.Builder, protobuf.clazz.sg.sgRsp.PlayerResultSgOrBuilder>(
                  playerResult_,
                  getParentForChildren(),
                  isClean());
          playerResult_ = null;
        }
        return playerResultBuilder_;
      }

      // optional int32 winner = 11;
      private int winner_ ;
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public int getWinner() {
        return winner_;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder setWinner(int value) {
        bitField0_ |= 0x00000400;
        winner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00000400);
        winner_ = 0;
        onChanged();
        return this;
      }

      // repeated string str_sg_value = 12;
      private com.google.protobuf.LazyStringList strSgValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrSgValueIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          strSgValue_ = new com.google.protobuf.LazyStringArrayList(strSgValue_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrSgValueList() {
        return java.util.Collections.unmodifiableList(strSgValue_);
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public int getStrSgValueCount() {
        return strSgValue_.size();
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public java.lang.String getStrSgValue(int index) {
        return strSgValue_.get(index);
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrSgValueBytes(int index) {
        return strSgValue_.getByteString(index);
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public Builder setStrSgValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrSgValueIsMutable();
        strSgValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public Builder addStrSgValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrSgValueIsMutable();
        strSgValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public Builder addAllStrSgValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrSgValueIsMutable();
        super.addAll(values, strSgValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public Builder clearStrSgValue() {
        strSgValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_sg_value = 12;</code>
       *
       * <pre>
       *类型描述
       * </pre>
       */
      public Builder addStrSgValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrSgValueIsMutable();
        strSgValue_.add(value);
        onChanged();
        return this;
      }

      // optional int32 display = 13;
      private int display_ ;
      /**
       * <code>optional int32 display = 13;</code>
       *
       * <pre>
       *准备时间
       * </pre>
       */
      public boolean hasDisplay() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 display = 13;</code>
       *
       * <pre>
       *准备时间
       * </pre>
       */
      public int getDisplay() {
        return display_;
      }
      /**
       * <code>optional int32 display = 13;</code>
       *
       * <pre>
       *准备时间
       * </pre>
       */
      public Builder setDisplay(int value) {
        bitField0_ |= 0x00001000;
        display_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display = 13;</code>
       *
       * <pre>
       *准备时间
       * </pre>
       */
      public Builder clearDisplay() {
        bitField0_ = (bitField0_ & ~0x00001000);
        display_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.PukeGameEndSg)
    }

    static {
      defaultInstance = new PukeGameEndSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.PukeGameEndSg)
  }

  public interface TableResponseSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional .RoomInfo room_info = 2;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .fkn.RoomPlayerResponseSg players = 3;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> 
        getPlayersList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index);
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 jetton_button = 5;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonButtonList();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButtonCount();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButton(int index);

    // repeated int32 jetton_score = 6;
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // repeated bool open_card = 7;
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    java.util.List<java.lang.Boolean> getOpenCardList();
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    int getOpenCardCount();
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    boolean getOpenCard(int index);

    // repeated bool liang_card = 8;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getLiangCardList();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    int getLiangCardCount();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    boolean getLiangCard(int index);

    // optional int32 scene_status = 9;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    boolean hasSceneStatus();
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    int getSceneStatus();

    // optional int32 display_time = 10;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 sg_value = 11;
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getSgValueList();
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    int getSgValueCount();
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    int getSgValue(int index);

    // repeated int32 times = 12;
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getTimesList();
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    int getTimesCount();
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    int getTimes(int index);

    // repeated int32 player_score = 13;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScore(int index);

    // repeated int32 call_button = 14;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallButtonList();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButtonCount();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButton(int index);

    // repeated int32 jh_value = 15;
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getJhValueList();
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    int getJhValueCount();
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    int getJhValue(int index);

    // repeated bool player_status = 16;
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    java.util.List<java.lang.Boolean> getPlayerStatusList();
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    int getPlayerStatusCount();
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    boolean getPlayerStatus(int index);

    // repeated int32 jh_times = 17;
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getJhTimesList();
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    int getJhTimesCount();
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    int getJhTimes(int index);
  }
  /**
   * Protobuf type {@code fkn.TableResponseSg}
   */
  public static final class TableResponseSg extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseSgOrBuilder {
    // Use TableResponseSg.newBuilder() to construct.
    private TableResponseSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseSg defaultInstance;
    public static TableResponseSg getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 18: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              jettonButton_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              openCard_.add(input.readBool());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                openCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              liangCard_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                liangCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              sceneStatus_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sgValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sgValue_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sgValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sgValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              times_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                times_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              callButton_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                callButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                jhValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              jhValue_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                jhValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                jhValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                playerStatus_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00008000;
              }
              playerStatus_.add(input.readBool());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                playerStatus_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerStatus_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                jhTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              jhTimes_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                jhTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                jhTimes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sgValue_ = java.util.Collections.unmodifiableList(sgValue_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          jhValue_ = java.util.Collections.unmodifiableList(jhValue_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          playerStatus_ = java.util.Collections.unmodifiableList(playerStatus_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          jhTimes_ = java.util.Collections.unmodifiableList(jhTimes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_TableResponseSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_TableResponseSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.TableResponseSg.class, protobuf.clazz.sg.sgRsp.TableResponseSg.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseSg> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseSg>() {
      public TableResponseSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional .RoomInfo room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .fkn.RoomPlayerResponseSg players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 jetton_button = 5;
    public static final int JETTON_BUTTON_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> jettonButton_;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonButtonList() {
      return jettonButton_;
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButtonCount() {
      return jettonButton_.size();
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButton(int index) {
      return jettonButton_.get(index);
    }

    // repeated int32 jetton_score = 6;
    public static final int JETTON_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // repeated bool open_card = 7;
    public static final int OPEN_CARD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Boolean> openCard_;
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getOpenCardList() {
      return openCard_;
    }
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public int getOpenCardCount() {
      return openCard_.size();
    }
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public boolean getOpenCard(int index) {
      return openCard_.get(index);
    }

    // repeated bool liang_card = 8;
    public static final int LIANG_CARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> liangCard_;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getLiangCardList() {
      return liangCard_;
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public int getLiangCardCount() {
      return liangCard_.size();
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public boolean getLiangCard(int index) {
      return liangCard_.get(index);
    }

    // optional int32 scene_status = 9;
    public static final int SCENE_STATUS_FIELD_NUMBER = 9;
    private int sceneStatus_;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public boolean hasSceneStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public int getSceneStatus() {
      return sceneStatus_;
    }

    // optional int32 display_time = 10;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 10;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 sg_value = 11;
    public static final int SG_VALUE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sgValue_;
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSgValueList() {
      return sgValue_;
    }
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public int getSgValueCount() {
      return sgValue_.size();
    }
    /**
     * <code>repeated int32 sg_value = 11;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public int getSgValue(int index) {
      return sgValue_.get(index);
    }

    // repeated int32 times = 12;
    public static final int TIMES_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> times_;
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTimesList() {
      return times_;
    }
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    public int getTimes(int index) {
      return times_.get(index);
    }

    // repeated int32 player_score = 13;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    // repeated int32 call_button = 14;
    public static final int CALL_BUTTON_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> callButton_;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallButtonList() {
      return callButton_;
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButtonCount() {
      return callButton_.size();
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButton(int index) {
      return callButton_.get(index);
    }

    // repeated int32 jh_value = 15;
    public static final int JH_VALUE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> jhValue_;
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJhValueList() {
      return jhValue_;
    }
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public int getJhValueCount() {
      return jhValue_.size();
    }
    /**
     * <code>repeated int32 jh_value = 15;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public int getJhValue(int index) {
      return jhValue_.get(index);
    }

    // repeated bool player_status = 16;
    public static final int PLAYER_STATUS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Boolean> playerStatus_;
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getPlayerStatusList() {
      return playerStatus_;
    }
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public int getPlayerStatusCount() {
      return playerStatus_.size();
    }
    /**
     * <code>repeated bool player_status = 16;</code>
     *
     * <pre>
     *玩家状态
     * </pre>
     */
    public boolean getPlayerStatus(int index) {
      return playerStatus_.get(index);
    }

    // repeated int32 jh_times = 17;
    public static final int JH_TIMES_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> jhTimes_;
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJhTimesList() {
      return jhTimes_;
    }
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    public int getJhTimesCount() {
      return jhTimes_.size();
    }
    /**
     * <code>repeated int32 jh_times = 17;</code>
     *
     * <pre>
     * 金花倍数
     * </pre>
     */
    public int getJhTimes(int index) {
      return jhTimes_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      jettonButton_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      openCard_ = java.util.Collections.emptyList();
      liangCard_ = java.util.Collections.emptyList();
      sceneStatus_ = 0;
      displayTime_ = 0;
      sgValue_ = java.util.Collections.emptyList();
      times_ = java.util.Collections.emptyList();
      playerScore_ = java.util.Collections.emptyList();
      callButton_ = java.util.Collections.emptyList();
      jhValue_ = java.util.Collections.emptyList();
      playerStatus_ = java.util.Collections.emptyList();
      jhTimes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonButton_.size(); i++) {
        output.writeInt32(5, jettonButton_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(6, jettonScore_.get(i));
      }
      for (int i = 0; i < openCard_.size(); i++) {
        output.writeBool(7, openCard_.get(i));
      }
      for (int i = 0; i < liangCard_.size(); i++) {
        output.writeBool(8, liangCard_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(10, displayTime_);
      }
      for (int i = 0; i < sgValue_.size(); i++) {
        output.writeInt32(11, sgValue_.get(i));
      }
      for (int i = 0; i < times_.size(); i++) {
        output.writeInt32(12, times_.get(i));
      }
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(13, playerScore_.get(i));
      }
      for (int i = 0; i < callButton_.size(); i++) {
        output.writeInt32(14, callButton_.get(i));
      }
      for (int i = 0; i < jhValue_.size(); i++) {
        output.writeInt32(15, jhValue_.get(i));
      }
      for (int i = 0; i < playerStatus_.size(); i++) {
        output.writeBool(16, playerStatus_.get(i));
      }
      for (int i = 0; i < jhTimes_.size(); i++) {
        output.writeInt32(17, jhTimes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonButton_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonButtonList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getOpenCardList().size();
        size += dataSize;
        size += 1 * getOpenCardList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getLiangCardList().size();
        size += dataSize;
        size += 1 * getLiangCardList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sgValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sgValue_.get(i));
        }
        size += dataSize;
        size += 1 * getSgValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < times_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(times_.get(i));
        }
        size += dataSize;
        size += 1 * getTimesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callButton_.get(i));
        }
        size += dataSize;
        size += 1 * getCallButtonList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jhValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jhValue_.get(i));
        }
        size += dataSize;
        size += 1 * getJhValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPlayerStatusList().size();
        size += dataSize;
        size += 2 * getPlayerStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jhTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jhTimes_.get(i));
        }
        size += dataSize;
        size += 2 * getJhTimesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.TableResponseSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.TableResponseSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.TableResponseSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.TableResponseSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_TableResponseSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_TableResponseSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.TableResponseSg.class, protobuf.clazz.sg.sgRsp.TableResponseSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.TableResponseSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        sceneStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        sgValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        jhValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        playerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        jhTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_TableResponseSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.TableResponseSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.TableResponseSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.TableResponseSg build() {
        protobuf.clazz.sg.sgRsp.TableResponseSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.TableResponseSg buildPartial() {
        protobuf.clazz.sg.sgRsp.TableResponseSg result = new protobuf.clazz.sg.sgRsp.TableResponseSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.jettonButton_ = jettonButton_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.jettonScore_ = jettonScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.openCard_ = openCard_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.liangCard_ = liangCard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sceneStatus_ = sceneStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sgValue_ = java.util.Collections.unmodifiableList(sgValue_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sgValue_ = sgValue_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = java.util.Collections.unmodifiableList(times_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.times_ = times_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.playerScore_ = playerScore_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.callButton_ = callButton_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          jhValue_ = java.util.Collections.unmodifiableList(jhValue_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.jhValue_ = jhValue_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          playerStatus_ = java.util.Collections.unmodifiableList(playerStatus_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.playerStatus_ = playerStatus_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          jhTimes_ = java.util.Collections.unmodifiableList(jhTimes_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.jhTimes_ = jhTimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.TableResponseSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.TableResponseSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.TableResponseSg other) {
        if (other == protobuf.clazz.sg.sgRsp.TableResponseSg.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.jettonButton_.isEmpty()) {
          if (jettonButton_.isEmpty()) {
            jettonButton_ = other.jettonButton_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureJettonButtonIsMutable();
            jettonButton_.addAll(other.jettonButton_);
          }
          onChanged();
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (!other.openCard_.isEmpty()) {
          if (openCard_.isEmpty()) {
            openCard_ = other.openCard_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOpenCardIsMutable();
            openCard_.addAll(other.openCard_);
          }
          onChanged();
        }
        if (!other.liangCard_.isEmpty()) {
          if (liangCard_.isEmpty()) {
            liangCard_ = other.liangCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLiangCardIsMutable();
            liangCard_.addAll(other.liangCard_);
          }
          onChanged();
        }
        if (other.hasSceneStatus()) {
          setSceneStatus(other.getSceneStatus());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.sgValue_.isEmpty()) {
          if (sgValue_.isEmpty()) {
            sgValue_ = other.sgValue_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSgValueIsMutable();
            sgValue_.addAll(other.sgValue_);
          }
          onChanged();
        }
        if (!other.times_.isEmpty()) {
          if (times_.isEmpty()) {
            times_ = other.times_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTimesIsMutable();
            times_.addAll(other.times_);
          }
          onChanged();
        }
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        if (!other.callButton_.isEmpty()) {
          if (callButton_.isEmpty()) {
            callButton_ = other.callButton_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCallButtonIsMutable();
            callButton_.addAll(other.callButton_);
          }
          onChanged();
        }
        if (!other.jhValue_.isEmpty()) {
          if (jhValue_.isEmpty()) {
            jhValue_ = other.jhValue_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureJhValueIsMutable();
            jhValue_.addAll(other.jhValue_);
          }
          onChanged();
        }
        if (!other.playerStatus_.isEmpty()) {
          if (playerStatus_.isEmpty()) {
            playerStatus_ = other.playerStatus_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensurePlayerStatusIsMutable();
            playerStatus_.addAll(other.playerStatus_);
          }
          onChanged();
        }
        if (!other.jhTimes_.isEmpty()) {
          if (jhTimes_.isEmpty()) {
            jhTimes_ = other.jhTimes_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureJhTimesIsMutable();
            jhTimes_.addAll(other.jhTimes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.TableResponseSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.TableResponseSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .RoomInfo room_info = 2;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .fkn.RoomPlayerResponseSg players = 3;
      private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> playersBuilder_;

      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 jetton_button = 5;
      private java.util.List<java.lang.Integer> jettonButton_ = java.util.Collections.emptyList();
      private void ensureJettonButtonIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = new java.util.ArrayList<java.lang.Integer>(jettonButton_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonButtonList() {
        return java.util.Collections.unmodifiableList(jettonButton_);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButtonCount() {
        return jettonButton_.size();
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButton(int index) {
        return jettonButton_.get(index);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder setJettonButton(
          int index, int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addJettonButton(int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addAllJettonButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonButtonIsMutable();
        super.addAll(values, jettonButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder clearJettonButton() {
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 6;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated bool open_card = 7;
      private java.util.List<java.lang.Boolean> openCard_ = java.util.Collections.emptyList();
      private void ensureOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = new java.util.ArrayList<java.lang.Boolean>(openCard_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getOpenCardList() {
        return java.util.Collections.unmodifiableList(openCard_);
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public int getOpenCardCount() {
        return openCard_.size();
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public boolean getOpenCard(int index) {
        return openCard_.get(index);
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder setOpenCard(
          int index, boolean value) {
        ensureOpenCardIsMutable();
        openCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addOpenCard(boolean value) {
        ensureOpenCardIsMutable();
        openCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addAllOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureOpenCardIsMutable();
        super.addAll(values, openCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder clearOpenCard() {
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool liang_card = 8;
      private java.util.List<java.lang.Boolean> liangCard_ = java.util.Collections.emptyList();
      private void ensureLiangCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = new java.util.ArrayList<java.lang.Boolean>(liangCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getLiangCardList() {
        return java.util.Collections.unmodifiableList(liangCard_);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public int getLiangCardCount() {
        return liangCard_.size();
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public boolean getLiangCard(int index) {
        return liangCard_.get(index);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder setLiangCard(
          int index, boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addLiangCard(boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addAllLiangCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureLiangCardIsMutable();
        super.addAll(values, liangCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder clearLiangCard() {
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 scene_status = 9;
      private int sceneStatus_ ;
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public boolean hasSceneStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public int getSceneStatus() {
        return sceneStatus_;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder setSceneStatus(int value) {
        bitField0_ |= 0x00000100;
        sceneStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder clearSceneStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sceneStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 10;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000200;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 sg_value = 11;
      private java.util.List<java.lang.Integer> sgValue_ = java.util.Collections.emptyList();
      private void ensureSgValueIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sgValue_ = new java.util.ArrayList<java.lang.Integer>(sgValue_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSgValueList() {
        return java.util.Collections.unmodifiableList(sgValue_);
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public int getSgValueCount() {
        return sgValue_.size();
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public int getSgValue(int index) {
        return sgValue_.get(index);
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder setSgValue(
          int index, int value) {
        ensureSgValueIsMutable();
        sgValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder addSgValue(int value) {
        ensureSgValueIsMutable();
        sgValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder addAllSgValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSgValueIsMutable();
        super.addAll(values, sgValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sg_value = 11;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder clearSgValue() {
        sgValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 times = 12;
      private java.util.List<java.lang.Integer> times_ = java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = new java.util.ArrayList<java.lang.Integer>(times_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTimesList() {
        return java.util.Collections.unmodifiableList(times_);
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public int getTimesCount() {
        return times_.size();
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public int getTimes(int index) {
        return times_.get(index);
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder setTimes(
          int index, int value) {
        ensureTimesIsMutable();
        times_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder addTimes(int value) {
        ensureTimesIsMutable();
        times_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimesIsMutable();
        super.addAll(values, times_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder clearTimes() {
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 player_score = 13;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 call_button = 14;
      private java.util.List<java.lang.Integer> callButton_ = java.util.Collections.emptyList();
      private void ensureCallButtonIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = new java.util.ArrayList<java.lang.Integer>(callButton_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallButtonList() {
        return java.util.Collections.unmodifiableList(callButton_);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButtonCount() {
        return callButton_.size();
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButton(int index) {
        return callButton_.get(index);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder setCallButton(
          int index, int value) {
        ensureCallButtonIsMutable();
        callButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addCallButton(int value) {
        ensureCallButtonIsMutable();
        callButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addAllCallButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallButtonIsMutable();
        super.addAll(values, callButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder clearCallButton() {
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 jh_value = 15;
      private java.util.List<java.lang.Integer> jhValue_ = java.util.Collections.emptyList();
      private void ensureJhValueIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          jhValue_ = new java.util.ArrayList<java.lang.Integer>(jhValue_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJhValueList() {
        return java.util.Collections.unmodifiableList(jhValue_);
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public int getJhValueCount() {
        return jhValue_.size();
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public int getJhValue(int index) {
        return jhValue_.get(index);
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder setJhValue(
          int index, int value) {
        ensureJhValueIsMutable();
        jhValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder addJhValue(int value) {
        ensureJhValueIsMutable();
        jhValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder addAllJhValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJhValueIsMutable();
        super.addAll(values, jhValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_value = 15;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder clearJhValue() {
        jhValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated bool player_status = 16;
      private java.util.List<java.lang.Boolean> playerStatus_ = java.util.Collections.emptyList();
      private void ensurePlayerStatusIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          playerStatus_ = new java.util.ArrayList<java.lang.Boolean>(playerStatus_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getPlayerStatusList() {
        return java.util.Collections.unmodifiableList(playerStatus_);
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public int getPlayerStatusCount() {
        return playerStatus_.size();
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public boolean getPlayerStatus(int index) {
        return playerStatus_.get(index);
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder setPlayerStatus(
          int index, boolean value) {
        ensurePlayerStatusIsMutable();
        playerStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder addPlayerStatus(boolean value) {
        ensurePlayerStatusIsMutable();
        playerStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder addAllPlayerStatus(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePlayerStatusIsMutable();
        super.addAll(values, playerStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_status = 16;</code>
       *
       * <pre>
       *玩家状态
       * </pre>
       */
      public Builder clearPlayerStatus() {
        playerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 jh_times = 17;
      private java.util.List<java.lang.Integer> jhTimes_ = java.util.Collections.emptyList();
      private void ensureJhTimesIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          jhTimes_ = new java.util.ArrayList<java.lang.Integer>(jhTimes_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJhTimesList() {
        return java.util.Collections.unmodifiableList(jhTimes_);
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public int getJhTimesCount() {
        return jhTimes_.size();
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public int getJhTimes(int index) {
        return jhTimes_.get(index);
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public Builder setJhTimes(
          int index, int value) {
        ensureJhTimesIsMutable();
        jhTimes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public Builder addJhTimes(int value) {
        ensureJhTimesIsMutable();
        jhTimes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public Builder addAllJhTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJhTimesIsMutable();
        super.addAll(values, jhTimes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jh_times = 17;</code>
       *
       * <pre>
       * 金花倍数
       * </pre>
       */
      public Builder clearJhTimes() {
        jhTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.TableResponseSg)
    }

    static {
      defaultInstance = new TableResponseSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.TableResponseSg)
  }

  public interface ButtonOperateSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    int getOpreateType();

    // repeated int32 button = 2;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getButtonList();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButtonCount();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButton(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code fkn.ButtonOperateSg}
   */
  public static final class ButtonOperateSg extends
      com.google.protobuf.GeneratedMessage
      implements ButtonOperateSgOrBuilder {
    // Use ButtonOperateSg.newBuilder() to construct.
    private ButtonOperateSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ButtonOperateSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ButtonOperateSg defaultInstance;
    public static ButtonOperateSg getDefaultInstance() {
      return defaultInstance;
    }

    public ButtonOperateSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonOperateSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              button_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                button_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_ButtonOperateSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_ButtonOperateSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.ButtonOperateSg.class, protobuf.clazz.sg.sgRsp.ButtonOperateSg.Builder.class);
    }

    public static com.google.protobuf.Parser<ButtonOperateSg> PARSER =
        new com.google.protobuf.AbstractParser<ButtonOperateSg>() {
      public ButtonOperateSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ButtonOperateSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonOperateSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated int32 button = 2;
    public static final int BUTTON_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> button_;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getButtonList() {
      return button_;
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButtonCount() {
      return button_.size();
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButton(int index) {
      return button_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      opreateType_ = 0;
      button_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < button_.size(); i++) {
        output.writeInt32(2, button_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < button_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(button_.get(i));
        }
        size += dataSize;
        size += 1 * getButtonList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.ButtonOperateSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.ButtonOperateSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.ButtonOperateSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.ButtonOperateSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_ButtonOperateSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_ButtonOperateSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.ButtonOperateSg.class, protobuf.clazz.sg.sgRsp.ButtonOperateSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.ButtonOperateSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_ButtonOperateSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.ButtonOperateSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.ButtonOperateSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.ButtonOperateSg build() {
        protobuf.clazz.sg.sgRsp.ButtonOperateSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.ButtonOperateSg buildPartial() {
        protobuf.clazz.sg.sgRsp.ButtonOperateSg result = new protobuf.clazz.sg.sgRsp.ButtonOperateSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.button_ = button_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.ButtonOperateSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.ButtonOperateSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.ButtonOperateSg other) {
        if (other == protobuf.clazz.sg.sgRsp.ButtonOperateSg.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (!other.button_.isEmpty()) {
          if (button_.isEmpty()) {
            button_ = other.button_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureButtonIsMutable();
            button_.addAll(other.button_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.ButtonOperateSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.ButtonOperateSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 button = 2;
      private java.util.List<java.lang.Integer> button_ = java.util.Collections.emptyList();
      private void ensureButtonIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = new java.util.ArrayList<java.lang.Integer>(button_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getButtonList() {
        return java.util.Collections.unmodifiableList(button_);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButtonCount() {
        return button_.size();
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButton(int index) {
        return button_.get(index);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder setButton(
          int index, int value) {
        ensureButtonIsMutable();
        button_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addButton(int value) {
        ensureButtonIsMutable();
        button_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addAllButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureButtonIsMutable();
        super.addAll(values, button_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder clearButton() {
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.ButtonOperateSg)
    }

    static {
      defaultInstance = new ButtonOperateSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.ButtonOperateSg)
  }

  public interface GameStartSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .fkn.RoomPlayerResponseSg players = 3;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> 
        getPlayersList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index);
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code fkn.GameStartSg}
   */
  public static final class GameStartSg extends
      com.google.protobuf.GeneratedMessage
      implements GameStartSgOrBuilder {
    // Use GameStartSg.newBuilder() to construct.
    private GameStartSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartSg defaultInstance;
    public static GameStartSg getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_GameStartSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_GameStartSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.GameStartSg.class, protobuf.clazz.sg.sgRsp.GameStartSg.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartSg> PARSER =
        new com.google.protobuf.AbstractParser<GameStartSg>() {
      public GameStartSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .fkn.RoomPlayerResponseSg players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_;
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
     */
    public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.GameStartSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.GameStartSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.GameStartSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.GameStartSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_GameStartSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_GameStartSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.GameStartSg.class, protobuf.clazz.sg.sgRsp.GameStartSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.GameStartSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_GameStartSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.GameStartSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.GameStartSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.GameStartSg build() {
        protobuf.clazz.sg.sgRsp.GameStartSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.GameStartSg buildPartial() {
        protobuf.clazz.sg.sgRsp.GameStartSg result = new protobuf.clazz.sg.sgRsp.GameStartSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.GameStartSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.GameStartSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.GameStartSg other) {
        if (other == protobuf.clazz.sg.sgRsp.GameStartSg.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.GameStartSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.GameStartSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .fkn.RoomPlayerResponseSg players = 3;
      private java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> playersBuilder_;

      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.getDefaultInstance());
      }
      /**
       * <code>repeated .fkn.RoomPlayerResponseSg players = 3;</code>
       */
      public java.util.List<protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSg.Builder, protobuf.clazz.sg.sgRsp.RoomPlayerResponseSgOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fkn.GameStartSg)
    }

    static {
      defaultInstance = new GameStartSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.GameStartSg)
  }

  public interface JettonResultSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_seat = 1;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    boolean hasJettonSeat();
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    int getJettonSeat();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code fkn.JettonResultSg}
   */
  public static final class JettonResultSg extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultSgOrBuilder {
    // Use JettonResultSg.newBuilder() to construct.
    private JettonResultSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResultSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResultSg defaultInstance;
    public static JettonResultSg getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResultSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResultSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_JettonResultSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_JettonResultSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.JettonResultSg.class, protobuf.clazz.sg.sgRsp.JettonResultSg.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResultSg> PARSER =
        new com.google.protobuf.AbstractParser<JettonResultSg>() {
      public JettonResultSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResultSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResultSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_seat = 1;
    public static final int JETTON_SEAT_FIELD_NUMBER = 1;
    private int jettonSeat_;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public boolean hasJettonSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public int getJettonSeat() {
      return jettonSeat_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      jettonSeat_ = 0;
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.JettonResultSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.JettonResultSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.JettonResultSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.JettonResultSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_JettonResultSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_JettonResultSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.JettonResultSg.class, protobuf.clazz.sg.sgRsp.JettonResultSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.JettonResultSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_JettonResultSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.JettonResultSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.JettonResultSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.JettonResultSg build() {
        protobuf.clazz.sg.sgRsp.JettonResultSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.JettonResultSg buildPartial() {
        protobuf.clazz.sg.sgRsp.JettonResultSg result = new protobuf.clazz.sg.sgRsp.JettonResultSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonSeat_ = jettonSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.JettonResultSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.JettonResultSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.JettonResultSg other) {
        if (other == protobuf.clazz.sg.sgRsp.JettonResultSg.getDefaultInstance()) return this;
        if (other.hasJettonSeat()) {
          setJettonSeat(other.getJettonSeat());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.JettonResultSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.JettonResultSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_seat = 1;
      private int jettonSeat_ ;
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public boolean hasJettonSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public int getJettonSeat() {
        return jettonSeat_;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder setJettonSeat(int value) {
        bitField0_ |= 0x00000001;
        jettonSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder clearJettonSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.JettonResultSg)
    }

    static {
      defaultInstance = new JettonResultSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.JettonResultSg)
  }

  public interface SelectdBankerSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code fkn.SelectdBankerSg}
   */
  public static final class SelectdBankerSg extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerSgOrBuilder {
    // Use SelectdBankerSg.newBuilder() to construct.
    private SelectdBankerSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerSg defaultInstance;
    public static SelectdBankerSg getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.SelectdBankerSg.class, protobuf.clazz.sg.sgRsp.SelectdBankerSg.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerSg> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerSg>() {
      public SelectdBankerSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.SelectdBankerSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.SelectdBankerSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.SelectdBankerSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.SelectdBankerSg.class, protobuf.clazz.sg.sgRsp.SelectdBankerSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.SelectdBankerSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.SelectdBankerSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerSg build() {
        protobuf.clazz.sg.sgRsp.SelectdBankerSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerSg buildPartial() {
        protobuf.clazz.sg.sgRsp.SelectdBankerSg result = new protobuf.clazz.sg.sgRsp.SelectdBankerSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.SelectdBankerSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.SelectdBankerSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.SelectdBankerSg other) {
        if (other == protobuf.clazz.sg.sgRsp.SelectdBankerSg.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.SelectdBankerSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.SelectdBankerSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.SelectdBankerSg)
    }

    static {
      defaultInstance = new SelectdBankerSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.SelectdBankerSg)
  }

  public interface SelectdBankerResultSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code fkn.SelectdBankerResultSg}
   */
  public static final class SelectdBankerResultSg extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerResultSgOrBuilder {
    // Use SelectdBankerResultSg.newBuilder() to construct.
    private SelectdBankerResultSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerResultSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerResultSg defaultInstance;
    public static SelectdBankerResultSg getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerResultSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerResultSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerResultSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerResultSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.class, protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerResultSg> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerResultSg>() {
      public SelectdBankerResultSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerResultSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerResultSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.SelectdBankerResultSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.SelectdBankerResultSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.SelectdBankerResultSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerResultSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerResultSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.class, protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SelectdBankerResultSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerResultSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerResultSg build() {
        protobuf.clazz.sg.sgRsp.SelectdBankerResultSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.SelectdBankerResultSg buildPartial() {
        protobuf.clazz.sg.sgRsp.SelectdBankerResultSg result = new protobuf.clazz.sg.sgRsp.SelectdBankerResultSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.SelectdBankerResultSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.SelectdBankerResultSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.SelectdBankerResultSg other) {
        if (other == protobuf.clazz.sg.sgRsp.SelectdBankerResultSg.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.SelectdBankerResultSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.SelectdBankerResultSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.SelectdBankerResultSg)
    }

    static {
      defaultInstance = new SelectdBankerResultSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.SelectdBankerResultSg)
  }

  public interface SendCardSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    int getOpreateType();

    // repeated .Int32ArrayResponse send_card = 2;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code fkn.SendCardSg}
   */
  public static final class SendCardSg extends
      com.google.protobuf.GeneratedMessage
      implements SendCardSgOrBuilder {
    // Use SendCardSg.newBuilder() to construct.
    private SendCardSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardSg defaultInstance;
    public static SendCardSg getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SendCardSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_SendCardSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.SendCardSg.class, protobuf.clazz.sg.sgRsp.SendCardSg.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardSg> PARSER =
        new com.google.protobuf.AbstractParser<SendCardSg>() {
      public SendCardSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated .Int32ArrayResponse send_card = 2;
    public static final int SEND_CARD_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      opreateType_ = 0;
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.SendCardSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.SendCardSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.SendCardSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.SendCardSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SendCardSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SendCardSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.SendCardSg.class, protobuf.clazz.sg.sgRsp.SendCardSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.SendCardSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_SendCardSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.SendCardSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.SendCardSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.SendCardSg build() {
        protobuf.clazz.sg.sgRsp.SendCardSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.SendCardSg buildPartial() {
        protobuf.clazz.sg.sgRsp.SendCardSg result = new protobuf.clazz.sg.sgRsp.SendCardSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.SendCardSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.SendCardSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.SendCardSg other) {
        if (other == protobuf.clazz.sg.sgRsp.SendCardSg.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.SendCardSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.SendCardSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse send_card = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.SendCardSg)
    }

    static {
      defaultInstance = new SendCardSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.SendCardSg)
  }

  public interface OpenCardSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool open_card = 1;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean hasOpenCard();
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean getOpenCard();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);

    // optional int32 sg_value = 4;
    /**
     * <code>optional int32 sg_value = 4;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    boolean hasSgValue();
    /**
     * <code>optional int32 sg_value = 4;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    int getSgValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();

    // optional int32 jh_value = 6;
    /**
     * <code>optional int32 jh_value = 6;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    boolean hasJhValue();
    /**
     * <code>optional int32 jh_value = 6;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    int getJhValue();
  }
  /**
   * Protobuf type {@code fkn.OpenCardSg}
   */
  public static final class OpenCardSg extends
      com.google.protobuf.GeneratedMessage
      implements OpenCardSgOrBuilder {
    // Use OpenCardSg.newBuilder() to construct.
    private OpenCardSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCardSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCardSg defaultInstance;
    public static OpenCardSg getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCardSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCardSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              openCard_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              sgValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              jhValue_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_OpenCardSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_OpenCardSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.OpenCardSg.class, protobuf.clazz.sg.sgRsp.OpenCardSg.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCardSg> PARSER =
        new com.google.protobuf.AbstractParser<OpenCardSg>() {
      public OpenCardSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCardSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCardSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool open_card = 1;
    public static final int OPEN_CARD_FIELD_NUMBER = 1;
    private boolean openCard_;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean hasOpenCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean getOpenCard() {
      return openCard_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 sg_value = 4;
    public static final int SG_VALUE_FIELD_NUMBER = 4;
    private int sgValue_;
    /**
     * <code>optional int32 sg_value = 4;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public boolean hasSgValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 sg_value = 4;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public int getSgValue() {
      return sgValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 jh_value = 6;
    public static final int JH_VALUE_FIELD_NUMBER = 6;
    private int jhValue_;
    /**
     * <code>optional int32 jh_value = 6;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public boolean hasJhValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jh_value = 6;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public int getJhValue() {
      return jhValue_;
    }

    private void initFields() {
      openCard_ = false;
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      sgValue_ = 0;
      times_ = 0;
      jhValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, sgValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, jhValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sgValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, jhValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.OpenCardSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.OpenCardSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.OpenCardSg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.OpenCardSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_OpenCardSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_OpenCardSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.OpenCardSg.class, protobuf.clazz.sg.sgRsp.OpenCardSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.OpenCardSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        openCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        sgValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        jhValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_OpenCardSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.OpenCardSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.OpenCardSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.OpenCardSg build() {
        protobuf.clazz.sg.sgRsp.OpenCardSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.OpenCardSg buildPartial() {
        protobuf.clazz.sg.sgRsp.OpenCardSg result = new protobuf.clazz.sg.sgRsp.OpenCardSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sgValue_ = sgValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.jhValue_ = jhValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.OpenCardSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.OpenCardSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.OpenCardSg other) {
        if (other == protobuf.clazz.sg.sgRsp.OpenCardSg.getDefaultInstance()) return this;
        if (other.hasOpenCard()) {
          setOpenCard(other.getOpenCard());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasSgValue()) {
          setSgValue(other.getSgValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasJhValue()) {
          setJhValue(other.getJhValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.OpenCardSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.OpenCardSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool open_card = 1;
      private boolean openCard_ ;
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean hasOpenCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean getOpenCard() {
        return openCard_;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder setOpenCard(boolean value) {
        bitField0_ |= 0x00000001;
        openCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder clearOpenCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        openCard_ = false;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 sg_value = 4;
      private int sgValue_ ;
      /**
       * <code>optional int32 sg_value = 4;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public boolean hasSgValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sg_value = 4;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public int getSgValue() {
        return sgValue_;
      }
      /**
       * <code>optional int32 sg_value = 4;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder setSgValue(int value) {
        bitField0_ |= 0x00000008;
        sgValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sg_value = 4;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder clearSgValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sgValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jh_value = 6;
      private int jhValue_ ;
      /**
       * <code>optional int32 jh_value = 6;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public boolean hasJhValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 jh_value = 6;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public int getJhValue() {
        return jhValue_;
      }
      /**
       * <code>optional int32 jh_value = 6;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder setJhValue(int value) {
        bitField0_ |= 0x00000020;
        jhValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jh_value = 6;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder clearJhValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        jhValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.OpenCardSg)
    }

    static {
      defaultInstance = new OpenCardSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.OpenCardSg)
  }

  public interface LiangCardSgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCards(int index);

    // optional int32 sg_value = 3;
    /**
     * <code>optional int32 sg_value = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    boolean hasSgValue();
    /**
     * <code>optional int32 sg_value = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    int getSgValue();

    // optional int32 times = 4;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    int getTimes();

    // optional int32 jh_value = 5;
    /**
     * <code>optional int32 jh_value = 5;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    boolean hasJhValue();
    /**
     * <code>optional int32 jh_value = 5;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    int getJhValue();

    // optional int32 jh_times = 6;
    /**
     * <code>optional int32 jh_times = 6;</code>
     *
     * <pre>
     *金花倍数
     * </pre>
     */
    boolean hasJhTimes();
    /**
     * <code>optional int32 jh_times = 6;</code>
     *
     * <pre>
     *金花倍数
     * </pre>
     */
    int getJhTimes();
  }
  /**
   * Protobuf type {@code fkn.LiangCardSg}
   *
   * <pre>
   *亮牌结算
   * </pre>
   */
  public static final class LiangCardSg extends
      com.google.protobuf.GeneratedMessage
      implements LiangCardSgOrBuilder {
    // Use LiangCardSg.newBuilder() to construct.
    private LiangCardSg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiangCardSg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiangCardSg defaultInstance;
    public static LiangCardSg getDefaultInstance() {
      return defaultInstance;
    }

    public LiangCardSg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiangCardSg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              sgValue_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              jhValue_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              jhTimes_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_LiangCardSg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_LiangCardSg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.LiangCardSg.class, protobuf.clazz.sg.sgRsp.LiangCardSg.Builder.class);
    }

    public static com.google.protobuf.Parser<LiangCardSg> PARSER =
        new com.google.protobuf.AbstractParser<LiangCardSg>() {
      public LiangCardSg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiangCardSg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiangCardSg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 sg_value = 3;
    public static final int SG_VALUE_FIELD_NUMBER = 3;
    private int sgValue_;
    /**
     * <code>optional int32 sg_value = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public boolean hasSgValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sg_value = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public int getSgValue() {
      return sgValue_;
    }

    // optional int32 times = 4;
    public static final int TIMES_FIELD_NUMBER = 4;
    private int times_;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *三公倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 jh_value = 5;
    public static final int JH_VALUE_FIELD_NUMBER = 5;
    private int jhValue_;
    /**
     * <code>optional int32 jh_value = 5;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public boolean hasJhValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 jh_value = 5;</code>
     *
     * <pre>
     *金花类型
     * </pre>
     */
    public int getJhValue() {
      return jhValue_;
    }

    // optional int32 jh_times = 6;
    public static final int JH_TIMES_FIELD_NUMBER = 6;
    private int jhTimes_;
    /**
     * <code>optional int32 jh_times = 6;</code>
     *
     * <pre>
     *金花倍数
     * </pre>
     */
    public boolean hasJhTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 jh_times = 6;</code>
     *
     * <pre>
     *金花倍数
     * </pre>
     */
    public int getJhTimes() {
      return jhTimes_;
    }

    private void initFields() {
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      sgValue_ = 0;
      times_ = 0;
      jhValue_ = 0;
      jhTimes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, sgValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, jhValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, jhTimes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sgValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, jhValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, jhTimes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.LiangCardSg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.LiangCardSg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.LiangCardSg}
     *
     * <pre>
     *亮牌结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.LiangCardSgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_LiangCardSg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_LiangCardSg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.LiangCardSg.class, protobuf.clazz.sg.sgRsp.LiangCardSg.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.LiangCardSg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        sgValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        jhValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        jhTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_LiangCardSg_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.LiangCardSg getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.LiangCardSg.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.LiangCardSg build() {
        protobuf.clazz.sg.sgRsp.LiangCardSg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.LiangCardSg buildPartial() {
        protobuf.clazz.sg.sgRsp.LiangCardSg result = new protobuf.clazz.sg.sgRsp.LiangCardSg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sgValue_ = sgValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.jhValue_ = jhValue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.jhTimes_ = jhTimes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.LiangCardSg) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.LiangCardSg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.LiangCardSg other) {
        if (other == protobuf.clazz.sg.sgRsp.LiangCardSg.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasSgValue()) {
          setSgValue(other.getSgValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasJhValue()) {
          setJhValue(other.getJhValue());
        }
        if (other.hasJhTimes()) {
          setJhTimes(other.getJhTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.LiangCardSg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.LiangCardSg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 sg_value = 3;
      private int sgValue_ ;
      /**
       * <code>optional int32 sg_value = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public boolean hasSgValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 sg_value = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public int getSgValue() {
        return sgValue_;
      }
      /**
       * <code>optional int32 sg_value = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder setSgValue(int value) {
        bitField0_ |= 0x00000004;
        sgValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sg_value = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder clearSgValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sgValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 4;
      private int times_ ;
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000008;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *三公倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jh_value = 5;
      private int jhValue_ ;
      /**
       * <code>optional int32 jh_value = 5;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public boolean hasJhValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 jh_value = 5;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public int getJhValue() {
        return jhValue_;
      }
      /**
       * <code>optional int32 jh_value = 5;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder setJhValue(int value) {
        bitField0_ |= 0x00000010;
        jhValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jh_value = 5;</code>
       *
       * <pre>
       *金花类型
       * </pre>
       */
      public Builder clearJhValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        jhValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jh_times = 6;
      private int jhTimes_ ;
      /**
       * <code>optional int32 jh_times = 6;</code>
       *
       * <pre>
       *金花倍数
       * </pre>
       */
      public boolean hasJhTimes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 jh_times = 6;</code>
       *
       * <pre>
       *金花倍数
       * </pre>
       */
      public int getJhTimes() {
        return jhTimes_;
      }
      /**
       * <code>optional int32 jh_times = 6;</code>
       *
       * <pre>
       *金花倍数
       * </pre>
       */
      public Builder setJhTimes(int value) {
        bitField0_ |= 0x00000020;
        jhTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jh_times = 6;</code>
       *
       * <pre>
       *金花倍数
       * </pre>
       */
      public Builder clearJhTimes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        jhTimes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.LiangCardSg)
    }

    static {
      defaultInstance = new LiangCardSg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.LiangCardSg)
  }

  public interface Opreate_Sg_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌
     * </pre>
     */
    int getOpreateType();

    // optional int32 sub_index = 2;
    /**
     * <code>optional int32 sub_index = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标 叫庄也用这个下标
     * </pre>
     */
    boolean hasSubIndex();
    /**
     * <code>optional int32 sub_index = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标 叫庄也用这个下标
     * </pre>
     */
    int getSubIndex();
  }
  /**
   * Protobuf type {@code fkn.Opreate_Sg_Request}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Sg_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Sg_RequestOrBuilder {
    // Use Opreate_Sg_Request.newBuilder() to construct.
    private Opreate_Sg_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Sg_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Sg_Request defaultInstance;
    public static Opreate_Sg_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Sg_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Sg_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_Opreate_Sg_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sg.sgRsp.internal_static_fkn_Opreate_Sg_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.class, protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Sg_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Sg_Request>() {
      public Opreate_Sg_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Sg_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Sg_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：开牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 sub_index = 2;
    public static final int SUB_INDEX_FIELD_NUMBER = 2;
    private int subIndex_;
    /**
     * <code>optional int32 sub_index = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标 叫庄也用这个下标
     * </pre>
     */
    public boolean hasSubIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sub_index = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标 叫庄也用这个下标
     * </pre>
     */
    public int getSubIndex() {
      return subIndex_;
    }

    private void initFields() {
      opreateType_ = 0;
      subIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, subIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, subIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sg.sgRsp.Opreate_Sg_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fkn.Opreate_Sg_Request}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sg.sgRsp.Opreate_Sg_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_Opreate_Sg_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_Opreate_Sg_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.class, protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.Builder.class);
      }

      // Construct using protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sg.sgRsp.internal_static_fkn_Opreate_Sg_Request_descriptor;
      }

      public protobuf.clazz.sg.sgRsp.Opreate_Sg_Request getDefaultInstanceForType() {
        return protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.getDefaultInstance();
      }

      public protobuf.clazz.sg.sgRsp.Opreate_Sg_Request build() {
        protobuf.clazz.sg.sgRsp.Opreate_Sg_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sg.sgRsp.Opreate_Sg_Request buildPartial() {
        protobuf.clazz.sg.sgRsp.Opreate_Sg_Request result = new protobuf.clazz.sg.sgRsp.Opreate_Sg_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subIndex_ = subIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sg.sgRsp.Opreate_Sg_Request) {
          return mergeFrom((protobuf.clazz.sg.sgRsp.Opreate_Sg_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sg.sgRsp.Opreate_Sg_Request other) {
        if (other == protobuf.clazz.sg.sgRsp.Opreate_Sg_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasSubIndex()) {
          setSubIndex(other.getSubIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sg.sgRsp.Opreate_Sg_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sg.sgRsp.Opreate_Sg_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：开牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sub_index = 2;
      private int subIndex_ ;
      /**
       * <code>optional int32 sub_index = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标 叫庄也用这个下标
       * </pre>
       */
      public boolean hasSubIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sub_index = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标 叫庄也用这个下标
       * </pre>
       */
      public int getSubIndex() {
        return subIndex_;
      }
      /**
       * <code>optional int32 sub_index = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标 叫庄也用这个下标
       * </pre>
       */
      public Builder setSubIndex(int value) {
        bitField0_ |= 0x00000002;
        subIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sub_index = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标 叫庄也用这个下标
       * </pre>
       */
      public Builder clearSubIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fkn.Opreate_Sg_Request)
    }

    static {
      defaultInstance = new Opreate_Sg_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fkn.Opreate_Sg_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_RoomPlayerResponseSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_RoomPlayerResponseSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_PlayerResultSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_PlayerResultSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_PukeGameEndSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_PukeGameEndSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_TableResponseSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_TableResponseSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_ButtonOperateSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_ButtonOperateSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_GameStartSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_GameStartSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_JettonResultSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_JettonResultSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_SelectdBankerSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_SelectdBankerSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_SelectdBankerResultSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_SelectdBankerResultSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_SendCardSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_SendCardSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_OpenCardSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_OpenCardSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_LiangCardSg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_LiangCardSg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fkn_Opreate_Sg_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fkn_Opreate_Sg_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020sg/sgProto.proto\022\003fkn\032\024basic/protocol." +
      "proto\"\227\002\n\024RoomPlayerResponseSg\022\022\n\naccoun" +
      "t_id\030\001 \001(\003\022\021\n\tuser_name\030\002 \001(\t\022\024\n\014head_im" +
      "g_url\030\003 \001(\t\022\022\n\nseat_index\030\004 \001(\005\022\n\n\002ip\030\005 " +
      "\001(\t\022\016\n\006online\030\006 \001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005scor" +
      "e\030\010 \001(\002\022\r\n\005ready\030\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022" +
      "%\n\rlocationInfor\030\013 \001(\0132\016.LocationInfor\022\022" +
      "\n\nis_trustee\030\014 \001(\010\022\r\n\005money\030\r \001(\003\022\014\n\004gol" +
      "d\030\016 \001(\003\"&\n\016PlayerResultSg\022\024\n\014player_scor" +
      "e\030\006 \003(\005\"\326\002\n\rPukeGameEndSg\022\034\n\troom_info\030\001",
      " \001(\0132\t.RoomInfo\022\021\n\tcur_round\030\002 \001(\005\022\022\n\nga" +
      "me_round\030\003 \001(\005\022\'\n\ncards_data\030\004 \003(\0132\023.Int" +
      "32ArrayResponse\022\021\n\tcard_type\030\005 \003(\005\022\021\n\ten" +
      "d_score\030\006 \003(\005\022\022\n\nplayer_num\030\007 \001(\005\022\016\n\006rea" +
      "son\030\010 \001(\005\022*\n\007players\030\t \003(\0132\031.fkn.RoomPla" +
      "yerResponseSg\022*\n\rplayer_result\030\n \001(\0132\023.f" +
      "kn.PlayerResultSg\022\016\n\006winner\030\013 \001(\005\022\024\n\014str" +
      "_sg_value\030\014 \003(\t\022\017\n\007display\030\r \001(\005\"\242\003\n\017Tab" +
      "leResponseSg\022\025\n\rbanker_player\030\001 \001(\005\022\034\n\tr" +
      "oom_info\030\002 \001(\0132\t.RoomInfo\022*\n\007players\030\003 \003",
      "(\0132\031.fkn.RoomPlayerResponseSg\022\'\n\ncards_d" +
      "ata\030\004 \003(\0132\023.Int32ArrayResponse\022\025\n\rjetton" +
      "_button\030\005 \003(\005\022\024\n\014jetton_score\030\006 \003(\005\022\021\n\to" +
      "pen_card\030\007 \003(\010\022\022\n\nliang_card\030\010 \003(\010\022\024\n\014sc" +
      "ene_status\030\t \001(\005\022\024\n\014display_time\030\n \001(\005\022\020" +
      "\n\010sg_value\030\013 \003(\005\022\r\n\005times\030\014 \003(\005\022\024\n\014playe" +
      "r_score\030\r \003(\005\022\023\n\013call_button\030\016 \003(\005\022\020\n\010jh" +
      "_value\030\017 \003(\005\022\025\n\rplayer_status\030\020 \003(\010\022\020\n\010j" +
      "h_times\030\021 \003(\005\"M\n\017ButtonOperateSg\022\024\n\014opre" +
      "ate_type\030\001 \001(\005\022\016\n\006button\030\002 \003(\005\022\024\n\014displa",
      "y_time\030\003 \001(\005\"W\n\013GameStartSg\022\034\n\troom_info" +
      "\030\001 \001(\0132\t.RoomInfo\022*\n\007players\030\003 \003(\0132\031.fkn" +
      ".RoomPlayerResponseSg\";\n\016JettonResultSg\022" +
      "\023\n\013jetton_seat\030\001 \001(\005\022\024\n\014jetton_score\030\002 \001" +
      "(\005\"<\n\017SelectdBankerSg\022\023\n\013banker_seat\030\001 \001" +
      "(\005\022\024\n\014banker_score\030\002 \001(\005\"B\n\025SelectdBanke" +
      "rResultSg\022\023\n\013banker_seat\030\001 \001(\005\022\024\n\014banker" +
      "_score\030\002 \001(\005\"`\n\nSendCardSg\022\024\n\014opreate_ty" +
      "pe\030\001 \001(\005\022&\n\tsend_card\030\002 \003(\0132\023.Int32Array" +
      "Response\022\024\n\014display_time\030\003 \001(\005\"u\n\nOpenCa",
      "rdSg\022\021\n\topen_card\030\001 \001(\010\022\022\n\nseat_index\030\002 " +
      "\001(\005\022\r\n\005cards\030\003 \003(\005\022\020\n\010sg_value\030\004 \001(\005\022\r\n\005" +
      "times\030\005 \001(\005\022\020\n\010jh_value\030\006 \001(\005\"u\n\013LiangCa" +
      "rdSg\022\022\n\nseat_index\030\001 \001(\005\022\r\n\005cards\030\002 \003(\005\022" +
      "\020\n\010sg_value\030\003 \001(\005\022\r\n\005times\030\004 \001(\005\022\020\n\010jh_v" +
      "alue\030\005 \001(\005\022\020\n\010jh_times\030\006 \001(\005\"=\n\022Opreate_" +
      "Sg_Request\022\024\n\014opreate_type\030\001 \001(\005\022\021\n\tsub_" +
      "index\030\002 \001(\005B\032\n\021protobuf.clazz.sgB\005sgRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_fkn_RoomPlayerResponseSg_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_fkn_RoomPlayerResponseSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_RoomPlayerResponseSg_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_fkn_PlayerResultSg_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_fkn_PlayerResultSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_PlayerResultSg_descriptor,
              new java.lang.String[] { "PlayerScore", });
          internal_static_fkn_PukeGameEndSg_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_fkn_PukeGameEndSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_PukeGameEndSg_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardsData", "CardType", "EndScore", "PlayerNum", "Reason", "Players", "PlayerResult", "Winner", "StrSgValue", "Display", });
          internal_static_fkn_TableResponseSg_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_fkn_TableResponseSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_TableResponseSg_descriptor,
              new java.lang.String[] { "BankerPlayer", "RoomInfo", "Players", "CardsData", "JettonButton", "JettonScore", "OpenCard", "LiangCard", "SceneStatus", "DisplayTime", "SgValue", "Times", "PlayerScore", "CallButton", "JhValue", "PlayerStatus", "JhTimes", });
          internal_static_fkn_ButtonOperateSg_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_fkn_ButtonOperateSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_ButtonOperateSg_descriptor,
              new java.lang.String[] { "OpreateType", "Button", "DisplayTime", });
          internal_static_fkn_GameStartSg_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_fkn_GameStartSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_GameStartSg_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", });
          internal_static_fkn_JettonResultSg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_fkn_JettonResultSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_JettonResultSg_descriptor,
              new java.lang.String[] { "JettonSeat", "JettonScore", });
          internal_static_fkn_SelectdBankerSg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_fkn_SelectdBankerSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_SelectdBankerSg_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_fkn_SelectdBankerResultSg_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_fkn_SelectdBankerResultSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_SelectdBankerResultSg_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_fkn_SendCardSg_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_fkn_SendCardSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_SendCardSg_descriptor,
              new java.lang.String[] { "OpreateType", "SendCard", "DisplayTime", });
          internal_static_fkn_OpenCardSg_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_fkn_OpenCardSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_OpenCardSg_descriptor,
              new java.lang.String[] { "OpenCard", "SeatIndex", "Cards", "SgValue", "Times", "JhValue", });
          internal_static_fkn_LiangCardSg_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_fkn_LiangCardSg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_LiangCardSg_descriptor,
              new java.lang.String[] { "SeatIndex", "Cards", "SgValue", "Times", "JhValue", "JhTimes", });
          internal_static_fkn_Opreate_Sg_Request_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_fkn_Opreate_Sg_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fkn_Opreate_Sg_Request_descriptor,
              new java.lang.String[] { "OpreateType", "SubIndex", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
