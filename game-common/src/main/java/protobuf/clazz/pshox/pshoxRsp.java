// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pshox/pshoxProto.proto

package protobuf.clazz.pshox;

public final class pshoxRsp {
  private pshoxRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PlayerResultPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 player_score = 6;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScore(int index);
  }
  /**
   * Protobuf type {@code pshox.PlayerResultPshox}
   *
   * <pre>
   *用户结束
   * </pre>
   */
  public static final class PlayerResultPshox extends
      com.google.protobuf.GeneratedMessage
      implements PlayerResultPshoxOrBuilder {
    // Use PlayerResultPshox.newBuilder() to construct.
    private PlayerResultPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerResultPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerResultPshox defaultInstance;
    public static PlayerResultPshox getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerResultPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerResultPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PlayerResultPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PlayerResultPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.class, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerResultPshox> PARSER =
        new com.google.protobuf.AbstractParser<PlayerResultPshox>() {
      public PlayerResultPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerResultPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerResultPshox> getParserForType() {
      return PARSER;
    }

    // repeated int32 player_score = 6;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    private void initFields() {
      playerScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(6, playerScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.PlayerResultPshox}
     *
     * <pre>
     *用户结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PlayerResultPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PlayerResultPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.class, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PlayerResultPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox build() {
        protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox result = new protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.playerScore_ = playerScore_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance()) return this;
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 player_score = 6;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.PlayerResultPshox)
    }

    static {
      defaultInstance = new PlayerResultPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.PlayerResultPshox)
  }

  public interface PukeGameEndPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_type = 5;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardType(int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .RoomPlayerResponse players = 9;
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // optional .pshox.PlayerResultPshox player_result = 10;
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    boolean hasPlayerResult();
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox getPlayerResult();
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder getPlayerResultOrBuilder();

    // optional int32 winner = 11;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    boolean hasWinner();
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    int getWinner();

    // repeated string str_ox_value = 12;
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrOxValueList();
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getStrOxValueCount();
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.lang.String getStrOxValue(int index);
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrOxValueBytes(int index);

    // optional int32 display_time = 13;
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code pshox.PukeGameEndPshox}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndPshox extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndPshoxOrBuilder {
    // Use PukeGameEndPshox.newBuilder() to construct.
    private PukeGameEndPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndPshox defaultInstance;
    public static PukeGameEndPshox getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playerResult_.toBuilder();
              }
              playerResult_ = input.readMessage(protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerResult_);
                playerResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              winner_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                strOxValue_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000800;
              }
              strOxValue_.add(input.readBytes());
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.UnmodifiableLazyStringList(strOxValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PukeGameEndPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PukeGameEndPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.class, protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndPshox> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndPshox>() {
      public PukeGameEndPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_type = 5;
    public static final int CARD_TYPE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .RoomPlayerResponse players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 9;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional .pshox.PlayerResultPshox player_result = 10;
    public static final int PLAYER_RESULT_FIELD_NUMBER = 10;
    private protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox playerResult_;
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox getPlayerResult() {
      return playerResult_;
    }
    /**
     * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder getPlayerResultOrBuilder() {
      return playerResult_;
    }

    // optional int32 winner = 11;
    public static final int WINNER_FIELD_NUMBER = 11;
    private int winner_;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public int getWinner() {
      return winner_;
    }

    // repeated string str_ox_value = 12;
    public static final int STR_OX_VALUE_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList strOxValue_;
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrOxValueList() {
      return strOxValue_;
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getStrOxValueCount() {
      return strOxValue_.size();
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.lang.String getStrOxValue(int index) {
      return strOxValue_.get(index);
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrOxValueBytes(int index) {
      return strOxValue_.getByteString(index);
    }

    // optional int32 display_time = 13;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 13;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      playerResult_ = protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance();
      winner_ = 0;
      strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(5, cardType_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, winner_);
      }
      for (int i = 0; i < strOxValue_.size(); i++) {
        output.writeBytes(12, strOxValue_.getByteString(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, winner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strOxValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strOxValue_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStrOxValueList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.PukeGameEndPshox}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PukeGameEndPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PukeGameEndPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.class, protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
          getPlayerResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        winner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_PukeGameEndPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox build() {
        protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox result = new protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardType_ = cardType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playerResultBuilder_ == null) {
          result.playerResult_ = playerResult_;
        } else {
          result.playerResult_ = playerResultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winner_ = winner_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strOxValue_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.strOxValue_ = strOxValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasPlayerResult()) {
          mergePlayerResult(other.getPlayerResult());
        }
        if (other.hasWinner()) {
          setWinner(other.getWinner());
        }
        if (!other.strOxValue_.isEmpty()) {
          if (strOxValue_.isEmpty()) {
            strOxValue_ = other.strOxValue_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureStrOxValueIsMutable();
            strOxValue_.addAll(other.strOxValue_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.PukeGameEndPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_type = 5;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .RoomPlayerResponse players = 9;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 9;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional .pshox.PlayerResultPshox player_result = 10;
      private protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox playerResult_ = protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder> playerResultBuilder_;
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public boolean hasPlayerResult() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox getPlayerResult() {
        if (playerResultBuilder_ == null) {
          return playerResult_;
        } else {
          return playerResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox value) {
        if (playerResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerResult_ = value;
          onChanged();
        } else {
          playerResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(
          protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder builderForValue) {
        if (playerResultBuilder_ == null) {
          playerResult_ = builderForValue.build();
          onChanged();
        } else {
          playerResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder mergePlayerResult(protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox value) {
        if (playerResultBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              playerResult_ != protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance()) {
            playerResult_ =
              protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.newBuilder(playerResult_).mergeFrom(value).buildPartial();
          } else {
            playerResult_ = value;
          }
          onChanged();
        } else {
          playerResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearPlayerResult() {
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.getDefaultInstance();
          onChanged();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder getPlayerResultBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getPlayerResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder getPlayerResultOrBuilder() {
        if (playerResultBuilder_ != null) {
          return playerResultBuilder_.getMessageOrBuilder();
        } else {
          return playerResult_;
        }
      }
      /**
       * <code>optional .pshox.PlayerResultPshox player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder> 
          getPlayerResultFieldBuilder() {
        if (playerResultBuilder_ == null) {
          playerResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshox.Builder, protobuf.clazz.pshox.pshoxRsp.PlayerResultPshoxOrBuilder>(
                  playerResult_,
                  getParentForChildren(),
                  isClean());
          playerResult_ = null;
        }
        return playerResultBuilder_;
      }

      // optional int32 winner = 11;
      private int winner_ ;
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public int getWinner() {
        return winner_;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder setWinner(int value) {
        bitField0_ |= 0x00000400;
        winner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00000400);
        winner_ = 0;
        onChanged();
        return this;
      }

      // repeated string str_ox_value = 12;
      private com.google.protobuf.LazyStringList strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrOxValueIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.LazyStringArrayList(strOxValue_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrOxValueList() {
        return java.util.Collections.unmodifiableList(strOxValue_);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getStrOxValueCount() {
        return strOxValue_.size();
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.lang.String getStrOxValue(int index) {
        return strOxValue_.get(index);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrOxValueBytes(int index) {
        return strOxValue_.getByteString(index);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setStrOxValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addStrOxValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addAllStrOxValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrOxValueIsMutable();
        super.addAll(values, strOxValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearStrOxValue() {
        strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addStrOxValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.add(value);
        onChanged();
        return this;
      }

      // optional int32 display_time = 13;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00001000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.PukeGameEndPshox)
    }

    static {
      defaultInstance = new PukeGameEndPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.PukeGameEndPshox)
  }

  public interface TableResponsePshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional .RoomInfo room_info = 2;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 3;
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 jetton_button = 5;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonButtonList();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButtonCount();
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    int getJettonButton(int index);

    // repeated int32 jetton_score = 6;
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // repeated bool open_card = 7;
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    java.util.List<java.lang.Boolean> getOpenCardList();
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    int getOpenCardCount();
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    boolean getOpenCard(int index);

    // repeated bool liang_card = 8;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getLiangCardList();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    int getLiangCardCount();
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    boolean getLiangCard(int index);

    // optional int32 scene_status = 9;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    boolean hasSceneStatus();
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    int getSceneStatus();

    // optional int32 display_time = 10;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 ox_value = 11;
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.util.List<java.lang.Integer> getOxValueList();
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValueCount();
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue(int index);

    // repeated int32 times = 12;
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getTimesList();
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimesCount();
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes(int index);

    // repeated int32 player_score = 13;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScore(int index);

    // repeated int32 call_button = 14;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallButtonList();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButtonCount();
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    int getCallButton(int index);

    // optional int32 cur_ox_value = 15;
    /**
     * <code>optional int32 cur_ox_value = 15;</code>
     *
     * <pre>
     *当前用户牌型
     * </pre>
     */
    boolean hasCurOxValue();
    /**
     * <code>optional int32 cur_ox_value = 15;</code>
     *
     * <pre>
     *当前用户牌型
     * </pre>
     */
    int getCurOxValue();

    // optional int32 cur_times = 16;
    /**
     * <code>optional int32 cur_times = 16;</code>
     *
     * <pre>
     *当前用户倍数
     * </pre>
     */
    boolean hasCurTimes();
    /**
     * <code>optional int32 cur_times = 16;</code>
     *
     * <pre>
     *当前用户倍数
     * </pre>
     */
    int getCurTimes();

    // repeated int32 sort_card = 17;
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getSortCardList();
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    int getSortCardCount();
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    int getSortCard(int index);
  }
  /**
   * Protobuf type {@code pshox.TableResponsePshox}
   */
  public static final class TableResponsePshox extends
      com.google.protobuf.GeneratedMessage
      implements TableResponsePshoxOrBuilder {
    // Use TableResponsePshox.newBuilder() to construct.
    private TableResponsePshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponsePshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponsePshox defaultInstance;
    public static TableResponsePshox getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponsePshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponsePshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 18: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              jettonButton_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                jettonButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              openCard_.add(input.readBool());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                openCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              liangCard_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                liangCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              sceneStatus_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              oxValue_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                oxValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              times_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                times_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              callButton_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                callButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              bitField0_ |= 0x00000010;
              curOxValue_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000020;
              curTimes_ = input.readInt32();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                sortCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              sortCard_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                sortCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                sortCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          sortCard_ = java.util.Collections.unmodifiableList(sortCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_TableResponsePshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_TableResponsePshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.class, protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponsePshox> PARSER =
        new com.google.protobuf.AbstractParser<TableResponsePshox>() {
      public TableResponsePshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponsePshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponsePshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional .RoomInfo room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 jetton_button = 5;
    public static final int JETTON_BUTTON_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> jettonButton_;
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonButtonList() {
      return jettonButton_;
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButtonCount() {
      return jettonButton_.size();
    }
    /**
     * <code>repeated int32 jetton_button = 5;</code>
     *
     * <pre>
     * 下注按钮
     * </pre>
     */
    public int getJettonButton(int index) {
      return jettonButton_.get(index);
    }

    // repeated int32 jetton_score = 6;
    public static final int JETTON_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 6;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // repeated bool open_card = 7;
    public static final int OPEN_CARD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Boolean> openCard_;
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getOpenCardList() {
      return openCard_;
    }
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public int getOpenCardCount() {
      return openCard_.size();
    }
    /**
     * <code>repeated bool open_card = 7;</code>
     *
     * <pre>
     *玩家 完成
     * </pre>
     */
    public boolean getOpenCard(int index) {
      return openCard_.get(index);
    }

    // repeated bool liang_card = 8;
    public static final int LIANG_CARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> liangCard_;
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getLiangCardList() {
      return liangCard_;
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public int getLiangCardCount() {
      return liangCard_.size();
    }
    /**
     * <code>repeated bool liang_card = 8;</code>
     *
     * <pre>
     *玩家亮牌
     * </pre>
     */
    public boolean getLiangCard(int index) {
      return liangCard_.get(index);
    }

    // optional int32 scene_status = 9;
    public static final int SCENE_STATUS_FIELD_NUMBER = 9;
    private int sceneStatus_;
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public boolean hasSceneStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 scene_status = 9;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public int getSceneStatus() {
      return sceneStatus_;
    }

    // optional int32 display_time = 10;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 10;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 ox_value = 11;
    public static final int OX_VALUE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> oxValue_;
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOxValueList() {
      return oxValue_;
    }
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValueCount() {
      return oxValue_.size();
    }
    /**
     * <code>repeated int32 ox_value = 11;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue(int index) {
      return oxValue_.get(index);
    }

    // repeated int32 times = 12;
    public static final int TIMES_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> times_;
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTimesList() {
      return times_;
    }
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated int32 times = 12;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes(int index) {
      return times_.get(index);
    }

    // repeated int32 player_score = 13;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 13;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    // repeated int32 call_button = 14;
    public static final int CALL_BUTTON_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> callButton_;
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallButtonList() {
      return callButton_;
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButtonCount() {
      return callButton_.size();
    }
    /**
     * <code>repeated int32 call_button = 14;</code>
     *
     * <pre>
     *叫庄按钮
     * </pre>
     */
    public int getCallButton(int index) {
      return callButton_.get(index);
    }

    // optional int32 cur_ox_value = 15;
    public static final int CUR_OX_VALUE_FIELD_NUMBER = 15;
    private int curOxValue_;
    /**
     * <code>optional int32 cur_ox_value = 15;</code>
     *
     * <pre>
     *当前用户牌型
     * </pre>
     */
    public boolean hasCurOxValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 cur_ox_value = 15;</code>
     *
     * <pre>
     *当前用户牌型
     * </pre>
     */
    public int getCurOxValue() {
      return curOxValue_;
    }

    // optional int32 cur_times = 16;
    public static final int CUR_TIMES_FIELD_NUMBER = 16;
    private int curTimes_;
    /**
     * <code>optional int32 cur_times = 16;</code>
     *
     * <pre>
     *当前用户倍数
     * </pre>
     */
    public boolean hasCurTimes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_times = 16;</code>
     *
     * <pre>
     *当前用户倍数
     * </pre>
     */
    public int getCurTimes() {
      return curTimes_;
    }

    // repeated int32 sort_card = 17;
    public static final int SORT_CARD_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> sortCard_;
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSortCardList() {
      return sortCard_;
    }
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public int getSortCardCount() {
      return sortCard_.size();
    }
    /**
     * <code>repeated int32 sort_card = 17;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public int getSortCard(int index) {
      return sortCard_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      jettonButton_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      openCard_ = java.util.Collections.emptyList();
      liangCard_ = java.util.Collections.emptyList();
      sceneStatus_ = 0;
      displayTime_ = 0;
      oxValue_ = java.util.Collections.emptyList();
      times_ = java.util.Collections.emptyList();
      playerScore_ = java.util.Collections.emptyList();
      callButton_ = java.util.Collections.emptyList();
      curOxValue_ = 0;
      curTimes_ = 0;
      sortCard_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonButton_.size(); i++) {
        output.writeInt32(5, jettonButton_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(6, jettonScore_.get(i));
      }
      for (int i = 0; i < openCard_.size(); i++) {
        output.writeBool(7, openCard_.get(i));
      }
      for (int i = 0; i < liangCard_.size(); i++) {
        output.writeBool(8, liangCard_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(10, displayTime_);
      }
      for (int i = 0; i < oxValue_.size(); i++) {
        output.writeInt32(11, oxValue_.get(i));
      }
      for (int i = 0; i < times_.size(); i++) {
        output.writeInt32(12, times_.get(i));
      }
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(13, playerScore_.get(i));
      }
      for (int i = 0; i < callButton_.size(); i++) {
        output.writeInt32(14, callButton_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(15, curOxValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(16, curTimes_);
      }
      for (int i = 0; i < sortCard_.size(); i++) {
        output.writeInt32(17, sortCard_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonButton_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonButtonList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getOpenCardList().size();
        size += dataSize;
        size += 1 * getOpenCardList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getLiangCardList().size();
        size += dataSize;
        size += 1 * getLiangCardList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sceneStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < oxValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(oxValue_.get(i));
        }
        size += dataSize;
        size += 1 * getOxValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < times_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(times_.get(i));
        }
        size += dataSize;
        size += 1 * getTimesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callButton_.get(i));
        }
        size += dataSize;
        size += 1 * getCallButtonList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, curOxValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, curTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sortCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sortCard_.get(i));
        }
        size += dataSize;
        size += 2 * getSortCardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.TableResponsePshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.TableResponsePshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.TableResponsePshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_TableResponsePshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_TableResponsePshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.class, protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        sceneStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        curOxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        curTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        sortCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_TableResponsePshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.TableResponsePshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.TableResponsePshox build() {
        protobuf.clazz.pshox.pshoxRsp.TableResponsePshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.TableResponsePshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.TableResponsePshox result = new protobuf.clazz.pshox.pshoxRsp.TableResponsePshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = java.util.Collections.unmodifiableList(jettonButton_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.jettonButton_ = jettonButton_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.jettonScore_ = jettonScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.openCard_ = openCard_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.liangCard_ = liangCard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sceneStatus_ = sceneStatus_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.oxValue_ = oxValue_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = java.util.Collections.unmodifiableList(times_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.times_ = times_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.playerScore_ = playerScore_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.callButton_ = callButton_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000010;
        }
        result.curOxValue_ = curOxValue_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curTimes_ = curTimes_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          sortCard_ = java.util.Collections.unmodifiableList(sortCard_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.sortCard_ = sortCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.TableResponsePshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.TableResponsePshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.TableResponsePshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.TableResponsePshox.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.jettonButton_.isEmpty()) {
          if (jettonButton_.isEmpty()) {
            jettonButton_ = other.jettonButton_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureJettonButtonIsMutable();
            jettonButton_.addAll(other.jettonButton_);
          }
          onChanged();
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (!other.openCard_.isEmpty()) {
          if (openCard_.isEmpty()) {
            openCard_ = other.openCard_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOpenCardIsMutable();
            openCard_.addAll(other.openCard_);
          }
          onChanged();
        }
        if (!other.liangCard_.isEmpty()) {
          if (liangCard_.isEmpty()) {
            liangCard_ = other.liangCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLiangCardIsMutable();
            liangCard_.addAll(other.liangCard_);
          }
          onChanged();
        }
        if (other.hasSceneStatus()) {
          setSceneStatus(other.getSceneStatus());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.oxValue_.isEmpty()) {
          if (oxValue_.isEmpty()) {
            oxValue_ = other.oxValue_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureOxValueIsMutable();
            oxValue_.addAll(other.oxValue_);
          }
          onChanged();
        }
        if (!other.times_.isEmpty()) {
          if (times_.isEmpty()) {
            times_ = other.times_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTimesIsMutable();
            times_.addAll(other.times_);
          }
          onChanged();
        }
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        if (!other.callButton_.isEmpty()) {
          if (callButton_.isEmpty()) {
            callButton_ = other.callButton_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCallButtonIsMutable();
            callButton_.addAll(other.callButton_);
          }
          onChanged();
        }
        if (other.hasCurOxValue()) {
          setCurOxValue(other.getCurOxValue());
        }
        if (other.hasCurTimes()) {
          setCurTimes(other.getCurTimes());
        }
        if (!other.sortCard_.isEmpty()) {
          if (sortCard_.isEmpty()) {
            sortCard_ = other.sortCard_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureSortCardIsMutable();
            sortCard_.addAll(other.sortCard_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.TableResponsePshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.TableResponsePshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .RoomInfo room_info = 2;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 3;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 jetton_button = 5;
      private java.util.List<java.lang.Integer> jettonButton_ = java.util.Collections.emptyList();
      private void ensureJettonButtonIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonButton_ = new java.util.ArrayList<java.lang.Integer>(jettonButton_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonButtonList() {
        return java.util.Collections.unmodifiableList(jettonButton_);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButtonCount() {
        return jettonButton_.size();
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public int getJettonButton(int index) {
        return jettonButton_.get(index);
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder setJettonButton(
          int index, int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addJettonButton(int value) {
        ensureJettonButtonIsMutable();
        jettonButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder addAllJettonButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonButtonIsMutable();
        super.addAll(values, jettonButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_button = 5;</code>
       *
       * <pre>
       * 下注按钮
       * </pre>
       */
      public Builder clearJettonButton() {
        jettonButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 6;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 6;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated bool open_card = 7;
      private java.util.List<java.lang.Boolean> openCard_ = java.util.Collections.emptyList();
      private void ensureOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          openCard_ = new java.util.ArrayList<java.lang.Boolean>(openCard_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getOpenCardList() {
        return java.util.Collections.unmodifiableList(openCard_);
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public int getOpenCardCount() {
        return openCard_.size();
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public boolean getOpenCard(int index) {
        return openCard_.get(index);
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder setOpenCard(
          int index, boolean value) {
        ensureOpenCardIsMutable();
        openCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addOpenCard(boolean value) {
        ensureOpenCardIsMutable();
        openCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder addAllOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureOpenCardIsMutable();
        super.addAll(values, openCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 7;</code>
       *
       * <pre>
       *玩家 完成
       * </pre>
       */
      public Builder clearOpenCard() {
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool liang_card = 8;
      private java.util.List<java.lang.Boolean> liangCard_ = java.util.Collections.emptyList();
      private void ensureLiangCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          liangCard_ = new java.util.ArrayList<java.lang.Boolean>(liangCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getLiangCardList() {
        return java.util.Collections.unmodifiableList(liangCard_);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public int getLiangCardCount() {
        return liangCard_.size();
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public boolean getLiangCard(int index) {
        return liangCard_.get(index);
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder setLiangCard(
          int index, boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addLiangCard(boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder addAllLiangCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureLiangCardIsMutable();
        super.addAll(values, liangCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 8;</code>
       *
       * <pre>
       *玩家亮牌
       * </pre>
       */
      public Builder clearLiangCard() {
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 scene_status = 9;
      private int sceneStatus_ ;
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public boolean hasSceneStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public int getSceneStatus() {
        return sceneStatus_;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder setSceneStatus(int value) {
        bitField0_ |= 0x00000100;
        sceneStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_status = 9;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder clearSceneStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sceneStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 10;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000200;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 ox_value = 11;
      private java.util.List<java.lang.Integer> oxValue_ = java.util.Collections.emptyList();
      private void ensureOxValueIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          oxValue_ = new java.util.ArrayList<java.lang.Integer>(oxValue_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOxValueList() {
        return java.util.Collections.unmodifiableList(oxValue_);
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValueCount() {
        return oxValue_.size();
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue(int index) {
        return oxValue_.get(index);
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(
          int index, int value) {
        ensureOxValueIsMutable();
        oxValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addOxValue(int value) {
        ensureOxValueIsMutable();
        oxValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addAllOxValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOxValueIsMutable();
        super.addAll(values, oxValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 11;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 times = 12;
      private java.util.List<java.lang.Integer> times_ = java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          times_ = new java.util.ArrayList<java.lang.Integer>(times_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTimesList() {
        return java.util.Collections.unmodifiableList(times_);
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimesCount() {
        return times_.size();
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes(int index) {
        return times_.get(index);
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(
          int index, int value) {
        ensureTimesIsMutable();
        times_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addTimes(int value) {
        ensureTimesIsMutable();
        times_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimesIsMutable();
        super.addAll(values, times_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 12;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 player_score = 13;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 13;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 call_button = 14;
      private java.util.List<java.lang.Integer> callButton_ = java.util.Collections.emptyList();
      private void ensureCallButtonIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          callButton_ = new java.util.ArrayList<java.lang.Integer>(callButton_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallButtonList() {
        return java.util.Collections.unmodifiableList(callButton_);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButtonCount() {
        return callButton_.size();
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public int getCallButton(int index) {
        return callButton_.get(index);
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder setCallButton(
          int index, int value) {
        ensureCallButtonIsMutable();
        callButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addCallButton(int value) {
        ensureCallButtonIsMutable();
        callButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder addAllCallButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallButtonIsMutable();
        super.addAll(values, callButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 14;</code>
       *
       * <pre>
       *叫庄按钮
       * </pre>
       */
      public Builder clearCallButton() {
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // optional int32 cur_ox_value = 15;
      private int curOxValue_ ;
      /**
       * <code>optional int32 cur_ox_value = 15;</code>
       *
       * <pre>
       *当前用户牌型
       * </pre>
       */
      public boolean hasCurOxValue() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 cur_ox_value = 15;</code>
       *
       * <pre>
       *当前用户牌型
       * </pre>
       */
      public int getCurOxValue() {
        return curOxValue_;
      }
      /**
       * <code>optional int32 cur_ox_value = 15;</code>
       *
       * <pre>
       *当前用户牌型
       * </pre>
       */
      public Builder setCurOxValue(int value) {
        bitField0_ |= 0x00004000;
        curOxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_ox_value = 15;</code>
       *
       * <pre>
       *当前用户牌型
       * </pre>
       */
      public Builder clearCurOxValue() {
        bitField0_ = (bitField0_ & ~0x00004000);
        curOxValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_times = 16;
      private int curTimes_ ;
      /**
       * <code>optional int32 cur_times = 16;</code>
       *
       * <pre>
       *当前用户倍数
       * </pre>
       */
      public boolean hasCurTimes() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 cur_times = 16;</code>
       *
       * <pre>
       *当前用户倍数
       * </pre>
       */
      public int getCurTimes() {
        return curTimes_;
      }
      /**
       * <code>optional int32 cur_times = 16;</code>
       *
       * <pre>
       *当前用户倍数
       * </pre>
       */
      public Builder setCurTimes(int value) {
        bitField0_ |= 0x00008000;
        curTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_times = 16;</code>
       *
       * <pre>
       *当前用户倍数
       * </pre>
       */
      public Builder clearCurTimes() {
        bitField0_ = (bitField0_ & ~0x00008000);
        curTimes_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 sort_card = 17;
      private java.util.List<java.lang.Integer> sortCard_ = java.util.Collections.emptyList();
      private void ensureSortCardIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          sortCard_ = new java.util.ArrayList<java.lang.Integer>(sortCard_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSortCardList() {
        return java.util.Collections.unmodifiableList(sortCard_);
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public int getSortCardCount() {
        return sortCard_.size();
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public int getSortCard(int index) {
        return sortCard_.get(index);
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder setSortCard(
          int index, int value) {
        ensureSortCardIsMutable();
        sortCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder addSortCard(int value) {
        ensureSortCardIsMutable();
        sortCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder addAllSortCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSortCardIsMutable();
        super.addAll(values, sortCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 17;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder clearSortCard() {
        sortCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.TableResponsePshox)
    }

    static {
      defaultInstance = new TableResponsePshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.TableResponsePshox)
  }

  public interface ButtonOperatePshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌
     * </pre>
     */
    int getOpreateType();

    // repeated int32 button = 2;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getButtonList();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButtonCount();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButton(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 choosecards_index = 4;
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    java.util.List<java.lang.Integer> getChoosecardsIndexList();
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    int getChoosecardsIndexCount();
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    int getChoosecardsIndex(int index);

    // optional bool isHaveTuiZhu = 5;
    /**
     * <code>optional bool isHaveTuiZhu = 5;</code>
     *
     * <pre>
     *是否有推注
     * </pre>
     */
    boolean hasIsHaveTuiZhu();
    /**
     * <code>optional bool isHaveTuiZhu = 5;</code>
     *
     * <pre>
     *是否有推注
     * </pre>
     */
    boolean getIsHaveTuiZhu();
  }
  /**
   * Protobuf type {@code pshox.ButtonOperatePshox}
   */
  public static final class ButtonOperatePshox extends
      com.google.protobuf.GeneratedMessage
      implements ButtonOperatePshoxOrBuilder {
    // Use ButtonOperatePshox.newBuilder() to construct.
    private ButtonOperatePshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ButtonOperatePshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ButtonOperatePshox defaultInstance;
    public static ButtonOperatePshox getDefaultInstance() {
      return defaultInstance;
    }

    public ButtonOperatePshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonOperatePshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              button_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                button_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                choosecardsIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              choosecardsIndex_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                choosecardsIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                choosecardsIndex_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              isHaveTuiZhu_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          choosecardsIndex_ = java.util.Collections.unmodifiableList(choosecardsIndex_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_ButtonOperatePshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_ButtonOperatePshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.class, protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.Builder.class);
    }

    public static com.google.protobuf.Parser<ButtonOperatePshox> PARSER =
        new com.google.protobuf.AbstractParser<ButtonOperatePshox>() {
      public ButtonOperatePshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ButtonOperatePshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonOperatePshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated int32 button = 2;
    public static final int BUTTON_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> button_;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getButtonList() {
      return button_;
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButtonCount() {
      return button_.size();
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButton(int index) {
      return button_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 choosecards_index = 4;
    public static final int CHOOSECARDS_INDEX_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> choosecardsIndex_;
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChoosecardsIndexList() {
      return choosecardsIndex_;
    }
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    public int getChoosecardsIndexCount() {
      return choosecardsIndex_.size();
    }
    /**
     * <code>repeated int32 choosecards_index = 4;</code>
     *
     * <pre>
     *需要提示的三张牌 如果没提示 则size为0
     * </pre>
     */
    public int getChoosecardsIndex(int index) {
      return choosecardsIndex_.get(index);
    }

    // optional bool isHaveTuiZhu = 5;
    public static final int ISHAVETUIZHU_FIELD_NUMBER = 5;
    private boolean isHaveTuiZhu_;
    /**
     * <code>optional bool isHaveTuiZhu = 5;</code>
     *
     * <pre>
     *是否有推注
     * </pre>
     */
    public boolean hasIsHaveTuiZhu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isHaveTuiZhu = 5;</code>
     *
     * <pre>
     *是否有推注
     * </pre>
     */
    public boolean getIsHaveTuiZhu() {
      return isHaveTuiZhu_;
    }

    private void initFields() {
      opreateType_ = 0;
      button_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      choosecardsIndex_ = java.util.Collections.emptyList();
      isHaveTuiZhu_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < button_.size(); i++) {
        output.writeInt32(2, button_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      for (int i = 0; i < choosecardsIndex_.size(); i++) {
        output.writeInt32(4, choosecardsIndex_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(5, isHaveTuiZhu_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < button_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(button_.get(i));
        }
        size += dataSize;
        size += 1 * getButtonList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < choosecardsIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(choosecardsIndex_.get(i));
        }
        size += dataSize;
        size += 1 * getChoosecardsIndexList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isHaveTuiZhu_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.ButtonOperatePshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_ButtonOperatePshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_ButtonOperatePshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.class, protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        choosecardsIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        isHaveTuiZhu_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_ButtonOperatePshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox build() {
        protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox result = new protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.button_ = button_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          choosecardsIndex_ = java.util.Collections.unmodifiableList(choosecardsIndex_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.choosecardsIndex_ = choosecardsIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isHaveTuiZhu_ = isHaveTuiZhu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (!other.button_.isEmpty()) {
          if (button_.isEmpty()) {
            button_ = other.button_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureButtonIsMutable();
            button_.addAll(other.button_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.choosecardsIndex_.isEmpty()) {
          if (choosecardsIndex_.isEmpty()) {
            choosecardsIndex_ = other.choosecardsIndex_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureChoosecardsIndexIsMutable();
            choosecardsIndex_.addAll(other.choosecardsIndex_);
          }
          onChanged();
        }
        if (other.hasIsHaveTuiZhu()) {
          setIsHaveTuiZhu(other.getIsHaveTuiZhu());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.ButtonOperatePshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 button = 2;
      private java.util.List<java.lang.Integer> button_ = java.util.Collections.emptyList();
      private void ensureButtonIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = new java.util.ArrayList<java.lang.Integer>(button_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getButtonList() {
        return java.util.Collections.unmodifiableList(button_);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButtonCount() {
        return button_.size();
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButton(int index) {
        return button_.get(index);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder setButton(
          int index, int value) {
        ensureButtonIsMutable();
        button_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addButton(int value) {
        ensureButtonIsMutable();
        button_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addAllButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureButtonIsMutable();
        super.addAll(values, button_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder clearButton() {
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 choosecards_index = 4;
      private java.util.List<java.lang.Integer> choosecardsIndex_ = java.util.Collections.emptyList();
      private void ensureChoosecardsIndexIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          choosecardsIndex_ = new java.util.ArrayList<java.lang.Integer>(choosecardsIndex_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChoosecardsIndexList() {
        return java.util.Collections.unmodifiableList(choosecardsIndex_);
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public int getChoosecardsIndexCount() {
        return choosecardsIndex_.size();
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public int getChoosecardsIndex(int index) {
        return choosecardsIndex_.get(index);
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public Builder setChoosecardsIndex(
          int index, int value) {
        ensureChoosecardsIndexIsMutable();
        choosecardsIndex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public Builder addChoosecardsIndex(int value) {
        ensureChoosecardsIndexIsMutable();
        choosecardsIndex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public Builder addAllChoosecardsIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChoosecardsIndexIsMutable();
        super.addAll(values, choosecardsIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 choosecards_index = 4;</code>
       *
       * <pre>
       *需要提示的三张牌 如果没提示 则size为0
       * </pre>
       */
      public Builder clearChoosecardsIndex() {
        choosecardsIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional bool isHaveTuiZhu = 5;
      private boolean isHaveTuiZhu_ ;
      /**
       * <code>optional bool isHaveTuiZhu = 5;</code>
       *
       * <pre>
       *是否有推注
       * </pre>
       */
      public boolean hasIsHaveTuiZhu() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool isHaveTuiZhu = 5;</code>
       *
       * <pre>
       *是否有推注
       * </pre>
       */
      public boolean getIsHaveTuiZhu() {
        return isHaveTuiZhu_;
      }
      /**
       * <code>optional bool isHaveTuiZhu = 5;</code>
       *
       * <pre>
       *是否有推注
       * </pre>
       */
      public Builder setIsHaveTuiZhu(boolean value) {
        bitField0_ |= 0x00000010;
        isHaveTuiZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isHaveTuiZhu = 5;</code>
       *
       * <pre>
       *是否有推注
       * </pre>
       */
      public Builder clearIsHaveTuiZhu() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isHaveTuiZhu_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.ButtonOperatePshox)
    }

    static {
      defaultInstance = new ButtonOperatePshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.ButtonOperatePshox)
  }

  public interface GameStartPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 3;
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pshox.GameStartPshox}
   */
  public static final class GameStartPshox extends
      com.google.protobuf.GeneratedMessage
      implements GameStartPshoxOrBuilder {
    // Use GameStartPshox.newBuilder() to construct.
    private GameStartPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartPshox defaultInstance;
    public static GameStartPshox getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_GameStartPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_GameStartPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.GameStartPshox.class, protobuf.clazz.pshox.pshoxRsp.GameStartPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartPshox> PARSER =
        new com.google.protobuf.AbstractParser<GameStartPshox>() {
      public GameStartPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 3;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.GameStartPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.GameStartPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.GameStartPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.GameStartPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_GameStartPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_GameStartPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.GameStartPshox.class, protobuf.clazz.pshox.pshoxRsp.GameStartPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.GameStartPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_GameStartPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.GameStartPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.GameStartPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.GameStartPshox build() {
        protobuf.clazz.pshox.pshoxRsp.GameStartPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.GameStartPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.GameStartPshox result = new protobuf.clazz.pshox.pshoxRsp.GameStartPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.GameStartPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.GameStartPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.GameStartPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.GameStartPshox.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.GameStartPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.GameStartPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 3;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 3;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pshox.GameStartPshox)
    }

    static {
      defaultInstance = new GameStartPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.GameStartPshox)
  }

  public interface JettonResultPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_seat = 1;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    boolean hasJettonSeat();
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    int getJettonSeat();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code pshox.JettonResultPshox}
   */
  public static final class JettonResultPshox extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultPshoxOrBuilder {
    // Use JettonResultPshox.newBuilder() to construct.
    private JettonResultPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResultPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResultPshox defaultInstance;
    public static JettonResultPshox getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResultPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResultPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_JettonResultPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_JettonResultPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.class, protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResultPshox> PARSER =
        new com.google.protobuf.AbstractParser<JettonResultPshox>() {
      public JettonResultPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResultPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResultPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_seat = 1;
    public static final int JETTON_SEAT_FIELD_NUMBER = 1;
    private int jettonSeat_;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public boolean hasJettonSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public int getJettonSeat() {
      return jettonSeat_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      jettonSeat_ = 0;
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.JettonResultPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.JettonResultPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.JettonResultPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_JettonResultPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_JettonResultPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.class, protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_JettonResultPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.JettonResultPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.JettonResultPshox build() {
        protobuf.clazz.pshox.pshoxRsp.JettonResultPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.JettonResultPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.JettonResultPshox result = new protobuf.clazz.pshox.pshoxRsp.JettonResultPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonSeat_ = jettonSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.JettonResultPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.JettonResultPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.JettonResultPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.JettonResultPshox.getDefaultInstance()) return this;
        if (other.hasJettonSeat()) {
          setJettonSeat(other.getJettonSeat());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.JettonResultPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.JettonResultPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_seat = 1;
      private int jettonSeat_ ;
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public boolean hasJettonSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public int getJettonSeat() {
        return jettonSeat_;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder setJettonSeat(int value) {
        bitField0_ |= 0x00000001;
        jettonSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder clearJettonSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.JettonResultPshox)
    }

    static {
      defaultInstance = new JettonResultPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.JettonResultPshox)
  }

  public interface SelectdBankerPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code pshox.SelectdBankerPshox}
   */
  public static final class SelectdBankerPshox extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerPshoxOrBuilder {
    // Use SelectdBankerPshox.newBuilder() to construct.
    private SelectdBankerPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerPshox defaultInstance;
    public static SelectdBankerPshox getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.class, protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerPshox> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerPshox>() {
      public SelectdBankerPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.SelectdBankerPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.class, protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox build() {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox result = new protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.SelectdBankerPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.SelectdBankerPshox)
    }

    static {
      defaultInstance = new SelectdBankerPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.SelectdBankerPshox)
  }

  public interface SelectdBankerResultPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code pshox.SelectdBankerResultPshox}
   */
  public static final class SelectdBankerResultPshox extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerResultPshoxOrBuilder {
    // Use SelectdBankerResultPshox.newBuilder() to construct.
    private SelectdBankerResultPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerResultPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerResultPshox defaultInstance;
    public static SelectdBankerResultPshox getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerResultPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerResultPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerResultPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerResultPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.class, protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerResultPshox> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerResultPshox>() {
      public SelectdBankerResultPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerResultPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerResultPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.SelectdBankerResultPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerResultPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerResultPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.class, protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SelectdBankerResultPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox build() {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox result = new protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.SelectdBankerResultPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.SelectdBankerResultPshox)
    }

    static {
      defaultInstance = new SelectdBankerResultPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.SelectdBankerResultPshox)
  }

  public interface SendCardPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    int getOpreateType();

    // repeated .Int32ArrayResponse send_card = 2;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();

    // optional int32 ox_value = 4;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();

    // repeated int32 sort_card = 6;
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getSortCardList();
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    int getSortCardCount();
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    int getSortCard(int index);
  }
  /**
   * Protobuf type {@code pshox.SendCardPshox}
   */
  public static final class SendCardPshox extends
      com.google.protobuf.GeneratedMessage
      implements SendCardPshoxOrBuilder {
    // Use SendCardPshox.newBuilder() to construct.
    private SendCardPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardPshox defaultInstance;
    public static SendCardPshox getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oxValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                sortCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              sortCard_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                sortCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                sortCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          sortCard_ = java.util.Collections.unmodifiableList(sortCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SendCardPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SendCardPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.SendCardPshox.class, protobuf.clazz.pshox.pshoxRsp.SendCardPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardPshox> PARSER =
        new com.google.protobuf.AbstractParser<SendCardPshox>() {
      public SendCardPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated .Int32ArrayResponse send_card = 2;
    public static final int SEND_CARD_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 ox_value = 4;
    public static final int OX_VALUE_FIELD_NUMBER = 4;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // repeated int32 sort_card = 6;
    public static final int SORT_CARD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> sortCard_;
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSortCardList() {
      return sortCard_;
    }
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public int getSortCardCount() {
      return sortCard_.size();
    }
    /**
     * <code>repeated int32 sort_card = 6;</code>
     *
     * <pre>
     *排好序的牌型
     * </pre>
     */
    public int getSortCard(int index) {
      return sortCard_.get(index);
    }

    private void initFields() {
      opreateType_ = 0;
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      oxValue_ = 0;
      times_ = 0;
      sortCard_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      for (int i = 0; i < sortCard_.size(); i++) {
        output.writeInt32(6, sortCard_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sortCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sortCard_.get(i));
        }
        size += dataSize;
        size += 1 * getSortCardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.SendCardPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.SendCardPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.SendCardPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.SendCardPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SendCardPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SendCardPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.SendCardPshox.class, protobuf.clazz.pshox.pshoxRsp.SendCardPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.SendCardPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        sortCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_SendCardPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.SendCardPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.SendCardPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.SendCardPshox build() {
        protobuf.clazz.pshox.pshoxRsp.SendCardPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.SendCardPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.SendCardPshox result = new protobuf.clazz.pshox.pshoxRsp.SendCardPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oxValue_ = oxValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          sortCard_ = java.util.Collections.unmodifiableList(sortCard_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.sortCard_ = sortCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.SendCardPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.SendCardPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.SendCardPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.SendCardPshox.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (!other.sortCard_.isEmpty()) {
          if (sortCard_.isEmpty()) {
            sortCard_ = other.sortCard_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSortCardIsMutable();
            sortCard_.addAll(other.sortCard_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.SendCardPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.SendCardPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse send_card = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ox_value = 4;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000008;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 sort_card = 6;
      private java.util.List<java.lang.Integer> sortCard_ = java.util.Collections.emptyList();
      private void ensureSortCardIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          sortCard_ = new java.util.ArrayList<java.lang.Integer>(sortCard_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSortCardList() {
        return java.util.Collections.unmodifiableList(sortCard_);
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public int getSortCardCount() {
        return sortCard_.size();
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public int getSortCard(int index) {
        return sortCard_.get(index);
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder setSortCard(
          int index, int value) {
        ensureSortCardIsMutable();
        sortCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder addSortCard(int value) {
        ensureSortCardIsMutable();
        sortCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder addAllSortCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSortCardIsMutable();
        super.addAll(values, sortCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 sort_card = 6;</code>
       *
       * <pre>
       *排好序的牌型
       * </pre>
       */
      public Builder clearSortCard() {
        sortCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.SendCardPshox)
    }

    static {
      defaultInstance = new SendCardPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.SendCardPshox)
  }

  public interface OpenCardPshoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool open_card = 1;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean hasOpenCard();
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean getOpenCard();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);

    // optional int32 ox_value = 4;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code pshox.OpenCardPshox}
   */
  public static final class OpenCardPshox extends
      com.google.protobuf.GeneratedMessage
      implements OpenCardPshoxOrBuilder {
    // Use OpenCardPshox.newBuilder() to construct.
    private OpenCardPshox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCardPshox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCardPshox defaultInstance;
    public static OpenCardPshox getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCardPshox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCardPshox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              openCard_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oxValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_OpenCardPshox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_OpenCardPshox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.class, protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCardPshox> PARSER =
        new com.google.protobuf.AbstractParser<OpenCardPshox>() {
      public OpenCardPshox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCardPshox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCardPshox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool open_card = 1;
    public static final int OPEN_CARD_FIELD_NUMBER = 1;
    private boolean openCard_;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean hasOpenCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean getOpenCard() {
      return openCard_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 ox_value = 4;
    public static final int OX_VALUE_FIELD_NUMBER = 4;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    private void initFields() {
      openCard_ = false;
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      oxValue_ = 0;
      times_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.OpenCardPshox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.OpenCardPshox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.OpenCardPshoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_OpenCardPshox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_OpenCardPshox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.class, protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        openCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_OpenCardPshox_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.OpenCardPshox getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.OpenCardPshox build() {
        protobuf.clazz.pshox.pshoxRsp.OpenCardPshox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.OpenCardPshox buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.OpenCardPshox result = new protobuf.clazz.pshox.pshoxRsp.OpenCardPshox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oxValue_ = oxValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.OpenCardPshox) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.OpenCardPshox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.OpenCardPshox other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.OpenCardPshox.getDefaultInstance()) return this;
        if (other.hasOpenCard()) {
          setOpenCard(other.getOpenCard());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.OpenCardPshox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.OpenCardPshox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool open_card = 1;
      private boolean openCard_ ;
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean hasOpenCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean getOpenCard() {
        return openCard_;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder setOpenCard(boolean value) {
        bitField0_ |= 0x00000001;
        openCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder clearOpenCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        openCard_ = false;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 ox_value = 4;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000008;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.OpenCardPshox)
    }

    static {
      defaultInstance = new OpenCardPshox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.OpenCardPshox)
  }

  public interface Opreate_Pshox_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:r抢庄 1：下注  2：开牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:r抢庄 1：下注  2：开牌
     * </pre>
     */
    int getOpreateType();

    // optional int32 add_jetton_score = 2;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    int getAddJettonScore();

    // optional bool is_ox = 3;
    /**
     * <code>optional bool is_ox = 3;</code>
     *
     * <pre>
     *true 为有牛， false 没有牛
     * </pre>
     */
    boolean hasIsOx();
    /**
     * <code>optional bool is_ox = 3;</code>
     *
     * <pre>
     *true 为有牛， false 没有牛
     * </pre>
     */
    boolean getIsOx();
  }
  /**
   * Protobuf type {@code pshox.Opreate_Pshox_Request}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Pshox_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Pshox_RequestOrBuilder {
    // Use Opreate_Pshox_Request.newBuilder() to construct.
    private Opreate_Pshox_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Pshox_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Pshox_Request defaultInstance;
    public static Opreate_Pshox_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Pshox_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Pshox_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isOx_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_Opreate_Pshox_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_Opreate_Pshox_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.class, protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Pshox_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Pshox_Request>() {
      public Opreate_Pshox_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Pshox_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Pshox_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:r抢庄 1：下注  2：开牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:r抢庄 1：下注  2：开牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 add_jetton_score = 2;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 2;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional bool is_ox = 3;
    public static final int IS_OX_FIELD_NUMBER = 3;
    private boolean isOx_;
    /**
     * <code>optional bool is_ox = 3;</code>
     *
     * <pre>
     *true 为有牛， false 没有牛
     * </pre>
     */
    public boolean hasIsOx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_ox = 3;</code>
     *
     * <pre>
     *true 为有牛， false 没有牛
     * </pre>
     */
    public boolean getIsOx() {
      return isOx_;
    }

    private void initFields() {
      opreateType_ = 0;
      addJettonScore_ = 0;
      isOx_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isOx_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isOx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pshox.Opreate_Pshox_Request}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_Opreate_Pshox_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_Opreate_Pshox_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.class, protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.Builder.class);
      }

      // Construct using protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isOx_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.pshox.pshoxRsp.internal_static_pshox_Opreate_Pshox_Request_descriptor;
      }

      public protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request getDefaultInstanceForType() {
        return protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.getDefaultInstance();
      }

      public protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request build() {
        protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request buildPartial() {
        protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request result = new protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isOx_ = isOx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request) {
          return mergeFrom((protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request other) {
        if (other == protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasIsOx()) {
          setIsOx(other.getIsOx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.pshox.pshoxRsp.Opreate_Pshox_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:r抢庄 1：下注  2：开牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:r抢庄 1：下注  2：开牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:r抢庄 1：下注  2：开牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:r抢庄 1：下注  2：开牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 2;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000002;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_ox = 3;
      private boolean isOx_ ;
      /**
       * <code>optional bool is_ox = 3;</code>
       *
       * <pre>
       *true 为有牛， false 没有牛
       * </pre>
       */
      public boolean hasIsOx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_ox = 3;</code>
       *
       * <pre>
       *true 为有牛， false 没有牛
       * </pre>
       */
      public boolean getIsOx() {
        return isOx_;
      }
      /**
       * <code>optional bool is_ox = 3;</code>
       *
       * <pre>
       *true 为有牛， false 没有牛
       * </pre>
       */
      public Builder setIsOx(boolean value) {
        bitField0_ |= 0x00000004;
        isOx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ox = 3;</code>
       *
       * <pre>
       *true 为有牛， false 没有牛
       * </pre>
       */
      public Builder clearIsOx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isOx_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pshox.Opreate_Pshox_Request)
    }

    static {
      defaultInstance = new Opreate_Pshox_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pshox.Opreate_Pshox_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_PlayerResultPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_PlayerResultPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_PukeGameEndPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_PukeGameEndPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_TableResponsePshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_TableResponsePshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_ButtonOperatePshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_ButtonOperatePshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_GameStartPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_GameStartPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_JettonResultPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_JettonResultPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_SelectdBankerPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_SelectdBankerPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_SelectdBankerResultPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_SelectdBankerResultPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_SendCardPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_SendCardPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_OpenCardPshox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_OpenCardPshox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pshox_Opreate_Pshox_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pshox_Opreate_Pshox_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026pshox/pshoxProto.proto\022\005pshox\032\024basic/p" +
      "rotocol.proto\")\n\021PlayerResultPshox\022\024\n\014pl" +
      "ayer_score\030\006 \003(\005\"\335\002\n\020PukeGameEndPshox\022\034\n" +
      "\troom_info\030\001 \001(\0132\t.RoomInfo\022\021\n\tcur_round" +
      "\030\002 \001(\005\022\022\n\ngame_round\030\003 \001(\005\022\'\n\ncards_data" +
      "\030\004 \003(\0132\023.Int32ArrayResponse\022\021\n\tcard_type" +
      "\030\005 \003(\005\022\021\n\tend_score\030\006 \003(\005\022\022\n\nplayer_num\030" +
      "\007 \001(\005\022\016\n\006reason\030\010 \001(\005\022$\n\007players\030\t \003(\0132\023" +
      ".RoomPlayerResponse\022/\n\rplayer_result\030\n \001" +
      "(\0132\030.pshox.PlayerResultPshox\022\016\n\006winner\030\013",
      " \001(\005\022\024\n\014str_ox_value\030\014 \003(\t\022\024\n\014display_ti" +
      "me\030\r \001(\005\"\240\003\n\022TableResponsePshox\022\025\n\rbanke" +
      "r_player\030\001 \001(\005\022\034\n\troom_info\030\002 \001(\0132\t.Room" +
      "Info\022$\n\007players\030\003 \003(\0132\023.RoomPlayerRespon" +
      "se\022\'\n\ncards_data\030\004 \003(\0132\023.Int32ArrayRespo" +
      "nse\022\025\n\rjetton_button\030\005 \003(\005\022\024\n\014jetton_sco" +
      "re\030\006 \003(\005\022\021\n\topen_card\030\007 \003(\010\022\022\n\nliang_car" +
      "d\030\010 \003(\010\022\024\n\014scene_status\030\t \001(\005\022\024\n\014display" +
      "_time\030\n \001(\005\022\020\n\010ox_value\030\013 \003(\005\022\r\n\005times\030\014" +
      " \003(\005\022\024\n\014player_score\030\r \003(\005\022\023\n\013call_butto",
      "n\030\016 \003(\005\022\024\n\014cur_ox_value\030\017 \001(\005\022\021\n\tcur_tim" +
      "es\030\020 \001(\005\022\021\n\tsort_card\030\021 \003(\005\"\201\001\n\022ButtonOp" +
      "eratePshox\022\024\n\014opreate_type\030\001 \001(\005\022\016\n\006butt" +
      "on\030\002 \003(\005\022\024\n\014display_time\030\003 \001(\005\022\031\n\021choose" +
      "cards_index\030\004 \003(\005\022\024\n\014isHaveTuiZhu\030\005 \001(\010\"" +
      "T\n\016GameStartPshox\022\034\n\troom_info\030\001 \001(\0132\t.R" +
      "oomInfo\022$\n\007players\030\003 \003(\0132\023.RoomPlayerRes" +
      "ponse\">\n\021JettonResultPshox\022\023\n\013jetton_sea" +
      "t\030\001 \001(\005\022\024\n\014jetton_score\030\002 \001(\005\"?\n\022Selectd" +
      "BankerPshox\022\023\n\013banker_seat\030\001 \001(\005\022\024\n\014bank",
      "er_score\030\002 \001(\005\"E\n\030SelectdBankerResultPsh" +
      "ox\022\023\n\013banker_seat\030\001 \001(\005\022\024\n\014banker_score\030" +
      "\002 \001(\005\"\227\001\n\rSendCardPshox\022\024\n\014opreate_type\030" +
      "\001 \001(\005\022&\n\tsend_card\030\002 \003(\0132\023.Int32ArrayRes" +
      "ponse\022\024\n\014display_time\030\003 \001(\005\022\020\n\010ox_value\030" +
      "\004 \001(\005\022\r\n\005times\030\005 \001(\005\022\021\n\tsort_card\030\006 \003(\005\"" +
      "f\n\rOpenCardPshox\022\021\n\topen_card\030\001 \001(\010\022\022\n\ns" +
      "eat_index\030\002 \001(\005\022\r\n\005cards\030\003 \003(\005\022\020\n\010ox_val" +
      "ue\030\004 \001(\005\022\r\n\005times\030\005 \001(\005\"V\n\025Opreate_Pshox" +
      "_Request\022\024\n\014opreate_type\030\001 \001(\005\022\030\n\020add_je",
      "tton_score\030\002 \001(\005\022\r\n\005is_ox\030\003 \001(\010B \n\024proto" +
      "buf.clazz.pshoxB\010pshoxRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pshox_PlayerResultPshox_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pshox_PlayerResultPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_PlayerResultPshox_descriptor,
              new java.lang.String[] { "PlayerScore", });
          internal_static_pshox_PukeGameEndPshox_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_pshox_PukeGameEndPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_PukeGameEndPshox_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardsData", "CardType", "EndScore", "PlayerNum", "Reason", "Players", "PlayerResult", "Winner", "StrOxValue", "DisplayTime", });
          internal_static_pshox_TableResponsePshox_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_pshox_TableResponsePshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_TableResponsePshox_descriptor,
              new java.lang.String[] { "BankerPlayer", "RoomInfo", "Players", "CardsData", "JettonButton", "JettonScore", "OpenCard", "LiangCard", "SceneStatus", "DisplayTime", "OxValue", "Times", "PlayerScore", "CallButton", "CurOxValue", "CurTimes", "SortCard", });
          internal_static_pshox_ButtonOperatePshox_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_pshox_ButtonOperatePshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_ButtonOperatePshox_descriptor,
              new java.lang.String[] { "OpreateType", "Button", "DisplayTime", "ChoosecardsIndex", "IsHaveTuiZhu", });
          internal_static_pshox_GameStartPshox_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_pshox_GameStartPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_GameStartPshox_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", });
          internal_static_pshox_JettonResultPshox_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_pshox_JettonResultPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_JettonResultPshox_descriptor,
              new java.lang.String[] { "JettonSeat", "JettonScore", });
          internal_static_pshox_SelectdBankerPshox_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_pshox_SelectdBankerPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_SelectdBankerPshox_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_pshox_SelectdBankerResultPshox_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_pshox_SelectdBankerResultPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_SelectdBankerResultPshox_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_pshox_SendCardPshox_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_pshox_SendCardPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_SendCardPshox_descriptor,
              new java.lang.String[] { "OpreateType", "SendCard", "DisplayTime", "OxValue", "Times", "SortCard", });
          internal_static_pshox_OpenCardPshox_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_pshox_OpenCardPshox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_OpenCardPshox_descriptor,
              new java.lang.String[] { "OpenCard", "SeatIndex", "Cards", "OxValue", "Times", });
          internal_static_pshox_Opreate_Pshox_Request_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_pshox_Opreate_Pshox_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pshox_Opreate_Pshox_Request_descriptor,
              new java.lang.String[] { "OpreateType", "AddJettonScore", "IsOx", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
