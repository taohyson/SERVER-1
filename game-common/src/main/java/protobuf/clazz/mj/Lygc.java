// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mj/lygc.proto

package protobuf.clazz.mj;

public final class Lygc {
  private Lygc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Lygc_Game_EndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool zi_mo_hu = 33;
    /**
     * <code>optional bool zi_mo_hu = 33;</code>
     *
     * <pre>
     * 是否是自摸胡
     * </pre>
     */
    boolean hasZiMoHu();
    /**
     * <code>optional bool zi_mo_hu = 33;</code>
     *
     * <pre>
     * 是否是自摸胡
     * </pre>
     */
    boolean getZiMoHu();

    // repeated float ming_gang_score = 34;
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    java.util.List<java.lang.Float> getMingGangScoreList();
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    int getMingGangScoreCount();
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    float getMingGangScore(int index);

    // repeated float an_gang_score = 35;
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    java.util.List<java.lang.Float> getAnGangScoreList();
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    int getAnGangScoreCount();
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    float getAnGangScore(int index);

    // repeated float tmp_game_score = 36;
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    java.util.List<java.lang.Float> getTmpGameScoreList();
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    int getTmpGameScoreCount();
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    float getTmpGameScore(int index);

    // optional int32 game_end_type = 37;
    /**
     * <code>optional int32 game_end_type = 37;</code>
     *
     * <pre>
     * 1：正常结束；2：流局；3：其他；
     * </pre>
     */
    boolean hasGameEndType();
    /**
     * <code>optional int32 game_end_type = 37;</code>
     *
     * <pre>
     * 1：正常结束；2：流局；3：其他；
     * </pre>
     */
    int getGameEndType();

    // repeated int32 ming_ci_ci_shu = 38;
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getMingCiCiShuList();
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    int getMingCiCiShuCount();
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    int getMingCiCiShu(int index);

    // repeated int32 an_ci_ci_shu = 39;
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getAnCiCiShuList();
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    int getAnCiCiShuCount();
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    int getAnCiCiShu(int index);

    // repeated int32 pi_ci_ci_shu = 40;
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPiCiCiShuList();
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    int getPiCiCiShuCount();
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    int getPiCiCiShu(int index);

    // repeated int32 zi_mo_ci_shu = 41;
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getZiMoCiShuList();
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    int getZiMoCiShuCount();
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    int getZiMoCiShu(int index);

    // repeated int32 bao_ci_ci_shu = 42;
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getBaoCiCiShuList();
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    int getBaoCiCiShuCount();
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    int getBaoCiCiShu(int index);
  }
  /**
   * Protobuf type {@code mj.Lygc_Game_End}
   */
  public static final class Lygc_Game_End extends
      com.google.protobuf.GeneratedMessage
      implements Lygc_Game_EndOrBuilder {
    // Use Lygc_Game_End.newBuilder() to construct.
    private Lygc_Game_End(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Lygc_Game_End(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Lygc_Game_End defaultInstance;
    public static Lygc_Game_End getDefaultInstance() {
      return defaultInstance;
    }

    public Lygc_Game_End getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Lygc_Game_End(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 264: {
              bitField0_ |= 0x00000001;
              ziMoHu_ = input.readBool();
              break;
            }
            case 277: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mingGangScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              mingGangScore_.add(input.readFloat());
              break;
            }
            case 274: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                mingGangScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                mingGangScore_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 285: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                anGangScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              anGangScore_.add(input.readFloat());
              break;
            }
            case 282: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                anGangScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                anGangScore_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 293: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                tmpGameScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              tmpGameScore_.add(input.readFloat());
              break;
            }
            case 290: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                tmpGameScore_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                tmpGameScore_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 296: {
              bitField0_ |= 0x00000002;
              gameEndType_ = input.readInt32();
              break;
            }
            case 304: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                mingCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              mingCiCiShu_.add(input.readInt32());
              break;
            }
            case 306: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                mingCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                mingCiCiShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 312: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                anCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              anCiCiShu_.add(input.readInt32());
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                anCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                anCiCiShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 320: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                piCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              piCiCiShu_.add(input.readInt32());
              break;
            }
            case 322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                piCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                piCiCiShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 328: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                ziMoCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              ziMoCiShu_.add(input.readInt32());
              break;
            }
            case 330: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                ziMoCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                ziMoCiShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 336: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                baoCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              baoCiCiShu_.add(input.readInt32());
              break;
            }
            case 338: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                baoCiCiShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                baoCiCiShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mingGangScore_ = java.util.Collections.unmodifiableList(mingGangScore_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          anGangScore_ = java.util.Collections.unmodifiableList(anGangScore_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          tmpGameScore_ = java.util.Collections.unmodifiableList(tmpGameScore_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          mingCiCiShu_ = java.util.Collections.unmodifiableList(mingCiCiShu_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          anCiCiShu_ = java.util.Collections.unmodifiableList(anCiCiShu_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          piCiCiShu_ = java.util.Collections.unmodifiableList(piCiCiShu_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          ziMoCiShu_ = java.util.Collections.unmodifiableList(ziMoCiShu_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          baoCiCiShu_ = java.util.Collections.unmodifiableList(baoCiCiShu_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Lygc.internal_static_mj_Lygc_Game_End_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Lygc.internal_static_mj_Lygc_Game_End_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Lygc.Lygc_Game_End.class, protobuf.clazz.mj.Lygc.Lygc_Game_End.Builder.class);
    }

    public static com.google.protobuf.Parser<Lygc_Game_End> PARSER =
        new com.google.protobuf.AbstractParser<Lygc_Game_End>() {
      public Lygc_Game_End parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Lygc_Game_End(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Lygc_Game_End> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool zi_mo_hu = 33;
    public static final int ZI_MO_HU_FIELD_NUMBER = 33;
    private boolean ziMoHu_;
    /**
     * <code>optional bool zi_mo_hu = 33;</code>
     *
     * <pre>
     * 是否是自摸胡
     * </pre>
     */
    public boolean hasZiMoHu() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool zi_mo_hu = 33;</code>
     *
     * <pre>
     * 是否是自摸胡
     * </pre>
     */
    public boolean getZiMoHu() {
      return ziMoHu_;
    }

    // repeated float ming_gang_score = 34;
    public static final int MING_GANG_SCORE_FIELD_NUMBER = 34;
    private java.util.List<java.lang.Float> mingGangScore_;
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getMingGangScoreList() {
      return mingGangScore_;
    }
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    public int getMingGangScoreCount() {
      return mingGangScore_.size();
    }
    /**
     * <code>repeated float ming_gang_score = 34;</code>
     *
     * <pre>
     * 明杠分
     * </pre>
     */
    public float getMingGangScore(int index) {
      return mingGangScore_.get(index);
    }

    // repeated float an_gang_score = 35;
    public static final int AN_GANG_SCORE_FIELD_NUMBER = 35;
    private java.util.List<java.lang.Float> anGangScore_;
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getAnGangScoreList() {
      return anGangScore_;
    }
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    public int getAnGangScoreCount() {
      return anGangScore_.size();
    }
    /**
     * <code>repeated float an_gang_score = 35;</code>
     *
     * <pre>
     * 暗杠分
     * </pre>
     */
    public float getAnGangScore(int index) {
      return anGangScore_.get(index);
    }

    // repeated float tmp_game_score = 36;
    public static final int TMP_GAME_SCORE_FIELD_NUMBER = 36;
    private java.util.List<java.lang.Float> tmpGameScore_;
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getTmpGameScoreList() {
      return tmpGameScore_;
    }
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    public int getTmpGameScoreCount() {
      return tmpGameScore_.size();
    }
    /**
     * <code>repeated float tmp_game_score = 36;</code>
     *
     * <pre>
     * 临时分，再加上明杠暗杠分=总得分
     * </pre>
     */
    public float getTmpGameScore(int index) {
      return tmpGameScore_.get(index);
    }

    // optional int32 game_end_type = 37;
    public static final int GAME_END_TYPE_FIELD_NUMBER = 37;
    private int gameEndType_;
    /**
     * <code>optional int32 game_end_type = 37;</code>
     *
     * <pre>
     * 1：正常结束；2：流局；3：其他；
     * </pre>
     */
    public boolean hasGameEndType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_end_type = 37;</code>
     *
     * <pre>
     * 1：正常结束；2：流局；3：其他；
     * </pre>
     */
    public int getGameEndType() {
      return gameEndType_;
    }

    // repeated int32 ming_ci_ci_shu = 38;
    public static final int MING_CI_CI_SHU_FIELD_NUMBER = 38;
    private java.util.List<java.lang.Integer> mingCiCiShu_;
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMingCiCiShuList() {
      return mingCiCiShu_;
    }
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    public int getMingCiCiShuCount() {
      return mingCiCiShu_.size();
    }
    /**
     * <code>repeated int32 ming_ci_ci_shu = 38;</code>
     *
     * <pre>
     * 明次次数
     * </pre>
     */
    public int getMingCiCiShu(int index) {
      return mingCiCiShu_.get(index);
    }

    // repeated int32 an_ci_ci_shu = 39;
    public static final int AN_CI_CI_SHU_FIELD_NUMBER = 39;
    private java.util.List<java.lang.Integer> anCiCiShu_;
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAnCiCiShuList() {
      return anCiCiShu_;
    }
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    public int getAnCiCiShuCount() {
      return anCiCiShu_.size();
    }
    /**
     * <code>repeated int32 an_ci_ci_shu = 39;</code>
     *
     * <pre>
     * 暗次次数
     * </pre>
     */
    public int getAnCiCiShu(int index) {
      return anCiCiShu_.get(index);
    }

    // repeated int32 pi_ci_ci_shu = 40;
    public static final int PI_CI_CI_SHU_FIELD_NUMBER = 40;
    private java.util.List<java.lang.Integer> piCiCiShu_;
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPiCiCiShuList() {
      return piCiCiShu_;
    }
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    public int getPiCiCiShuCount() {
      return piCiCiShu_.size();
    }
    /**
     * <code>repeated int32 pi_ci_ci_shu = 40;</code>
     *
     * <pre>
     * 皮次次数
     * </pre>
     */
    public int getPiCiCiShu(int index) {
      return piCiCiShu_.get(index);
    }

    // repeated int32 zi_mo_ci_shu = 41;
    public static final int ZI_MO_CI_SHU_FIELD_NUMBER = 41;
    private java.util.List<java.lang.Integer> ziMoCiShu_;
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getZiMoCiShuList() {
      return ziMoCiShu_;
    }
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    public int getZiMoCiShuCount() {
      return ziMoCiShu_.size();
    }
    /**
     * <code>repeated int32 zi_mo_ci_shu = 41;</code>
     *
     * <pre>
     * 自摸次数
     * </pre>
     */
    public int getZiMoCiShu(int index) {
      return ziMoCiShu_.get(index);
    }

    // repeated int32 bao_ci_ci_shu = 42;
    public static final int BAO_CI_CI_SHU_FIELD_NUMBER = 42;
    private java.util.List<java.lang.Integer> baoCiCiShu_;
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBaoCiCiShuList() {
      return baoCiCiShu_;
    }
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    public int getBaoCiCiShuCount() {
      return baoCiCiShu_.size();
    }
    /**
     * <code>repeated int32 bao_ci_ci_shu = 42;</code>
     *
     * <pre>
     * 包次次数
     * </pre>
     */
    public int getBaoCiCiShu(int index) {
      return baoCiCiShu_.get(index);
    }

    private void initFields() {
      ziMoHu_ = false;
      mingGangScore_ = java.util.Collections.emptyList();
      anGangScore_ = java.util.Collections.emptyList();
      tmpGameScore_ = java.util.Collections.emptyList();
      gameEndType_ = 0;
      mingCiCiShu_ = java.util.Collections.emptyList();
      anCiCiShu_ = java.util.Collections.emptyList();
      piCiCiShu_ = java.util.Collections.emptyList();
      ziMoCiShu_ = java.util.Collections.emptyList();
      baoCiCiShu_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(33, ziMoHu_);
      }
      for (int i = 0; i < mingGangScore_.size(); i++) {
        output.writeFloat(34, mingGangScore_.get(i));
      }
      for (int i = 0; i < anGangScore_.size(); i++) {
        output.writeFloat(35, anGangScore_.get(i));
      }
      for (int i = 0; i < tmpGameScore_.size(); i++) {
        output.writeFloat(36, tmpGameScore_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(37, gameEndType_);
      }
      for (int i = 0; i < mingCiCiShu_.size(); i++) {
        output.writeInt32(38, mingCiCiShu_.get(i));
      }
      for (int i = 0; i < anCiCiShu_.size(); i++) {
        output.writeInt32(39, anCiCiShu_.get(i));
      }
      for (int i = 0; i < piCiCiShu_.size(); i++) {
        output.writeInt32(40, piCiCiShu_.get(i));
      }
      for (int i = 0; i < ziMoCiShu_.size(); i++) {
        output.writeInt32(41, ziMoCiShu_.get(i));
      }
      for (int i = 0; i < baoCiCiShu_.size(); i++) {
        output.writeInt32(42, baoCiCiShu_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, ziMoHu_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMingGangScoreList().size();
        size += dataSize;
        size += 2 * getMingGangScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getAnGangScoreList().size();
        size += dataSize;
        size += 2 * getAnGangScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getTmpGameScoreList().size();
        size += dataSize;
        size += 2 * getTmpGameScoreList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, gameEndType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mingCiCiShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(mingCiCiShu_.get(i));
        }
        size += dataSize;
        size += 2 * getMingCiCiShuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < anCiCiShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(anCiCiShu_.get(i));
        }
        size += dataSize;
        size += 2 * getAnCiCiShuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < piCiCiShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(piCiCiShu_.get(i));
        }
        size += dataSize;
        size += 2 * getPiCiCiShuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ziMoCiShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ziMoCiShu_.get(i));
        }
        size += dataSize;
        size += 2 * getZiMoCiShuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < baoCiCiShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(baoCiCiShu_.get(i));
        }
        size += dataSize;
        size += 2 * getBaoCiCiShuList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Lygc.Lygc_Game_End parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Lygc.Lygc_Game_End prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.Lygc_Game_End}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Lygc.Lygc_Game_EndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Lygc.internal_static_mj_Lygc_Game_End_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Lygc.internal_static_mj_Lygc_Game_End_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Lygc.Lygc_Game_End.class, protobuf.clazz.mj.Lygc.Lygc_Game_End.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Lygc.Lygc_Game_End.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ziMoHu_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        mingGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        anGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        tmpGameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gameEndType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mingCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        anCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        piCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        ziMoCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        baoCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Lygc.internal_static_mj_Lygc_Game_End_descriptor;
      }

      public protobuf.clazz.mj.Lygc.Lygc_Game_End getDefaultInstanceForType() {
        return protobuf.clazz.mj.Lygc.Lygc_Game_End.getDefaultInstance();
      }

      public protobuf.clazz.mj.Lygc.Lygc_Game_End build() {
        protobuf.clazz.mj.Lygc.Lygc_Game_End result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Lygc.Lygc_Game_End buildPartial() {
        protobuf.clazz.mj.Lygc.Lygc_Game_End result = new protobuf.clazz.mj.Lygc.Lygc_Game_End(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ziMoHu_ = ziMoHu_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          mingGangScore_ = java.util.Collections.unmodifiableList(mingGangScore_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.mingGangScore_ = mingGangScore_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          anGangScore_ = java.util.Collections.unmodifiableList(anGangScore_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.anGangScore_ = anGangScore_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          tmpGameScore_ = java.util.Collections.unmodifiableList(tmpGameScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tmpGameScore_ = tmpGameScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameEndType_ = gameEndType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          mingCiCiShu_ = java.util.Collections.unmodifiableList(mingCiCiShu_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.mingCiCiShu_ = mingCiCiShu_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          anCiCiShu_ = java.util.Collections.unmodifiableList(anCiCiShu_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.anCiCiShu_ = anCiCiShu_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          piCiCiShu_ = java.util.Collections.unmodifiableList(piCiCiShu_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.piCiCiShu_ = piCiCiShu_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          ziMoCiShu_ = java.util.Collections.unmodifiableList(ziMoCiShu_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.ziMoCiShu_ = ziMoCiShu_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          baoCiCiShu_ = java.util.Collections.unmodifiableList(baoCiCiShu_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.baoCiCiShu_ = baoCiCiShu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Lygc.Lygc_Game_End) {
          return mergeFrom((protobuf.clazz.mj.Lygc.Lygc_Game_End)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Lygc.Lygc_Game_End other) {
        if (other == protobuf.clazz.mj.Lygc.Lygc_Game_End.getDefaultInstance()) return this;
        if (other.hasZiMoHu()) {
          setZiMoHu(other.getZiMoHu());
        }
        if (!other.mingGangScore_.isEmpty()) {
          if (mingGangScore_.isEmpty()) {
            mingGangScore_ = other.mingGangScore_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMingGangScoreIsMutable();
            mingGangScore_.addAll(other.mingGangScore_);
          }
          onChanged();
        }
        if (!other.anGangScore_.isEmpty()) {
          if (anGangScore_.isEmpty()) {
            anGangScore_ = other.anGangScore_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAnGangScoreIsMutable();
            anGangScore_.addAll(other.anGangScore_);
          }
          onChanged();
        }
        if (!other.tmpGameScore_.isEmpty()) {
          if (tmpGameScore_.isEmpty()) {
            tmpGameScore_ = other.tmpGameScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTmpGameScoreIsMutable();
            tmpGameScore_.addAll(other.tmpGameScore_);
          }
          onChanged();
        }
        if (other.hasGameEndType()) {
          setGameEndType(other.getGameEndType());
        }
        if (!other.mingCiCiShu_.isEmpty()) {
          if (mingCiCiShu_.isEmpty()) {
            mingCiCiShu_ = other.mingCiCiShu_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMingCiCiShuIsMutable();
            mingCiCiShu_.addAll(other.mingCiCiShu_);
          }
          onChanged();
        }
        if (!other.anCiCiShu_.isEmpty()) {
          if (anCiCiShu_.isEmpty()) {
            anCiCiShu_ = other.anCiCiShu_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAnCiCiShuIsMutable();
            anCiCiShu_.addAll(other.anCiCiShu_);
          }
          onChanged();
        }
        if (!other.piCiCiShu_.isEmpty()) {
          if (piCiCiShu_.isEmpty()) {
            piCiCiShu_ = other.piCiCiShu_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePiCiCiShuIsMutable();
            piCiCiShu_.addAll(other.piCiCiShu_);
          }
          onChanged();
        }
        if (!other.ziMoCiShu_.isEmpty()) {
          if (ziMoCiShu_.isEmpty()) {
            ziMoCiShu_ = other.ziMoCiShu_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureZiMoCiShuIsMutable();
            ziMoCiShu_.addAll(other.ziMoCiShu_);
          }
          onChanged();
        }
        if (!other.baoCiCiShu_.isEmpty()) {
          if (baoCiCiShu_.isEmpty()) {
            baoCiCiShu_ = other.baoCiCiShu_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureBaoCiCiShuIsMutable();
            baoCiCiShu_.addAll(other.baoCiCiShu_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Lygc.Lygc_Game_End parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Lygc.Lygc_Game_End) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool zi_mo_hu = 33;
      private boolean ziMoHu_ ;
      /**
       * <code>optional bool zi_mo_hu = 33;</code>
       *
       * <pre>
       * 是否是自摸胡
       * </pre>
       */
      public boolean hasZiMoHu() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool zi_mo_hu = 33;</code>
       *
       * <pre>
       * 是否是自摸胡
       * </pre>
       */
      public boolean getZiMoHu() {
        return ziMoHu_;
      }
      /**
       * <code>optional bool zi_mo_hu = 33;</code>
       *
       * <pre>
       * 是否是自摸胡
       * </pre>
       */
      public Builder setZiMoHu(boolean value) {
        bitField0_ |= 0x00000001;
        ziMoHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool zi_mo_hu = 33;</code>
       *
       * <pre>
       * 是否是自摸胡
       * </pre>
       */
      public Builder clearZiMoHu() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ziMoHu_ = false;
        onChanged();
        return this;
      }

      // repeated float ming_gang_score = 34;
      private java.util.List<java.lang.Float> mingGangScore_ = java.util.Collections.emptyList();
      private void ensureMingGangScoreIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mingGangScore_ = new java.util.ArrayList<java.lang.Float>(mingGangScore_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getMingGangScoreList() {
        return java.util.Collections.unmodifiableList(mingGangScore_);
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public int getMingGangScoreCount() {
        return mingGangScore_.size();
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public float getMingGangScore(int index) {
        return mingGangScore_.get(index);
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public Builder setMingGangScore(
          int index, float value) {
        ensureMingGangScoreIsMutable();
        mingGangScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public Builder addMingGangScore(float value) {
        ensureMingGangScoreIsMutable();
        mingGangScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public Builder addAllMingGangScore(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMingGangScoreIsMutable();
        super.addAll(values, mingGangScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float ming_gang_score = 34;</code>
       *
       * <pre>
       * 明杠分
       * </pre>
       */
      public Builder clearMingGangScore() {
        mingGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated float an_gang_score = 35;
      private java.util.List<java.lang.Float> anGangScore_ = java.util.Collections.emptyList();
      private void ensureAnGangScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          anGangScore_ = new java.util.ArrayList<java.lang.Float>(anGangScore_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getAnGangScoreList() {
        return java.util.Collections.unmodifiableList(anGangScore_);
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public int getAnGangScoreCount() {
        return anGangScore_.size();
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public float getAnGangScore(int index) {
        return anGangScore_.get(index);
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public Builder setAnGangScore(
          int index, float value) {
        ensureAnGangScoreIsMutable();
        anGangScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public Builder addAnGangScore(float value) {
        ensureAnGangScoreIsMutable();
        anGangScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public Builder addAllAnGangScore(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAnGangScoreIsMutable();
        super.addAll(values, anGangScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float an_gang_score = 35;</code>
       *
       * <pre>
       * 暗杠分
       * </pre>
       */
      public Builder clearAnGangScore() {
        anGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated float tmp_game_score = 36;
      private java.util.List<java.lang.Float> tmpGameScore_ = java.util.Collections.emptyList();
      private void ensureTmpGameScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          tmpGameScore_ = new java.util.ArrayList<java.lang.Float>(tmpGameScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getTmpGameScoreList() {
        return java.util.Collections.unmodifiableList(tmpGameScore_);
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public int getTmpGameScoreCount() {
        return tmpGameScore_.size();
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public float getTmpGameScore(int index) {
        return tmpGameScore_.get(index);
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public Builder setTmpGameScore(
          int index, float value) {
        ensureTmpGameScoreIsMutable();
        tmpGameScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public Builder addTmpGameScore(float value) {
        ensureTmpGameScoreIsMutable();
        tmpGameScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public Builder addAllTmpGameScore(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureTmpGameScoreIsMutable();
        super.addAll(values, tmpGameScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tmp_game_score = 36;</code>
       *
       * <pre>
       * 临时分，再加上明杠暗杠分=总得分
       * </pre>
       */
      public Builder clearTmpGameScore() {
        tmpGameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 game_end_type = 37;
      private int gameEndType_ ;
      /**
       * <code>optional int32 game_end_type = 37;</code>
       *
       * <pre>
       * 1：正常结束；2：流局；3：其他；
       * </pre>
       */
      public boolean hasGameEndType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 game_end_type = 37;</code>
       *
       * <pre>
       * 1：正常结束；2：流局；3：其他；
       * </pre>
       */
      public int getGameEndType() {
        return gameEndType_;
      }
      /**
       * <code>optional int32 game_end_type = 37;</code>
       *
       * <pre>
       * 1：正常结束；2：流局；3：其他；
       * </pre>
       */
      public Builder setGameEndType(int value) {
        bitField0_ |= 0x00000010;
        gameEndType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_end_type = 37;</code>
       *
       * <pre>
       * 1：正常结束；2：流局；3：其他；
       * </pre>
       */
      public Builder clearGameEndType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameEndType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 ming_ci_ci_shu = 38;
      private java.util.List<java.lang.Integer> mingCiCiShu_ = java.util.Collections.emptyList();
      private void ensureMingCiCiShuIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          mingCiCiShu_ = new java.util.ArrayList<java.lang.Integer>(mingCiCiShu_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMingCiCiShuList() {
        return java.util.Collections.unmodifiableList(mingCiCiShu_);
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public int getMingCiCiShuCount() {
        return mingCiCiShu_.size();
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public int getMingCiCiShu(int index) {
        return mingCiCiShu_.get(index);
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public Builder setMingCiCiShu(
          int index, int value) {
        ensureMingCiCiShuIsMutable();
        mingCiCiShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public Builder addMingCiCiShu(int value) {
        ensureMingCiCiShuIsMutable();
        mingCiCiShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public Builder addAllMingCiCiShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMingCiCiShuIsMutable();
        super.addAll(values, mingCiCiShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_ci_ci_shu = 38;</code>
       *
       * <pre>
       * 明次次数
       * </pre>
       */
      public Builder clearMingCiCiShu() {
        mingCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 an_ci_ci_shu = 39;
      private java.util.List<java.lang.Integer> anCiCiShu_ = java.util.Collections.emptyList();
      private void ensureAnCiCiShuIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          anCiCiShu_ = new java.util.ArrayList<java.lang.Integer>(anCiCiShu_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAnCiCiShuList() {
        return java.util.Collections.unmodifiableList(anCiCiShu_);
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public int getAnCiCiShuCount() {
        return anCiCiShu_.size();
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public int getAnCiCiShu(int index) {
        return anCiCiShu_.get(index);
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public Builder setAnCiCiShu(
          int index, int value) {
        ensureAnCiCiShuIsMutable();
        anCiCiShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public Builder addAnCiCiShu(int value) {
        ensureAnCiCiShuIsMutable();
        anCiCiShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public Builder addAllAnCiCiShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAnCiCiShuIsMutable();
        super.addAll(values, anCiCiShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_ci_ci_shu = 39;</code>
       *
       * <pre>
       * 暗次次数
       * </pre>
       */
      public Builder clearAnCiCiShu() {
        anCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 pi_ci_ci_shu = 40;
      private java.util.List<java.lang.Integer> piCiCiShu_ = java.util.Collections.emptyList();
      private void ensurePiCiCiShuIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          piCiCiShu_ = new java.util.ArrayList<java.lang.Integer>(piCiCiShu_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPiCiCiShuList() {
        return java.util.Collections.unmodifiableList(piCiCiShu_);
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public int getPiCiCiShuCount() {
        return piCiCiShu_.size();
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public int getPiCiCiShu(int index) {
        return piCiCiShu_.get(index);
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public Builder setPiCiCiShu(
          int index, int value) {
        ensurePiCiCiShuIsMutable();
        piCiCiShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public Builder addPiCiCiShu(int value) {
        ensurePiCiCiShuIsMutable();
        piCiCiShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public Builder addAllPiCiCiShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePiCiCiShuIsMutable();
        super.addAll(values, piCiCiShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pi_ci_ci_shu = 40;</code>
       *
       * <pre>
       * 皮次次数
       * </pre>
       */
      public Builder clearPiCiCiShu() {
        piCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 zi_mo_ci_shu = 41;
      private java.util.List<java.lang.Integer> ziMoCiShu_ = java.util.Collections.emptyList();
      private void ensureZiMoCiShuIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          ziMoCiShu_ = new java.util.ArrayList<java.lang.Integer>(ziMoCiShu_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getZiMoCiShuList() {
        return java.util.Collections.unmodifiableList(ziMoCiShu_);
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public int getZiMoCiShuCount() {
        return ziMoCiShu_.size();
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public int getZiMoCiShu(int index) {
        return ziMoCiShu_.get(index);
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public Builder setZiMoCiShu(
          int index, int value) {
        ensureZiMoCiShuIsMutable();
        ziMoCiShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public Builder addZiMoCiShu(int value) {
        ensureZiMoCiShuIsMutable();
        ziMoCiShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public Builder addAllZiMoCiShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZiMoCiShuIsMutable();
        super.addAll(values, ziMoCiShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zi_mo_ci_shu = 41;</code>
       *
       * <pre>
       * 自摸次数
       * </pre>
       */
      public Builder clearZiMoCiShu() {
        ziMoCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 bao_ci_ci_shu = 42;
      private java.util.List<java.lang.Integer> baoCiCiShu_ = java.util.Collections.emptyList();
      private void ensureBaoCiCiShuIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          baoCiCiShu_ = new java.util.ArrayList<java.lang.Integer>(baoCiCiShu_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBaoCiCiShuList() {
        return java.util.Collections.unmodifiableList(baoCiCiShu_);
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public int getBaoCiCiShuCount() {
        return baoCiCiShu_.size();
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public int getBaoCiCiShu(int index) {
        return baoCiCiShu_.get(index);
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public Builder setBaoCiCiShu(
          int index, int value) {
        ensureBaoCiCiShuIsMutable();
        baoCiCiShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public Builder addBaoCiCiShu(int value) {
        ensureBaoCiCiShuIsMutable();
        baoCiCiShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public Builder addAllBaoCiCiShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBaoCiCiShuIsMutable();
        super.addAll(values, baoCiCiShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bao_ci_ci_shu = 42;</code>
       *
       * <pre>
       * 包次次数
       * </pre>
       */
      public Builder clearBaoCiCiShu() {
        baoCiCiShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.Lygc_Game_End)
    }

    static {
      defaultInstance = new Lygc_Game_End(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.Lygc_Game_End)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_Lygc_Game_End_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_Lygc_Game_End_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmj/lygc.proto\022\002mj\032\024basic/protocol.prot" +
      "o\"\361\001\n\rLygc_Game_End\022\020\n\010zi_mo_hu\030! \001(\010\022\027\n" +
      "\017ming_gang_score\030\" \003(\002\022\025\n\ran_gang_score\030" +
      "# \003(\002\022\026\n\016tmp_game_score\030$ \003(\002\022\025\n\rgame_en" +
      "d_type\030% \001(\005\022\026\n\016ming_ci_ci_shu\030& \003(\005\022\024\n\014" +
      "an_ci_ci_shu\030\' \003(\005\022\024\n\014pi_ci_ci_shu\030( \003(\005" +
      "\022\024\n\014zi_mo_ci_shu\030) \003(\005\022\025\n\rbao_ci_ci_shu\030" +
      "* \003(\005B\031\n\021protobuf.clazz.mjB\004Lygc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mj_Lygc_Game_End_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mj_Lygc_Game_End_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_Lygc_Game_End_descriptor,
              new java.lang.String[] { "ZiMoHu", "MingGangScore", "AnGangScore", "TmpGameScore", "GameEndType", "MingCiCiShu", "AnCiCiShu", "PiCiCiShu", "ZiMoCiShu", "BaoCiCiShu", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
