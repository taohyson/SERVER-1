// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mj/nanchang.proto

package protobuf.clazz.mj;

public final class Nanchang {
  private Nanchang() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EveryJingInfo_NCOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 showCards = 6;
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getShowCardsList();
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    int getShowCardsCount();
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    int getShowCards(int index);

    // optional int32 zhengJingCount = 1;
    /**
     * <code>optional int32 zhengJingCount = 1;</code>
     *
     * <pre>
     * 正精的个数
     * </pre>
     */
    boolean hasZhengJingCount();
    /**
     * <code>optional int32 zhengJingCount = 1;</code>
     *
     * <pre>
     * 正精的个数
     * </pre>
     */
    int getZhengJingCount();

    // optional int32 fuJingCount = 2;
    /**
     * <code>optional int32 fuJingCount = 2;</code>
     *
     * <pre>
     *  副精的个数
     * </pre>
     */
    boolean hasFuJingCount();
    /**
     * <code>optional int32 fuJingCount = 2;</code>
     *
     * <pre>
     *  副精的个数
     * </pre>
     */
    int getFuJingCount();

    // optional bool isBaWangJing = 3;
    /**
     * <code>optional bool isBaWangJing = 3;</code>
     *
     * <pre>
     * 是否霸王精 (true是 false否)
     * </pre>
     */
    boolean hasIsBaWangJing();
    /**
     * <code>optional bool isBaWangJing = 3;</code>
     *
     * <pre>
     * 是否霸王精 (true是 false否)
     * </pre>
     */
    boolean getIsBaWangJing();

    // optional int32 chongGuanScore = 4;
    /**
     * <code>optional int32 chongGuanScore = 4;</code>
     *
     * <pre>
     * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
     * </pre>
     */
    boolean hasChongGuanScore();
    /**
     * <code>optional int32 chongGuanScore = 4;</code>
     *
     * <pre>
     * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
     * </pre>
     */
    int getChongGuanScore();

    // optional int32 everyJingScore = 5;
    /**
     * <code>optional int32 everyJingScore = 5;</code>
     *
     * <pre>
     * 得分
     * </pre>
     */
    boolean hasEveryJingScore();
    /**
     * <code>optional int32 everyJingScore = 5;</code>
     *
     * <pre>
     * 得分
     * </pre>
     */
    int getEveryJingScore();
  }
  /**
   * Protobuf type {@code mj.EveryJingInfo_NC}
   */
  public static final class EveryJingInfo_NC extends
      com.google.protobuf.GeneratedMessage
      implements EveryJingInfo_NCOrBuilder {
    // Use EveryJingInfo_NC.newBuilder() to construct.
    private EveryJingInfo_NC(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EveryJingInfo_NC(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EveryJingInfo_NC defaultInstance;
    public static EveryJingInfo_NC getDefaultInstance() {
      return defaultInstance;
    }

    public EveryJingInfo_NC getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EveryJingInfo_NC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zhengJingCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fuJingCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isBaWangJing_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              chongGuanScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              everyJingScore_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                showCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              showCards_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                showCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                showCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          showCards_ = java.util.Collections.unmodifiableList(showCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_EveryJingInfo_NC_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_EveryJingInfo_NC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.class, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder.class);
    }

    public static com.google.protobuf.Parser<EveryJingInfo_NC> PARSER =
        new com.google.protobuf.AbstractParser<EveryJingInfo_NC>() {
      public EveryJingInfo_NC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EveryJingInfo_NC(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EveryJingInfo_NC> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 showCards = 6;
    public static final int SHOWCARDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> showCards_;
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getShowCardsList() {
      return showCards_;
    }
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    public int getShowCardsCount() {
      return showCards_.size();
    }
    /**
     * <code>repeated int32 showCards = 6;</code>
     *
     * <pre>
     * 显示的牌
     * </pre>
     */
    public int getShowCards(int index) {
      return showCards_.get(index);
    }

    // optional int32 zhengJingCount = 1;
    public static final int ZHENGJINGCOUNT_FIELD_NUMBER = 1;
    private int zhengJingCount_;
    /**
     * <code>optional int32 zhengJingCount = 1;</code>
     *
     * <pre>
     * 正精的个数
     * </pre>
     */
    public boolean hasZhengJingCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 zhengJingCount = 1;</code>
     *
     * <pre>
     * 正精的个数
     * </pre>
     */
    public int getZhengJingCount() {
      return zhengJingCount_;
    }

    // optional int32 fuJingCount = 2;
    public static final int FUJINGCOUNT_FIELD_NUMBER = 2;
    private int fuJingCount_;
    /**
     * <code>optional int32 fuJingCount = 2;</code>
     *
     * <pre>
     *  副精的个数
     * </pre>
     */
    public boolean hasFuJingCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 fuJingCount = 2;</code>
     *
     * <pre>
     *  副精的个数
     * </pre>
     */
    public int getFuJingCount() {
      return fuJingCount_;
    }

    // optional bool isBaWangJing = 3;
    public static final int ISBAWANGJING_FIELD_NUMBER = 3;
    private boolean isBaWangJing_;
    /**
     * <code>optional bool isBaWangJing = 3;</code>
     *
     * <pre>
     * 是否霸王精 (true是 false否)
     * </pre>
     */
    public boolean hasIsBaWangJing() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isBaWangJing = 3;</code>
     *
     * <pre>
     * 是否霸王精 (true是 false否)
     * </pre>
     */
    public boolean getIsBaWangJing() {
      return isBaWangJing_;
    }

    // optional int32 chongGuanScore = 4;
    public static final int CHONGGUANSCORE_FIELD_NUMBER = 4;
    private int chongGuanScore_;
    /**
     * <code>optional int32 chongGuanScore = 4;</code>
     *
     * <pre>
     * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
     * </pre>
     */
    public boolean hasChongGuanScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 chongGuanScore = 4;</code>
     *
     * <pre>
     * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
     * </pre>
     */
    public int getChongGuanScore() {
      return chongGuanScore_;
    }

    // optional int32 everyJingScore = 5;
    public static final int EVERYJINGSCORE_FIELD_NUMBER = 5;
    private int everyJingScore_;
    /**
     * <code>optional int32 everyJingScore = 5;</code>
     *
     * <pre>
     * 得分
     * </pre>
     */
    public boolean hasEveryJingScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 everyJingScore = 5;</code>
     *
     * <pre>
     * 得分
     * </pre>
     */
    public int getEveryJingScore() {
      return everyJingScore_;
    }

    private void initFields() {
      showCards_ = java.util.Collections.emptyList();
      zhengJingCount_ = 0;
      fuJingCount_ = 0;
      isBaWangJing_ = false;
      chongGuanScore_ = 0;
      everyJingScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, zhengJingCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fuJingCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isBaWangJing_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, chongGuanScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, everyJingScore_);
      }
      for (int i = 0; i < showCards_.size(); i++) {
        output.writeInt32(6, showCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, zhengJingCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fuJingCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isBaWangJing_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, chongGuanScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, everyJingScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < showCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(showCards_.get(i));
        }
        size += dataSize;
        size += 1 * getShowCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.EveryJingInfo_NC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.EveryJingInfo_NC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_EveryJingInfo_NC_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_EveryJingInfo_NC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.class, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        showCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        zhengJingCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fuJingCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isBaWangJing_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        chongGuanScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        everyJingScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_EveryJingInfo_NC_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC build() {
        protobuf.clazz.mj.Nanchang.EveryJingInfo_NC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC buildPartial() {
        protobuf.clazz.mj.Nanchang.EveryJingInfo_NC result = new protobuf.clazz.mj.Nanchang.EveryJingInfo_NC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          showCards_ = java.util.Collections.unmodifiableList(showCards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.showCards_ = showCards_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zhengJingCount_ = zhengJingCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fuJingCount_ = fuJingCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isBaWangJing_ = isBaWangJing_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chongGuanScore_ = chongGuanScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.everyJingScore_ = everyJingScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.EveryJingInfo_NC) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.EveryJingInfo_NC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.EveryJingInfo_NC other) {
        if (other == protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.getDefaultInstance()) return this;
        if (!other.showCards_.isEmpty()) {
          if (showCards_.isEmpty()) {
            showCards_ = other.showCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShowCardsIsMutable();
            showCards_.addAll(other.showCards_);
          }
          onChanged();
        }
        if (other.hasZhengJingCount()) {
          setZhengJingCount(other.getZhengJingCount());
        }
        if (other.hasFuJingCount()) {
          setFuJingCount(other.getFuJingCount());
        }
        if (other.hasIsBaWangJing()) {
          setIsBaWangJing(other.getIsBaWangJing());
        }
        if (other.hasChongGuanScore()) {
          setChongGuanScore(other.getChongGuanScore());
        }
        if (other.hasEveryJingScore()) {
          setEveryJingScore(other.getEveryJingScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.EveryJingInfo_NC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.EveryJingInfo_NC) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 showCards = 6;
      private java.util.List<java.lang.Integer> showCards_ = java.util.Collections.emptyList();
      private void ensureShowCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          showCards_ = new java.util.ArrayList<java.lang.Integer>(showCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getShowCardsList() {
        return java.util.Collections.unmodifiableList(showCards_);
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public int getShowCardsCount() {
        return showCards_.size();
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public int getShowCards(int index) {
        return showCards_.get(index);
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public Builder setShowCards(
          int index, int value) {
        ensureShowCardsIsMutable();
        showCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public Builder addShowCards(int value) {
        ensureShowCardsIsMutable();
        showCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public Builder addAllShowCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShowCardsIsMutable();
        super.addAll(values, showCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCards = 6;</code>
       *
       * <pre>
       * 显示的牌
       * </pre>
       */
      public Builder clearShowCards() {
        showCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 zhengJingCount = 1;
      private int zhengJingCount_ ;
      /**
       * <code>optional int32 zhengJingCount = 1;</code>
       *
       * <pre>
       * 正精的个数
       * </pre>
       */
      public boolean hasZhengJingCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 zhengJingCount = 1;</code>
       *
       * <pre>
       * 正精的个数
       * </pre>
       */
      public int getZhengJingCount() {
        return zhengJingCount_;
      }
      /**
       * <code>optional int32 zhengJingCount = 1;</code>
       *
       * <pre>
       * 正精的个数
       * </pre>
       */
      public Builder setZhengJingCount(int value) {
        bitField0_ |= 0x00000002;
        zhengJingCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhengJingCount = 1;</code>
       *
       * <pre>
       * 正精的个数
       * </pre>
       */
      public Builder clearZhengJingCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        zhengJingCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fuJingCount = 2;
      private int fuJingCount_ ;
      /**
       * <code>optional int32 fuJingCount = 2;</code>
       *
       * <pre>
       *  副精的个数
       * </pre>
       */
      public boolean hasFuJingCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 fuJingCount = 2;</code>
       *
       * <pre>
       *  副精的个数
       * </pre>
       */
      public int getFuJingCount() {
        return fuJingCount_;
      }
      /**
       * <code>optional int32 fuJingCount = 2;</code>
       *
       * <pre>
       *  副精的个数
       * </pre>
       */
      public Builder setFuJingCount(int value) {
        bitField0_ |= 0x00000004;
        fuJingCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fuJingCount = 2;</code>
       *
       * <pre>
       *  副精的个数
       * </pre>
       */
      public Builder clearFuJingCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fuJingCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool isBaWangJing = 3;
      private boolean isBaWangJing_ ;
      /**
       * <code>optional bool isBaWangJing = 3;</code>
       *
       * <pre>
       * 是否霸王精 (true是 false否)
       * </pre>
       */
      public boolean hasIsBaWangJing() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isBaWangJing = 3;</code>
       *
       * <pre>
       * 是否霸王精 (true是 false否)
       * </pre>
       */
      public boolean getIsBaWangJing() {
        return isBaWangJing_;
      }
      /**
       * <code>optional bool isBaWangJing = 3;</code>
       *
       * <pre>
       * 是否霸王精 (true是 false否)
       * </pre>
       */
      public Builder setIsBaWangJing(boolean value) {
        bitField0_ |= 0x00000008;
        isBaWangJing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isBaWangJing = 3;</code>
       *
       * <pre>
       * 是否霸王精 (true是 false否)
       * </pre>
       */
      public Builder clearIsBaWangJing() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isBaWangJing_ = false;
        onChanged();
        return this;
      }

      // optional int32 chongGuanScore = 4;
      private int chongGuanScore_ ;
      /**
       * <code>optional int32 chongGuanScore = 4;</code>
       *
       * <pre>
       * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
       * </pre>
       */
      public boolean hasChongGuanScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 chongGuanScore = 4;</code>
       *
       * <pre>
       * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
       * </pre>
       */
      public int getChongGuanScore() {
        return chongGuanScore_;
      }
      /**
       * <code>optional int32 chongGuanScore = 4;</code>
       *
       * <pre>
       * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
       * </pre>
       */
      public Builder setChongGuanScore(int value) {
        bitField0_ |= 0x00000010;
        chongGuanScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chongGuanScore = 4;</code>
       *
       * <pre>
       * 精的冲关(0表示没有冲关, &gt;1 表示冲关情况)
       * </pre>
       */
      public Builder clearChongGuanScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        chongGuanScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 everyJingScore = 5;
      private int everyJingScore_ ;
      /**
       * <code>optional int32 everyJingScore = 5;</code>
       *
       * <pre>
       * 得分
       * </pre>
       */
      public boolean hasEveryJingScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 everyJingScore = 5;</code>
       *
       * <pre>
       * 得分
       * </pre>
       */
      public int getEveryJingScore() {
        return everyJingScore_;
      }
      /**
       * <code>optional int32 everyJingScore = 5;</code>
       *
       * <pre>
       * 得分
       * </pre>
       */
      public Builder setEveryJingScore(int value) {
        bitField0_ |= 0x00000020;
        everyJingScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 everyJingScore = 5;</code>
       *
       * <pre>
       * 得分
       * </pre>
       */
      public Builder clearEveryJingScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        everyJingScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.EveryJingInfo_NC)
    }

    static {
      defaultInstance = new EveryJingInfo_NC(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.EveryJingInfo_NC)
  }

  public interface ActionJingDatasOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 showCenterCards = 1;
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getShowCenterCardsList();
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    int getShowCenterCardsCount();
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    int getShowCenterCards(int index);

    // repeated .mj.EveryJingInfo_NC jingInfo = 2;
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> 
        getJingInfoList();
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.EveryJingInfo_NC getJingInfo(int index);
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    int getJingInfoCount();
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder> 
        getJingInfoOrBuilderList();
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder getJingInfoOrBuilder(
        int index);

    // optional int32 count = 3;
    /**
     * <code>optional int32 count = 3;</code>
     *
     * <pre>
     * 发电显示次数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional int32 count = 3;</code>
     *
     * <pre>
     * 发电显示次数
     * </pre>
     */
    int getCount();

    // optional bool touZi = 4;
    /**
     * <code>optional bool touZi = 4;</code>
     *
     * <pre>
     *是否需要骰子动画
     * </pre>
     */
    boolean hasTouZi();
    /**
     * <code>optional bool touZi = 4;</code>
     *
     * <pre>
     *是否需要骰子动画
     * </pre>
     */
    boolean getTouZi();

    // optional int32 target = 5;
    /**
     * <code>optional int32 target = 5;</code>
     *
     * <pre>
     *对应玩家
     * </pre>
     */
    boolean hasTarget();
    /**
     * <code>optional int32 target = 5;</code>
     *
     * <pre>
     *对应玩家
     * </pre>
     */
    int getTarget();

    // optional int32 touZiOne = 6;
    /**
     * <code>optional int32 touZiOne = 6;</code>
     *
     * <pre>
     *骰子1
     * </pre>
     */
    boolean hasTouZiOne();
    /**
     * <code>optional int32 touZiOne = 6;</code>
     *
     * <pre>
     *骰子1
     * </pre>
     */
    int getTouZiOne();

    // optional int32 touZiTwo = 7;
    /**
     * <code>optional int32 touZiTwo = 7;</code>
     *
     * <pre>
     *骰子2
     * </pre>
     */
    boolean hasTouZiTwo();
    /**
     * <code>optional int32 touZiTwo = 7;</code>
     *
     * <pre>
     *骰子2
     * </pre>
     */
    int getTouZiTwo();

    // repeated int32 otherCards = 8;
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    java.util.List<java.lang.Integer> getOtherCardsList();
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    int getOtherCardsCount();
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    int getOtherCards(int index);

    // optional bool isTing = 9;
    /**
     * <code>optional bool isTing = 9;</code>
     *
     * <pre>
     *停牌
     * </pre>
     */
    boolean hasIsTing();
    /**
     * <code>optional bool isTing = 9;</code>
     *
     * <pre>
     *停牌
     * </pre>
     */
    boolean getIsTing();
  }
  /**
   * Protobuf type {@code mj.ActionJingDatas}
   */
  public static final class ActionJingDatas extends
      com.google.protobuf.GeneratedMessage
      implements ActionJingDatasOrBuilder {
    // Use ActionJingDatas.newBuilder() to construct.
    private ActionJingDatas(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActionJingDatas(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActionJingDatas defaultInstance;
    public static ActionJingDatas getDefaultInstance() {
      return defaultInstance;
    }

    public ActionJingDatas getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActionJingDatas(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                showCenterCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              showCenterCards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                showCenterCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                showCenterCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                jingInfo_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC>();
                mutable_bitField0_ |= 0x00000002;
              }
              jingInfo_.add(input.readMessage(protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              count_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              touZi_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              target_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              touZiOne_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              touZiTwo_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                otherCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              otherCards_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                otherCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                otherCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              isTing_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          showCenterCards_ = java.util.Collections.unmodifiableList(showCenterCards_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          jingInfo_ = java.util.Collections.unmodifiableList(jingInfo_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          otherCards_ = java.util.Collections.unmodifiableList(otherCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionJingDatas_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionJingDatas_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.ActionJingDatas.class, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder.class);
    }

    public static com.google.protobuf.Parser<ActionJingDatas> PARSER =
        new com.google.protobuf.AbstractParser<ActionJingDatas>() {
      public ActionJingDatas parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActionJingDatas(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActionJingDatas> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 showCenterCards = 1;
    public static final int SHOWCENTERCARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> showCenterCards_;
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getShowCenterCardsList() {
      return showCenterCards_;
    }
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    public int getShowCenterCardsCount() {
      return showCenterCards_.size();
    }
    /**
     * <code>repeated int32 showCenterCards = 1;</code>
     *
     * <pre>
     * 中间显示的牌
     * </pre>
     */
    public int getShowCenterCards(int index) {
      return showCenterCards_.get(index);
    }

    // repeated .mj.EveryJingInfo_NC jingInfo = 2;
    public static final int JINGINFO_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> jingInfo_;
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> getJingInfoList() {
      return jingInfo_;
    }
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder> 
        getJingInfoOrBuilderList() {
      return jingInfo_;
    }
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    public int getJingInfoCount() {
      return jingInfo_.size();
    }
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC getJingInfo(int index) {
      return jingInfo_.get(index);
    }
    /**
     * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
     *
     * <pre>
     *每个玩家对应的显示牌数据 下标对应玩家index
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder getJingInfoOrBuilder(
        int index) {
      return jingInfo_.get(index);
    }

    // optional int32 count = 3;
    public static final int COUNT_FIELD_NUMBER = 3;
    private int count_;
    /**
     * <code>optional int32 count = 3;</code>
     *
     * <pre>
     * 发电显示次数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 count = 3;</code>
     *
     * <pre>
     * 发电显示次数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    // optional bool touZi = 4;
    public static final int TOUZI_FIELD_NUMBER = 4;
    private boolean touZi_;
    /**
     * <code>optional bool touZi = 4;</code>
     *
     * <pre>
     *是否需要骰子动画
     * </pre>
     */
    public boolean hasTouZi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool touZi = 4;</code>
     *
     * <pre>
     *是否需要骰子动画
     * </pre>
     */
    public boolean getTouZi() {
      return touZi_;
    }

    // optional int32 target = 5;
    public static final int TARGET_FIELD_NUMBER = 5;
    private int target_;
    /**
     * <code>optional int32 target = 5;</code>
     *
     * <pre>
     *对应玩家
     * </pre>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 target = 5;</code>
     *
     * <pre>
     *对应玩家
     * </pre>
     */
    public int getTarget() {
      return target_;
    }

    // optional int32 touZiOne = 6;
    public static final int TOUZIONE_FIELD_NUMBER = 6;
    private int touZiOne_;
    /**
     * <code>optional int32 touZiOne = 6;</code>
     *
     * <pre>
     *骰子1
     * </pre>
     */
    public boolean hasTouZiOne() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 touZiOne = 6;</code>
     *
     * <pre>
     *骰子1
     * </pre>
     */
    public int getTouZiOne() {
      return touZiOne_;
    }

    // optional int32 touZiTwo = 7;
    public static final int TOUZITWO_FIELD_NUMBER = 7;
    private int touZiTwo_;
    /**
     * <code>optional int32 touZiTwo = 7;</code>
     *
     * <pre>
     *骰子2
     * </pre>
     */
    public boolean hasTouZiTwo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 touZiTwo = 7;</code>
     *
     * <pre>
     *骰子2
     * </pre>
     */
    public int getTouZiTwo() {
      return touZiTwo_;
    }

    // repeated int32 otherCards = 8;
    public static final int OTHERCARDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> otherCards_;
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOtherCardsList() {
      return otherCards_;
    }
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    public int getOtherCardsCount() {
      return otherCards_.size();
    }
    /**
     * <code>repeated int32 otherCards = 8;</code>
     *
     * <pre>
     *用于显示左右上下精
     * </pre>
     */
    public int getOtherCards(int index) {
      return otherCards_.get(index);
    }

    // optional bool isTing = 9;
    public static final int ISTING_FIELD_NUMBER = 9;
    private boolean isTing_;
    /**
     * <code>optional bool isTing = 9;</code>
     *
     * <pre>
     *停牌
     * </pre>
     */
    public boolean hasIsTing() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isTing = 9;</code>
     *
     * <pre>
     *停牌
     * </pre>
     */
    public boolean getIsTing() {
      return isTing_;
    }

    private void initFields() {
      showCenterCards_ = java.util.Collections.emptyList();
      jingInfo_ = java.util.Collections.emptyList();
      count_ = 0;
      touZi_ = false;
      target_ = 0;
      touZiOne_ = 0;
      touZiTwo_ = 0;
      otherCards_ = java.util.Collections.emptyList();
      isTing_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < showCenterCards_.size(); i++) {
        output.writeInt32(1, showCenterCards_.get(i));
      }
      for (int i = 0; i < jingInfo_.size(); i++) {
        output.writeMessage(2, jingInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(4, touZi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, target_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, touZiOne_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, touZiTwo_);
      }
      for (int i = 0; i < otherCards_.size(); i++) {
        output.writeInt32(8, otherCards_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(9, isTing_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < showCenterCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(showCenterCards_.get(i));
        }
        size += dataSize;
        size += 1 * getShowCenterCardsList().size();
      }
      for (int i = 0; i < jingInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, jingInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, touZi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, target_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, touZiOne_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, touZiTwo_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < otherCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(otherCards_.get(i));
        }
        size += dataSize;
        size += 1 * getOtherCardsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isTing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionJingDatas parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.ActionJingDatas prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.ActionJingDatas}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionJingDatas_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionJingDatas_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.ActionJingDatas.class, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.ActionJingDatas.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJingInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        showCenterCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (jingInfoBuilder_ == null) {
          jingInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          jingInfoBuilder_.clear();
        }
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        touZi_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        target_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        touZiOne_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        touZiTwo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        otherCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        isTing_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionJingDatas_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.ActionJingDatas getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.ActionJingDatas.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.ActionJingDatas build() {
        protobuf.clazz.mj.Nanchang.ActionJingDatas result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.ActionJingDatas buildPartial() {
        protobuf.clazz.mj.Nanchang.ActionJingDatas result = new protobuf.clazz.mj.Nanchang.ActionJingDatas(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          showCenterCards_ = java.util.Collections.unmodifiableList(showCenterCards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.showCenterCards_ = showCenterCards_;
        if (jingInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            jingInfo_ = java.util.Collections.unmodifiableList(jingInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.jingInfo_ = jingInfo_;
        } else {
          result.jingInfo_ = jingInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.touZi_ = touZi_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.touZiOne_ = touZiOne_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.touZiTwo_ = touZiTwo_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          otherCards_ = java.util.Collections.unmodifiableList(otherCards_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.otherCards_ = otherCards_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isTing_ = isTing_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.ActionJingDatas) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.ActionJingDatas)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.ActionJingDatas other) {
        if (other == protobuf.clazz.mj.Nanchang.ActionJingDatas.getDefaultInstance()) return this;
        if (!other.showCenterCards_.isEmpty()) {
          if (showCenterCards_.isEmpty()) {
            showCenterCards_ = other.showCenterCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShowCenterCardsIsMutable();
            showCenterCards_.addAll(other.showCenterCards_);
          }
          onChanged();
        }
        if (jingInfoBuilder_ == null) {
          if (!other.jingInfo_.isEmpty()) {
            if (jingInfo_.isEmpty()) {
              jingInfo_ = other.jingInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureJingInfoIsMutable();
              jingInfo_.addAll(other.jingInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.jingInfo_.isEmpty()) {
            if (jingInfoBuilder_.isEmpty()) {
              jingInfoBuilder_.dispose();
              jingInfoBuilder_ = null;
              jingInfo_ = other.jingInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
              jingInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJingInfoFieldBuilder() : null;
            } else {
              jingInfoBuilder_.addAllMessages(other.jingInfo_);
            }
          }
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasTouZi()) {
          setTouZi(other.getTouZi());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasTouZiOne()) {
          setTouZiOne(other.getTouZiOne());
        }
        if (other.hasTouZiTwo()) {
          setTouZiTwo(other.getTouZiTwo());
        }
        if (!other.otherCards_.isEmpty()) {
          if (otherCards_.isEmpty()) {
            otherCards_ = other.otherCards_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureOtherCardsIsMutable();
            otherCards_.addAll(other.otherCards_);
          }
          onChanged();
        }
        if (other.hasIsTing()) {
          setIsTing(other.getIsTing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.ActionJingDatas parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.ActionJingDatas) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 showCenterCards = 1;
      private java.util.List<java.lang.Integer> showCenterCards_ = java.util.Collections.emptyList();
      private void ensureShowCenterCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          showCenterCards_ = new java.util.ArrayList<java.lang.Integer>(showCenterCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getShowCenterCardsList() {
        return java.util.Collections.unmodifiableList(showCenterCards_);
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public int getShowCenterCardsCount() {
        return showCenterCards_.size();
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public int getShowCenterCards(int index) {
        return showCenterCards_.get(index);
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public Builder setShowCenterCards(
          int index, int value) {
        ensureShowCenterCardsIsMutable();
        showCenterCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public Builder addShowCenterCards(int value) {
        ensureShowCenterCardsIsMutable();
        showCenterCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public Builder addAllShowCenterCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShowCenterCardsIsMutable();
        super.addAll(values, showCenterCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 showCenterCards = 1;</code>
       *
       * <pre>
       * 中间显示的牌
       * </pre>
       */
      public Builder clearShowCenterCards() {
        showCenterCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .mj.EveryJingInfo_NC jingInfo = 2;
      private java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> jingInfo_ =
        java.util.Collections.emptyList();
      private void ensureJingInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          jingInfo_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC>(jingInfo_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.EveryJingInfo_NC, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder, protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder> jingInfoBuilder_;

      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> getJingInfoList() {
        if (jingInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jingInfo_);
        } else {
          return jingInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public int getJingInfoCount() {
        if (jingInfoBuilder_ == null) {
          return jingInfo_.size();
        } else {
          return jingInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC getJingInfo(int index) {
        if (jingInfoBuilder_ == null) {
          return jingInfo_.get(index);
        } else {
          return jingInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder setJingInfo(
          int index, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC value) {
        if (jingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJingInfoIsMutable();
          jingInfo_.set(index, value);
          onChanged();
        } else {
          jingInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder setJingInfo(
          int index, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder builderForValue) {
        if (jingInfoBuilder_ == null) {
          ensureJingInfoIsMutable();
          jingInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          jingInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder addJingInfo(protobuf.clazz.mj.Nanchang.EveryJingInfo_NC value) {
        if (jingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJingInfoIsMutable();
          jingInfo_.add(value);
          onChanged();
        } else {
          jingInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder addJingInfo(
          int index, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC value) {
        if (jingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJingInfoIsMutable();
          jingInfo_.add(index, value);
          onChanged();
        } else {
          jingInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder addJingInfo(
          protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder builderForValue) {
        if (jingInfoBuilder_ == null) {
          ensureJingInfoIsMutable();
          jingInfo_.add(builderForValue.build());
          onChanged();
        } else {
          jingInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder addJingInfo(
          int index, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder builderForValue) {
        if (jingInfoBuilder_ == null) {
          ensureJingInfoIsMutable();
          jingInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          jingInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder addAllJingInfo(
          java.lang.Iterable<? extends protobuf.clazz.mj.Nanchang.EveryJingInfo_NC> values) {
        if (jingInfoBuilder_ == null) {
          ensureJingInfoIsMutable();
          super.addAll(values, jingInfo_);
          onChanged();
        } else {
          jingInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder clearJingInfo() {
        if (jingInfoBuilder_ == null) {
          jingInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          jingInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public Builder removeJingInfo(int index) {
        if (jingInfoBuilder_ == null) {
          ensureJingInfoIsMutable();
          jingInfo_.remove(index);
          onChanged();
        } else {
          jingInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder getJingInfoBuilder(
          int index) {
        return getJingInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder getJingInfoOrBuilder(
          int index) {
        if (jingInfoBuilder_ == null) {
          return jingInfo_.get(index);  } else {
          return jingInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder> 
           getJingInfoOrBuilderList() {
        if (jingInfoBuilder_ != null) {
          return jingInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jingInfo_);
        }
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder addJingInfoBuilder() {
        return getJingInfoFieldBuilder().addBuilder(
            protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder addJingInfoBuilder(
          int index) {
        return getJingInfoFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.EveryJingInfo_NC jingInfo = 2;</code>
       *
       * <pre>
       *每个玩家对应的显示牌数据 下标对应玩家index
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder> 
           getJingInfoBuilderList() {
        return getJingInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.EveryJingInfo_NC, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder, protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder> 
          getJingInfoFieldBuilder() {
        if (jingInfoBuilder_ == null) {
          jingInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Nanchang.EveryJingInfo_NC, protobuf.clazz.mj.Nanchang.EveryJingInfo_NC.Builder, protobuf.clazz.mj.Nanchang.EveryJingInfo_NCOrBuilder>(
                  jingInfo_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          jingInfo_ = null;
        }
        return jingInfoBuilder_;
      }

      // optional int32 count = 3;
      private int count_ ;
      /**
       * <code>optional int32 count = 3;</code>
       *
       * <pre>
       * 发电显示次数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 count = 3;</code>
       *
       * <pre>
       * 发电显示次数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional int32 count = 3;</code>
       *
       * <pre>
       * 发电显示次数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000004;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count = 3;</code>
       *
       * <pre>
       * 发电显示次数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0;
        onChanged();
        return this;
      }

      // optional bool touZi = 4;
      private boolean touZi_ ;
      /**
       * <code>optional bool touZi = 4;</code>
       *
       * <pre>
       *是否需要骰子动画
       * </pre>
       */
      public boolean hasTouZi() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool touZi = 4;</code>
       *
       * <pre>
       *是否需要骰子动画
       * </pre>
       */
      public boolean getTouZi() {
        return touZi_;
      }
      /**
       * <code>optional bool touZi = 4;</code>
       *
       * <pre>
       *是否需要骰子动画
       * </pre>
       */
      public Builder setTouZi(boolean value) {
        bitField0_ |= 0x00000008;
        touZi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool touZi = 4;</code>
       *
       * <pre>
       *是否需要骰子动画
       * </pre>
       */
      public Builder clearTouZi() {
        bitField0_ = (bitField0_ & ~0x00000008);
        touZi_ = false;
        onChanged();
        return this;
      }

      // optional int32 target = 5;
      private int target_ ;
      /**
       * <code>optional int32 target = 5;</code>
       *
       * <pre>
       *对应玩家
       * </pre>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 target = 5;</code>
       *
       * <pre>
       *对应玩家
       * </pre>
       */
      public int getTarget() {
        return target_;
      }
      /**
       * <code>optional int32 target = 5;</code>
       *
       * <pre>
       *对应玩家
       * </pre>
       */
      public Builder setTarget(int value) {
        bitField0_ |= 0x00000010;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target = 5;</code>
       *
       * <pre>
       *对应玩家
       * </pre>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000010);
        target_ = 0;
        onChanged();
        return this;
      }

      // optional int32 touZiOne = 6;
      private int touZiOne_ ;
      /**
       * <code>optional int32 touZiOne = 6;</code>
       *
       * <pre>
       *骰子1
       * </pre>
       */
      public boolean hasTouZiOne() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 touZiOne = 6;</code>
       *
       * <pre>
       *骰子1
       * </pre>
       */
      public int getTouZiOne() {
        return touZiOne_;
      }
      /**
       * <code>optional int32 touZiOne = 6;</code>
       *
       * <pre>
       *骰子1
       * </pre>
       */
      public Builder setTouZiOne(int value) {
        bitField0_ |= 0x00000020;
        touZiOne_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 touZiOne = 6;</code>
       *
       * <pre>
       *骰子1
       * </pre>
       */
      public Builder clearTouZiOne() {
        bitField0_ = (bitField0_ & ~0x00000020);
        touZiOne_ = 0;
        onChanged();
        return this;
      }

      // optional int32 touZiTwo = 7;
      private int touZiTwo_ ;
      /**
       * <code>optional int32 touZiTwo = 7;</code>
       *
       * <pre>
       *骰子2
       * </pre>
       */
      public boolean hasTouZiTwo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 touZiTwo = 7;</code>
       *
       * <pre>
       *骰子2
       * </pre>
       */
      public int getTouZiTwo() {
        return touZiTwo_;
      }
      /**
       * <code>optional int32 touZiTwo = 7;</code>
       *
       * <pre>
       *骰子2
       * </pre>
       */
      public Builder setTouZiTwo(int value) {
        bitField0_ |= 0x00000040;
        touZiTwo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 touZiTwo = 7;</code>
       *
       * <pre>
       *骰子2
       * </pre>
       */
      public Builder clearTouZiTwo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        touZiTwo_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 otherCards = 8;
      private java.util.List<java.lang.Integer> otherCards_ = java.util.Collections.emptyList();
      private void ensureOtherCardsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          otherCards_ = new java.util.ArrayList<java.lang.Integer>(otherCards_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOtherCardsList() {
        return java.util.Collections.unmodifiableList(otherCards_);
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public int getOtherCardsCount() {
        return otherCards_.size();
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public int getOtherCards(int index) {
        return otherCards_.get(index);
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public Builder setOtherCards(
          int index, int value) {
        ensureOtherCardsIsMutable();
        otherCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public Builder addOtherCards(int value) {
        ensureOtherCardsIsMutable();
        otherCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public Builder addAllOtherCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOtherCardsIsMutable();
        super.addAll(values, otherCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherCards = 8;</code>
       *
       * <pre>
       *用于显示左右上下精
       * </pre>
       */
      public Builder clearOtherCards() {
        otherCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional bool isTing = 9;
      private boolean isTing_ ;
      /**
       * <code>optional bool isTing = 9;</code>
       *
       * <pre>
       *停牌
       * </pre>
       */
      public boolean hasIsTing() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool isTing = 9;</code>
       *
       * <pre>
       *停牌
       * </pre>
       */
      public boolean getIsTing() {
        return isTing_;
      }
      /**
       * <code>optional bool isTing = 9;</code>
       *
       * <pre>
       *停牌
       * </pre>
       */
      public Builder setIsTing(boolean value) {
        bitField0_ |= 0x00000100;
        isTing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isTing = 9;</code>
       *
       * <pre>
       *停牌
       * </pre>
       */
      public Builder clearIsTing() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isTing_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.ActionJingDatas)
    }

    static {
      defaultInstance = new ActionJingDatas(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.ActionJingDatas)
  }

  public interface ActionData_NCOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 actionType = 1;
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionTypeList();
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    int getActionTypeCount();
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    int getActionType(int index);

    // repeated .mj.ActionJingDatas actionJingDatas = 2;
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas> 
        getActionJingDatasList();
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.ActionJingDatas getActionJingDatas(int index);
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    int getActionJingDatasCount();
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder> 
        getActionJingDatasOrBuilderList();
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder getActionJingDatasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mj.ActionData_NC}
   *
   * <pre>
   *动画数据
   * </pre>
   */
  public static final class ActionData_NC extends
      com.google.protobuf.GeneratedMessage
      implements ActionData_NCOrBuilder {
    // Use ActionData_NC.newBuilder() to construct.
    private ActionData_NC(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActionData_NC(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActionData_NC defaultInstance;
    public static ActionData_NC getDefaultInstance() {
      return defaultInstance;
    }

    public ActionData_NC getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActionData_NC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                actionType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              actionType_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                actionType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                actionJingDatas_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.ActionJingDatas>();
                mutable_bitField0_ |= 0x00000002;
              }
              actionJingDatas_.add(input.readMessage(protobuf.clazz.mj.Nanchang.ActionJingDatas.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          actionType_ = java.util.Collections.unmodifiableList(actionType_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          actionJingDatas_ = java.util.Collections.unmodifiableList(actionJingDatas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionData_NC_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionData_NC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.ActionData_NC.class, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder.class);
    }

    public static com.google.protobuf.Parser<ActionData_NC> PARSER =
        new com.google.protobuf.AbstractParser<ActionData_NC>() {
      public ActionData_NC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActionData_NC(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActionData_NC> getParserForType() {
      return PARSER;
    }

    // repeated int32 actionType = 1;
    public static final int ACTIONTYPE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> actionType_;
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionTypeList() {
      return actionType_;
    }
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    public int getActionTypeCount() {
      return actionType_.size();
    }
    /**
     * <code>repeated int32 actionType = 1;</code>
     *
     * <pre>
     * 动画类型数组
     * </pre>
     */
    public int getActionType(int index) {
      return actionType_.get(index);
    }

    // repeated .mj.ActionJingDatas actionJingDatas = 2;
    public static final int ACTIONJINGDATAS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas> actionJingDatas_;
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas> getActionJingDatasList() {
      return actionJingDatas_;
    }
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder> 
        getActionJingDatasOrBuilderList() {
      return actionJingDatas_;
    }
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    public int getActionJingDatasCount() {
      return actionJingDatas_.size();
    }
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.ActionJingDatas getActionJingDatas(int index) {
      return actionJingDatas_.get(index);
    }
    /**
     * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
     *
     * <pre>
     *动作的精牌数据(actionTypes下标)
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder getActionJingDatasOrBuilder(
        int index) {
      return actionJingDatas_.get(index);
    }

    private void initFields() {
      actionType_ = java.util.Collections.emptyList();
      actionJingDatas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < actionType_.size(); i++) {
        output.writeInt32(1, actionType_.get(i));
      }
      for (int i = 0; i < actionJingDatas_.size(); i++) {
        output.writeMessage(2, actionJingDatas_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < actionType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionType_.get(i));
        }
        size += dataSize;
        size += 1 * getActionTypeList().size();
      }
      for (int i = 0; i < actionJingDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, actionJingDatas_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.ActionData_NC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.ActionData_NC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.ActionData_NC}
     *
     * <pre>
     *动画数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionData_NC_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionData_NC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.ActionData_NC.class, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.ActionData_NC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActionJingDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        actionType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (actionJingDatasBuilder_ == null) {
          actionJingDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          actionJingDatasBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_ActionData_NC_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.ActionData_NC getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.ActionData_NC.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.ActionData_NC build() {
        protobuf.clazz.mj.Nanchang.ActionData_NC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.ActionData_NC buildPartial() {
        protobuf.clazz.mj.Nanchang.ActionData_NC result = new protobuf.clazz.mj.Nanchang.ActionData_NC(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          actionType_ = java.util.Collections.unmodifiableList(actionType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.actionType_ = actionType_;
        if (actionJingDatasBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            actionJingDatas_ = java.util.Collections.unmodifiableList(actionJingDatas_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.actionJingDatas_ = actionJingDatas_;
        } else {
          result.actionJingDatas_ = actionJingDatasBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.ActionData_NC) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.ActionData_NC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.ActionData_NC other) {
        if (other == protobuf.clazz.mj.Nanchang.ActionData_NC.getDefaultInstance()) return this;
        if (!other.actionType_.isEmpty()) {
          if (actionType_.isEmpty()) {
            actionType_ = other.actionType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActionTypeIsMutable();
            actionType_.addAll(other.actionType_);
          }
          onChanged();
        }
        if (actionJingDatasBuilder_ == null) {
          if (!other.actionJingDatas_.isEmpty()) {
            if (actionJingDatas_.isEmpty()) {
              actionJingDatas_ = other.actionJingDatas_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureActionJingDatasIsMutable();
              actionJingDatas_.addAll(other.actionJingDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.actionJingDatas_.isEmpty()) {
            if (actionJingDatasBuilder_.isEmpty()) {
              actionJingDatasBuilder_.dispose();
              actionJingDatasBuilder_ = null;
              actionJingDatas_ = other.actionJingDatas_;
              bitField0_ = (bitField0_ & ~0x00000002);
              actionJingDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionJingDatasFieldBuilder() : null;
            } else {
              actionJingDatasBuilder_.addAllMessages(other.actionJingDatas_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.ActionData_NC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.ActionData_NC) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 actionType = 1;
      private java.util.List<java.lang.Integer> actionType_ = java.util.Collections.emptyList();
      private void ensureActionTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          actionType_ = new java.util.ArrayList<java.lang.Integer>(actionType_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionTypeList() {
        return java.util.Collections.unmodifiableList(actionType_);
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public int getActionTypeCount() {
        return actionType_.size();
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public int getActionType(int index) {
        return actionType_.get(index);
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public Builder setActionType(
          int index, int value) {
        ensureActionTypeIsMutable();
        actionType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public Builder addActionType(int value) {
        ensureActionTypeIsMutable();
        actionType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public Builder addAllActionType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionTypeIsMutable();
        super.addAll(values, actionType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionType = 1;</code>
       *
       * <pre>
       * 动画类型数组
       * </pre>
       */
      public Builder clearActionType() {
        actionType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .mj.ActionJingDatas actionJingDatas = 2;
      private java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas> actionJingDatas_ =
        java.util.Collections.emptyList();
      private void ensureActionJingDatasIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          actionJingDatas_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.ActionJingDatas>(actionJingDatas_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.ActionJingDatas, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder, protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder> actionJingDatasBuilder_;

      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas> getActionJingDatasList() {
        if (actionJingDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actionJingDatas_);
        } else {
          return actionJingDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public int getActionJingDatasCount() {
        if (actionJingDatasBuilder_ == null) {
          return actionJingDatas_.size();
        } else {
          return actionJingDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionJingDatas getActionJingDatas(int index) {
        if (actionJingDatasBuilder_ == null) {
          return actionJingDatas_.get(index);
        } else {
          return actionJingDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder setActionJingDatas(
          int index, protobuf.clazz.mj.Nanchang.ActionJingDatas value) {
        if (actionJingDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionJingDatasIsMutable();
          actionJingDatas_.set(index, value);
          onChanged();
        } else {
          actionJingDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder setActionJingDatas(
          int index, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder builderForValue) {
        if (actionJingDatasBuilder_ == null) {
          ensureActionJingDatasIsMutable();
          actionJingDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionJingDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder addActionJingDatas(protobuf.clazz.mj.Nanchang.ActionJingDatas value) {
        if (actionJingDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionJingDatasIsMutable();
          actionJingDatas_.add(value);
          onChanged();
        } else {
          actionJingDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder addActionJingDatas(
          int index, protobuf.clazz.mj.Nanchang.ActionJingDatas value) {
        if (actionJingDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionJingDatasIsMutable();
          actionJingDatas_.add(index, value);
          onChanged();
        } else {
          actionJingDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder addActionJingDatas(
          protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder builderForValue) {
        if (actionJingDatasBuilder_ == null) {
          ensureActionJingDatasIsMutable();
          actionJingDatas_.add(builderForValue.build());
          onChanged();
        } else {
          actionJingDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder addActionJingDatas(
          int index, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder builderForValue) {
        if (actionJingDatasBuilder_ == null) {
          ensureActionJingDatasIsMutable();
          actionJingDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionJingDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder addAllActionJingDatas(
          java.lang.Iterable<? extends protobuf.clazz.mj.Nanchang.ActionJingDatas> values) {
        if (actionJingDatasBuilder_ == null) {
          ensureActionJingDatasIsMutable();
          super.addAll(values, actionJingDatas_);
          onChanged();
        } else {
          actionJingDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder clearActionJingDatas() {
        if (actionJingDatasBuilder_ == null) {
          actionJingDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          actionJingDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public Builder removeActionJingDatas(int index) {
        if (actionJingDatasBuilder_ == null) {
          ensureActionJingDatasIsMutable();
          actionJingDatas_.remove(index);
          onChanged();
        } else {
          actionJingDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder getActionJingDatasBuilder(
          int index) {
        return getActionJingDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder getActionJingDatasOrBuilder(
          int index) {
        if (actionJingDatasBuilder_ == null) {
          return actionJingDatas_.get(index);  } else {
          return actionJingDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder> 
           getActionJingDatasOrBuilderList() {
        if (actionJingDatasBuilder_ != null) {
          return actionJingDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actionJingDatas_);
        }
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder addActionJingDatasBuilder() {
        return getActionJingDatasFieldBuilder().addBuilder(
            protobuf.clazz.mj.Nanchang.ActionJingDatas.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder addActionJingDatasBuilder(
          int index) {
        return getActionJingDatasFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Nanchang.ActionJingDatas.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ActionJingDatas actionJingDatas = 2;</code>
       *
       * <pre>
       *动作的精牌数据(actionTypes下标)
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder> 
           getActionJingDatasBuilderList() {
        return getActionJingDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.ActionJingDatas, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder, protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder> 
          getActionJingDatasFieldBuilder() {
        if (actionJingDatasBuilder_ == null) {
          actionJingDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Nanchang.ActionJingDatas, protobuf.clazz.mj.Nanchang.ActionJingDatas.Builder, protobuf.clazz.mj.Nanchang.ActionJingDatasOrBuilder>(
                  actionJingDatas_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          actionJingDatas_ = null;
        }
        return actionJingDatasBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mj.ActionData_NC)
    }

    static {
      defaultInstance = new ActionData_NC(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.ActionData_NC)
  }

  public interface GameEndResponse_NCOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .GameEndResponse gameEnd = 1;
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    boolean hasGameEnd();
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    protobuf.clazz.Protocol.GameEndResponse getGameEnd();
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    protobuf.clazz.Protocol.GameEndResponseOrBuilder getGameEndOrBuilder();

    // repeated int32 zhengJing = 2;
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    java.util.List<java.lang.Integer> getZhengJingList();
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    int getZhengJingCount();
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    int getZhengJing(int index);

    // optional int32 otherJingNumber = 3;
    /**
     * <code>optional int32 otherJingNumber = 3;</code>
     *
     * <pre>
     * 其他精牌数量
     * </pre>
     */
    boolean hasOtherJingNumber();
    /**
     * <code>optional int32 otherJingNumber = 3;</code>
     *
     * <pre>
     * 其他精牌数量
     * </pre>
     */
    int getOtherJingNumber();

    // repeated int32 otherJing = 4;
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    java.util.List<java.lang.Integer> getOtherJingList();
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    int getOtherJingCount();
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    int getOtherJing(int index);

    // repeated .mj.GameEndInfo gameEndInfoXia = 5;
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> 
        getGameEndInfoXiaList();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoXia(int index);
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    int getGameEndInfoXiaCount();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
        getGameEndInfoXiaOrBuilderList();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoXiaOrBuilder(
        int index);

    // repeated .mj.GameEndInfo gameEndInfoDa = 6;
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> 
        getGameEndInfoDaList();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoDa(int index);
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    int getGameEndInfoDaCount();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
        getGameEndInfoDaOrBuilderList();
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoDaOrBuilder(
        int index);

    // optional string resultDesc = 7;
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    boolean hasResultDesc();
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    java.lang.String getResultDesc();
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getResultDescBytes();

    // repeated .mj.ActionData_NC actionDataNC = 8;
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC> 
        getActionDataNCList();
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.ActionData_NC getActionDataNC(int index);
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    int getActionDataNCCount();
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder> 
        getActionDataNCOrBuilderList();
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder getActionDataNCOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mj.GameEndResponse_NC}
   *
   * <pre>
   *结算数据
   * </pre>
   */
  public static final class GameEndResponse_NC extends
      com.google.protobuf.GeneratedMessage
      implements GameEndResponse_NCOrBuilder {
    // Use GameEndResponse_NC.newBuilder() to construct.
    private GameEndResponse_NC(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameEndResponse_NC(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameEndResponse_NC defaultInstance;
    public static GameEndResponse_NC getDefaultInstance() {
      return defaultInstance;
    }

    public GameEndResponse_NC getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameEndResponse_NC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.GameEndResponse.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = gameEnd_.toBuilder();
              }
              gameEnd_ = input.readMessage(protobuf.clazz.Protocol.GameEndResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gameEnd_);
                gameEnd_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                zhengJing_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              zhengJing_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                zhengJing_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                zhengJing_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              otherJingNumber_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                otherJing_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              otherJing_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                otherJing_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                otherJing_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                gameEndInfoXia_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.GameEndInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              gameEndInfoXia_.add(input.readMessage(protobuf.clazz.mj.Nanchang.GameEndInfo.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                gameEndInfoDa_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.GameEndInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              gameEndInfoDa_.add(input.readMessage(protobuf.clazz.mj.Nanchang.GameEndInfo.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              bitField0_ |= 0x00000004;
              resultDesc_ = input.readBytes();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                actionDataNC_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.ActionData_NC>();
                mutable_bitField0_ |= 0x00000080;
              }
              actionDataNC_.add(input.readMessage(protobuf.clazz.mj.Nanchang.ActionData_NC.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          zhengJing_ = java.util.Collections.unmodifiableList(zhengJing_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          otherJing_ = java.util.Collections.unmodifiableList(otherJing_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          gameEndInfoXia_ = java.util.Collections.unmodifiableList(gameEndInfoXia_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          gameEndInfoDa_ = java.util.Collections.unmodifiableList(gameEndInfoDa_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          actionDataNC_ = java.util.Collections.unmodifiableList(actionDataNC_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndResponse_NC_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndResponse_NC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.GameEndResponse_NC.class, protobuf.clazz.mj.Nanchang.GameEndResponse_NC.Builder.class);
    }

    public static com.google.protobuf.Parser<GameEndResponse_NC> PARSER =
        new com.google.protobuf.AbstractParser<GameEndResponse_NC>() {
      public GameEndResponse_NC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameEndResponse_NC(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameEndResponse_NC> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .GameEndResponse gameEnd = 1;
    public static final int GAMEEND_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.GameEndResponse gameEnd_;
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    public boolean hasGameEnd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    public protobuf.clazz.Protocol.GameEndResponse getGameEnd() {
      return gameEnd_;
    }
    /**
     * <code>optional .GameEndResponse gameEnd = 1;</code>
     *
     * <pre>
     * 结算
     * </pre>
     */
    public protobuf.clazz.Protocol.GameEndResponseOrBuilder getGameEndOrBuilder() {
      return gameEnd_;
    }

    // repeated int32 zhengJing = 2;
    public static final int ZHENGJING_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> zhengJing_;
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getZhengJingList() {
      return zhengJing_;
    }
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    public int getZhengJingCount() {
      return zhengJing_.size();
    }
    /**
     * <code>repeated int32 zhengJing = 2;</code>
     *
     * <pre>
     * 第一个表示上精中的正精  第二个表示副精
     * </pre>
     */
    public int getZhengJing(int index) {
      return zhengJing_.get(index);
    }

    // optional int32 otherJingNumber = 3;
    public static final int OTHERJINGNUMBER_FIELD_NUMBER = 3;
    private int otherJingNumber_;
    /**
     * <code>optional int32 otherJingNumber = 3;</code>
     *
     * <pre>
     * 其他精牌数量
     * </pre>
     */
    public boolean hasOtherJingNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 otherJingNumber = 3;</code>
     *
     * <pre>
     * 其他精牌数量
     * </pre>
     */
    public int getOtherJingNumber() {
      return otherJingNumber_;
    }

    // repeated int32 otherJing = 4;
    public static final int OTHERJING_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> otherJing_;
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOtherJingList() {
      return otherJing_;
    }
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    public int getOtherJingCount() {
      return otherJing_.size();
    }
    /**
     * <code>repeated int32 otherJing = 4;</code>
     *
     * <pre>
     * 其他精牌数值 该数组长度为other_jing_number的2倍
     * </pre>
     */
    public int getOtherJing(int index) {
      return otherJing_.get(index);
    }

    // repeated .mj.GameEndInfo gameEndInfoXia = 5;
    public static final int GAMEENDINFOXIA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> gameEndInfoXia_;
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> getGameEndInfoXiaList() {
      return gameEndInfoXia_;
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
        getGameEndInfoXiaOrBuilderList() {
      return gameEndInfoXia_;
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    public int getGameEndInfoXiaCount() {
      return gameEndInfoXia_.size();
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoXia(int index) {
      return gameEndInfoXia_.get(index);
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
     *
     * <pre>
     * 小结算胡牌信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoXiaOrBuilder(
        int index) {
      return gameEndInfoXia_.get(index);
    }

    // repeated .mj.GameEndInfo gameEndInfoDa = 6;
    public static final int GAMEENDINFODA_FIELD_NUMBER = 6;
    private java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> gameEndInfoDa_;
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> getGameEndInfoDaList() {
      return gameEndInfoDa_;
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
        getGameEndInfoDaOrBuilderList() {
      return gameEndInfoDa_;
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    public int getGameEndInfoDaCount() {
      return gameEndInfoDa_.size();
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoDa(int index) {
      return gameEndInfoDa_.get(index);
    }
    /**
     * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
     *
     * <pre>
     * 大结算胡牌信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoDaOrBuilder(
        int index) {
      return gameEndInfoDa_.get(index);
    }

    // optional string resultDesc = 7;
    public static final int RESULTDESC_FIELD_NUMBER = 7;
    private java.lang.Object resultDesc_;
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    public boolean hasResultDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    public java.lang.String getResultDesc() {
      java.lang.Object ref = resultDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resultDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string resultDesc = 7;</code>
     *
     * <pre>
     * 胡牌描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getResultDescBytes() {
      java.lang.Object ref = resultDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resultDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .mj.ActionData_NC actionDataNC = 8;
    public static final int ACTIONDATANC_FIELD_NUMBER = 8;
    private java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC> actionDataNC_;
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC> getActionDataNCList() {
      return actionDataNC_;
    }
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder> 
        getActionDataNCOrBuilderList() {
      return actionDataNC_;
    }
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    public int getActionDataNCCount() {
      return actionDataNC_.size();
    }
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.ActionData_NC getActionDataNC(int index) {
      return actionDataNC_.get(index);
    }
    /**
     * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
     *
     * <pre>
     * 结束后的动画信息
     * </pre>
     */
    public protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder getActionDataNCOrBuilder(
        int index) {
      return actionDataNC_.get(index);
    }

    private void initFields() {
      gameEnd_ = protobuf.clazz.Protocol.GameEndResponse.getDefaultInstance();
      zhengJing_ = java.util.Collections.emptyList();
      otherJingNumber_ = 0;
      otherJing_ = java.util.Collections.emptyList();
      gameEndInfoXia_ = java.util.Collections.emptyList();
      gameEndInfoDa_ = java.util.Collections.emptyList();
      resultDesc_ = "";
      actionDataNC_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, gameEnd_);
      }
      for (int i = 0; i < zhengJing_.size(); i++) {
        output.writeInt32(2, zhengJing_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, otherJingNumber_);
      }
      for (int i = 0; i < otherJing_.size(); i++) {
        output.writeInt32(4, otherJing_.get(i));
      }
      for (int i = 0; i < gameEndInfoXia_.size(); i++) {
        output.writeMessage(5, gameEndInfoXia_.get(i));
      }
      for (int i = 0; i < gameEndInfoDa_.size(); i++) {
        output.writeMessage(6, gameEndInfoDa_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(7, getResultDescBytes());
      }
      for (int i = 0; i < actionDataNC_.size(); i++) {
        output.writeMessage(8, actionDataNC_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, gameEnd_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zhengJing_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zhengJing_.get(i));
        }
        size += dataSize;
        size += 1 * getZhengJingList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, otherJingNumber_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < otherJing_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(otherJing_.get(i));
        }
        size += dataSize;
        size += 1 * getOtherJingList().size();
      }
      for (int i = 0; i < gameEndInfoXia_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gameEndInfoXia_.get(i));
      }
      for (int i = 0; i < gameEndInfoDa_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, gameEndInfoDa_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getResultDescBytes());
      }
      for (int i = 0; i < actionDataNC_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, actionDataNC_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndResponse_NC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.GameEndResponse_NC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.GameEndResponse_NC}
     *
     * <pre>
     *结算数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.GameEndResponse_NCOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndResponse_NC_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndResponse_NC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.GameEndResponse_NC.class, protobuf.clazz.mj.Nanchang.GameEndResponse_NC.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.GameEndResponse_NC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGameEndFieldBuilder();
          getGameEndInfoXiaFieldBuilder();
          getGameEndInfoDaFieldBuilder();
          getActionDataNCFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gameEndBuilder_ == null) {
          gameEnd_ = protobuf.clazz.Protocol.GameEndResponse.getDefaultInstance();
        } else {
          gameEndBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        zhengJing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        otherJingNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        otherJing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gameEndInfoXiaBuilder_ == null) {
          gameEndInfoXia_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          gameEndInfoXiaBuilder_.clear();
        }
        if (gameEndInfoDaBuilder_ == null) {
          gameEndInfoDa_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          gameEndInfoDaBuilder_.clear();
        }
        resultDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        if (actionDataNCBuilder_ == null) {
          actionDataNC_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          actionDataNCBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndResponse_NC_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.GameEndResponse_NC getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.GameEndResponse_NC.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.GameEndResponse_NC build() {
        protobuf.clazz.mj.Nanchang.GameEndResponse_NC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.GameEndResponse_NC buildPartial() {
        protobuf.clazz.mj.Nanchang.GameEndResponse_NC result = new protobuf.clazz.mj.Nanchang.GameEndResponse_NC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (gameEndBuilder_ == null) {
          result.gameEnd_ = gameEnd_;
        } else {
          result.gameEnd_ = gameEndBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          zhengJing_ = java.util.Collections.unmodifiableList(zhengJing_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.zhengJing_ = zhengJing_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.otherJingNumber_ = otherJingNumber_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          otherJing_ = java.util.Collections.unmodifiableList(otherJing_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.otherJing_ = otherJing_;
        if (gameEndInfoXiaBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            gameEndInfoXia_ = java.util.Collections.unmodifiableList(gameEndInfoXia_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.gameEndInfoXia_ = gameEndInfoXia_;
        } else {
          result.gameEndInfoXia_ = gameEndInfoXiaBuilder_.build();
        }
        if (gameEndInfoDaBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            gameEndInfoDa_ = java.util.Collections.unmodifiableList(gameEndInfoDa_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.gameEndInfoDa_ = gameEndInfoDa_;
        } else {
          result.gameEndInfoDa_ = gameEndInfoDaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resultDesc_ = resultDesc_;
        if (actionDataNCBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            actionDataNC_ = java.util.Collections.unmodifiableList(actionDataNC_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.actionDataNC_ = actionDataNC_;
        } else {
          result.actionDataNC_ = actionDataNCBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.GameEndResponse_NC) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.GameEndResponse_NC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.GameEndResponse_NC other) {
        if (other == protobuf.clazz.mj.Nanchang.GameEndResponse_NC.getDefaultInstance()) return this;
        if (other.hasGameEnd()) {
          mergeGameEnd(other.getGameEnd());
        }
        if (!other.zhengJing_.isEmpty()) {
          if (zhengJing_.isEmpty()) {
            zhengJing_ = other.zhengJing_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureZhengJingIsMutable();
            zhengJing_.addAll(other.zhengJing_);
          }
          onChanged();
        }
        if (other.hasOtherJingNumber()) {
          setOtherJingNumber(other.getOtherJingNumber());
        }
        if (!other.otherJing_.isEmpty()) {
          if (otherJing_.isEmpty()) {
            otherJing_ = other.otherJing_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureOtherJingIsMutable();
            otherJing_.addAll(other.otherJing_);
          }
          onChanged();
        }
        if (gameEndInfoXiaBuilder_ == null) {
          if (!other.gameEndInfoXia_.isEmpty()) {
            if (gameEndInfoXia_.isEmpty()) {
              gameEndInfoXia_ = other.gameEndInfoXia_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGameEndInfoXiaIsMutable();
              gameEndInfoXia_.addAll(other.gameEndInfoXia_);
            }
            onChanged();
          }
        } else {
          if (!other.gameEndInfoXia_.isEmpty()) {
            if (gameEndInfoXiaBuilder_.isEmpty()) {
              gameEndInfoXiaBuilder_.dispose();
              gameEndInfoXiaBuilder_ = null;
              gameEndInfoXia_ = other.gameEndInfoXia_;
              bitField0_ = (bitField0_ & ~0x00000010);
              gameEndInfoXiaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGameEndInfoXiaFieldBuilder() : null;
            } else {
              gameEndInfoXiaBuilder_.addAllMessages(other.gameEndInfoXia_);
            }
          }
        }
        if (gameEndInfoDaBuilder_ == null) {
          if (!other.gameEndInfoDa_.isEmpty()) {
            if (gameEndInfoDa_.isEmpty()) {
              gameEndInfoDa_ = other.gameEndInfoDa_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureGameEndInfoDaIsMutable();
              gameEndInfoDa_.addAll(other.gameEndInfoDa_);
            }
            onChanged();
          }
        } else {
          if (!other.gameEndInfoDa_.isEmpty()) {
            if (gameEndInfoDaBuilder_.isEmpty()) {
              gameEndInfoDaBuilder_.dispose();
              gameEndInfoDaBuilder_ = null;
              gameEndInfoDa_ = other.gameEndInfoDa_;
              bitField0_ = (bitField0_ & ~0x00000020);
              gameEndInfoDaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGameEndInfoDaFieldBuilder() : null;
            } else {
              gameEndInfoDaBuilder_.addAllMessages(other.gameEndInfoDa_);
            }
          }
        }
        if (other.hasResultDesc()) {
          bitField0_ |= 0x00000040;
          resultDesc_ = other.resultDesc_;
          onChanged();
        }
        if (actionDataNCBuilder_ == null) {
          if (!other.actionDataNC_.isEmpty()) {
            if (actionDataNC_.isEmpty()) {
              actionDataNC_ = other.actionDataNC_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureActionDataNCIsMutable();
              actionDataNC_.addAll(other.actionDataNC_);
            }
            onChanged();
          }
        } else {
          if (!other.actionDataNC_.isEmpty()) {
            if (actionDataNCBuilder_.isEmpty()) {
              actionDataNCBuilder_.dispose();
              actionDataNCBuilder_ = null;
              actionDataNC_ = other.actionDataNC_;
              bitField0_ = (bitField0_ & ~0x00000080);
              actionDataNCBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionDataNCFieldBuilder() : null;
            } else {
              actionDataNCBuilder_.addAllMessages(other.actionDataNC_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.GameEndResponse_NC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.GameEndResponse_NC) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .GameEndResponse gameEnd = 1;
      private protobuf.clazz.Protocol.GameEndResponse gameEnd_ = protobuf.clazz.Protocol.GameEndResponse.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.GameEndResponse, protobuf.clazz.Protocol.GameEndResponse.Builder, protobuf.clazz.Protocol.GameEndResponseOrBuilder> gameEndBuilder_;
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public boolean hasGameEnd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public protobuf.clazz.Protocol.GameEndResponse getGameEnd() {
        if (gameEndBuilder_ == null) {
          return gameEnd_;
        } else {
          return gameEndBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public Builder setGameEnd(protobuf.clazz.Protocol.GameEndResponse value) {
        if (gameEndBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gameEnd_ = value;
          onChanged();
        } else {
          gameEndBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public Builder setGameEnd(
          protobuf.clazz.Protocol.GameEndResponse.Builder builderForValue) {
        if (gameEndBuilder_ == null) {
          gameEnd_ = builderForValue.build();
          onChanged();
        } else {
          gameEndBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public Builder mergeGameEnd(protobuf.clazz.Protocol.GameEndResponse value) {
        if (gameEndBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              gameEnd_ != protobuf.clazz.Protocol.GameEndResponse.getDefaultInstance()) {
            gameEnd_ =
              protobuf.clazz.Protocol.GameEndResponse.newBuilder(gameEnd_).mergeFrom(value).buildPartial();
          } else {
            gameEnd_ = value;
          }
          onChanged();
        } else {
          gameEndBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public Builder clearGameEnd() {
        if (gameEndBuilder_ == null) {
          gameEnd_ = protobuf.clazz.Protocol.GameEndResponse.getDefaultInstance();
          onChanged();
        } else {
          gameEndBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public protobuf.clazz.Protocol.GameEndResponse.Builder getGameEndBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGameEndFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      public protobuf.clazz.Protocol.GameEndResponseOrBuilder getGameEndOrBuilder() {
        if (gameEndBuilder_ != null) {
          return gameEndBuilder_.getMessageOrBuilder();
        } else {
          return gameEnd_;
        }
      }
      /**
       * <code>optional .GameEndResponse gameEnd = 1;</code>
       *
       * <pre>
       * 结算
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.GameEndResponse, protobuf.clazz.Protocol.GameEndResponse.Builder, protobuf.clazz.Protocol.GameEndResponseOrBuilder> 
          getGameEndFieldBuilder() {
        if (gameEndBuilder_ == null) {
          gameEndBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.GameEndResponse, protobuf.clazz.Protocol.GameEndResponse.Builder, protobuf.clazz.Protocol.GameEndResponseOrBuilder>(
                  gameEnd_,
                  getParentForChildren(),
                  isClean());
          gameEnd_ = null;
        }
        return gameEndBuilder_;
      }

      // repeated int32 zhengJing = 2;
      private java.util.List<java.lang.Integer> zhengJing_ = java.util.Collections.emptyList();
      private void ensureZhengJingIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          zhengJing_ = new java.util.ArrayList<java.lang.Integer>(zhengJing_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getZhengJingList() {
        return java.util.Collections.unmodifiableList(zhengJing_);
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public int getZhengJingCount() {
        return zhengJing_.size();
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public int getZhengJing(int index) {
        return zhengJing_.get(index);
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public Builder setZhengJing(
          int index, int value) {
        ensureZhengJingIsMutable();
        zhengJing_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public Builder addZhengJing(int value) {
        ensureZhengJingIsMutable();
        zhengJing_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public Builder addAllZhengJing(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZhengJingIsMutable();
        super.addAll(values, zhengJing_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhengJing = 2;</code>
       *
       * <pre>
       * 第一个表示上精中的正精  第二个表示副精
       * </pre>
       */
      public Builder clearZhengJing() {
        zhengJing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 otherJingNumber = 3;
      private int otherJingNumber_ ;
      /**
       * <code>optional int32 otherJingNumber = 3;</code>
       *
       * <pre>
       * 其他精牌数量
       * </pre>
       */
      public boolean hasOtherJingNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 otherJingNumber = 3;</code>
       *
       * <pre>
       * 其他精牌数量
       * </pre>
       */
      public int getOtherJingNumber() {
        return otherJingNumber_;
      }
      /**
       * <code>optional int32 otherJingNumber = 3;</code>
       *
       * <pre>
       * 其他精牌数量
       * </pre>
       */
      public Builder setOtherJingNumber(int value) {
        bitField0_ |= 0x00000004;
        otherJingNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 otherJingNumber = 3;</code>
       *
       * <pre>
       * 其他精牌数量
       * </pre>
       */
      public Builder clearOtherJingNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        otherJingNumber_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 otherJing = 4;
      private java.util.List<java.lang.Integer> otherJing_ = java.util.Collections.emptyList();
      private void ensureOtherJingIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          otherJing_ = new java.util.ArrayList<java.lang.Integer>(otherJing_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOtherJingList() {
        return java.util.Collections.unmodifiableList(otherJing_);
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public int getOtherJingCount() {
        return otherJing_.size();
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public int getOtherJing(int index) {
        return otherJing_.get(index);
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public Builder setOtherJing(
          int index, int value) {
        ensureOtherJingIsMutable();
        otherJing_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public Builder addOtherJing(int value) {
        ensureOtherJingIsMutable();
        otherJing_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public Builder addAllOtherJing(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOtherJingIsMutable();
        super.addAll(values, otherJing_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 otherJing = 4;</code>
       *
       * <pre>
       * 其他精牌数值 该数组长度为other_jing_number的2倍
       * </pre>
       */
      public Builder clearOtherJing() {
        otherJing_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .mj.GameEndInfo gameEndInfoXia = 5;
      private java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> gameEndInfoXia_ =
        java.util.Collections.emptyList();
      private void ensureGameEndInfoXiaIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          gameEndInfoXia_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.GameEndInfo>(gameEndInfoXia_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> gameEndInfoXiaBuilder_;

      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> getGameEndInfoXiaList() {
        if (gameEndInfoXiaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameEndInfoXia_);
        } else {
          return gameEndInfoXiaBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public int getGameEndInfoXiaCount() {
        if (gameEndInfoXiaBuilder_ == null) {
          return gameEndInfoXia_.size();
        } else {
          return gameEndInfoXiaBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoXia(int index) {
        if (gameEndInfoXiaBuilder_ == null) {
          return gameEndInfoXia_.get(index);
        } else {
          return gameEndInfoXiaBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder setGameEndInfoXia(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoXiaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.set(index, value);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder setGameEndInfoXia(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoXiaBuilder_ == null) {
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoXia(protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoXiaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.add(value);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoXia(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoXiaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.add(index, value);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoXia(
          protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoXiaBuilder_ == null) {
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.add(builderForValue.build());
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoXia(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoXiaBuilder_ == null) {
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder addAllGameEndInfoXia(
          java.lang.Iterable<? extends protobuf.clazz.mj.Nanchang.GameEndInfo> values) {
        if (gameEndInfoXiaBuilder_ == null) {
          ensureGameEndInfoXiaIsMutable();
          super.addAll(values, gameEndInfoXia_);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder clearGameEndInfoXia() {
        if (gameEndInfoXiaBuilder_ == null) {
          gameEndInfoXia_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public Builder removeGameEndInfoXia(int index) {
        if (gameEndInfoXiaBuilder_ == null) {
          ensureGameEndInfoXiaIsMutable();
          gameEndInfoXia_.remove(index);
          onChanged();
        } else {
          gameEndInfoXiaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder getGameEndInfoXiaBuilder(
          int index) {
        return getGameEndInfoXiaFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoXiaOrBuilder(
          int index) {
        if (gameEndInfoXiaBuilder_ == null) {
          return gameEndInfoXia_.get(index);  } else {
          return gameEndInfoXiaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
           getGameEndInfoXiaOrBuilderList() {
        if (gameEndInfoXiaBuilder_ != null) {
          return gameEndInfoXiaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameEndInfoXia_);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder addGameEndInfoXiaBuilder() {
        return getGameEndInfoXiaFieldBuilder().addBuilder(
            protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder addGameEndInfoXiaBuilder(
          int index) {
        return getGameEndInfoXiaFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoXia = 5;</code>
       *
       * <pre>
       * 小结算胡牌信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo.Builder> 
           getGameEndInfoXiaBuilderList() {
        return getGameEndInfoXiaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
          getGameEndInfoXiaFieldBuilder() {
        if (gameEndInfoXiaBuilder_ == null) {
          gameEndInfoXiaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder>(
                  gameEndInfoXia_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          gameEndInfoXia_ = null;
        }
        return gameEndInfoXiaBuilder_;
      }

      // repeated .mj.GameEndInfo gameEndInfoDa = 6;
      private java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> gameEndInfoDa_ =
        java.util.Collections.emptyList();
      private void ensureGameEndInfoDaIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          gameEndInfoDa_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.GameEndInfo>(gameEndInfoDa_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> gameEndInfoDaBuilder_;

      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo> getGameEndInfoDaList() {
        if (gameEndInfoDaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameEndInfoDa_);
        } else {
          return gameEndInfoDaBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public int getGameEndInfoDaCount() {
        if (gameEndInfoDaBuilder_ == null) {
          return gameEndInfoDa_.size();
        } else {
          return gameEndInfoDaBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo getGameEndInfoDa(int index) {
        if (gameEndInfoDaBuilder_ == null) {
          return gameEndInfoDa_.get(index);
        } else {
          return gameEndInfoDaBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder setGameEndInfoDa(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoDaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.set(index, value);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder setGameEndInfoDa(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoDaBuilder_ == null) {
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameEndInfoDaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoDa(protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoDaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.add(value);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoDa(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo value) {
        if (gameEndInfoDaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.add(index, value);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoDa(
          protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoDaBuilder_ == null) {
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.add(builderForValue.build());
          onChanged();
        } else {
          gameEndInfoDaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder addGameEndInfoDa(
          int index, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder builderForValue) {
        if (gameEndInfoDaBuilder_ == null) {
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameEndInfoDaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder addAllGameEndInfoDa(
          java.lang.Iterable<? extends protobuf.clazz.mj.Nanchang.GameEndInfo> values) {
        if (gameEndInfoDaBuilder_ == null) {
          ensureGameEndInfoDaIsMutable();
          super.addAll(values, gameEndInfoDa_);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder clearGameEndInfoDa() {
        if (gameEndInfoDaBuilder_ == null) {
          gameEndInfoDa_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public Builder removeGameEndInfoDa(int index) {
        if (gameEndInfoDaBuilder_ == null) {
          ensureGameEndInfoDaIsMutable();
          gameEndInfoDa_.remove(index);
          onChanged();
        } else {
          gameEndInfoDaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder getGameEndInfoDaBuilder(
          int index) {
        return getGameEndInfoDaFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder getGameEndInfoDaOrBuilder(
          int index) {
        if (gameEndInfoDaBuilder_ == null) {
          return gameEndInfoDa_.get(index);  } else {
          return gameEndInfoDaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
           getGameEndInfoDaOrBuilderList() {
        if (gameEndInfoDaBuilder_ != null) {
          return gameEndInfoDaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameEndInfoDa_);
        }
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder addGameEndInfoDaBuilder() {
        return getGameEndInfoDaFieldBuilder().addBuilder(
            protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.GameEndInfo.Builder addGameEndInfoDaBuilder(
          int index) {
        return getGameEndInfoDaFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.GameEndInfo gameEndInfoDa = 6;</code>
       *
       * <pre>
       * 大结算胡牌信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.GameEndInfo.Builder> 
           getGameEndInfoDaBuilderList() {
        return getGameEndInfoDaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder> 
          getGameEndInfoDaFieldBuilder() {
        if (gameEndInfoDaBuilder_ == null) {
          gameEndInfoDaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Nanchang.GameEndInfo, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder, protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder>(
                  gameEndInfoDa_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          gameEndInfoDa_ = null;
        }
        return gameEndInfoDaBuilder_;
      }

      // optional string resultDesc = 7;
      private java.lang.Object resultDesc_ = "";
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public boolean hasResultDesc() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public java.lang.String getResultDesc() {
        java.lang.Object ref = resultDesc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          resultDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getResultDescBytes() {
        java.lang.Object ref = resultDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resultDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public Builder setResultDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        resultDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public Builder clearResultDesc() {
        bitField0_ = (bitField0_ & ~0x00000040);
        resultDesc_ = getDefaultInstance().getResultDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string resultDesc = 7;</code>
       *
       * <pre>
       * 胡牌描述
       * </pre>
       */
      public Builder setResultDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        resultDesc_ = value;
        onChanged();
        return this;
      }

      // repeated .mj.ActionData_NC actionDataNC = 8;
      private java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC> actionDataNC_ =
        java.util.Collections.emptyList();
      private void ensureActionDataNCIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          actionDataNC_ = new java.util.ArrayList<protobuf.clazz.mj.Nanchang.ActionData_NC>(actionDataNC_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.ActionData_NC, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder, protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder> actionDataNCBuilder_;

      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC> getActionDataNCList() {
        if (actionDataNCBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actionDataNC_);
        } else {
          return actionDataNCBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public int getActionDataNCCount() {
        if (actionDataNCBuilder_ == null) {
          return actionDataNC_.size();
        } else {
          return actionDataNCBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionData_NC getActionDataNC(int index) {
        if (actionDataNCBuilder_ == null) {
          return actionDataNC_.get(index);
        } else {
          return actionDataNCBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder setActionDataNC(
          int index, protobuf.clazz.mj.Nanchang.ActionData_NC value) {
        if (actionDataNCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionDataNCIsMutable();
          actionDataNC_.set(index, value);
          onChanged();
        } else {
          actionDataNCBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder setActionDataNC(
          int index, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder builderForValue) {
        if (actionDataNCBuilder_ == null) {
          ensureActionDataNCIsMutable();
          actionDataNC_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionDataNCBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder addActionDataNC(protobuf.clazz.mj.Nanchang.ActionData_NC value) {
        if (actionDataNCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionDataNCIsMutable();
          actionDataNC_.add(value);
          onChanged();
        } else {
          actionDataNCBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder addActionDataNC(
          int index, protobuf.clazz.mj.Nanchang.ActionData_NC value) {
        if (actionDataNCBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionDataNCIsMutable();
          actionDataNC_.add(index, value);
          onChanged();
        } else {
          actionDataNCBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder addActionDataNC(
          protobuf.clazz.mj.Nanchang.ActionData_NC.Builder builderForValue) {
        if (actionDataNCBuilder_ == null) {
          ensureActionDataNCIsMutable();
          actionDataNC_.add(builderForValue.build());
          onChanged();
        } else {
          actionDataNCBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder addActionDataNC(
          int index, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder builderForValue) {
        if (actionDataNCBuilder_ == null) {
          ensureActionDataNCIsMutable();
          actionDataNC_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionDataNCBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder addAllActionDataNC(
          java.lang.Iterable<? extends protobuf.clazz.mj.Nanchang.ActionData_NC> values) {
        if (actionDataNCBuilder_ == null) {
          ensureActionDataNCIsMutable();
          super.addAll(values, actionDataNC_);
          onChanged();
        } else {
          actionDataNCBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder clearActionDataNC() {
        if (actionDataNCBuilder_ == null) {
          actionDataNC_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          actionDataNCBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public Builder removeActionDataNC(int index) {
        if (actionDataNCBuilder_ == null) {
          ensureActionDataNCIsMutable();
          actionDataNC_.remove(index);
          onChanged();
        } else {
          actionDataNCBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionData_NC.Builder getActionDataNCBuilder(
          int index) {
        return getActionDataNCFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder getActionDataNCOrBuilder(
          int index) {
        if (actionDataNCBuilder_ == null) {
          return actionDataNC_.get(index);  } else {
          return actionDataNCBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder> 
           getActionDataNCOrBuilderList() {
        if (actionDataNCBuilder_ != null) {
          return actionDataNCBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actionDataNC_);
        }
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionData_NC.Builder addActionDataNCBuilder() {
        return getActionDataNCFieldBuilder().addBuilder(
            protobuf.clazz.mj.Nanchang.ActionData_NC.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public protobuf.clazz.mj.Nanchang.ActionData_NC.Builder addActionDataNCBuilder(
          int index) {
        return getActionDataNCFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Nanchang.ActionData_NC.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ActionData_NC actionDataNC = 8;</code>
       *
       * <pre>
       * 结束后的动画信息
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Nanchang.ActionData_NC.Builder> 
           getActionDataNCBuilderList() {
        return getActionDataNCFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Nanchang.ActionData_NC, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder, protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder> 
          getActionDataNCFieldBuilder() {
        if (actionDataNCBuilder_ == null) {
          actionDataNCBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Nanchang.ActionData_NC, protobuf.clazz.mj.Nanchang.ActionData_NC.Builder, protobuf.clazz.mj.Nanchang.ActionData_NCOrBuilder>(
                  actionDataNC_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          actionDataNC_ = null;
        }
        return actionDataNCBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mj.GameEndResponse_NC)
    }

    static {
      defaultInstance = new GameEndResponse_NC(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.GameEndResponse_NC)
  }

  public interface GameEndInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 title = 1;
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    java.util.List<java.lang.Integer> getTitleList();
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    int getTitleCount();
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    int getTitle(int index);

    // repeated int32 score = 2;
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    java.util.List<java.lang.Integer> getScoreList();
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    int getScoreCount();
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    int getScore(int index);

    // optional int32 shangJingCount = 3;
    /**
     * <code>optional int32 shangJingCount = 3;</code>
     *
     * <pre>
     *正精数量
     * </pre>
     */
    boolean hasShangJingCount();
    /**
     * <code>optional int32 shangJingCount = 3;</code>
     *
     * <pre>
     *正精数量
     * </pre>
     */
    int getShangJingCount();

    // optional int32 xiaJingCount = 4;
    /**
     * <code>optional int32 xiaJingCount = 4;</code>
     *
     * <pre>
     *副精数量
     * </pre>
     */
    boolean hasXiaJingCount();
    /**
     * <code>optional int32 xiaJingCount = 4;</code>
     *
     * <pre>
     *副精数量
     * </pre>
     */
    int getXiaJingCount();

    // optional bool baHu = 5;
    /**
     * <code>optional bool baHu = 5;</code>
     *
     * <pre>
     *霸胡 true霸胡 fales 不显示霸胡
     * </pre>
     */
    boolean hasBaHu();
    /**
     * <code>optional bool baHu = 5;</code>
     *
     * <pre>
     *霸胡 true霸胡 fales 不显示霸胡
     * </pre>
     */
    boolean getBaHu();
  }
  /**
   * Protobuf type {@code mj.GameEndInfo}
   *
   * <pre>
   *结算信息
   * </pre>
   */
  public static final class GameEndInfo extends
      com.google.protobuf.GeneratedMessage
      implements GameEndInfoOrBuilder {
    // Use GameEndInfo.newBuilder() to construct.
    private GameEndInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameEndInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameEndInfo defaultInstance;
    public static GameEndInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GameEndInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameEndInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                title_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              title_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                title_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                title_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                score_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              score_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                score_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                score_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              shangJingCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              xiaJingCount_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              baHu_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          title_ = java.util.Collections.unmodifiableList(title_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          score_ = java.util.Collections.unmodifiableList(score_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.GameEndInfo.class, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GameEndInfo> PARSER =
        new com.google.protobuf.AbstractParser<GameEndInfo>() {
      public GameEndInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameEndInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameEndInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code mj.GameEndInfo.GameEndInfoType}
     *
     * <pre>
     *title 类型
     * </pre>
     */
    public enum GameEndInfoType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HUSCORE = 0;</code>
       *
       * <pre>
       * 胡分
       * </pre>
       */
      HUSCORE(0, 0),
      /**
       * <code>GANGSCORE = 1;</code>
       *
       * <pre>
       *杠分
       * </pre>
       */
      GANGSCORE(1, 1),
      /**
       * <code>SHANGJING = 2;</code>
       *
       * <pre>
       *上精
       * </pre>
       */
      SHANGJING(2, 2),
      /**
       * <code>HUITOU = 3;</code>
       *
       * <pre>
       *回头
       * </pre>
       */
      HUITOU(3, 3),
      /**
       * <code>XIAJING = 4;</code>
       *
       * <pre>
       *下精
       * </pre>
       */
      XIAJING(4, 4),
      /**
       * <code>XIAZOUYOU = 5;</code>
       *
       * <pre>
       *下左右
       * </pre>
       */
      XIAZOUYOU(5, 5),
      /**
       * <code>CHANGGE = 6;</code>
       *
       * <pre>
       *唱歌
       * </pre>
       */
      CHANGGE(6, 6),
      /**
       * <code>MAILEI = 7;</code>
       *
       * <pre>
       *埋雷
       * </pre>
       */
      MAILEI(7, 7),
      /**
       * <code>FADIAN = 8;</code>
       *
       * <pre>
       *发电
       * </pre>
       */
      FADIAN(8, 8),
      /**
       * <code>SHAIYUELIANG = 9;</code>
       *
       * <pre>
       *晒月亮
       * </pre>
       */
      SHAIYUELIANG(9, 9),
      /**
       * <code>ZHAOJINGZI = 10;</code>
       *
       * <pre>
       *照镜子
       * </pre>
       */
      ZHAOJINGZI(10, 10),
      /**
       * <code>CHAOZHUANG = 11;</code>
       *
       * <pre>
       *抄庄
       * </pre>
       */
      CHAOZHUANG(11, 11),
      /**
       * <code>PALOU = 12;</code>
       *
       * <pre>
       *爬楼
       * </pre>
       */
      PALOU(12, 12),
      /**
       * <code>PIAOJING = 13;</code>
       *
       * <pre>
       *飘精
       * </pre>
       */
      PIAOJING(13, 13),
      /**
       * <code>FAFENG = 14;</code>
       *
       * <pre>
       *罚分
       * </pre>
       */
      FAFENG(14, 14),
      ;

      /**
       * <code>HUSCORE = 0;</code>
       *
       * <pre>
       * 胡分
       * </pre>
       */
      public static final int HUSCORE_VALUE = 0;
      /**
       * <code>GANGSCORE = 1;</code>
       *
       * <pre>
       *杠分
       * </pre>
       */
      public static final int GANGSCORE_VALUE = 1;
      /**
       * <code>SHANGJING = 2;</code>
       *
       * <pre>
       *上精
       * </pre>
       */
      public static final int SHANGJING_VALUE = 2;
      /**
       * <code>HUITOU = 3;</code>
       *
       * <pre>
       *回头
       * </pre>
       */
      public static final int HUITOU_VALUE = 3;
      /**
       * <code>XIAJING = 4;</code>
       *
       * <pre>
       *下精
       * </pre>
       */
      public static final int XIAJING_VALUE = 4;
      /**
       * <code>XIAZOUYOU = 5;</code>
       *
       * <pre>
       *下左右
       * </pre>
       */
      public static final int XIAZOUYOU_VALUE = 5;
      /**
       * <code>CHANGGE = 6;</code>
       *
       * <pre>
       *唱歌
       * </pre>
       */
      public static final int CHANGGE_VALUE = 6;
      /**
       * <code>MAILEI = 7;</code>
       *
       * <pre>
       *埋雷
       * </pre>
       */
      public static final int MAILEI_VALUE = 7;
      /**
       * <code>FADIAN = 8;</code>
       *
       * <pre>
       *发电
       * </pre>
       */
      public static final int FADIAN_VALUE = 8;
      /**
       * <code>SHAIYUELIANG = 9;</code>
       *
       * <pre>
       *晒月亮
       * </pre>
       */
      public static final int SHAIYUELIANG_VALUE = 9;
      /**
       * <code>ZHAOJINGZI = 10;</code>
       *
       * <pre>
       *照镜子
       * </pre>
       */
      public static final int ZHAOJINGZI_VALUE = 10;
      /**
       * <code>CHAOZHUANG = 11;</code>
       *
       * <pre>
       *抄庄
       * </pre>
       */
      public static final int CHAOZHUANG_VALUE = 11;
      /**
       * <code>PALOU = 12;</code>
       *
       * <pre>
       *爬楼
       * </pre>
       */
      public static final int PALOU_VALUE = 12;
      /**
       * <code>PIAOJING = 13;</code>
       *
       * <pre>
       *飘精
       * </pre>
       */
      public static final int PIAOJING_VALUE = 13;
      /**
       * <code>FAFENG = 14;</code>
       *
       * <pre>
       *罚分
       * </pre>
       */
      public static final int FAFENG_VALUE = 14;


      public final int getNumber() { return value; }

      public static GameEndInfoType valueOf(int value) {
        switch (value) {
          case 0: return HUSCORE;
          case 1: return GANGSCORE;
          case 2: return SHANGJING;
          case 3: return HUITOU;
          case 4: return XIAJING;
          case 5: return XIAZOUYOU;
          case 6: return CHANGGE;
          case 7: return MAILEI;
          case 8: return FADIAN;
          case 9: return SHAIYUELIANG;
          case 10: return ZHAOJINGZI;
          case 11: return CHAOZHUANG;
          case 12: return PALOU;
          case 13: return PIAOJING;
          case 14: return FAFENG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GameEndInfoType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<GameEndInfoType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GameEndInfoType>() {
              public GameEndInfoType findValueByNumber(int number) {
                return GameEndInfoType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.GameEndInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final GameEndInfoType[] VALUES = values();

      public static GameEndInfoType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private GameEndInfoType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mj.GameEndInfo.GameEndInfoType)
    }

    private int bitField0_;
    // repeated int32 title = 1;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> title_;
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTitleList() {
      return title_;
    }
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    public int getTitleCount() {
      return title_.size();
    }
    /**
     * <code>repeated int32 title = 1;</code>
     *
     * <pre>
     * 标题
     * </pre>
     */
    public int getTitle(int index) {
      return title_.get(index);
    }

    // repeated int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> score_;
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScoreList() {
      return score_;
    }
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    public int getScoreCount() {
      return score_.size();
    }
    /**
     * <code>repeated int32 score = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    public int getScore(int index) {
      return score_.get(index);
    }

    // optional int32 shangJingCount = 3;
    public static final int SHANGJINGCOUNT_FIELD_NUMBER = 3;
    private int shangJingCount_;
    /**
     * <code>optional int32 shangJingCount = 3;</code>
     *
     * <pre>
     *正精数量
     * </pre>
     */
    public boolean hasShangJingCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 shangJingCount = 3;</code>
     *
     * <pre>
     *正精数量
     * </pre>
     */
    public int getShangJingCount() {
      return shangJingCount_;
    }

    // optional int32 xiaJingCount = 4;
    public static final int XIAJINGCOUNT_FIELD_NUMBER = 4;
    private int xiaJingCount_;
    /**
     * <code>optional int32 xiaJingCount = 4;</code>
     *
     * <pre>
     *副精数量
     * </pre>
     */
    public boolean hasXiaJingCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 xiaJingCount = 4;</code>
     *
     * <pre>
     *副精数量
     * </pre>
     */
    public int getXiaJingCount() {
      return xiaJingCount_;
    }

    // optional bool baHu = 5;
    public static final int BAHU_FIELD_NUMBER = 5;
    private boolean baHu_;
    /**
     * <code>optional bool baHu = 5;</code>
     *
     * <pre>
     *霸胡 true霸胡 fales 不显示霸胡
     * </pre>
     */
    public boolean hasBaHu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool baHu = 5;</code>
     *
     * <pre>
     *霸胡 true霸胡 fales 不显示霸胡
     * </pre>
     */
    public boolean getBaHu() {
      return baHu_;
    }

    private void initFields() {
      title_ = java.util.Collections.emptyList();
      score_ = java.util.Collections.emptyList();
      shangJingCount_ = 0;
      xiaJingCount_ = 0;
      baHu_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < title_.size(); i++) {
        output.writeInt32(1, title_.get(i));
      }
      for (int i = 0; i < score_.size(); i++) {
        output.writeInt32(2, score_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, shangJingCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, xiaJingCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(5, baHu_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < title_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(title_.get(i));
        }
        size += dataSize;
        size += 1 * getTitleList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < score_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(score_.get(i));
        }
        size += dataSize;
        size += 1 * getScoreList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, shangJingCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, xiaJingCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, baHu_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.GameEndInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.GameEndInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.GameEndInfo}
     *
     * <pre>
     *结算信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.GameEndInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.GameEndInfo.class, protobuf.clazz.mj.Nanchang.GameEndInfo.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.GameEndInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        score_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        shangJingCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        xiaJingCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        baHu_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_GameEndInfo_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.GameEndInfo getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.GameEndInfo build() {
        protobuf.clazz.mj.Nanchang.GameEndInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.GameEndInfo buildPartial() {
        protobuf.clazz.mj.Nanchang.GameEndInfo result = new protobuf.clazz.mj.Nanchang.GameEndInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          title_ = java.util.Collections.unmodifiableList(title_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.title_ = title_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          score_ = java.util.Collections.unmodifiableList(score_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.shangJingCount_ = shangJingCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.xiaJingCount_ = xiaJingCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baHu_ = baHu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.GameEndInfo) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.GameEndInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.GameEndInfo other) {
        if (other == protobuf.clazz.mj.Nanchang.GameEndInfo.getDefaultInstance()) return this;
        if (!other.title_.isEmpty()) {
          if (title_.isEmpty()) {
            title_ = other.title_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTitleIsMutable();
            title_.addAll(other.title_);
          }
          onChanged();
        }
        if (!other.score_.isEmpty()) {
          if (score_.isEmpty()) {
            score_ = other.score_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureScoreIsMutable();
            score_.addAll(other.score_);
          }
          onChanged();
        }
        if (other.hasShangJingCount()) {
          setShangJingCount(other.getShangJingCount());
        }
        if (other.hasXiaJingCount()) {
          setXiaJingCount(other.getXiaJingCount());
        }
        if (other.hasBaHu()) {
          setBaHu(other.getBaHu());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.GameEndInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.GameEndInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 title = 1;
      private java.util.List<java.lang.Integer> title_ = java.util.Collections.emptyList();
      private void ensureTitleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          title_ = new java.util.ArrayList<java.lang.Integer>(title_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTitleList() {
        return java.util.Collections.unmodifiableList(title_);
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public int getTitleCount() {
        return title_.size();
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public int getTitle(int index) {
        return title_.get(index);
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public Builder setTitle(
          int index, int value) {
        ensureTitleIsMutable();
        title_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public Builder addTitle(int value) {
        ensureTitleIsMutable();
        title_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public Builder addAllTitle(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTitleIsMutable();
        super.addAll(values, title_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 title = 1;</code>
       *
       * <pre>
       * 标题
       * </pre>
       */
      public Builder clearTitle() {
        title_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 score = 2;
      private java.util.List<java.lang.Integer> score_ = java.util.Collections.emptyList();
      private void ensureScoreIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          score_ = new java.util.ArrayList<java.lang.Integer>(score_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScoreList() {
        return java.util.Collections.unmodifiableList(score_);
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public int getScoreCount() {
        return score_.size();
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public int getScore(int index) {
        return score_.get(index);
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder setScore(
          int index, int value) {
        ensureScoreIsMutable();
        score_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder addScore(int value) {
        ensureScoreIsMutable();
        score_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder addAllScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScoreIsMutable();
        super.addAll(values, score_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder clearScore() {
        score_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 shangJingCount = 3;
      private int shangJingCount_ ;
      /**
       * <code>optional int32 shangJingCount = 3;</code>
       *
       * <pre>
       *正精数量
       * </pre>
       */
      public boolean hasShangJingCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 shangJingCount = 3;</code>
       *
       * <pre>
       *正精数量
       * </pre>
       */
      public int getShangJingCount() {
        return shangJingCount_;
      }
      /**
       * <code>optional int32 shangJingCount = 3;</code>
       *
       * <pre>
       *正精数量
       * </pre>
       */
      public Builder setShangJingCount(int value) {
        bitField0_ |= 0x00000004;
        shangJingCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shangJingCount = 3;</code>
       *
       * <pre>
       *正精数量
       * </pre>
       */
      public Builder clearShangJingCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        shangJingCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 xiaJingCount = 4;
      private int xiaJingCount_ ;
      /**
       * <code>optional int32 xiaJingCount = 4;</code>
       *
       * <pre>
       *副精数量
       * </pre>
       */
      public boolean hasXiaJingCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 xiaJingCount = 4;</code>
       *
       * <pre>
       *副精数量
       * </pre>
       */
      public int getXiaJingCount() {
        return xiaJingCount_;
      }
      /**
       * <code>optional int32 xiaJingCount = 4;</code>
       *
       * <pre>
       *副精数量
       * </pre>
       */
      public Builder setXiaJingCount(int value) {
        bitField0_ |= 0x00000008;
        xiaJingCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xiaJingCount = 4;</code>
       *
       * <pre>
       *副精数量
       * </pre>
       */
      public Builder clearXiaJingCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        xiaJingCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool baHu = 5;
      private boolean baHu_ ;
      /**
       * <code>optional bool baHu = 5;</code>
       *
       * <pre>
       *霸胡 true霸胡 fales 不显示霸胡
       * </pre>
       */
      public boolean hasBaHu() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool baHu = 5;</code>
       *
       * <pre>
       *霸胡 true霸胡 fales 不显示霸胡
       * </pre>
       */
      public boolean getBaHu() {
        return baHu_;
      }
      /**
       * <code>optional bool baHu = 5;</code>
       *
       * <pre>
       *霸胡 true霸胡 fales 不显示霸胡
       * </pre>
       */
      public Builder setBaHu(boolean value) {
        bitField0_ |= 0x00000010;
        baHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool baHu = 5;</code>
       *
       * <pre>
       *霸胡 true霸胡 fales 不显示霸胡
       * </pre>
       */
      public Builder clearBaHu() {
        bitField0_ = (bitField0_ & ~0x00000010);
        baHu_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.GameEndInfo)
    }

    static {
      defaultInstance = new GameEndInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.GameEndInfo)
  }

  public interface FaDianActionEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 count = 1;
    /**
     * <code>required int32 count = 1;</code>
     *
     * <pre>
     *当前发电次数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required int32 count = 1;</code>
     *
     * <pre>
     *当前发电次数
     * </pre>
     */
    int getCount();

    // required int32 tyep = 2;
    /**
     * <code>required int32 tyep = 2;</code>
     *
     * <pre>
     *发电消息类型 1：正常结束;2 停牌, 3不停
     * </pre>
     */
    boolean hasTyep();
    /**
     * <code>required int32 tyep = 2;</code>
     *
     * <pre>
     *发电消息类型 1：正常结束;2 停牌, 3不停
     * </pre>
     */
    int getTyep();
  }
  /**
   * Protobuf type {@code mj.FaDianActionEnd}
   *
   * <pre>
   *发电次数完成
   * </pre>
   */
  public static final class FaDianActionEnd extends
      com.google.protobuf.GeneratedMessage
      implements FaDianActionEndOrBuilder {
    // Use FaDianActionEnd.newBuilder() to construct.
    private FaDianActionEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FaDianActionEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FaDianActionEnd defaultInstance;
    public static FaDianActionEnd getDefaultInstance() {
      return defaultInstance;
    }

    public FaDianActionEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FaDianActionEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              count_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tyep_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_FaDianActionEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Nanchang.internal_static_mj_FaDianActionEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Nanchang.FaDianActionEnd.class, protobuf.clazz.mj.Nanchang.FaDianActionEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<FaDianActionEnd> PARSER =
        new com.google.protobuf.AbstractParser<FaDianActionEnd>() {
      public FaDianActionEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FaDianActionEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FaDianActionEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 count = 1;
    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>required int32 count = 1;</code>
     *
     * <pre>
     *当前发电次数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 count = 1;</code>
     *
     * <pre>
     *当前发电次数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    // required int32 tyep = 2;
    public static final int TYEP_FIELD_NUMBER = 2;
    private int tyep_;
    /**
     * <code>required int32 tyep = 2;</code>
     *
     * <pre>
     *发电消息类型 1：正常结束;2 停牌, 3不停
     * </pre>
     */
    public boolean hasTyep() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 tyep = 2;</code>
     *
     * <pre>
     *发电消息类型 1：正常结束;2 停牌, 3不停
     * </pre>
     */
    public int getTyep() {
      return tyep_;
    }

    private void initFields() {
      count_ = 0;
      tyep_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTyep()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tyep_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tyep_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Nanchang.FaDianActionEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Nanchang.FaDianActionEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.FaDianActionEnd}
     *
     * <pre>
     *发电次数完成
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Nanchang.FaDianActionEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_FaDianActionEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_FaDianActionEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Nanchang.FaDianActionEnd.class, protobuf.clazz.mj.Nanchang.FaDianActionEnd.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Nanchang.FaDianActionEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tyep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Nanchang.internal_static_mj_FaDianActionEnd_descriptor;
      }

      public protobuf.clazz.mj.Nanchang.FaDianActionEnd getDefaultInstanceForType() {
        return protobuf.clazz.mj.Nanchang.FaDianActionEnd.getDefaultInstance();
      }

      public protobuf.clazz.mj.Nanchang.FaDianActionEnd build() {
        protobuf.clazz.mj.Nanchang.FaDianActionEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Nanchang.FaDianActionEnd buildPartial() {
        protobuf.clazz.mj.Nanchang.FaDianActionEnd result = new protobuf.clazz.mj.Nanchang.FaDianActionEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tyep_ = tyep_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Nanchang.FaDianActionEnd) {
          return mergeFrom((protobuf.clazz.mj.Nanchang.FaDianActionEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Nanchang.FaDianActionEnd other) {
        if (other == protobuf.clazz.mj.Nanchang.FaDianActionEnd.getDefaultInstance()) return this;
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasTyep()) {
          setTyep(other.getTyep());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCount()) {
          
          return false;
        }
        if (!hasTyep()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Nanchang.FaDianActionEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Nanchang.FaDianActionEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 count = 1;
      private int count_ ;
      /**
       * <code>required int32 count = 1;</code>
       *
       * <pre>
       *当前发电次数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 count = 1;</code>
       *
       * <pre>
       *当前发电次数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required int32 count = 1;</code>
       *
       * <pre>
       *当前发电次数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000001;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 count = 1;</code>
       *
       * <pre>
       *当前发电次数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        onChanged();
        return this;
      }

      // required int32 tyep = 2;
      private int tyep_ ;
      /**
       * <code>required int32 tyep = 2;</code>
       *
       * <pre>
       *发电消息类型 1：正常结束;2 停牌, 3不停
       * </pre>
       */
      public boolean hasTyep() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 tyep = 2;</code>
       *
       * <pre>
       *发电消息类型 1：正常结束;2 停牌, 3不停
       * </pre>
       */
      public int getTyep() {
        return tyep_;
      }
      /**
       * <code>required int32 tyep = 2;</code>
       *
       * <pre>
       *发电消息类型 1：正常结束;2 停牌, 3不停
       * </pre>
       */
      public Builder setTyep(int value) {
        bitField0_ |= 0x00000002;
        tyep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tyep = 2;</code>
       *
       * <pre>
       *发电消息类型 1：正常结束;2 停牌, 3不停
       * </pre>
       */
      public Builder clearTyep() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tyep_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.FaDianActionEnd)
    }

    static {
      defaultInstance = new FaDianActionEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.FaDianActionEnd)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_EveryJingInfo_NC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_EveryJingInfo_NC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_ActionJingDatas_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_ActionJingDatas_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_ActionData_NC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_ActionData_NC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_GameEndResponse_NC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_GameEndResponse_NC_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_GameEndInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_GameEndInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_FaDianActionEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_FaDianActionEnd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021mj/nanchang.proto\022\002mj\032\024basic/protocol." +
      "proto\"\230\001\n\020EveryJingInfo_NC\022\021\n\tshowCards\030" +
      "\006 \003(\005\022\026\n\016zhengJingCount\030\001 \001(\005\022\023\n\013fuJingC" +
      "ount\030\002 \001(\005\022\024\n\014isBaWangJing\030\003 \001(\010\022\026\n\016chon" +
      "gGuanScore\030\004 \001(\005\022\026\n\016everyJingScore\030\005 \001(\005" +
      "\"\310\001\n\017ActionJingDatas\022\027\n\017showCenterCards\030" +
      "\001 \003(\005\022&\n\010jingInfo\030\002 \003(\0132\024.mj.EveryJingIn" +
      "fo_NC\022\r\n\005count\030\003 \001(\005\022\r\n\005touZi\030\004 \001(\010\022\016\n\006t" +
      "arget\030\005 \001(\005\022\020\n\010touZiOne\030\006 \001(\005\022\020\n\010touZiTw" +
      "o\030\007 \001(\005\022\022\n\notherCards\030\010 \003(\005\022\016\n\006isTing\030\t ",
      "\001(\010\"Q\n\rActionData_NC\022\022\n\nactionType\030\001 \003(\005" +
      "\022,\n\017actionJingDatas\030\002 \003(\0132\023.mj.ActionJin" +
      "gDatas\"\204\002\n\022GameEndResponse_NC\022!\n\007gameEnd" +
      "\030\001 \001(\0132\020.GameEndResponse\022\021\n\tzhengJing\030\002 " +
      "\003(\005\022\027\n\017otherJingNumber\030\003 \001(\005\022\021\n\totherJin" +
      "g\030\004 \003(\005\022\'\n\016gameEndInfoXia\030\005 \003(\0132\017.mj.Gam" +
      "eEndInfo\022&\n\rgameEndInfoDa\030\006 \003(\0132\017.mj.Gam" +
      "eEndInfo\022\022\n\nresultDesc\030\007 \001(\t\022\'\n\014actionDa" +
      "taNC\030\010 \003(\0132\021.mj.ActionData_NC\"\312\002\n\013GameEn" +
      "dInfo\022\r\n\005title\030\001 \003(\005\022\r\n\005score\030\002 \003(\005\022\026\n\016s",
      "hangJingCount\030\003 \001(\005\022\024\n\014xiaJingCount\030\004 \001(" +
      "\005\022\014\n\004baHu\030\005 \001(\010\"\340\001\n\017GameEndInfoType\022\013\n\007H" +
      "USCORE\020\000\022\r\n\tGANGSCORE\020\001\022\r\n\tSHANGJING\020\002\022\n" +
      "\n\006HUITOU\020\003\022\013\n\007XIAJING\020\004\022\r\n\tXIAZOUYOU\020\005\022\013" +
      "\n\007CHANGGE\020\006\022\n\n\006MAILEI\020\007\022\n\n\006FADIAN\020\010\022\020\n\014S" +
      "HAIYUELIANG\020\t\022\016\n\nZHAOJINGZI\020\n\022\016\n\nCHAOZHU" +
      "ANG\020\013\022\t\n\005PALOU\020\014\022\014\n\010PIAOJING\020\r\022\n\n\006FAFENG" +
      "\020\016\".\n\017FaDianActionEnd\022\r\n\005count\030\001 \002(\005\022\014\n\004" +
      "tyep\030\002 \002(\005B\035\n\021protobuf.clazz.mjB\010Nanchan" +
      "g"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mj_EveryJingInfo_NC_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mj_EveryJingInfo_NC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_EveryJingInfo_NC_descriptor,
              new java.lang.String[] { "ShowCards", "ZhengJingCount", "FuJingCount", "IsBaWangJing", "ChongGuanScore", "EveryJingScore", });
          internal_static_mj_ActionJingDatas_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_mj_ActionJingDatas_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_ActionJingDatas_descriptor,
              new java.lang.String[] { "ShowCenterCards", "JingInfo", "Count", "TouZi", "Target", "TouZiOne", "TouZiTwo", "OtherCards", "IsTing", });
          internal_static_mj_ActionData_NC_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_mj_ActionData_NC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_ActionData_NC_descriptor,
              new java.lang.String[] { "ActionType", "ActionJingDatas", });
          internal_static_mj_GameEndResponse_NC_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_mj_GameEndResponse_NC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_GameEndResponse_NC_descriptor,
              new java.lang.String[] { "GameEnd", "ZhengJing", "OtherJingNumber", "OtherJing", "GameEndInfoXia", "GameEndInfoDa", "ResultDesc", "ActionDataNC", });
          internal_static_mj_GameEndInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_mj_GameEndInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_GameEndInfo_descriptor,
              new java.lang.String[] { "Title", "Score", "ShangJingCount", "XiaJingCount", "BaHu", });
          internal_static_mj_FaDianActionEnd_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_mj_FaDianActionEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_FaDianActionEnd_descriptor,
              new java.lang.String[] { "Count", "Tyep", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
