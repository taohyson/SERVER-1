// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mj/gdtdh.proto

package protobuf.clazz.mj;

public final class GdtdhPro {
  private GdtdhPro() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GDTDHGameEndResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse an_gang_card = 1;
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getAnGangCardList();
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getAnGangCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    int getAnGangCardCount();
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getAnGangCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getAnGangCardOrBuilder(
        int index);

    // repeated .Int32ArrayResponse ming_gang_card = 2;
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getMingGangCardList();
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getMingGangCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    int getMingGangCardCount();
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getMingGangCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getMingGangCardOrBuilder(
        int index);

    // repeated .Int32ArrayResponse jie_gang_card = 3;
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getJieGangCardList();
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getJieGangCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    int getJieGangCardCount();
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJieGangCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJieGangCardOrBuilder(
        int index);

    // repeated .Int32ArrayResponse dian_gang_card = 4;
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getDianGangCardList();
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getDianGangCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    int getDianGangCardCount();
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getDianGangCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getDianGangCardOrBuilder(
        int index);

    // repeated string hu_des = 5;
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    java.util.List<java.lang.String>
    getHuDesList();
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    int getHuDesCount();
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    java.lang.String getHuDes(int index);
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getHuDesBytes(int index);

    // repeated int32 banker_count = 6;
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getBankerCountList();
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    int getBankerCountCount();
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    int getBankerCount(int index);

    // repeated int32 hu_count = 7;
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuCountList();
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    int getHuCountCount();
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    int getHuCount(int index);

    // repeated int32 win_score_count = 8;
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinScoreCountList();
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    int getWinScoreCountCount();
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    int getWinScoreCount(int index);

    // repeated int32 gang_count = 9;
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangCountList();
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    int getGangCountCount();
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    int getGangCount(int index);
  }
  /**
   * Protobuf type {@code mj.GDTDHGameEndResponse}
   */
  public static final class GDTDHGameEndResponse extends
      com.google.protobuf.GeneratedMessage
      implements GDTDHGameEndResponseOrBuilder {
    // Use GDTDHGameEndResponse.newBuilder() to construct.
    private GDTDHGameEndResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GDTDHGameEndResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GDTDHGameEndResponse defaultInstance;
    public static GDTDHGameEndResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GDTDHGameEndResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GDTDHGameEndResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                anGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              anGangCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mingGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              mingGangCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jieGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000004;
              }
              jieGangCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                dianGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              dianGangCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                huDes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              huDes_.add(input.readBytes());
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                bankerCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              bankerCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                bankerCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                bankerCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                huCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              huCount_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                huCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                huCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                winScoreCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              winScoreCount_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                winScoreCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                winScoreCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                gangCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              gangCount_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                gangCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          anGangCard_ = java.util.Collections.unmodifiableList(anGangCard_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mingGangCard_ = java.util.Collections.unmodifiableList(mingGangCard_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jieGangCard_ = java.util.Collections.unmodifiableList(jieGangCard_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          dianGangCard_ = java.util.Collections.unmodifiableList(dianGangCard_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          huDes_ = new com.google.protobuf.UnmodifiableLazyStringList(huDes_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          bankerCount_ = java.util.Collections.unmodifiableList(bankerCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          huCount_ = java.util.Collections.unmodifiableList(huCount_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          winScoreCount_ = java.util.Collections.unmodifiableList(winScoreCount_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          gangCount_ = java.util.Collections.unmodifiableList(gangCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.GdtdhPro.internal_static_mj_GDTDHGameEndResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.GdtdhPro.internal_static_mj_GDTDHGameEndResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.class, protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GDTDHGameEndResponse> PARSER =
        new com.google.protobuf.AbstractParser<GDTDHGameEndResponse>() {
      public GDTDHGameEndResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GDTDHGameEndResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GDTDHGameEndResponse> getParserForType() {
      return PARSER;
    }

    // repeated .Int32ArrayResponse an_gang_card = 1;
    public static final int AN_GANG_CARD_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> anGangCard_;
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getAnGangCardList() {
      return anGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getAnGangCardOrBuilderList() {
      return anGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    public int getAnGangCardCount() {
      return anGangCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getAnGangCard(int index) {
      return anGangCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
     *
     * <pre>
     * 暗杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getAnGangCardOrBuilder(
        int index) {
      return anGangCard_.get(index);
    }

    // repeated .Int32ArrayResponse ming_gang_card = 2;
    public static final int MING_GANG_CARD_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> mingGangCard_;
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getMingGangCardList() {
      return mingGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getMingGangCardOrBuilderList() {
      return mingGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    public int getMingGangCardCount() {
      return mingGangCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getMingGangCard(int index) {
      return mingGangCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
     *
     * <pre>
     * 明杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getMingGangCardOrBuilder(
        int index) {
      return mingGangCard_.get(index);
    }

    // repeated .Int32ArrayResponse jie_gang_card = 3;
    public static final int JIE_GANG_CARD_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jieGangCard_;
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJieGangCardList() {
      return jieGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJieGangCardOrBuilderList() {
      return jieGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    public int getJieGangCardCount() {
      return jieGangCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getJieGangCard(int index) {
      return jieGangCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
     *
     * <pre>
     * 接杠的牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJieGangCardOrBuilder(
        int index) {
      return jieGangCard_.get(index);
    }

    // repeated .Int32ArrayResponse dian_gang_card = 4;
    public static final int DIAN_GANG_CARD_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> dianGangCard_;
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getDianGangCardList() {
      return dianGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getDianGangCardOrBuilderList() {
      return dianGangCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    public int getDianGangCardCount() {
      return dianGangCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getDianGangCard(int index) {
      return dianGangCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
     *
     * <pre>
     * 点杠的牌 ，与接杠对应
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getDianGangCardOrBuilder(
        int index) {
      return dianGangCard_.get(index);
    }

    // repeated string hu_des = 5;
    public static final int HU_DES_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList huDes_;
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    public java.util.List<java.lang.String>
        getHuDesList() {
      return huDes_;
    }
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    public int getHuDesCount() {
      return huDes_.size();
    }
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    public java.lang.String getHuDes(int index) {
      return huDes_.get(index);
    }
    /**
     * <code>repeated string hu_des = 5;</code>
     *
     * <pre>
     * 牌描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHuDesBytes(int index) {
      return huDes_.getByteString(index);
    }

    // repeated int32 banker_count = 6;
    public static final int BANKER_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> bankerCount_;
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBankerCountList() {
      return bankerCount_;
    }
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    public int getBankerCountCount() {
      return bankerCount_.size();
    }
    /**
     * <code>repeated int32 banker_count = 6;</code>
     *
     * <pre>
     *坐庄次数
     * </pre>
     */
    public int getBankerCount(int index) {
      return bankerCount_.get(index);
    }

    // repeated int32 hu_count = 7;
    public static final int HU_COUNT_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> huCount_;
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuCountList() {
      return huCount_;
    }
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    public int getHuCountCount() {
      return huCount_.size();
    }
    /**
     * <code>repeated int32 hu_count = 7;</code>
     *
     * <pre>
     * 胡牌次数
     * </pre>
     */
    public int getHuCount(int index) {
      return huCount_.get(index);
    }

    // repeated int32 win_score_count = 8;
    public static final int WIN_SCORE_COUNT_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> winScoreCount_;
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinScoreCountList() {
      return winScoreCount_;
    }
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    public int getWinScoreCountCount() {
      return winScoreCount_.size();
    }
    /**
     * <code>repeated int32 win_score_count = 8;</code>
     *
     * <pre>
     * 赢分次数
     * </pre>
     */
    public int getWinScoreCount(int index) {
      return winScoreCount_.get(index);
    }

    // repeated int32 gang_count = 9;
    public static final int GANG_COUNT_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> gangCount_;
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangCountList() {
      return gangCount_;
    }
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    public int getGangCountCount() {
      return gangCount_.size();
    }
    /**
     * <code>repeated int32 gang_count = 9;</code>
     *
     * <pre>
     * 杠次数
     * </pre>
     */
    public int getGangCount(int index) {
      return gangCount_.get(index);
    }

    private void initFields() {
      anGangCard_ = java.util.Collections.emptyList();
      mingGangCard_ = java.util.Collections.emptyList();
      jieGangCard_ = java.util.Collections.emptyList();
      dianGangCard_ = java.util.Collections.emptyList();
      huDes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bankerCount_ = java.util.Collections.emptyList();
      huCount_ = java.util.Collections.emptyList();
      winScoreCount_ = java.util.Collections.emptyList();
      gangCount_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < anGangCard_.size(); i++) {
        output.writeMessage(1, anGangCard_.get(i));
      }
      for (int i = 0; i < mingGangCard_.size(); i++) {
        output.writeMessage(2, mingGangCard_.get(i));
      }
      for (int i = 0; i < jieGangCard_.size(); i++) {
        output.writeMessage(3, jieGangCard_.get(i));
      }
      for (int i = 0; i < dianGangCard_.size(); i++) {
        output.writeMessage(4, dianGangCard_.get(i));
      }
      for (int i = 0; i < huDes_.size(); i++) {
        output.writeBytes(5, huDes_.getByteString(i));
      }
      for (int i = 0; i < bankerCount_.size(); i++) {
        output.writeInt32(6, bankerCount_.get(i));
      }
      for (int i = 0; i < huCount_.size(); i++) {
        output.writeInt32(7, huCount_.get(i));
      }
      for (int i = 0; i < winScoreCount_.size(); i++) {
        output.writeInt32(8, winScoreCount_.get(i));
      }
      for (int i = 0; i < gangCount_.size(); i++) {
        output.writeInt32(9, gangCount_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < anGangCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, anGangCard_.get(i));
      }
      for (int i = 0; i < mingGangCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mingGangCard_.get(i));
      }
      for (int i = 0; i < jieGangCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, jieGangCard_.get(i));
      }
      for (int i = 0; i < dianGangCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dianGangCard_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huDes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(huDes_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getHuDesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bankerCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bankerCount_.get(i));
        }
        size += dataSize;
        size += 1 * getBankerCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHuCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winScoreCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winScoreCount_.get(i));
        }
        size += dataSize;
        size += 1 * getWinScoreCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gangCount_.get(i));
        }
        size += dataSize;
        size += 1 * getGangCountList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.GDTDHGameEndResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.GdtdhPro.internal_static_mj_GDTDHGameEndResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.GdtdhPro.internal_static_mj_GDTDHGameEndResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.class, protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.Builder.class);
      }

      // Construct using protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAnGangCardFieldBuilder();
          getMingGangCardFieldBuilder();
          getJieGangCardFieldBuilder();
          getDianGangCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (anGangCardBuilder_ == null) {
          anGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          anGangCardBuilder_.clear();
        }
        if (mingGangCardBuilder_ == null) {
          mingGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mingGangCardBuilder_.clear();
        }
        if (jieGangCardBuilder_ == null) {
          jieGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          jieGangCardBuilder_.clear();
        }
        if (dianGangCardBuilder_ == null) {
          dianGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          dianGangCardBuilder_.clear();
        }
        huDes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        huCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        winScoreCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        gangCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.GdtdhPro.internal_static_mj_GDTDHGameEndResponse_descriptor;
      }

      public protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse getDefaultInstanceForType() {
        return protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.getDefaultInstance();
      }

      public protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse build() {
        protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse buildPartial() {
        protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse result = new protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse(this);
        int from_bitField0_ = bitField0_;
        if (anGangCardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            anGangCard_ = java.util.Collections.unmodifiableList(anGangCard_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.anGangCard_ = anGangCard_;
        } else {
          result.anGangCard_ = anGangCardBuilder_.build();
        }
        if (mingGangCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            mingGangCard_ = java.util.Collections.unmodifiableList(mingGangCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.mingGangCard_ = mingGangCard_;
        } else {
          result.mingGangCard_ = mingGangCardBuilder_.build();
        }
        if (jieGangCardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            jieGangCard_ = java.util.Collections.unmodifiableList(jieGangCard_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.jieGangCard_ = jieGangCard_;
        } else {
          result.jieGangCard_ = jieGangCardBuilder_.build();
        }
        if (dianGangCardBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            dianGangCard_ = java.util.Collections.unmodifiableList(dianGangCard_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.dianGangCard_ = dianGangCard_;
        } else {
          result.dianGangCard_ = dianGangCardBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          huDes_ = new com.google.protobuf.UnmodifiableLazyStringList(
              huDes_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.huDes_ = huDes_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          bankerCount_ = java.util.Collections.unmodifiableList(bankerCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.bankerCount_ = bankerCount_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          huCount_ = java.util.Collections.unmodifiableList(huCount_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.huCount_ = huCount_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          winScoreCount_ = java.util.Collections.unmodifiableList(winScoreCount_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.winScoreCount_ = winScoreCount_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          gangCount_ = java.util.Collections.unmodifiableList(gangCount_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.gangCount_ = gangCount_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse) {
          return mergeFrom((protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse other) {
        if (other == protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse.getDefaultInstance()) return this;
        if (anGangCardBuilder_ == null) {
          if (!other.anGangCard_.isEmpty()) {
            if (anGangCard_.isEmpty()) {
              anGangCard_ = other.anGangCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAnGangCardIsMutable();
              anGangCard_.addAll(other.anGangCard_);
            }
            onChanged();
          }
        } else {
          if (!other.anGangCard_.isEmpty()) {
            if (anGangCardBuilder_.isEmpty()) {
              anGangCardBuilder_.dispose();
              anGangCardBuilder_ = null;
              anGangCard_ = other.anGangCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
              anGangCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAnGangCardFieldBuilder() : null;
            } else {
              anGangCardBuilder_.addAllMessages(other.anGangCard_);
            }
          }
        }
        if (mingGangCardBuilder_ == null) {
          if (!other.mingGangCard_.isEmpty()) {
            if (mingGangCard_.isEmpty()) {
              mingGangCard_ = other.mingGangCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMingGangCardIsMutable();
              mingGangCard_.addAll(other.mingGangCard_);
            }
            onChanged();
          }
        } else {
          if (!other.mingGangCard_.isEmpty()) {
            if (mingGangCardBuilder_.isEmpty()) {
              mingGangCardBuilder_.dispose();
              mingGangCardBuilder_ = null;
              mingGangCard_ = other.mingGangCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mingGangCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMingGangCardFieldBuilder() : null;
            } else {
              mingGangCardBuilder_.addAllMessages(other.mingGangCard_);
            }
          }
        }
        if (jieGangCardBuilder_ == null) {
          if (!other.jieGangCard_.isEmpty()) {
            if (jieGangCard_.isEmpty()) {
              jieGangCard_ = other.jieGangCard_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureJieGangCardIsMutable();
              jieGangCard_.addAll(other.jieGangCard_);
            }
            onChanged();
          }
        } else {
          if (!other.jieGangCard_.isEmpty()) {
            if (jieGangCardBuilder_.isEmpty()) {
              jieGangCardBuilder_.dispose();
              jieGangCardBuilder_ = null;
              jieGangCard_ = other.jieGangCard_;
              bitField0_ = (bitField0_ & ~0x00000004);
              jieGangCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJieGangCardFieldBuilder() : null;
            } else {
              jieGangCardBuilder_.addAllMessages(other.jieGangCard_);
            }
          }
        }
        if (dianGangCardBuilder_ == null) {
          if (!other.dianGangCard_.isEmpty()) {
            if (dianGangCard_.isEmpty()) {
              dianGangCard_ = other.dianGangCard_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDianGangCardIsMutable();
              dianGangCard_.addAll(other.dianGangCard_);
            }
            onChanged();
          }
        } else {
          if (!other.dianGangCard_.isEmpty()) {
            if (dianGangCardBuilder_.isEmpty()) {
              dianGangCardBuilder_.dispose();
              dianGangCardBuilder_ = null;
              dianGangCard_ = other.dianGangCard_;
              bitField0_ = (bitField0_ & ~0x00000008);
              dianGangCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDianGangCardFieldBuilder() : null;
            } else {
              dianGangCardBuilder_.addAllMessages(other.dianGangCard_);
            }
          }
        }
        if (!other.huDes_.isEmpty()) {
          if (huDes_.isEmpty()) {
            huDes_ = other.huDes_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHuDesIsMutable();
            huDes_.addAll(other.huDes_);
          }
          onChanged();
        }
        if (!other.bankerCount_.isEmpty()) {
          if (bankerCount_.isEmpty()) {
            bankerCount_ = other.bankerCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBankerCountIsMutable();
            bankerCount_.addAll(other.bankerCount_);
          }
          onChanged();
        }
        if (!other.huCount_.isEmpty()) {
          if (huCount_.isEmpty()) {
            huCount_ = other.huCount_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureHuCountIsMutable();
            huCount_.addAll(other.huCount_);
          }
          onChanged();
        }
        if (!other.winScoreCount_.isEmpty()) {
          if (winScoreCount_.isEmpty()) {
            winScoreCount_ = other.winScoreCount_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureWinScoreCountIsMutable();
            winScoreCount_.addAll(other.winScoreCount_);
          }
          onChanged();
        }
        if (!other.gangCount_.isEmpty()) {
          if (gangCount_.isEmpty()) {
            gangCount_ = other.gangCount_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureGangCountIsMutable();
            gangCount_.addAll(other.gangCount_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.GdtdhPro.GDTDHGameEndResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse an_gang_card = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> anGangCard_ =
        java.util.Collections.emptyList();
      private void ensureAnGangCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          anGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(anGangCard_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> anGangCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getAnGangCardList() {
        if (anGangCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(anGangCard_);
        } else {
          return anGangCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public int getAnGangCardCount() {
        if (anGangCardBuilder_ == null) {
          return anGangCard_.size();
        } else {
          return anGangCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getAnGangCard(int index) {
        if (anGangCardBuilder_ == null) {
          return anGangCard_.get(index);
        } else {
          return anGangCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder setAnGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (anGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnGangCardIsMutable();
          anGangCard_.set(index, value);
          onChanged();
        } else {
          anGangCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder setAnGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (anGangCardBuilder_ == null) {
          ensureAnGangCardIsMutable();
          anGangCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          anGangCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder addAnGangCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (anGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnGangCardIsMutable();
          anGangCard_.add(value);
          onChanged();
        } else {
          anGangCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder addAnGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (anGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAnGangCardIsMutable();
          anGangCard_.add(index, value);
          onChanged();
        } else {
          anGangCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder addAnGangCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (anGangCardBuilder_ == null) {
          ensureAnGangCardIsMutable();
          anGangCard_.add(builderForValue.build());
          onChanged();
        } else {
          anGangCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder addAnGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (anGangCardBuilder_ == null) {
          ensureAnGangCardIsMutable();
          anGangCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          anGangCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder addAllAnGangCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (anGangCardBuilder_ == null) {
          ensureAnGangCardIsMutable();
          super.addAll(values, anGangCard_);
          onChanged();
        } else {
          anGangCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder clearAnGangCard() {
        if (anGangCardBuilder_ == null) {
          anGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          anGangCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public Builder removeAnGangCard(int index) {
        if (anGangCardBuilder_ == null) {
          ensureAnGangCardIsMutable();
          anGangCard_.remove(index);
          onChanged();
        } else {
          anGangCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getAnGangCardBuilder(
          int index) {
        return getAnGangCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getAnGangCardOrBuilder(
          int index) {
        if (anGangCardBuilder_ == null) {
          return anGangCard_.get(index);  } else {
          return anGangCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getAnGangCardOrBuilderList() {
        if (anGangCardBuilder_ != null) {
          return anGangCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(anGangCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addAnGangCardBuilder() {
        return getAnGangCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addAnGangCardBuilder(
          int index) {
        return getAnGangCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse an_gang_card = 1;</code>
       *
       * <pre>
       * 暗杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getAnGangCardBuilderList() {
        return getAnGangCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getAnGangCardFieldBuilder() {
        if (anGangCardBuilder_ == null) {
          anGangCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  anGangCard_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          anGangCard_ = null;
        }
        return anGangCardBuilder_;
      }

      // repeated .Int32ArrayResponse ming_gang_card = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> mingGangCard_ =
        java.util.Collections.emptyList();
      private void ensureMingGangCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mingGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(mingGangCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> mingGangCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getMingGangCardList() {
        if (mingGangCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mingGangCard_);
        } else {
          return mingGangCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public int getMingGangCardCount() {
        if (mingGangCardBuilder_ == null) {
          return mingGangCard_.size();
        } else {
          return mingGangCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getMingGangCard(int index) {
        if (mingGangCardBuilder_ == null) {
          return mingGangCard_.get(index);
        } else {
          return mingGangCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder setMingGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (mingGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMingGangCardIsMutable();
          mingGangCard_.set(index, value);
          onChanged();
        } else {
          mingGangCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder setMingGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (mingGangCardBuilder_ == null) {
          ensureMingGangCardIsMutable();
          mingGangCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          mingGangCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder addMingGangCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (mingGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMingGangCardIsMutable();
          mingGangCard_.add(value);
          onChanged();
        } else {
          mingGangCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder addMingGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (mingGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMingGangCardIsMutable();
          mingGangCard_.add(index, value);
          onChanged();
        } else {
          mingGangCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder addMingGangCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (mingGangCardBuilder_ == null) {
          ensureMingGangCardIsMutable();
          mingGangCard_.add(builderForValue.build());
          onChanged();
        } else {
          mingGangCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder addMingGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (mingGangCardBuilder_ == null) {
          ensureMingGangCardIsMutable();
          mingGangCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          mingGangCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder addAllMingGangCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (mingGangCardBuilder_ == null) {
          ensureMingGangCardIsMutable();
          super.addAll(values, mingGangCard_);
          onChanged();
        } else {
          mingGangCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder clearMingGangCard() {
        if (mingGangCardBuilder_ == null) {
          mingGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mingGangCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public Builder removeMingGangCard(int index) {
        if (mingGangCardBuilder_ == null) {
          ensureMingGangCardIsMutable();
          mingGangCard_.remove(index);
          onChanged();
        } else {
          mingGangCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getMingGangCardBuilder(
          int index) {
        return getMingGangCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getMingGangCardOrBuilder(
          int index) {
        if (mingGangCardBuilder_ == null) {
          return mingGangCard_.get(index);  } else {
          return mingGangCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getMingGangCardOrBuilderList() {
        if (mingGangCardBuilder_ != null) {
          return mingGangCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mingGangCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addMingGangCardBuilder() {
        return getMingGangCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addMingGangCardBuilder(
          int index) {
        return getMingGangCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse ming_gang_card = 2;</code>
       *
       * <pre>
       * 明杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getMingGangCardBuilderList() {
        return getMingGangCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getMingGangCardFieldBuilder() {
        if (mingGangCardBuilder_ == null) {
          mingGangCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  mingGangCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          mingGangCard_ = null;
        }
        return mingGangCardBuilder_;
      }

      // repeated .Int32ArrayResponse jie_gang_card = 3;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jieGangCard_ =
        java.util.Collections.emptyList();
      private void ensureJieGangCardIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jieGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(jieGangCard_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> jieGangCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJieGangCardList() {
        if (jieGangCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jieGangCard_);
        } else {
          return jieGangCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public int getJieGangCardCount() {
        if (jieGangCardBuilder_ == null) {
          return jieGangCard_.size();
        } else {
          return jieGangCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getJieGangCard(int index) {
        if (jieGangCardBuilder_ == null) {
          return jieGangCard_.get(index);
        } else {
          return jieGangCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder setJieGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jieGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJieGangCardIsMutable();
          jieGangCard_.set(index, value);
          onChanged();
        } else {
          jieGangCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder setJieGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jieGangCardBuilder_ == null) {
          ensureJieGangCardIsMutable();
          jieGangCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          jieGangCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder addJieGangCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jieGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJieGangCardIsMutable();
          jieGangCard_.add(value);
          onChanged();
        } else {
          jieGangCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder addJieGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jieGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJieGangCardIsMutable();
          jieGangCard_.add(index, value);
          onChanged();
        } else {
          jieGangCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder addJieGangCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jieGangCardBuilder_ == null) {
          ensureJieGangCardIsMutable();
          jieGangCard_.add(builderForValue.build());
          onChanged();
        } else {
          jieGangCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder addJieGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jieGangCardBuilder_ == null) {
          ensureJieGangCardIsMutable();
          jieGangCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          jieGangCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder addAllJieGangCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (jieGangCardBuilder_ == null) {
          ensureJieGangCardIsMutable();
          super.addAll(values, jieGangCard_);
          onChanged();
        } else {
          jieGangCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder clearJieGangCard() {
        if (jieGangCardBuilder_ == null) {
          jieGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          jieGangCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public Builder removeJieGangCard(int index) {
        if (jieGangCardBuilder_ == null) {
          ensureJieGangCardIsMutable();
          jieGangCard_.remove(index);
          onChanged();
        } else {
          jieGangCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getJieGangCardBuilder(
          int index) {
        return getJieGangCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJieGangCardOrBuilder(
          int index) {
        if (jieGangCardBuilder_ == null) {
          return jieGangCard_.get(index);  } else {
          return jieGangCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getJieGangCardOrBuilderList() {
        if (jieGangCardBuilder_ != null) {
          return jieGangCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jieGangCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJieGangCardBuilder() {
        return getJieGangCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJieGangCardBuilder(
          int index) {
        return getJieGangCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jie_gang_card = 3;</code>
       *
       * <pre>
       * 接杠的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getJieGangCardBuilderList() {
        return getJieGangCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getJieGangCardFieldBuilder() {
        if (jieGangCardBuilder_ == null) {
          jieGangCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  jieGangCard_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          jieGangCard_ = null;
        }
        return jieGangCardBuilder_;
      }

      // repeated .Int32ArrayResponse dian_gang_card = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> dianGangCard_ =
        java.util.Collections.emptyList();
      private void ensureDianGangCardIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dianGangCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(dianGangCard_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> dianGangCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getDianGangCardList() {
        if (dianGangCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dianGangCard_);
        } else {
          return dianGangCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public int getDianGangCardCount() {
        if (dianGangCardBuilder_ == null) {
          return dianGangCard_.size();
        } else {
          return dianGangCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getDianGangCard(int index) {
        if (dianGangCardBuilder_ == null) {
          return dianGangCard_.get(index);
        } else {
          return dianGangCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder setDianGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (dianGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDianGangCardIsMutable();
          dianGangCard_.set(index, value);
          onChanged();
        } else {
          dianGangCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder setDianGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (dianGangCardBuilder_ == null) {
          ensureDianGangCardIsMutable();
          dianGangCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          dianGangCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder addDianGangCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (dianGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDianGangCardIsMutable();
          dianGangCard_.add(value);
          onChanged();
        } else {
          dianGangCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder addDianGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (dianGangCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDianGangCardIsMutable();
          dianGangCard_.add(index, value);
          onChanged();
        } else {
          dianGangCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder addDianGangCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (dianGangCardBuilder_ == null) {
          ensureDianGangCardIsMutable();
          dianGangCard_.add(builderForValue.build());
          onChanged();
        } else {
          dianGangCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder addDianGangCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (dianGangCardBuilder_ == null) {
          ensureDianGangCardIsMutable();
          dianGangCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          dianGangCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder addAllDianGangCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (dianGangCardBuilder_ == null) {
          ensureDianGangCardIsMutable();
          super.addAll(values, dianGangCard_);
          onChanged();
        } else {
          dianGangCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder clearDianGangCard() {
        if (dianGangCardBuilder_ == null) {
          dianGangCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          dianGangCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public Builder removeDianGangCard(int index) {
        if (dianGangCardBuilder_ == null) {
          ensureDianGangCardIsMutable();
          dianGangCard_.remove(index);
          onChanged();
        } else {
          dianGangCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getDianGangCardBuilder(
          int index) {
        return getDianGangCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getDianGangCardOrBuilder(
          int index) {
        if (dianGangCardBuilder_ == null) {
          return dianGangCard_.get(index);  } else {
          return dianGangCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getDianGangCardOrBuilderList() {
        if (dianGangCardBuilder_ != null) {
          return dianGangCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dianGangCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addDianGangCardBuilder() {
        return getDianGangCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addDianGangCardBuilder(
          int index) {
        return getDianGangCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse dian_gang_card = 4;</code>
       *
       * <pre>
       * 点杠的牌 ，与接杠对应
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getDianGangCardBuilderList() {
        return getDianGangCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getDianGangCardFieldBuilder() {
        if (dianGangCardBuilder_ == null) {
          dianGangCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  dianGangCard_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          dianGangCard_ = null;
        }
        return dianGangCardBuilder_;
      }

      // repeated string hu_des = 5;
      private com.google.protobuf.LazyStringList huDes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHuDesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          huDes_ = new com.google.protobuf.LazyStringArrayList(huDes_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public java.util.List<java.lang.String>
          getHuDesList() {
        return java.util.Collections.unmodifiableList(huDes_);
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public int getHuDesCount() {
        return huDes_.size();
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public java.lang.String getHuDes(int index) {
        return huDes_.get(index);
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHuDesBytes(int index) {
        return huDes_.getByteString(index);
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public Builder setHuDes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHuDesIsMutable();
        huDes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public Builder addHuDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHuDesIsMutable();
        huDes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public Builder addAllHuDes(
          java.lang.Iterable<java.lang.String> values) {
        ensureHuDesIsMutable();
        super.addAll(values, huDes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public Builder clearHuDes() {
        huDes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hu_des = 5;</code>
       *
       * <pre>
       * 牌描述
       * </pre>
       */
      public Builder addHuDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHuDesIsMutable();
        huDes_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 banker_count = 6;
      private java.util.List<java.lang.Integer> bankerCount_ = java.util.Collections.emptyList();
      private void ensureBankerCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          bankerCount_ = new java.util.ArrayList<java.lang.Integer>(bankerCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBankerCountList() {
        return java.util.Collections.unmodifiableList(bankerCount_);
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public int getBankerCountCount() {
        return bankerCount_.size();
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public int getBankerCount(int index) {
        return bankerCount_.get(index);
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public Builder setBankerCount(
          int index, int value) {
        ensureBankerCountIsMutable();
        bankerCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public Builder addBankerCount(int value) {
        ensureBankerCountIsMutable();
        bankerCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public Builder addAllBankerCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBankerCountIsMutable();
        super.addAll(values, bankerCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 banker_count = 6;</code>
       *
       * <pre>
       *坐庄次数
       * </pre>
       */
      public Builder clearBankerCount() {
        bankerCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 hu_count = 7;
      private java.util.List<java.lang.Integer> huCount_ = java.util.Collections.emptyList();
      private void ensureHuCountIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          huCount_ = new java.util.ArrayList<java.lang.Integer>(huCount_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuCountList() {
        return java.util.Collections.unmodifiableList(huCount_);
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public int getHuCountCount() {
        return huCount_.size();
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public int getHuCount(int index) {
        return huCount_.get(index);
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public Builder setHuCount(
          int index, int value) {
        ensureHuCountIsMutable();
        huCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public Builder addHuCount(int value) {
        ensureHuCountIsMutable();
        huCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public Builder addAllHuCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuCountIsMutable();
        super.addAll(values, huCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_count = 7;</code>
       *
       * <pre>
       * 胡牌次数
       * </pre>
       */
      public Builder clearHuCount() {
        huCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 win_score_count = 8;
      private java.util.List<java.lang.Integer> winScoreCount_ = java.util.Collections.emptyList();
      private void ensureWinScoreCountIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          winScoreCount_ = new java.util.ArrayList<java.lang.Integer>(winScoreCount_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinScoreCountList() {
        return java.util.Collections.unmodifiableList(winScoreCount_);
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public int getWinScoreCountCount() {
        return winScoreCount_.size();
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public int getWinScoreCount(int index) {
        return winScoreCount_.get(index);
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public Builder setWinScoreCount(
          int index, int value) {
        ensureWinScoreCountIsMutable();
        winScoreCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public Builder addWinScoreCount(int value) {
        ensureWinScoreCountIsMutable();
        winScoreCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public Builder addAllWinScoreCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinScoreCountIsMutable();
        super.addAll(values, winScoreCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_score_count = 8;</code>
       *
       * <pre>
       * 赢分次数
       * </pre>
       */
      public Builder clearWinScoreCount() {
        winScoreCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 gang_count = 9;
      private java.util.List<java.lang.Integer> gangCount_ = java.util.Collections.emptyList();
      private void ensureGangCountIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          gangCount_ = new java.util.ArrayList<java.lang.Integer>(gangCount_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangCountList() {
        return java.util.Collections.unmodifiableList(gangCount_);
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public int getGangCountCount() {
        return gangCount_.size();
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public int getGangCount(int index) {
        return gangCount_.get(index);
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public Builder setGangCount(
          int index, int value) {
        ensureGangCountIsMutable();
        gangCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public Builder addGangCount(int value) {
        ensureGangCountIsMutable();
        gangCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public Builder addAllGangCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangCountIsMutable();
        super.addAll(values, gangCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_count = 9;</code>
       *
       * <pre>
       * 杠次数
       * </pre>
       */
      public Builder clearGangCount() {
        gangCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.GDTDHGameEndResponse)
    }

    static {
      defaultInstance = new GDTDHGameEndResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.GDTDHGameEndResponse)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_GDTDHGameEndResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_GDTDHGameEndResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016mj/gdtdh.proto\022\002mj\032\024basic/protocol.pro" +
      "to\"\254\002\n\024GDTDHGameEndResponse\022)\n\014an_gang_c" +
      "ard\030\001 \003(\0132\023.Int32ArrayResponse\022+\n\016ming_g" +
      "ang_card\030\002 \003(\0132\023.Int32ArrayResponse\022*\n\rj" +
      "ie_gang_card\030\003 \003(\0132\023.Int32ArrayResponse\022" +
      "+\n\016dian_gang_card\030\004 \003(\0132\023.Int32ArrayResp" +
      "onse\022\016\n\006hu_des\030\005 \003(\t\022\024\n\014banker_count\030\006 \003" +
      "(\005\022\020\n\010hu_count\030\007 \003(\005\022\027\n\017win_score_count\030" +
      "\010 \003(\005\022\022\n\ngang_count\030\t \003(\005B\035\n\021protobuf.cl" +
      "azz.mjB\010GdtdhPro"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mj_GDTDHGameEndResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mj_GDTDHGameEndResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_GDTDHGameEndResponse_descriptor,
              new java.lang.String[] { "AnGangCard", "MingGangCard", "JieGangCard", "DianGangCard", "HuDes", "BankerCount", "HuCount", "WinScoreCount", "GangCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
