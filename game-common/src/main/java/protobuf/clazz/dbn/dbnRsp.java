// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbn/dbnProto.proto

package protobuf.clazz.dbn;

public final class dbnRsp {
  private dbnRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoDbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_id = 1;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional int32 game_type_index = 4;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameTypeIndex();

    // optional int32 game_rule_index = 2;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    boolean hasGameRuleIndex();
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    int getGameRuleIndex();

    // repeated int32 game_rule_index_ex = 12;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameRuleIndexExList();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexExCount();
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    int getGameRuleIndexEx(int index);

    // optional string game_rule_des = 3;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    boolean hasGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    java.lang.String getGameRuleDes();
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameRuleDesBytes();

    // optional int32 game_round = 5;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    int getGameRound();

    // optional int32 cur_round = 6;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    int getCurRound();

    // optional int32 game_status = 7;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    int getGameStatus();

    // optional int64 create_player_id = 8;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    boolean hasCreatePlayerId();
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    long getCreatePlayerId();

    // optional int32 begin_left_card = 9;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    boolean hasBeginLeftCard();
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    int getBeginLeftCard();

    // optional int32 banker_player = 10;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional string create_name = 11;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    boolean hasCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    java.lang.String getCreateName();
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateNameBytes();
  }
  /**
   * Protobuf type {@code dbn.RoomInfoDbn}
   *
   * <pre>
   *房间信息
   * </pre>
   */
  public static final class RoomInfoDbn extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoDbnOrBuilder {
    // Use RoomInfoDbn.newBuilder() to construct.
    private RoomInfoDbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfoDbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfoDbn defaultInstance;
    public static RoomInfoDbn getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfoDbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfoDbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              gameRuleIndex_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000008;
              gameRuleDes_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              curRound_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gameStatus_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createPlayerId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              beginLeftCard_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              createName_ = input.readBytes();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameRuleIndexEx_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameRuleIndexEx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomInfoDbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomInfoDbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.class, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfoDbn> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfoDbn>() {
      public RoomInfoDbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfoDbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfoDbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_id = 1;
    public static final int ROOM_ID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_id = 1;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 game_type_index = 4;
    public static final int GAME_TYPE_INDEX_FIELD_NUMBER = 4;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_type_index = 4;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 game_rule_index = 2;
    public static final int GAME_RULE_INDEX_FIELD_NUMBER = 2;
    private int gameRuleIndex_;
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public boolean hasGameRuleIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_rule_index = 2;</code>
     *
     * <pre>
     *玩法
     * </pre>
     */
    public int getGameRuleIndex() {
      return gameRuleIndex_;
    }

    // repeated int32 game_rule_index_ex = 12;
    public static final int GAME_RULE_INDEX_EX_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> gameRuleIndexEx_;
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameRuleIndexExList() {
      return gameRuleIndexEx_;
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexExCount() {
      return gameRuleIndexEx_.size();
    }
    /**
     * <code>repeated int32 game_rule_index_ex = 12;</code>
     *
     * <pre>
     *附加玩法
     * </pre>
     */
    public int getGameRuleIndexEx(int index) {
      return gameRuleIndexEx_.get(index);
    }

    // optional string game_rule_des = 3;
    public static final int GAME_RULE_DES_FIELD_NUMBER = 3;
    private java.lang.Object gameRuleDes_;
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public boolean hasGameRuleDes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public java.lang.String getGameRuleDes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameRuleDes_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_rule_des = 3;</code>
     *
     * <pre>
     *玩法说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameRuleDesBytes() {
      java.lang.Object ref = gameRuleDes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameRuleDes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round = 5;
    public static final int GAME_ROUND_FIELD_NUMBER = 5;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 game_round = 5;</code>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 cur_round = 6;
    public static final int CUR_ROUND_FIELD_NUMBER = 6;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 cur_round = 6;</code>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_status = 7;
    public static final int GAME_STATUS_FIELD_NUMBER = 7;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_status = 7;</code>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int64 create_player_id = 8;
    public static final int CREATE_PLAYER_ID_FIELD_NUMBER = 8;
    private long createPlayerId_;
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public boolean hasCreatePlayerId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 create_player_id = 8;</code>
     */
    public long getCreatePlayerId() {
      return createPlayerId_;
    }

    // optional int32 begin_left_card = 9;
    public static final int BEGIN_LEFT_CARD_FIELD_NUMBER = 9;
    private int beginLeftCard_;
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public boolean hasBeginLeftCard() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 begin_left_card = 9;</code>
     */
    public int getBeginLeftCard() {
      return beginLeftCard_;
    }

    // optional int32 banker_player = 10;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 10;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional string create_name = 11;
    public static final int CREATE_NAME_FIELD_NUMBER = 11;
    private java.lang.Object createName_;
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public boolean hasCreateName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public java.lang.String getCreateName() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string create_name = 11;</code>
     *
     * <pre>
     *创建者姓名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateNameBytes() {
      java.lang.Object ref = createName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roomId_ = 0;
      gameTypeIndex_ = 0;
      gameRuleIndex_ = 0;
      gameRuleIndexEx_ = java.util.Collections.emptyList();
      gameRuleDes_ = "";
      gameRound_ = 0;
      curRound_ = 0;
      gameStatus_ = 0;
      createPlayerId_ = 0L;
      beginLeftCard_ = 0;
      bankerPlayer_ = 0;
      createName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCreateNameBytes());
      }
      for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
        output.writeInt32(12, gameRuleIndexEx_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRuleIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGameRuleDesBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, gameRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, curRound_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gameStatus_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, createPlayerId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, beginLeftCard_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCreateNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameRuleIndexEx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameRuleIndexEx_.get(i));
        }
        size += dataSize;
        size += 1 * getGameRuleIndexExList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.RoomInfoDbn}
     *
     * <pre>
     *房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomInfoDbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomInfoDbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.class, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRuleIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRuleDes_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        createPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        beginLeftCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createName_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomInfoDbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn build() {
        protobuf.clazz.dbn.dbnRsp.RoomInfoDbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.RoomInfoDbn result = new protobuf.clazz.dbn.dbnRsp.RoomInfoDbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRuleIndex_ = gameRuleIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = java.util.Collections.unmodifiableList(gameRuleIndexEx_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameRuleIndexEx_ = gameRuleIndexEx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameRuleDes_ = gameRuleDes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createPlayerId_ = createPlayerId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.beginLeftCard_ = beginLeftCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.createName_ = createName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.RoomInfoDbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.RoomInfoDbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasGameRuleIndex()) {
          setGameRuleIndex(other.getGameRuleIndex());
        }
        if (!other.gameRuleIndexEx_.isEmpty()) {
          if (gameRuleIndexEx_.isEmpty()) {
            gameRuleIndexEx_ = other.gameRuleIndexEx_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameRuleIndexExIsMutable();
            gameRuleIndexEx_.addAll(other.gameRuleIndexEx_);
          }
          onChanged();
        }
        if (other.hasGameRuleDes()) {
          bitField0_ |= 0x00000010;
          gameRuleDes_ = other.gameRuleDes_;
          onChanged();
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasCreatePlayerId()) {
          setCreatePlayerId(other.getCreatePlayerId());
        }
        if (other.hasBeginLeftCard()) {
          setBeginLeftCard(other.getBeginLeftCard());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCreateName()) {
          bitField0_ |= 0x00000800;
          createName_ = other.createName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.RoomInfoDbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.RoomInfoDbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_id = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_id = 1;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_type_index = 4;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_type_index = 4;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_rule_index = 2;
      private int gameRuleIndex_ ;
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public boolean hasGameRuleIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public int getGameRuleIndex() {
        return gameRuleIndex_;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder setGameRuleIndex(int value) {
        bitField0_ |= 0x00000004;
        gameRuleIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_rule_index = 2;</code>
       *
       * <pre>
       *玩法
       * </pre>
       */
      public Builder clearGameRuleIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRuleIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 game_rule_index_ex = 12;
      private java.util.List<java.lang.Integer> gameRuleIndexEx_ = java.util.Collections.emptyList();
      private void ensureGameRuleIndexExIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameRuleIndexEx_ = new java.util.ArrayList<java.lang.Integer>(gameRuleIndexEx_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameRuleIndexExList() {
        return java.util.Collections.unmodifiableList(gameRuleIndexEx_);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexExCount() {
        return gameRuleIndexEx_.size();
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public int getGameRuleIndexEx(int index) {
        return gameRuleIndexEx_.get(index);
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder setGameRuleIndexEx(
          int index, int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addGameRuleIndexEx(int value) {
        ensureGameRuleIndexExIsMutable();
        gameRuleIndexEx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder addAllGameRuleIndexEx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameRuleIndexExIsMutable();
        super.addAll(values, gameRuleIndexEx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_rule_index_ex = 12;</code>
       *
       * <pre>
       *附加玩法
       * </pre>
       */
      public Builder clearGameRuleIndexEx() {
        gameRuleIndexEx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional string game_rule_des = 3;
      private java.lang.Object gameRuleDes_ = "";
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public boolean hasGameRuleDes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public java.lang.String getGameRuleDes() {
        java.lang.Object ref = gameRuleDes_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameRuleDes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameRuleDesBytes() {
        java.lang.Object ref = gameRuleDes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameRuleDes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder clearGameRuleDes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gameRuleDes_ = getDefaultInstance().getGameRuleDes();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_rule_des = 3;</code>
       *
       * <pre>
       *玩法说明
       * </pre>
       */
      public Builder setGameRuleDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        gameRuleDes_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round = 5;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000020;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 5;</code>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_round = 6;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000040;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 6;</code>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 7;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000080;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 7;</code>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int64 create_player_id = 8;
      private long createPlayerId_ ;
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public boolean hasCreatePlayerId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public long getCreatePlayerId() {
        return createPlayerId_;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder setCreatePlayerId(long value) {
        bitField0_ |= 0x00000100;
        createPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_player_id = 8;</code>
       */
      public Builder clearCreatePlayerId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        createPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 begin_left_card = 9;
      private int beginLeftCard_ ;
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public boolean hasBeginLeftCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public int getBeginLeftCard() {
        return beginLeftCard_;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder setBeginLeftCard(int value) {
        bitField0_ |= 0x00000200;
        beginLeftCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_left_card = 9;</code>
       */
      public Builder clearBeginLeftCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        beginLeftCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_player = 10;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000400;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional string create_name = 11;
      private java.lang.Object createName_ = "";
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public boolean hasCreateName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public java.lang.String getCreateName() {
        java.lang.Object ref = createName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateNameBytes() {
        java.lang.Object ref = createName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder clearCreateName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createName_ = getDefaultInstance().getCreateName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string create_name = 11;</code>
       *
       * <pre>
       *创建者姓名
       * </pre>
       */
      public Builder setCreateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        createName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.RoomInfoDbn)
    }

    static {
      defaultInstance = new RoomInfoDbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.RoomInfoDbn)
  }

  public interface RoomPlayerResponseDbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code dbn.RoomPlayerResponseDbn}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseDbn extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseDbnOrBuilder {
    // Use RoomPlayerResponseDbn.newBuilder() to construct.
    private RoomPlayerResponseDbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseDbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseDbn defaultInstance;
    public static RoomPlayerResponseDbn getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseDbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseDbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomPlayerResponseDbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomPlayerResponseDbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.class, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseDbn> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseDbn>() {
      public RoomPlayerResponseDbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseDbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseDbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.RoomPlayerResponseDbn}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomPlayerResponseDbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomPlayerResponseDbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.class, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_RoomPlayerResponseDbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn build() {
        protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn result = new protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.RoomPlayerResponseDbn)
    }

    static {
      defaultInstance = new RoomPlayerResponseDbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.RoomPlayerResponseDbn)
  }

  public interface PukeGameEndDbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .dbn.RoomInfoDbn room_info = 1;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .dbn.RoomPlayerResponseDbn players = 9;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> 
        getPlayersList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index);
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 all_end_score = 10;
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated int32 end_score_max = 11;
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreMaxList();
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMaxCount();
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    int getEndScoreMax(int index);

    // repeated int32 win_num = 12;
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinNumList();
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNumCount();
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    int getWinNum(int index);

    // repeated int32 lose_num = 13;
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoseNumList();
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNumCount();
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    int getLoseNum(int index);

    // optional int32 winner = 14;
    /**
     * <code>optional int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    boolean hasWinner();
    /**
     * <code>optional int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    int getWinner();
  }
  /**
   * Protobuf type {@code dbn.PukeGameEndDbn}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndDbn extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndDbnOrBuilder {
    // Use PukeGameEndDbn.newBuilder() to construct.
    private PukeGameEndDbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndDbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndDbn defaultInstance;
    public static PukeGameEndDbn getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndDbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndDbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              endScoreMax_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                endScoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScoreMax_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              winNum_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                winNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                winNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              loseNum_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                loseNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                loseNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000020;
              winner_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_PukeGameEndDbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_PukeGameEndDbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.class, protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndDbn> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndDbn>() {
      public PukeGameEndDbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndDbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndDbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .dbn.RoomInfoDbn room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .dbn.RoomPlayerResponseDbn players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 all_end_score = 10;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated int32 end_score_max = 11;
    public static final int END_SCORE_MAX_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> endScoreMax_;
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreMaxList() {
      return endScoreMax_;
    }
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMaxCount() {
      return endScoreMax_.size();
    }
    /**
     * <code>repeated int32 end_score_max = 11;</code>
     *
     * <pre>
     *单句最高得分
     * </pre>
     */
    public int getEndScoreMax(int index) {
      return endScoreMax_.get(index);
    }

    // repeated int32 win_num = 12;
    public static final int WIN_NUM_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> winNum_;
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinNumList() {
      return winNum_;
    }
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNumCount() {
      return winNum_.size();
    }
    /**
     * <code>repeated int32 win_num = 12;</code>
     *
     * <pre>
     *赢句数
     * </pre>
     */
    public int getWinNum(int index) {
      return winNum_.get(index);
    }

    // repeated int32 lose_num = 13;
    public static final int LOSE_NUM_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> loseNum_;
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoseNumList() {
      return loseNum_;
    }
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNumCount() {
      return loseNum_.size();
    }
    /**
     * <code>repeated int32 lose_num = 13;</code>
     *
     * <pre>
     *输句数
     * </pre>
     */
    public int getLoseNum(int index) {
      return loseNum_.get(index);
    }

    // optional int32 winner = 14;
    public static final int WINNER_FIELD_NUMBER = 14;
    private int winner_;
    /**
     * <code>optional int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 winner = 14;</code>
     *
     * <pre>
     *赢家
     * </pre>
     */
    public int getWinner() {
      return winner_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      allEndScore_ = java.util.Collections.emptyList();
      endScoreMax_ = java.util.Collections.emptyList();
      winNum_ = java.util.Collections.emptyList();
      loseNum_ = java.util.Collections.emptyList();
      winner_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(10, allEndScore_.get(i));
      }
      for (int i = 0; i < endScoreMax_.size(); i++) {
        output.writeInt32(11, endScoreMax_.get(i));
      }
      for (int i = 0; i < winNum_.size(); i++) {
        output.writeInt32(12, winNum_.get(i));
      }
      for (int i = 0; i < loseNum_.size(); i++) {
        output.writeInt32(13, loseNum_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(14, winner_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScoreMax_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScoreMax_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreMaxList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winNum_.get(i));
        }
        size += dataSize;
        size += 1 * getWinNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loseNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loseNum_.get(i));
        }
        size += dataSize;
        size += 1 * getLoseNumList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, winner_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.PukeGameEndDbn}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.PukeGameEndDbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_PukeGameEndDbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_PukeGameEndDbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.class, protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        winner_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_PukeGameEndDbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn build() {
        protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn result = new protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.allEndScore_ = allEndScore_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          endScoreMax_ = java.util.Collections.unmodifiableList(endScoreMax_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.endScoreMax_ = endScoreMax_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          winNum_ = java.util.Collections.unmodifiableList(winNum_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.winNum_ = winNum_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          loseNum_ = java.util.Collections.unmodifiableList(loseNum_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.loseNum_ = loseNum_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.winner_ = winner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (!other.endScoreMax_.isEmpty()) {
          if (endScoreMax_.isEmpty()) {
            endScoreMax_ = other.endScoreMax_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureEndScoreMaxIsMutable();
            endScoreMax_.addAll(other.endScoreMax_);
          }
          onChanged();
        }
        if (!other.winNum_.isEmpty()) {
          if (winNum_.isEmpty()) {
            winNum_ = other.winNum_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureWinNumIsMutable();
            winNum_.addAll(other.winNum_);
          }
          onChanged();
        }
        if (!other.loseNum_.isEmpty()) {
          if (loseNum_.isEmpty()) {
            loseNum_ = other.loseNum_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureLoseNumIsMutable();
            loseNum_.addAll(other.loseNum_);
          }
          onChanged();
        }
        if (other.hasWinner()) {
          setWinner(other.getWinner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.PukeGameEndDbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .dbn.RoomInfoDbn room_info = 1;
      private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .dbn.RoomPlayerResponseDbn players = 9;
      private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> playersBuilder_;

      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 all_end_score = 10;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 end_score_max = 11;
      private java.util.List<java.lang.Integer> endScoreMax_ = java.util.Collections.emptyList();
      private void ensureEndScoreMaxIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          endScoreMax_ = new java.util.ArrayList<java.lang.Integer>(endScoreMax_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreMaxList() {
        return java.util.Collections.unmodifiableList(endScoreMax_);
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMaxCount() {
        return endScoreMax_.size();
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public int getEndScoreMax(int index) {
        return endScoreMax_.get(index);
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder setEndScoreMax(
          int index, int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addEndScoreMax(int value) {
        ensureEndScoreMaxIsMutable();
        endScoreMax_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder addAllEndScoreMax(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreMaxIsMutable();
        super.addAll(values, endScoreMax_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score_max = 11;</code>
       *
       * <pre>
       *单句最高得分
       * </pre>
       */
      public Builder clearEndScoreMax() {
        endScoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 win_num = 12;
      private java.util.List<java.lang.Integer> winNum_ = java.util.Collections.emptyList();
      private void ensureWinNumIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          winNum_ = new java.util.ArrayList<java.lang.Integer>(winNum_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinNumList() {
        return java.util.Collections.unmodifiableList(winNum_);
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNumCount() {
        return winNum_.size();
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public int getWinNum(int index) {
        return winNum_.get(index);
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder setWinNum(
          int index, int value) {
        ensureWinNumIsMutable();
        winNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addWinNum(int value) {
        ensureWinNumIsMutable();
        winNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder addAllWinNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinNumIsMutable();
        super.addAll(values, winNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_num = 12;</code>
       *
       * <pre>
       *赢句数
       * </pre>
       */
      public Builder clearWinNum() {
        winNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 lose_num = 13;
      private java.util.List<java.lang.Integer> loseNum_ = java.util.Collections.emptyList();
      private void ensureLoseNumIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          loseNum_ = new java.util.ArrayList<java.lang.Integer>(loseNum_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoseNumList() {
        return java.util.Collections.unmodifiableList(loseNum_);
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNumCount() {
        return loseNum_.size();
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public int getLoseNum(int index) {
        return loseNum_.get(index);
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder setLoseNum(
          int index, int value) {
        ensureLoseNumIsMutable();
        loseNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addLoseNum(int value) {
        ensureLoseNumIsMutable();
        loseNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder addAllLoseNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoseNumIsMutable();
        super.addAll(values, loseNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_num = 13;</code>
       *
       * <pre>
       *输句数
       * </pre>
       */
      public Builder clearLoseNum() {
        loseNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional int32 winner = 14;
      private int winner_ ;
      /**
       * <code>optional int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public int getWinner() {
        return winner_;
      }
      /**
       * <code>optional int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder setWinner(int value) {
        bitField0_ |= 0x00002000;
        winner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winner = 14;</code>
       *
       * <pre>
       *赢家
       * </pre>
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00002000);
        winner_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.PukeGameEndDbn)
    }

    static {
      defaultInstance = new PukeGameEndDbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.PukeGameEndDbn)
  }

  public interface TableResponseDbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional .dbn.RoomInfoDbn room_info = 3;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder();

    // repeated .dbn.RoomPlayerResponseDbn players = 4;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> 
        getPlayersList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index);
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 card_count = 5;
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 6;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 jetton_score = 7;
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // repeated bool open_card = 8;
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Boolean> getOpenCardList();
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getOpenCardCount();
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    boolean getOpenCard(int index);

    // repeated bool liang_card = 9;
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Boolean> getLiangCardList();
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getLiangCardCount();
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    boolean getLiangCard(int index);

    // optional int32 table_di_fen = 10;
    /**
     * <code>optional int32 table_di_fen = 10;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    boolean hasTableDiFen();
    /**
     * <code>optional int32 table_di_fen = 10;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    int getTableDiFen();

    // optional int32 Operate_qie_card = 11;
    /**
     * <code>optional int32 Operate_qie_card = 11;</code>
     *
     * <pre>
     *是否操作切牌
     * </pre>
     */
    boolean hasOperateQieCard();
    /**
     * <code>optional int32 Operate_qie_card = 11;</code>
     *
     * <pre>
     *是否操作切牌
     * </pre>
     */
    int getOperateQieCard();

    // optional int32 card = 12;
    /**
     * <code>optional int32 card = 12;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 12;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    int getCard();

    // optional int32 first_seat_idex = 13;
    /**
     * <code>optional int32 first_seat_idex = 13;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    boolean hasFirstSeatIdex();
    /**
     * <code>optional int32 first_seat_idex = 13;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    int getFirstSeatIdex();

    // optional int32 scene_status = 14;
    /**
     * <code>optional int32 scene_status = 14;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    boolean hasSceneStatus();
    /**
     * <code>optional int32 scene_status = 14;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    int getSceneStatus();

    // optional int32 display_time = 15;
    /**
     * <code>optional int32 display_time = 15;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 15;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 player_times = 16;
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerTimesList();
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    int getPlayerTimesCount();
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    int getPlayerTimes(int index);

    // repeated int32 ox_value = 17;
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.util.List<java.lang.Integer> getOxValueList();
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValueCount();
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue(int index);

    // repeated int32 player_score = 18;
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getPlayerScore(int index);
  }
  /**
   * Protobuf type {@code dbn.TableResponseDbn}
   */
  public static final class TableResponseDbn extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseDbnOrBuilder {
    // Use TableResponseDbn.newBuilder() to construct.
    private TableResponseDbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseDbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseDbn defaultInstance;
    public static TableResponseDbn getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseDbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseDbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 26: {
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>();
                mutable_bitField0_ |= 0x00000008;
              }
              players_.add(input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000020;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              openCard_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                openCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000100;
              }
              liangCard_.add(input.readBool());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                liangCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                liangCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              tableDiFen_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              operateQieCard_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              card_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              firstSeatIdex_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              sceneStatus_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              displayTime_ = input.readInt32();
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                playerTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              playerTimes_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                playerTimes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerTimes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              oxValue_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                oxValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          playerTimes_ = java.util.Collections.unmodifiableList(playerTimes_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_TableResponseDbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_TableResponseDbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.TableResponseDbn.class, protobuf.clazz.dbn.dbnRsp.TableResponseDbn.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseDbn> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseDbn>() {
      public TableResponseDbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseDbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseDbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional .dbn.RoomInfoDbn room_info = 3;
    public static final int ROOM_INFO_FIELD_NUMBER = 3;
    private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .dbn.RoomPlayerResponseDbn players = 4;
    public static final int PLAYERS_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 card_count = 5;
    public static final int CARD_COUNT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 5;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 6;
    public static final int CARDS_DATA_FIELD_NUMBER = 6;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 jetton_score = 7;
    public static final int JETTON_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 7;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // repeated bool open_card = 8;
    public static final int OPEN_CARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> openCard_;
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getOpenCardList() {
      return openCard_;
    }
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getOpenCardCount() {
      return openCard_.size();
    }
    /**
     * <code>repeated bool open_card = 8;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public boolean getOpenCard(int index) {
      return openCard_.get(index);
    }

    // repeated bool liang_card = 9;
    public static final int LIANG_CARD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Boolean> liangCard_;
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getLiangCardList() {
      return liangCard_;
    }
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getLiangCardCount() {
      return liangCard_.size();
    }
    /**
     * <code>repeated bool liang_card = 9;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public boolean getLiangCard(int index) {
      return liangCard_.get(index);
    }

    // optional int32 table_di_fen = 10;
    public static final int TABLE_DI_FEN_FIELD_NUMBER = 10;
    private int tableDiFen_;
    /**
     * <code>optional int32 table_di_fen = 10;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    public boolean hasTableDiFen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 table_di_fen = 10;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    public int getTableDiFen() {
      return tableDiFen_;
    }

    // optional int32 Operate_qie_card = 11;
    public static final int OPERATE_QIE_CARD_FIELD_NUMBER = 11;
    private int operateQieCard_;
    /**
     * <code>optional int32 Operate_qie_card = 11;</code>
     *
     * <pre>
     *是否操作切牌
     * </pre>
     */
    public boolean hasOperateQieCard() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 Operate_qie_card = 11;</code>
     *
     * <pre>
     *是否操作切牌
     * </pre>
     */
    public int getOperateQieCard() {
      return operateQieCard_;
    }

    // optional int32 card = 12;
    public static final int CARD_FIELD_NUMBER = 12;
    private int card_;
    /**
     * <code>optional int32 card = 12;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 card = 12;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 first_seat_idex = 13;
    public static final int FIRST_SEAT_IDEX_FIELD_NUMBER = 13;
    private int firstSeatIdex_;
    /**
     * <code>optional int32 first_seat_idex = 13;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    public boolean hasFirstSeatIdex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 first_seat_idex = 13;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    public int getFirstSeatIdex() {
      return firstSeatIdex_;
    }

    // optional int32 scene_status = 14;
    public static final int SCENE_STATUS_FIELD_NUMBER = 14;
    private int sceneStatus_;
    /**
     * <code>optional int32 scene_status = 14;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public boolean hasSceneStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 scene_status = 14;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public int getSceneStatus() {
      return sceneStatus_;
    }

    // optional int32 display_time = 15;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 15;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 15;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 display_time = 15;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 player_times = 16;
    public static final int PLAYER_TIMES_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> playerTimes_;
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerTimesList() {
      return playerTimes_;
    }
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    public int getPlayerTimesCount() {
      return playerTimes_.size();
    }
    /**
     * <code>repeated int32 player_times = 16;</code>
     *
     * <pre>
     *用户倍数
     * </pre>
     */
    public int getPlayerTimes(int index) {
      return playerTimes_.get(index);
    }

    // repeated int32 ox_value = 17;
    public static final int OX_VALUE_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> oxValue_;
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOxValueList() {
      return oxValue_;
    }
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValueCount() {
      return oxValue_.size();
    }
    /**
     * <code>repeated int32 ox_value = 17;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue(int index) {
      return oxValue_.get(index);
    }

    // repeated int32 player_score = 18;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 18;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      openCard_ = java.util.Collections.emptyList();
      liangCard_ = java.util.Collections.emptyList();
      tableDiFen_ = 0;
      operateQieCard_ = 0;
      card_ = 0;
      firstSeatIdex_ = 0;
      sceneStatus_ = 0;
      displayTime_ = 0;
      playerTimes_ = java.util.Collections.emptyList();
      oxValue_ = java.util.Collections.emptyList();
      playerScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(4, players_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(5, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(6, cardsData_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(7, jettonScore_.get(i));
      }
      for (int i = 0; i < openCard_.size(); i++) {
        output.writeBool(8, openCard_.get(i));
      }
      for (int i = 0; i < liangCard_.size(); i++) {
        output.writeBool(9, liangCard_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(10, tableDiFen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(11, operateQieCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, card_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, firstSeatIdex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, sceneStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(15, displayTime_);
      }
      for (int i = 0; i < playerTimes_.size(); i++) {
        output.writeInt32(16, playerTimes_.get(i));
      }
      for (int i = 0; i < oxValue_.size(); i++) {
        output.writeInt32(17, oxValue_.get(i));
      }
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(18, playerScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getOpenCardList().size();
        size += dataSize;
        size += 1 * getOpenCardList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getLiangCardList().size();
        size += dataSize;
        size += 1 * getLiangCardList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, tableDiFen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, operateQieCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, card_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, firstSeatIdex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, sceneStatus_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerTimes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerTimes_.get(i));
        }
        size += dataSize;
        size += 2 * getPlayerTimesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < oxValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(oxValue_.get(i));
        }
        size += dataSize;
        size += 2 * getOxValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 2 * getPlayerScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.TableResponseDbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.TableResponseDbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.TableResponseDbn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.TableResponseDbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_TableResponseDbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_TableResponseDbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.TableResponseDbn.class, protobuf.clazz.dbn.dbnRsp.TableResponseDbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.TableResponseDbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playersBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          cardsDataBuilder_.clear();
        }
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        tableDiFen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        operateQieCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        firstSeatIdex_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        sceneStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        playerTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_TableResponseDbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.TableResponseDbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.TableResponseDbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.TableResponseDbn build() {
        protobuf.clazz.dbn.dbnRsp.TableResponseDbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.TableResponseDbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.TableResponseDbn result = new protobuf.clazz.dbn.dbnRsp.TableResponseDbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.jettonScore_ = jettonScore_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.openCard_ = openCard_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          liangCard_ = java.util.Collections.unmodifiableList(liangCard_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.liangCard_ = liangCard_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tableDiFen_ = tableDiFen_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.operateQieCard_ = operateQieCard_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.firstSeatIdex_ = firstSeatIdex_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sceneStatus_ = sceneStatus_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          playerTimes_ = java.util.Collections.unmodifiableList(playerTimes_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.playerTimes_ = playerTimes_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.oxValue_ = oxValue_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.playerScore_ = playerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.TableResponseDbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.TableResponseDbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.TableResponseDbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.TableResponseDbn.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000020);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (!other.openCard_.isEmpty()) {
          if (openCard_.isEmpty()) {
            openCard_ = other.openCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureOpenCardIsMutable();
            openCard_.addAll(other.openCard_);
          }
          onChanged();
        }
        if (!other.liangCard_.isEmpty()) {
          if (liangCard_.isEmpty()) {
            liangCard_ = other.liangCard_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureLiangCardIsMutable();
            liangCard_.addAll(other.liangCard_);
          }
          onChanged();
        }
        if (other.hasTableDiFen()) {
          setTableDiFen(other.getTableDiFen());
        }
        if (other.hasOperateQieCard()) {
          setOperateQieCard(other.getOperateQieCard());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasFirstSeatIdex()) {
          setFirstSeatIdex(other.getFirstSeatIdex());
        }
        if (other.hasSceneStatus()) {
          setSceneStatus(other.getSceneStatus());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.playerTimes_.isEmpty()) {
          if (playerTimes_.isEmpty()) {
            playerTimes_ = other.playerTimes_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensurePlayerTimesIsMutable();
            playerTimes_.addAll(other.playerTimes_);
          }
          onChanged();
        }
        if (!other.oxValue_.isEmpty()) {
          if (oxValue_.isEmpty()) {
            oxValue_ = other.oxValue_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureOxValueIsMutable();
            oxValue_.addAll(other.oxValue_);
          }
          onChanged();
        }
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.TableResponseDbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.TableResponseDbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .dbn.RoomInfoDbn room_info = 3;
      private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              roomInfo_ != protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .dbn.RoomPlayerResponseDbn players = 4;
      private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>(players_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> playersBuilder_;

      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder addPlayers(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 4;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 card_count = 5;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 5;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 6;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 6;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 jetton_score = 7;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 7;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool open_card = 8;
      private java.util.List<java.lang.Boolean> openCard_ = java.util.Collections.emptyList();
      private void ensureOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          openCard_ = new java.util.ArrayList<java.lang.Boolean>(openCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getOpenCardList() {
        return java.util.Collections.unmodifiableList(openCard_);
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getOpenCardCount() {
        return openCard_.size();
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public boolean getOpenCard(int index) {
        return openCard_.get(index);
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setOpenCard(
          int index, boolean value) {
        ensureOpenCardIsMutable();
        openCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addOpenCard(boolean value) {
        ensureOpenCardIsMutable();
        openCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureOpenCardIsMutable();
        super.addAll(values, openCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 8;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearOpenCard() {
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated bool liang_card = 9;
      private java.util.List<java.lang.Boolean> liangCard_ = java.util.Collections.emptyList();
      private void ensureLiangCardIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          liangCard_ = new java.util.ArrayList<java.lang.Boolean>(liangCard_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getLiangCardList() {
        return java.util.Collections.unmodifiableList(liangCard_);
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getLiangCardCount() {
        return liangCard_.size();
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public boolean getLiangCard(int index) {
        return liangCard_.get(index);
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setLiangCard(
          int index, boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addLiangCard(boolean value) {
        ensureLiangCardIsMutable();
        liangCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllLiangCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureLiangCardIsMutable();
        super.addAll(values, liangCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool liang_card = 9;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearLiangCard() {
        liangCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 table_di_fen = 10;
      private int tableDiFen_ ;
      /**
       * <code>optional int32 table_di_fen = 10;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public boolean hasTableDiFen() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 table_di_fen = 10;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public int getTableDiFen() {
        return tableDiFen_;
      }
      /**
       * <code>optional int32 table_di_fen = 10;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public Builder setTableDiFen(int value) {
        bitField0_ |= 0x00000200;
        tableDiFen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_di_fen = 10;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public Builder clearTableDiFen() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tableDiFen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 Operate_qie_card = 11;
      private int operateQieCard_ ;
      /**
       * <code>optional int32 Operate_qie_card = 11;</code>
       *
       * <pre>
       *是否操作切牌
       * </pre>
       */
      public boolean hasOperateQieCard() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 Operate_qie_card = 11;</code>
       *
       * <pre>
       *是否操作切牌
       * </pre>
       */
      public int getOperateQieCard() {
        return operateQieCard_;
      }
      /**
       * <code>optional int32 Operate_qie_card = 11;</code>
       *
       * <pre>
       *是否操作切牌
       * </pre>
       */
      public Builder setOperateQieCard(int value) {
        bitField0_ |= 0x00000400;
        operateQieCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Operate_qie_card = 11;</code>
       *
       * <pre>
       *是否操作切牌
       * </pre>
       */
      public Builder clearOperateQieCard() {
        bitField0_ = (bitField0_ & ~0x00000400);
        operateQieCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card = 12;
      private int card_ ;
      /**
       * <code>optional int32 card = 12;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 card = 12;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 12;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000800;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 12;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000800);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 first_seat_idex = 13;
      private int firstSeatIdex_ ;
      /**
       * <code>optional int32 first_seat_idex = 13;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public boolean hasFirstSeatIdex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 first_seat_idex = 13;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public int getFirstSeatIdex() {
        return firstSeatIdex_;
      }
      /**
       * <code>optional int32 first_seat_idex = 13;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public Builder setFirstSeatIdex(int value) {
        bitField0_ |= 0x00001000;
        firstSeatIdex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 first_seat_idex = 13;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public Builder clearFirstSeatIdex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        firstSeatIdex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 scene_status = 14;
      private int sceneStatus_ ;
      /**
       * <code>optional int32 scene_status = 14;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public boolean hasSceneStatus() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 scene_status = 14;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public int getSceneStatus() {
        return sceneStatus_;
      }
      /**
       * <code>optional int32 scene_status = 14;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder setSceneStatus(int value) {
        bitField0_ |= 0x00002000;
        sceneStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_status = 14;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder clearSceneStatus() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sceneStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 15;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 15;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 display_time = 15;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 15;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00004000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 15;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00004000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 player_times = 16;
      private java.util.List<java.lang.Integer> playerTimes_ = java.util.Collections.emptyList();
      private void ensurePlayerTimesIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          playerTimes_ = new java.util.ArrayList<java.lang.Integer>(playerTimes_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerTimesList() {
        return java.util.Collections.unmodifiableList(playerTimes_);
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public int getPlayerTimesCount() {
        return playerTimes_.size();
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public int getPlayerTimes(int index) {
        return playerTimes_.get(index);
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public Builder setPlayerTimes(
          int index, int value) {
        ensurePlayerTimesIsMutable();
        playerTimes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public Builder addPlayerTimes(int value) {
        ensurePlayerTimesIsMutable();
        playerTimes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public Builder addAllPlayerTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerTimesIsMutable();
        super.addAll(values, playerTimes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_times = 16;</code>
       *
       * <pre>
       *用户倍数
       * </pre>
       */
      public Builder clearPlayerTimes() {
        playerTimes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 ox_value = 17;
      private java.util.List<java.lang.Integer> oxValue_ = java.util.Collections.emptyList();
      private void ensureOxValueIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          oxValue_ = new java.util.ArrayList<java.lang.Integer>(oxValue_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOxValueList() {
        return java.util.Collections.unmodifiableList(oxValue_);
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValueCount() {
        return oxValue_.size();
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue(int index) {
        return oxValue_.get(index);
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(
          int index, int value) {
        ensureOxValueIsMutable();
        oxValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addOxValue(int value) {
        ensureOxValueIsMutable();
        oxValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addAllOxValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOxValueIsMutable();
        super.addAll(values, oxValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 17;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 player_score = 18;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 18;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.TableResponseDbn)
    }

    static {
      defaultInstance = new TableResponseDbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.TableResponseDbn)
  }

  public interface BankerResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opr_type = 1;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    boolean hasOprType();
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    int getOprType();

    // optional int32 bu_banker_score = 2;
    /**
     * <code>optional int32 bu_banker_score = 2;</code>
     *
     * <pre>
     *补庄分数
     * </pre>
     */
    boolean hasBuBankerScore();
    /**
     * <code>optional int32 bu_banker_score = 2;</code>
     *
     * <pre>
     *补庄分数
     * </pre>
     */
    int getBuBankerScore();

    // optional int32 all_banker_count = 3;
    /**
     * <code>optional int32 all_banker_count = 3;</code>
     *
     * <pre>
     *庄家用户个数
     * </pre>
     */
    boolean hasAllBankerCount();
    /**
     * <code>optional int32 all_banker_count = 3;</code>
     *
     * <pre>
     *庄家用户个数
     * </pre>
     */
    int getAllBankerCount();

    // optional int32 cur_banker_count = 4;
    /**
     * <code>optional int32 cur_banker_count = 4;</code>
     *
     * <pre>
     *当前是第个庄家
     * </pre>
     */
    boolean hasCurBankerCount();
    /**
     * <code>optional int32 cur_banker_count = 4;</code>
     *
     * <pre>
     *当前是第个庄家
     * </pre>
     */
    int getCurBankerCount();

    // optional int32 banker_cur_round = 5;
    /**
     * <code>optional int32 banker_cur_round = 5;</code>
     *
     * <pre>
     *当前庄家的第几局
     * </pre>
     */
    boolean hasBankerCurRound();
    /**
     * <code>optional int32 banker_cur_round = 5;</code>
     *
     * <pre>
     *当前庄家的第几局
     * </pre>
     */
    int getBankerCurRound();

    // optional int32 table_di_fen = 6;
    /**
     * <code>optional int32 table_di_fen = 6;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    boolean hasTableDiFen();
    /**
     * <code>optional int32 table_di_fen = 6;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    int getTableDiFen();

    // optional int32 cur_banker = 7;
    /**
     * <code>optional int32 cur_banker = 7;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasCurBanker();
    /**
     * <code>optional int32 cur_banker = 7;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getCurBanker();
  }
  /**
   * Protobuf type {@code dbn.BankerResult}
   */
  public static final class BankerResult extends
      com.google.protobuf.GeneratedMessage
      implements BankerResultOrBuilder {
    // Use BankerResult.newBuilder() to construct.
    private BankerResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BankerResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BankerResult defaultInstance;
    public static BankerResult getDefaultInstance() {
      return defaultInstance;
    }

    public BankerResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BankerResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oprType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              buBankerScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              allBankerCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              curBankerCount_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bankerCurRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tableDiFen_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              curBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_BankerResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_BankerResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.BankerResult.class, protobuf.clazz.dbn.dbnRsp.BankerResult.Builder.class);
    }

    public static com.google.protobuf.Parser<BankerResult> PARSER =
        new com.google.protobuf.AbstractParser<BankerResult>() {
      public BankerResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BankerResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BankerResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opr_type = 1;
    public static final int OPR_TYPE_FIELD_NUMBER = 1;
    private int oprType_;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    public boolean hasOprType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    public int getOprType() {
      return oprType_;
    }

    // optional int32 bu_banker_score = 2;
    public static final int BU_BANKER_SCORE_FIELD_NUMBER = 2;
    private int buBankerScore_;
    /**
     * <code>optional int32 bu_banker_score = 2;</code>
     *
     * <pre>
     *补庄分数
     * </pre>
     */
    public boolean hasBuBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 bu_banker_score = 2;</code>
     *
     * <pre>
     *补庄分数
     * </pre>
     */
    public int getBuBankerScore() {
      return buBankerScore_;
    }

    // optional int32 all_banker_count = 3;
    public static final int ALL_BANKER_COUNT_FIELD_NUMBER = 3;
    private int allBankerCount_;
    /**
     * <code>optional int32 all_banker_count = 3;</code>
     *
     * <pre>
     *庄家用户个数
     * </pre>
     */
    public boolean hasAllBankerCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 all_banker_count = 3;</code>
     *
     * <pre>
     *庄家用户个数
     * </pre>
     */
    public int getAllBankerCount() {
      return allBankerCount_;
    }

    // optional int32 cur_banker_count = 4;
    public static final int CUR_BANKER_COUNT_FIELD_NUMBER = 4;
    private int curBankerCount_;
    /**
     * <code>optional int32 cur_banker_count = 4;</code>
     *
     * <pre>
     *当前是第个庄家
     * </pre>
     */
    public boolean hasCurBankerCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cur_banker_count = 4;</code>
     *
     * <pre>
     *当前是第个庄家
     * </pre>
     */
    public int getCurBankerCount() {
      return curBankerCount_;
    }

    // optional int32 banker_cur_round = 5;
    public static final int BANKER_CUR_ROUND_FIELD_NUMBER = 5;
    private int bankerCurRound_;
    /**
     * <code>optional int32 banker_cur_round = 5;</code>
     *
     * <pre>
     *当前庄家的第几局
     * </pre>
     */
    public boolean hasBankerCurRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 banker_cur_round = 5;</code>
     *
     * <pre>
     *当前庄家的第几局
     * </pre>
     */
    public int getBankerCurRound() {
      return bankerCurRound_;
    }

    // optional int32 table_di_fen = 6;
    public static final int TABLE_DI_FEN_FIELD_NUMBER = 6;
    private int tableDiFen_;
    /**
     * <code>optional int32 table_di_fen = 6;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public boolean hasTableDiFen() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 table_di_fen = 6;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public int getTableDiFen() {
      return tableDiFen_;
    }

    // optional int32 cur_banker = 7;
    public static final int CUR_BANKER_FIELD_NUMBER = 7;
    private int curBanker_;
    /**
     * <code>optional int32 cur_banker = 7;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasCurBanker() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 cur_banker = 7;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getCurBanker() {
      return curBanker_;
    }

    private void initFields() {
      oprType_ = 0;
      buBankerScore_ = 0;
      allBankerCount_ = 0;
      curBankerCount_ = 0;
      bankerCurRound_ = 0;
      tableDiFen_ = 0;
      curBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, buBankerScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, allBankerCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, curBankerCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, bankerCurRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tableDiFen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, curBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, buBankerScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, allBankerCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, curBankerCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bankerCurRound_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tableDiFen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, curBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.BankerResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.BankerResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.BankerResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.BankerResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_BankerResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_BankerResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.BankerResult.class, protobuf.clazz.dbn.dbnRsp.BankerResult.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.BankerResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oprType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        buBankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        allBankerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        curBankerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerCurRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tableDiFen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        curBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_BankerResult_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.BankerResult getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.BankerResult.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.BankerResult build() {
        protobuf.clazz.dbn.dbnRsp.BankerResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.BankerResult buildPartial() {
        protobuf.clazz.dbn.dbnRsp.BankerResult result = new protobuf.clazz.dbn.dbnRsp.BankerResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oprType_ = oprType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.buBankerScore_ = buBankerScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.allBankerCount_ = allBankerCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curBankerCount_ = curBankerCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bankerCurRound_ = bankerCurRound_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tableDiFen_ = tableDiFen_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.curBanker_ = curBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.BankerResult) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.BankerResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.BankerResult other) {
        if (other == protobuf.clazz.dbn.dbnRsp.BankerResult.getDefaultInstance()) return this;
        if (other.hasOprType()) {
          setOprType(other.getOprType());
        }
        if (other.hasBuBankerScore()) {
          setBuBankerScore(other.getBuBankerScore());
        }
        if (other.hasAllBankerCount()) {
          setAllBankerCount(other.getAllBankerCount());
        }
        if (other.hasCurBankerCount()) {
          setCurBankerCount(other.getCurBankerCount());
        }
        if (other.hasBankerCurRound()) {
          setBankerCurRound(other.getBankerCurRound());
        }
        if (other.hasTableDiFen()) {
          setTableDiFen(other.getTableDiFen());
        }
        if (other.hasCurBanker()) {
          setCurBanker(other.getCurBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.BankerResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.BankerResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opr_type = 1;
      private int oprType_ ;
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public boolean hasOprType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public int getOprType() {
        return oprType_;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public Builder setOprType(int value) {
        bitField0_ |= 0x00000001;
        oprType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0显示庄家动画   补庄0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public Builder clearOprType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oprType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bu_banker_score = 2;
      private int buBankerScore_ ;
      /**
       * <code>optional int32 bu_banker_score = 2;</code>
       *
       * <pre>
       *补庄分数
       * </pre>
       */
      public boolean hasBuBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 bu_banker_score = 2;</code>
       *
       * <pre>
       *补庄分数
       * </pre>
       */
      public int getBuBankerScore() {
        return buBankerScore_;
      }
      /**
       * <code>optional int32 bu_banker_score = 2;</code>
       *
       * <pre>
       *补庄分数
       * </pre>
       */
      public Builder setBuBankerScore(int value) {
        bitField0_ |= 0x00000002;
        buBankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bu_banker_score = 2;</code>
       *
       * <pre>
       *补庄分数
       * </pre>
       */
      public Builder clearBuBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        buBankerScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 all_banker_count = 3;
      private int allBankerCount_ ;
      /**
       * <code>optional int32 all_banker_count = 3;</code>
       *
       * <pre>
       *庄家用户个数
       * </pre>
       */
      public boolean hasAllBankerCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 all_banker_count = 3;</code>
       *
       * <pre>
       *庄家用户个数
       * </pre>
       */
      public int getAllBankerCount() {
        return allBankerCount_;
      }
      /**
       * <code>optional int32 all_banker_count = 3;</code>
       *
       * <pre>
       *庄家用户个数
       * </pre>
       */
      public Builder setAllBankerCount(int value) {
        bitField0_ |= 0x00000004;
        allBankerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 all_banker_count = 3;</code>
       *
       * <pre>
       *庄家用户个数
       * </pre>
       */
      public Builder clearAllBankerCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        allBankerCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_banker_count = 4;
      private int curBankerCount_ ;
      /**
       * <code>optional int32 cur_banker_count = 4;</code>
       *
       * <pre>
       *当前是第个庄家
       * </pre>
       */
      public boolean hasCurBankerCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 cur_banker_count = 4;</code>
       *
       * <pre>
       *当前是第个庄家
       * </pre>
       */
      public int getCurBankerCount() {
        return curBankerCount_;
      }
      /**
       * <code>optional int32 cur_banker_count = 4;</code>
       *
       * <pre>
       *当前是第个庄家
       * </pre>
       */
      public Builder setCurBankerCount(int value) {
        bitField0_ |= 0x00000008;
        curBankerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker_count = 4;</code>
       *
       * <pre>
       *当前是第个庄家
       * </pre>
       */
      public Builder clearCurBankerCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        curBankerCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_cur_round = 5;
      private int bankerCurRound_ ;
      /**
       * <code>optional int32 banker_cur_round = 5;</code>
       *
       * <pre>
       *当前庄家的第几局
       * </pre>
       */
      public boolean hasBankerCurRound() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 banker_cur_round = 5;</code>
       *
       * <pre>
       *当前庄家的第几局
       * </pre>
       */
      public int getBankerCurRound() {
        return bankerCurRound_;
      }
      /**
       * <code>optional int32 banker_cur_round = 5;</code>
       *
       * <pre>
       *当前庄家的第几局
       * </pre>
       */
      public Builder setBankerCurRound(int value) {
        bitField0_ |= 0x00000010;
        bankerCurRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_cur_round = 5;</code>
       *
       * <pre>
       *当前庄家的第几局
       * </pre>
       */
      public Builder clearBankerCurRound() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerCurRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 table_di_fen = 6;
      private int tableDiFen_ ;
      /**
       * <code>optional int32 table_di_fen = 6;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public boolean hasTableDiFen() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 table_di_fen = 6;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public int getTableDiFen() {
        return tableDiFen_;
      }
      /**
       * <code>optional int32 table_di_fen = 6;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder setTableDiFen(int value) {
        bitField0_ |= 0x00000020;
        tableDiFen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_di_fen = 6;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder clearTableDiFen() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tableDiFen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_banker = 7;
      private int curBanker_ ;
      /**
       * <code>optional int32 cur_banker = 7;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasCurBanker() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cur_banker = 7;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getCurBanker() {
        return curBanker_;
      }
      /**
       * <code>optional int32 cur_banker = 7;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setCurBanker(int value) {
        bitField0_ |= 0x00000040;
        curBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker = 7;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearCurBanker() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.BankerResult)
    }

    static {
      defaultInstance = new BankerResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.BankerResult)
  }

  public interface ButtonOperateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opr_type = 1;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *操作类型  1庄家操作，2下注操作， 3 切牌操作
     * </pre>
     */
    boolean hasOprType();
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *操作类型  1庄家操作，2下注操作， 3 切牌操作
     * </pre>
     */
    int getOprType();

    // optional int32 operate_index = 2;
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户ID ， -1 所有玩家
     * </pre>
     */
    boolean hasOperateIndex();
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户ID ， -1 所有玩家
     * </pre>
     */
    int getOperateIndex();

    // optional int32 banker_operate = 3;
    /**
     * <code>optional int32 banker_operate = 3;</code>
     *
     * <pre>
     *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    boolean hasBankerOperate();
    /**
     * <code>optional int32 banker_operate = 3;</code>
     *
     * <pre>
     *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    int getBankerOperate();

    // repeated int32 jetton_score = 4;
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code dbn.ButtonOperate}
   */
  public static final class ButtonOperate extends
      com.google.protobuf.GeneratedMessage
      implements ButtonOperateOrBuilder {
    // Use ButtonOperate.newBuilder() to construct.
    private ButtonOperate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ButtonOperate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ButtonOperate defaultInstance;
    public static ButtonOperate getDefaultInstance() {
      return defaultInstance;
    }

    public ButtonOperate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonOperate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oprType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              operateIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bankerOperate_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_ButtonOperate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_ButtonOperate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.ButtonOperate.class, protobuf.clazz.dbn.dbnRsp.ButtonOperate.Builder.class);
    }

    public static com.google.protobuf.Parser<ButtonOperate> PARSER =
        new com.google.protobuf.AbstractParser<ButtonOperate>() {
      public ButtonOperate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ButtonOperate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonOperate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opr_type = 1;
    public static final int OPR_TYPE_FIELD_NUMBER = 1;
    private int oprType_;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *操作类型  1庄家操作，2下注操作， 3 切牌操作
     * </pre>
     */
    public boolean hasOprType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *操作类型  1庄家操作，2下注操作， 3 切牌操作
     * </pre>
     */
    public int getOprType() {
      return oprType_;
    }

    // optional int32 operate_index = 2;
    public static final int OPERATE_INDEX_FIELD_NUMBER = 2;
    private int operateIndex_;
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户ID ， -1 所有玩家
     * </pre>
     */
    public boolean hasOperateIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户ID ， -1 所有玩家
     * </pre>
     */
    public int getOperateIndex() {
      return operateIndex_;
    }

    // optional int32 banker_operate = 3;
    public static final int BANKER_OPERATE_FIELD_NUMBER = 3;
    private int bankerOperate_;
    /**
     * <code>optional int32 banker_operate = 3;</code>
     *
     * <pre>
     *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    public boolean hasBankerOperate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 banker_operate = 3;</code>
     *
     * <pre>
     *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
     * </pre>
     */
    public int getBankerOperate() {
      return bankerOperate_;
    }

    // repeated int32 jetton_score = 4;
    public static final int JETTON_SCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 4;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      oprType_ = 0;
      operateIndex_ = 0;
      bankerOperate_ = 0;
      jettonScore_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, operateIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, bankerOperate_);
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(4, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, operateIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bankerOperate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.ButtonOperate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.ButtonOperate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.ButtonOperate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.ButtonOperateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_ButtonOperate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_ButtonOperate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.ButtonOperate.class, protobuf.clazz.dbn.dbnRsp.ButtonOperate.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.ButtonOperate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oprType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        operateIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerOperate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_ButtonOperate_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.ButtonOperate getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.ButtonOperate.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.ButtonOperate build() {
        protobuf.clazz.dbn.dbnRsp.ButtonOperate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.ButtonOperate buildPartial() {
        protobuf.clazz.dbn.dbnRsp.ButtonOperate result = new protobuf.clazz.dbn.dbnRsp.ButtonOperate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oprType_ = oprType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operateIndex_ = operateIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerOperate_ = bankerOperate_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.ButtonOperate) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.ButtonOperate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.ButtonOperate other) {
        if (other == protobuf.clazz.dbn.dbnRsp.ButtonOperate.getDefaultInstance()) return this;
        if (other.hasOprType()) {
          setOprType(other.getOprType());
        }
        if (other.hasOperateIndex()) {
          setOperateIndex(other.getOperateIndex());
        }
        if (other.hasBankerOperate()) {
          setBankerOperate(other.getBankerOperate());
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.ButtonOperate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.ButtonOperate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opr_type = 1;
      private int oprType_ ;
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *操作类型  1庄家操作，2下注操作， 3 切牌操作
       * </pre>
       */
      public boolean hasOprType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *操作类型  1庄家操作，2下注操作， 3 切牌操作
       * </pre>
       */
      public int getOprType() {
        return oprType_;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *操作类型  1庄家操作，2下注操作， 3 切牌操作
       * </pre>
       */
      public Builder setOprType(int value) {
        bitField0_ |= 0x00000001;
        oprType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *操作类型  1庄家操作，2下注操作， 3 切牌操作
       * </pre>
       */
      public Builder clearOprType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oprType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 operate_index = 2;
      private int operateIndex_ ;
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户ID ， -1 所有玩家
       * </pre>
       */
      public boolean hasOperateIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户ID ， -1 所有玩家
       * </pre>
       */
      public int getOperateIndex() {
        return operateIndex_;
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户ID ， -1 所有玩家
       * </pre>
       */
      public Builder setOperateIndex(int value) {
        bitField0_ |= 0x00000002;
        operateIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户ID ， -1 所有玩家
       * </pre>
       */
      public Builder clearOperateIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operateIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_operate = 3;
      private int bankerOperate_ ;
      /**
       * <code>optional int32 banker_operate = 3;</code>
       *
       * <pre>
       *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public boolean hasBankerOperate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 banker_operate = 3;</code>
       *
       * <pre>
       *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public int getBankerOperate() {
        return bankerOperate_;
      }
      /**
       * <code>optional int32 banker_operate = 3;</code>
       *
       * <pre>
       *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public Builder setBankerOperate(int value) {
        bitField0_ |= 0x00000004;
        bankerOperate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_operate = 3;</code>
       *
       * <pre>
       *庄家操作0x000000001;//下庄  0x000000002;//连庄	0x000000004; //跳庄0x000000008;//补庄
       * </pre>
       */
      public Builder clearBankerOperate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerOperate_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jetton_score = 4;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 4;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.ButtonOperate)
    }

    static {
      defaultInstance = new ButtonOperate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.ButtonOperate)
  }

  public interface GameStartDbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .dbn.RoomInfoDbn room_info = 1;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo();
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // repeated .dbn.RoomPlayerResponseDbn players = 3;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> 
        getPlayersList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index);
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 table_di_fen = 4;
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    boolean hasTableDiFen();
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    int getTableDiFen();
  }
  /**
   * Protobuf type {@code dbn.GameStartDbn}
   */
  public static final class GameStartDbn extends
      com.google.protobuf.GeneratedMessage
      implements GameStartDbnOrBuilder {
    // Use GameStartDbn.newBuilder() to construct.
    private GameStartDbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartDbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartDbn defaultInstance;
    public static GameStartDbn getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartDbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartDbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              tableDiFen_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_GameStartDbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_GameStartDbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.GameStartDbn.class, protobuf.clazz.dbn.dbnRsp.GameStartDbn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartDbn> PARSER =
        new com.google.protobuf.AbstractParser<GameStartDbn>() {
      public GameStartDbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartDbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartDbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .dbn.RoomInfoDbn room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_;
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // repeated .dbn.RoomPlayerResponseDbn players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 table_di_fen = 4;
    public static final int TABLE_DI_FEN_FIELD_NUMBER = 4;
    private int tableDiFen_;
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    public boolean hasTableDiFen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌上底分
     * </pre>
     */
    public int getTableDiFen() {
      return tableDiFen_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      currentPlayer_ = 0;
      players_ = java.util.Collections.emptyList();
      tableDiFen_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, tableDiFen_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tableDiFen_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.GameStartDbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.GameStartDbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.GameStartDbn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.GameStartDbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_GameStartDbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_GameStartDbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.GameStartDbn.class, protobuf.clazz.dbn.dbnRsp.GameStartDbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.GameStartDbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        tableDiFen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_GameStartDbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.GameStartDbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.GameStartDbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.GameStartDbn build() {
        protobuf.clazz.dbn.dbnRsp.GameStartDbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.GameStartDbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.GameStartDbn result = new protobuf.clazz.dbn.dbnRsp.GameStartDbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tableDiFen_ = tableDiFen_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.GameStartDbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.GameStartDbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.GameStartDbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.GameStartDbn.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasTableDiFen()) {
          setTableDiFen(other.getTableDiFen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.GameStartDbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.GameStartDbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .dbn.RoomInfoDbn room_info = 1;
      private protobuf.clazz.dbn.dbnRsp.RoomInfoDbn roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.dbn.dbnRsp.RoomInfoDbn value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .dbn.RoomInfoDbn room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomInfoDbn, protobuf.clazz.dbn.dbnRsp.RoomInfoDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomInfoDbnOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated .dbn.RoomPlayerResponseDbn players = 3;
      private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> playersBuilder_;

      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 3;</code>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 table_di_fen = 4;
      private int tableDiFen_ ;
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public boolean hasTableDiFen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public int getTableDiFen() {
        return tableDiFen_;
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public Builder setTableDiFen(int value) {
        bitField0_ |= 0x00000008;
        tableDiFen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌上底分
       * </pre>
       */
      public Builder clearTableDiFen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tableDiFen_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.GameStartDbn)
    }

    static {
      defaultInstance = new GameStartDbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.GameStartDbn)
  }

  public interface FirstSeatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card = 1;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    int getCard();

    // optional int32 first_seat_idex = 2;
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    boolean hasFirstSeatIdex();
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    int getFirstSeatIdex();
  }
  /**
   * Protobuf type {@code dbn.FirstSeat}
   */
  public static final class FirstSeat extends
      com.google.protobuf.GeneratedMessage
      implements FirstSeatOrBuilder {
    // Use FirstSeat.newBuilder() to construct.
    private FirstSeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FirstSeat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FirstSeat defaultInstance;
    public static FirstSeat getDefaultInstance() {
      return defaultInstance;
    }

    public FirstSeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FirstSeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              card_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              firstSeatIdex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_FirstSeat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_FirstSeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.FirstSeat.class, protobuf.clazz.dbn.dbnRsp.FirstSeat.Builder.class);
    }

    public static com.google.protobuf.Parser<FirstSeat> PARSER =
        new com.google.protobuf.AbstractParser<FirstSeat>() {
      public FirstSeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FirstSeat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FirstSeat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private int card_;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     *切出来的牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 first_seat_idex = 2;
    public static final int FIRST_SEAT_IDEX_FIELD_NUMBER = 2;
    private int firstSeatIdex_;
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    public boolean hasFirstSeatIdex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 first_seat_idex = 2;</code>
     *
     * <pre>
     *先家的位置
     * </pre>
     */
    public int getFirstSeatIdex() {
      return firstSeatIdex_;
    }

    private void initFields() {
      card_ = 0;
      firstSeatIdex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, firstSeatIdex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, firstSeatIdex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.FirstSeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.FirstSeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.FirstSeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.FirstSeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_FirstSeat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_FirstSeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.FirstSeat.class, protobuf.clazz.dbn.dbnRsp.FirstSeat.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.FirstSeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        firstSeatIdex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_FirstSeat_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.FirstSeat getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.FirstSeat.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.FirstSeat build() {
        protobuf.clazz.dbn.dbnRsp.FirstSeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.FirstSeat buildPartial() {
        protobuf.clazz.dbn.dbnRsp.FirstSeat result = new protobuf.clazz.dbn.dbnRsp.FirstSeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firstSeatIdex_ = firstSeatIdex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.FirstSeat) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.FirstSeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.FirstSeat other) {
        if (other == protobuf.clazz.dbn.dbnRsp.FirstSeat.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasFirstSeatIdex()) {
          setFirstSeatIdex(other.getFirstSeatIdex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.FirstSeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.FirstSeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card = 1;
      private int card_ ;
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000001;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       *切出来的牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 first_seat_idex = 2;
      private int firstSeatIdex_ ;
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public boolean hasFirstSeatIdex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public int getFirstSeatIdex() {
        return firstSeatIdex_;
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public Builder setFirstSeatIdex(int value) {
        bitField0_ |= 0x00000002;
        firstSeatIdex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 first_seat_idex = 2;</code>
       *
       * <pre>
       *先家的位置
       * </pre>
       */
      public Builder clearFirstSeatIdex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firstSeatIdex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.FirstSeat)
    }

    static {
      defaultInstance = new FirstSeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.FirstSeat)
  }

  public interface Jetton_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_seat = 1;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    boolean hasJettonSeat();
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    int getJettonSeat();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code dbn.Jetton_result}
   */
  public static final class Jetton_result extends
      com.google.protobuf.GeneratedMessage
      implements Jetton_resultOrBuilder {
    // Use Jetton_result.newBuilder() to construct.
    private Jetton_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Jetton_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Jetton_result defaultInstance;
    public static Jetton_result getDefaultInstance() {
      return defaultInstance;
    }

    public Jetton_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Jetton_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Jetton_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Jetton_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.Jetton_result.class, protobuf.clazz.dbn.dbnRsp.Jetton_result.Builder.class);
    }

    public static com.google.protobuf.Parser<Jetton_result> PARSER =
        new com.google.protobuf.AbstractParser<Jetton_result>() {
      public Jetton_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Jetton_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Jetton_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_seat = 1;
    public static final int JETTON_SEAT_FIELD_NUMBER = 1;
    private int jettonSeat_;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public boolean hasJettonSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public int getJettonSeat() {
      return jettonSeat_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      jettonSeat_ = 0;
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Jetton_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.Jetton_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.Jetton_result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.Jetton_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Jetton_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Jetton_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.Jetton_result.class, protobuf.clazz.dbn.dbnRsp.Jetton_result.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.Jetton_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Jetton_result_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.Jetton_result getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.Jetton_result.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.Jetton_result build() {
        protobuf.clazz.dbn.dbnRsp.Jetton_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.Jetton_result buildPartial() {
        protobuf.clazz.dbn.dbnRsp.Jetton_result result = new protobuf.clazz.dbn.dbnRsp.Jetton_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonSeat_ = jettonSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.Jetton_result) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.Jetton_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.Jetton_result other) {
        if (other == protobuf.clazz.dbn.dbnRsp.Jetton_result.getDefaultInstance()) return this;
        if (other.hasJettonSeat()) {
          setJettonSeat(other.getJettonSeat());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.Jetton_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.Jetton_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_seat = 1;
      private int jettonSeat_ ;
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public boolean hasJettonSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public int getJettonSeat() {
        return jettonSeat_;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder setJettonSeat(int value) {
        bitField0_ |= 0x00000001;
        jettonSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder clearJettonSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.Jetton_result)
    }

    static {
      defaultInstance = new Jetton_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.Jetton_result)
  }

  public interface SendCard_DbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse send_card = 1;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 2;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code dbn.SendCard_Dbn}
   */
  public static final class SendCard_Dbn extends
      com.google.protobuf.GeneratedMessage
      implements SendCard_DbnOrBuilder {
    // Use SendCard_Dbn.newBuilder() to construct.
    private SendCard_Dbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCard_Dbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCard_Dbn defaultInstance;
    public static SendCard_Dbn getDefaultInstance() {
      return defaultInstance;
    }

    public SendCard_Dbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCard_Dbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_SendCard_Dbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_SendCard_Dbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCard_Dbn> PARSER =
        new com.google.protobuf.AbstractParser<SendCard_Dbn>() {
      public SendCard_Dbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCard_Dbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCard_Dbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse send_card = 1;
    public static final int SEND_CARD_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 2;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 2;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(1, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.SendCard_Dbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.SendCard_Dbn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.SendCard_DbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_SendCard_Dbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_SendCard_Dbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_SendCard_Dbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.SendCard_Dbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.SendCard_Dbn build() {
        protobuf.clazz.dbn.dbnRsp.SendCard_Dbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.SendCard_Dbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.SendCard_Dbn result = new protobuf.clazz.dbn.dbnRsp.SendCard_Dbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.SendCard_Dbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.SendCard_Dbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.SendCard_Dbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.SendCard_Dbn.getDefaultInstance()) return this;
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.SendCard_Dbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.SendCard_Dbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse send_card = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 2;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000002;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.SendCard_Dbn)
    }

    static {
      defaultInstance = new SendCard_Dbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.SendCard_Dbn)
  }

  public interface OpenCard_DbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool open_card = 1;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean hasOpenCard();
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean getOpenCard();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);

    // optional int32 times = 4;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();

    // optional int32 ox_value = 5;
    /**
     * <code>optional int32 ox_value = 5;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 5;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue();
  }
  /**
   * Protobuf type {@code dbn.OpenCard_Dbn}
   */
  public static final class OpenCard_Dbn extends
      com.google.protobuf.GeneratedMessage
      implements OpenCard_DbnOrBuilder {
    // Use OpenCard_Dbn.newBuilder() to construct.
    private OpenCard_Dbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCard_Dbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCard_Dbn defaultInstance;
    public static OpenCard_Dbn getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCard_Dbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCard_Dbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              openCard_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              oxValue_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_OpenCard_Dbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_OpenCard_Dbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCard_Dbn> PARSER =
        new com.google.protobuf.AbstractParser<OpenCard_Dbn>() {
      public OpenCard_Dbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCard_Dbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCard_Dbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool open_card = 1;
    public static final int OPEN_CARD_FIELD_NUMBER = 1;
    private boolean openCard_;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean hasOpenCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean getOpenCard() {
      return openCard_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 times = 4;
    public static final int TIMES_FIELD_NUMBER = 4;
    private int times_;
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 times = 4;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 ox_value = 5;
    public static final int OX_VALUE_FIELD_NUMBER = 5;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 5;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 ox_value = 5;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    private void initFields() {
      openCard_ = false;
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      times_ = 0;
      oxValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, oxValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, oxValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.OpenCard_Dbn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.OpenCard_DbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_OpenCard_Dbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_OpenCard_Dbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        openCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_OpenCard_Dbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn build() {
        protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn result = new protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.oxValue_ = oxValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn.getDefaultInstance()) return this;
        if (other.hasOpenCard()) {
          setOpenCard(other.getOpenCard());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.OpenCard_Dbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool open_card = 1;
      private boolean openCard_ ;
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean hasOpenCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean getOpenCard() {
        return openCard_;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder setOpenCard(boolean value) {
        bitField0_ |= 0x00000001;
        openCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder clearOpenCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        openCard_ = false;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 times = 4;
      private int times_ ;
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000008;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 4;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ox_value = 5;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 5;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 ox_value = 5;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 5;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000010;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 5;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.OpenCard_Dbn)
    }

    static {
      defaultInstance = new OpenCard_Dbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.OpenCard_Dbn)
  }

  public interface LiangCard_DbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opr_type = 1;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     * 0banker _opr,      1: ldle compare
     * </pre>
     */
    boolean hasOprType();
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     * 0banker _opr,      1: ldle compare
     * </pre>
     */
    int getOprType();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    int getSeatIndex();

    // optional int32 score = 3;
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *庄家分数
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *庄家分数
     * </pre>
     */
    int getScore();

    // optional int32 table_di_fen = 4;
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌子分数
     * </pre>
     */
    boolean hasTableDiFen();
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌子分数
     * </pre>
     */
    int getTableDiFen();

    // repeated int32 cards = 6;
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    int getCards(int index);

    // optional int32 times = 7;
    /**
     * <code>optional int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();

    // optional int32 ox_value = 8;
    /**
     * <code>optional int32 ox_value = 8;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 8;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue();

    // repeated .dbn.RoomPlayerResponseDbn players = 9;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> 
        getPlayersList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index);
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    int getPlayersCount();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dbn.LiangCard_Dbn}
   *
   * <pre>
   *亮牌结算
   * </pre>
   */
  public static final class LiangCard_Dbn extends
      com.google.protobuf.GeneratedMessage
      implements LiangCard_DbnOrBuilder {
    // Use LiangCard_Dbn.newBuilder() to construct.
    private LiangCard_Dbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiangCard_Dbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiangCard_Dbn defaultInstance;
    public static LiangCard_Dbn getDefaultInstance() {
      return defaultInstance;
    }

    public LiangCard_Dbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiangCard_Dbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oprType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              score_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tableDiFen_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              times_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              oxValue_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>();
                mutable_bitField0_ |= 0x00000080;
              }
              players_.add(input.readMessage(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_LiangCard_Dbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_LiangCard_Dbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.Builder.class);
    }

    public static com.google.protobuf.Parser<LiangCard_Dbn> PARSER =
        new com.google.protobuf.AbstractParser<LiangCard_Dbn>() {
      public LiangCard_Dbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiangCard_Dbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiangCard_Dbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opr_type = 1;
    public static final int OPR_TYPE_FIELD_NUMBER = 1;
    private int oprType_;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     * 0banker _opr,      1: ldle compare
     * </pre>
     */
    public boolean hasOprType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     * 0banker _opr,      1: ldle compare
     * </pre>
     */
    public int getOprType() {
      return oprType_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 score = 3;
    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *庄家分数
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 score = 3;</code>
     *
     * <pre>
     *庄家分数
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    // optional int32 table_di_fen = 4;
    public static final int TABLE_DI_FEN_FIELD_NUMBER = 4;
    private int tableDiFen_;
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌子分数
     * </pre>
     */
    public boolean hasTableDiFen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 table_di_fen = 4;</code>
     *
     * <pre>
     *桌子分数
     * </pre>
     */
    public int getTableDiFen() {
      return tableDiFen_;
    }

    // repeated int32 cards = 6;
    public static final int CARDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 6;</code>
     *
     * <pre>
     *牌值
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 times = 7;
    public static final int TIMES_FIELD_NUMBER = 7;
    private int times_;
    /**
     * <code>optional int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 times = 7;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // optional int32 ox_value = 8;
    public static final int OX_VALUE_FIELD_NUMBER = 8;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 8;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 ox_value = 8;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    // repeated .dbn.RoomPlayerResponseDbn players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_;
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
     *
     * <pre>
     *刷新用户分数
     * </pre>
     */
    public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      oprType_ = 0;
      seatIndex_ = 0;
      score_ = 0;
      tableDiFen_ = 0;
      cards_ = java.util.Collections.emptyList();
      times_ = 0;
      oxValue_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, score_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, tableDiFen_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(6, cards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, times_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, oxValue_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, oprType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tableDiFen_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, times_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, oxValue_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.LiangCard_Dbn}
     *
     * <pre>
     *亮牌结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.LiangCard_DbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_LiangCard_Dbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_LiangCard_Dbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.class, protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oprType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tableDiFen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_LiangCard_Dbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn build() {
        protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn result = new protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oprType_ = oprType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tableDiFen_ = tableDiFen_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.oxValue_ = oxValue_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn.getDefaultInstance()) return this;
        if (other.hasOprType()) {
          setOprType(other.getOprType());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasTableDiFen()) {
          setTableDiFen(other.getTableDiFen());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000080);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.LiangCard_Dbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opr_type = 1;
      private int oprType_ ;
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       * 0banker _opr,      1: ldle compare
       * </pre>
       */
      public boolean hasOprType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       * 0banker _opr,      1: ldle compare
       * </pre>
       */
      public int getOprType() {
        return oprType_;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       * 0banker _opr,      1: ldle compare
       * </pre>
       */
      public Builder setOprType(int value) {
        bitField0_ |= 0x00000001;
        oprType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       * 0banker _opr,      1: ldle compare
       * </pre>
       */
      public Builder clearOprType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oprType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 score = 3;
      private int score_ ;
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *庄家分数
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *庄家分数
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *庄家分数
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000004;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score = 3;</code>
       *
       * <pre>
       *庄家分数
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional int32 table_di_fen = 4;
      private int tableDiFen_ ;
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌子分数
       * </pre>
       */
      public boolean hasTableDiFen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌子分数
       * </pre>
       */
      public int getTableDiFen() {
        return tableDiFen_;
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌子分数
       * </pre>
       */
      public Builder setTableDiFen(int value) {
        bitField0_ |= 0x00000008;
        tableDiFen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_di_fen = 4;</code>
       *
       * <pre>
       *桌子分数
       * </pre>
       */
      public Builder clearTableDiFen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tableDiFen_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 6;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 6;</code>
       *
       * <pre>
       *牌值
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 times = 7;
      private int times_ ;
      /**
       * <code>optional int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000020;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 7;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        times_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ox_value = 8;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 8;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 ox_value = 8;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 8;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000040;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 8;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // repeated .dbn.RoomPlayerResponseDbn players = 9;
      private java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          players_ = new java.util.ArrayList<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn>(players_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> playersBuilder_;

      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder addPlayers(protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder addPlayers(
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.getDefaultInstance());
      }
      /**
       * <code>repeated .dbn.RoomPlayerResponseDbn players = 9;</code>
       *
       * <pre>
       *刷新用户分数
       * </pre>
       */
      public java.util.List<protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbn.Builder, protobuf.clazz.dbn.dbnRsp.RoomPlayerResponseDbnOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:dbn.LiangCard_Dbn)
    }

    static {
      defaultInstance = new LiangCard_Dbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.LiangCard_Dbn)
  }

  public interface Animation_DbnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opr_type = 1;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0 tong_sha,  1 tong_pei
     * </pre>
     */
    boolean hasOprType();
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0 tong_sha,  1 tong_pei
     * </pre>
     */
    int getOprType();
  }
  /**
   * Protobuf type {@code dbn.Animation_Dbn}
   */
  public static final class Animation_Dbn extends
      com.google.protobuf.GeneratedMessage
      implements Animation_DbnOrBuilder {
    // Use Animation_Dbn.newBuilder() to construct.
    private Animation_Dbn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Animation_Dbn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Animation_Dbn defaultInstance;
    public static Animation_Dbn getDefaultInstance() {
      return defaultInstance;
    }

    public Animation_Dbn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Animation_Dbn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oprType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Animation_Dbn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Animation_Dbn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.Animation_Dbn.class, protobuf.clazz.dbn.dbnRsp.Animation_Dbn.Builder.class);
    }

    public static com.google.protobuf.Parser<Animation_Dbn> PARSER =
        new com.google.protobuf.AbstractParser<Animation_Dbn>() {
      public Animation_Dbn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Animation_Dbn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Animation_Dbn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opr_type = 1;
    public static final int OPR_TYPE_FIELD_NUMBER = 1;
    private int oprType_;
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0 tong_sha,  1 tong_pei
     * </pre>
     */
    public boolean hasOprType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opr_type = 1;</code>
     *
     * <pre>
     *0 tong_sha,  1 tong_pei
     * </pre>
     */
    public int getOprType() {
      return oprType_;
    }

    private void initFields() {
      oprType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, oprType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, oprType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Animation_Dbn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.Animation_Dbn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.Animation_Dbn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.Animation_DbnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Animation_Dbn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Animation_Dbn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.Animation_Dbn.class, protobuf.clazz.dbn.dbnRsp.Animation_Dbn.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.Animation_Dbn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oprType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Animation_Dbn_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.Animation_Dbn getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.Animation_Dbn.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.Animation_Dbn build() {
        protobuf.clazz.dbn.dbnRsp.Animation_Dbn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.Animation_Dbn buildPartial() {
        protobuf.clazz.dbn.dbnRsp.Animation_Dbn result = new protobuf.clazz.dbn.dbnRsp.Animation_Dbn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oprType_ = oprType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.Animation_Dbn) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.Animation_Dbn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.Animation_Dbn other) {
        if (other == protobuf.clazz.dbn.dbnRsp.Animation_Dbn.getDefaultInstance()) return this;
        if (other.hasOprType()) {
          setOprType(other.getOprType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.Animation_Dbn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.Animation_Dbn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opr_type = 1;
      private int oprType_ ;
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0 tong_sha,  1 tong_pei
       * </pre>
       */
      public boolean hasOprType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0 tong_sha,  1 tong_pei
       * </pre>
       */
      public int getOprType() {
        return oprType_;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0 tong_sha,  1 tong_pei
       * </pre>
       */
      public Builder setOprType(int value) {
        bitField0_ |= 0x00000001;
        oprType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opr_type = 1;</code>
       *
       * <pre>
       *0 tong_sha,  1 tong_pei
       * </pre>
       */
      public Builder clearOprType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oprType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.Animation_Dbn)
    }

    static {
      defaultInstance = new Animation_Dbn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.Animation_Dbn)
  }

  public interface Opreate_dbn_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
     * </pre>
     */
    int getOpreateType();

    // optional int32 add_jetton_score = 2;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    int getAddJettonScore();
  }
  /**
   * Protobuf type {@code dbn.Opreate_dbn_Request}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_dbn_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_dbn_RequestOrBuilder {
    // Use Opreate_dbn_Request.newBuilder() to construct.
    private Opreate_dbn_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_dbn_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_dbn_Request defaultInstance;
    public static Opreate_dbn_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_dbn_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_dbn_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              addJettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Opreate_dbn_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Opreate_dbn_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.class, protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_dbn_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_dbn_Request>() {
      public Opreate_dbn_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_dbn_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_dbn_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 add_jetton_score = 2;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 2;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    private void initFields() {
      opreateType_ = 0;
      addJettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, addJettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, addJettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dbn.Opreate_dbn_Request}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.dbn.dbnRsp.Opreate_dbn_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Opreate_dbn_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Opreate_dbn_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.class, protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.Builder.class);
      }

      // Construct using protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.dbn.dbnRsp.internal_static_dbn_Opreate_dbn_Request_descriptor;
      }

      public protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request getDefaultInstanceForType() {
        return protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.getDefaultInstance();
      }

      public protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request build() {
        protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request buildPartial() {
        protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request result = new protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addJettonScore_ = addJettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request) {
          return mergeFrom((protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request other) {
        if (other == protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.dbn.dbnRsp.Opreate_dbn_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:切牌 2：下注  3：开牌 4：再挺一局 5：补庄6：下庄
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 2;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000002;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dbn.Opreate_dbn_Request)
    }

    static {
      defaultInstance = new Opreate_dbn_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dbn.Opreate_dbn_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_RoomInfoDbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_RoomInfoDbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_RoomPlayerResponseDbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_RoomPlayerResponseDbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_PukeGameEndDbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_PukeGameEndDbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_TableResponseDbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_TableResponseDbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_BankerResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_BankerResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_ButtonOperate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_ButtonOperate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_GameStartDbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_GameStartDbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_FirstSeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_FirstSeat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_Jetton_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_Jetton_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_SendCard_Dbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_SendCard_Dbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_OpenCard_Dbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_OpenCard_Dbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_LiangCard_Dbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_LiangCard_Dbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_Animation_Dbn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_Animation_Dbn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dbn_Opreate_dbn_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dbn_Opreate_dbn_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022dbn/dbnProto.proto\022\003dbn\032\024basic/protoco" +
      "l.proto\"\236\002\n\013RoomInfoDbn\022\017\n\007room_id\030\001 \001(\005" +
      "\022\027\n\017game_type_index\030\004 \001(\005\022\027\n\017game_rule_i" +
      "ndex\030\002 \001(\005\022\032\n\022game_rule_index_ex\030\014 \003(\005\022\025" +
      "\n\rgame_rule_des\030\003 \001(\t\022\022\n\ngame_round\030\005 \001(" +
      "\005\022\021\n\tcur_round\030\006 \001(\005\022\023\n\013game_status\030\007 \001(" +
      "\005\022\030\n\020create_player_id\030\010 \001(\003\022\027\n\017begin_lef" +
      "t_card\030\t \001(\005\022\025\n\rbanker_player\030\n \001(\005\022\023\n\013c" +
      "reate_name\030\013 \001(\t\"\230\002\n\025RoomPlayerResponseD" +
      "bn\022\022\n\naccount_id\030\001 \001(\003\022\021\n\tuser_name\030\002 \001(",
      "\t\022\024\n\014head_img_url\030\003 \001(\t\022\022\n\nseat_index\030\004 " +
      "\001(\005\022\n\n\002ip\030\005 \001(\t\022\016\n\006online\030\006 \001(\005\022\013\n\003sex\030\007" +
      " \001(\005\022\r\n\005score\030\010 \001(\002\022\r\n\005ready\030\t \001(\005\022\017\n\007ip" +
      "_addr\030\n \001(\t\022%\n\rlocationInfor\030\013 \001(\0132\016.Loc" +
      "ationInfor\022\022\n\nis_trustee\030\014 \001(\010\022\r\n\005money\030" +
      "\r \001(\003\022\014\n\004gold\030\016 \001(\003\"\336\002\n\016PukeGameEndDbn\022#" +
      "\n\troom_info\030\001 \001(\0132\020.dbn.RoomInfoDbn\022\021\n\tc" +
      "ur_round\030\002 \001(\005\022\022\n\ngame_round\030\003 \001(\005\022\022\n\nca" +
      "rd_count\030\004 \003(\005\022\'\n\ncards_data\030\005 \003(\0132\023.Int" +
      "32ArrayResponse\022\021\n\tend_score\030\006 \003(\005\022\022\n\npl",
      "ayer_num\030\007 \001(\005\022\016\n\006reason\030\010 \001(\005\022+\n\007player" +
      "s\030\t \003(\0132\032.dbn.RoomPlayerResponseDbn\022\025\n\ra" +
      "ll_end_score\030\n \003(\005\022\025\n\rend_score_max\030\013 \003(" +
      "\005\022\017\n\007win_num\030\014 \003(\005\022\020\n\010lose_num\030\r \003(\005\022\016\n\006" +
      "winner\030\016 \001(\005\"\316\003\n\020TableResponseDbn\022\025\n\rban" +
      "ker_player\030\001 \001(\005\022\026\n\016current_player\030\002 \001(\005" +
      "\022#\n\troom_info\030\003 \001(\0132\020.dbn.RoomInfoDbn\022+\n" +
      "\007players\030\004 \003(\0132\032.dbn.RoomPlayerResponseD" +
      "bn\022\022\n\ncard_count\030\005 \003(\005\022\'\n\ncards_data\030\006 \003" +
      "(\0132\023.Int32ArrayResponse\022\024\n\014jetton_score\030",
      "\007 \003(\005\022\021\n\topen_card\030\010 \003(\010\022\022\n\nliang_card\030\t" +
      " \003(\010\022\024\n\014table_di_fen\030\n \001(\005\022\030\n\020Operate_qi" +
      "e_card\030\013 \001(\005\022\014\n\004card\030\014 \001(\005\022\027\n\017first_seat" +
      "_idex\030\r \001(\005\022\024\n\014scene_status\030\016 \001(\005\022\024\n\014dis" +
      "play_time\030\017 \001(\005\022\024\n\014player_times\030\020 \003(\005\022\020\n" +
      "\010ox_value\030\021 \003(\005\022\024\n\014player_score\030\022 \003(\005\"\261\001" +
      "\n\014BankerResult\022\020\n\010opr_type\030\001 \001(\005\022\027\n\017bu_b" +
      "anker_score\030\002 \001(\005\022\030\n\020all_banker_count\030\003 " +
      "\001(\005\022\030\n\020cur_banker_count\030\004 \001(\005\022\030\n\020banker_" +
      "cur_round\030\005 \001(\005\022\024\n\014table_di_fen\030\006 \001(\005\022\022\n",
      "\ncur_banker\030\007 \001(\005\"|\n\rButtonOperate\022\020\n\010op" +
      "r_type\030\001 \001(\005\022\025\n\roperate_index\030\002 \001(\005\022\026\n\016b" +
      "anker_operate\030\003 \001(\005\022\024\n\014jetton_score\030\004 \003(" +
      "\005\022\024\n\014display_time\030\005 \001(\005\"\216\001\n\014GameStartDbn" +
      "\022#\n\troom_info\030\001 \001(\0132\020.dbn.RoomInfoDbn\022\026\n" +
      "\016current_player\030\002 \001(\005\022+\n\007players\030\003 \003(\0132\032" +
      ".dbn.RoomPlayerResponseDbn\022\024\n\014table_di_f" +
      "en\030\004 \001(\005\"2\n\tFirstSeat\022\014\n\004card\030\001 \001(\005\022\027\n\017f" +
      "irst_seat_idex\030\002 \001(\005\":\n\rJetton_result\022\023\n" +
      "\013jetton_seat\030\001 \001(\005\022\024\n\014jetton_score\030\002 \001(\005",
      "\"L\n\014SendCard_Dbn\022&\n\tsend_card\030\001 \003(\0132\023.In" +
      "t32ArrayResponse\022\024\n\014display_time\030\002 \001(\005\"e" +
      "\n\014OpenCard_Dbn\022\021\n\topen_card\030\001 \001(\010\022\022\n\nsea" +
      "t_index\030\002 \001(\005\022\r\n\005cards\030\003 \003(\005\022\r\n\005times\030\004 " +
      "\001(\005\022\020\n\010ox_value\030\005 \001(\005\"\267\001\n\rLiangCard_Dbn\022" +
      "\020\n\010opr_type\030\001 \001(\005\022\022\n\nseat_index\030\002 \001(\005\022\r\n" +
      "\005score\030\003 \001(\005\022\024\n\014table_di_fen\030\004 \001(\005\022\r\n\005ca" +
      "rds\030\006 \003(\005\022\r\n\005times\030\007 \001(\005\022\020\n\010ox_value\030\010 \001" +
      "(\005\022+\n\007players\030\t \003(\0132\032.dbn.RoomPlayerResp" +
      "onseDbn\"!\n\rAnimation_Dbn\022\020\n\010opr_type\030\001 \001",
      "(\005\"E\n\023Opreate_dbn_Request\022\024\n\014opreate_typ" +
      "e\030\001 \001(\005\022\030\n\020add_jetton_score\030\002 \001(\005B\034\n\022pro" +
      "tobuf.clazz.dbnB\006dbnRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_dbn_RoomInfoDbn_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_dbn_RoomInfoDbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_RoomInfoDbn_descriptor,
              new java.lang.String[] { "RoomId", "GameTypeIndex", "GameRuleIndex", "GameRuleIndexEx", "GameRuleDes", "GameRound", "CurRound", "GameStatus", "CreatePlayerId", "BeginLeftCard", "BankerPlayer", "CreateName", });
          internal_static_dbn_RoomPlayerResponseDbn_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_dbn_RoomPlayerResponseDbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_RoomPlayerResponseDbn_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_dbn_PukeGameEndDbn_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_dbn_PukeGameEndDbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_PukeGameEndDbn_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "EndScore", "PlayerNum", "Reason", "Players", "AllEndScore", "EndScoreMax", "WinNum", "LoseNum", "Winner", });
          internal_static_dbn_TableResponseDbn_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_dbn_TableResponseDbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_TableResponseDbn_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "RoomInfo", "Players", "CardCount", "CardsData", "JettonScore", "OpenCard", "LiangCard", "TableDiFen", "OperateQieCard", "Card", "FirstSeatIdex", "SceneStatus", "DisplayTime", "PlayerTimes", "OxValue", "PlayerScore", });
          internal_static_dbn_BankerResult_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_dbn_BankerResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_BankerResult_descriptor,
              new java.lang.String[] { "OprType", "BuBankerScore", "AllBankerCount", "CurBankerCount", "BankerCurRound", "TableDiFen", "CurBanker", });
          internal_static_dbn_ButtonOperate_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_dbn_ButtonOperate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_ButtonOperate_descriptor,
              new java.lang.String[] { "OprType", "OperateIndex", "BankerOperate", "JettonScore", "DisplayTime", });
          internal_static_dbn_GameStartDbn_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_dbn_GameStartDbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_GameStartDbn_descriptor,
              new java.lang.String[] { "RoomInfo", "CurrentPlayer", "Players", "TableDiFen", });
          internal_static_dbn_FirstSeat_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_dbn_FirstSeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_FirstSeat_descriptor,
              new java.lang.String[] { "Card", "FirstSeatIdex", });
          internal_static_dbn_Jetton_result_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_dbn_Jetton_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_Jetton_result_descriptor,
              new java.lang.String[] { "JettonSeat", "JettonScore", });
          internal_static_dbn_SendCard_Dbn_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_dbn_SendCard_Dbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_SendCard_Dbn_descriptor,
              new java.lang.String[] { "SendCard", "DisplayTime", });
          internal_static_dbn_OpenCard_Dbn_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_dbn_OpenCard_Dbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_OpenCard_Dbn_descriptor,
              new java.lang.String[] { "OpenCard", "SeatIndex", "Cards", "Times", "OxValue", });
          internal_static_dbn_LiangCard_Dbn_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_dbn_LiangCard_Dbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_LiangCard_Dbn_descriptor,
              new java.lang.String[] { "OprType", "SeatIndex", "Score", "TableDiFen", "Cards", "Times", "OxValue", "Players", });
          internal_static_dbn_Animation_Dbn_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_dbn_Animation_Dbn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_Animation_Dbn_descriptor,
              new java.lang.String[] { "OprType", });
          internal_static_dbn_Opreate_dbn_Request_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_dbn_Opreate_dbn_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dbn_Opreate_dbn_Request_descriptor,
              new java.lang.String[] { "OpreateType", "AddJettonScore", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
