// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wsk/sxth.proto

package protobuf.clazz.sxth;

public final class SxthRsp {
  private SxthRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RefreshScore_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 user_get_score = 1;
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserGetScoreList();
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getUserGetScoreCount();
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getUserGetScore(int index);

    // optional int32 table_score = 2;
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    boolean hasTableScore();
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    int getTableScore();

    // repeated int32 award_score = 3;
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    java.util.List<java.lang.Integer> getAwardScoreList();
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    int getAwardScoreCount();
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    int getAwardScore(int index);

    // repeated int32 hua_score = 4;
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuaScoreList();
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    int getHuaScoreCount();
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    int getHuaScore(int index);

    // optional bool is_delay = 5;
    /**
     * <code>optional bool is_delay = 5;</code>
     *
     * <pre>
     *是否延迟
     * </pre>
     */
    boolean hasIsDelay();
    /**
     * <code>optional bool is_delay = 5;</code>
     *
     * <pre>
     *是否延迟
     * </pre>
     */
    boolean getIsDelay();
  }
  /**
   * Protobuf type {@code sxth.RefreshScore_Sxth}
   *
   * <pre>
   *刷新用户抓分 1005
   * </pre>
   */
  public static final class RefreshScore_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements RefreshScore_SxthOrBuilder {
    // Use RefreshScore_Sxth.newBuilder() to construct.
    private RefreshScore_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshScore_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshScore_Sxth defaultInstance;
    public static RefreshScore_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshScore_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshScore_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              userGetScore_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                userGetScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              tableScore_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                awardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              awardScore_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                awardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                awardScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                huaScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              huaScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                huaScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                huaScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              isDelay_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          awardScore_ = java.util.Collections.unmodifiableList(awardScore_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          huaScore_ = java.util.Collections.unmodifiableList(huaScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshScore_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshScore_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.class, protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshScore_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<RefreshScore_Sxth>() {
      public RefreshScore_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshScore_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshScore_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 user_get_score = 1;
    public static final int USER_GET_SCORE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> userGetScore_;
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserGetScoreList() {
      return userGetScore_;
    }
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getUserGetScoreCount() {
      return userGetScore_.size();
    }
    /**
     * <code>repeated int32 user_get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getUserGetScore(int index) {
      return userGetScore_.get(index);
    }

    // optional int32 table_score = 2;
    public static final int TABLE_SCORE_FIELD_NUMBER = 2;
    private int tableScore_;
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    public boolean hasTableScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    public int getTableScore() {
      return tableScore_;
    }

    // repeated int32 award_score = 3;
    public static final int AWARD_SCORE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> awardScore_;
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAwardScoreList() {
      return awardScore_;
    }
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    public int getAwardScoreCount() {
      return awardScore_.size();
    }
    /**
     * <code>repeated int32 award_score = 3;</code>
     *
     * <pre>
     *奖励分
     * </pre>
     */
    public int getAwardScore(int index) {
      return awardScore_.get(index);
    }

    // repeated int32 hua_score = 4;
    public static final int HUA_SCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> huaScore_;
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuaScoreList() {
      return huaScore_;
    }
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public int getHuaScoreCount() {
      return huaScore_.size();
    }
    /**
     * <code>repeated int32 hua_score = 4;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public int getHuaScore(int index) {
      return huaScore_.get(index);
    }

    // optional bool is_delay = 5;
    public static final int IS_DELAY_FIELD_NUMBER = 5;
    private boolean isDelay_;
    /**
     * <code>optional bool is_delay = 5;</code>
     *
     * <pre>
     *是否延迟
     * </pre>
     */
    public boolean hasIsDelay() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_delay = 5;</code>
     *
     * <pre>
     *是否延迟
     * </pre>
     */
    public boolean getIsDelay() {
      return isDelay_;
    }

    private void initFields() {
      userGetScore_ = java.util.Collections.emptyList();
      tableScore_ = 0;
      awardScore_ = java.util.Collections.emptyList();
      huaScore_ = java.util.Collections.emptyList();
      isDelay_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userGetScore_.size(); i++) {
        output.writeInt32(1, userGetScore_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, tableScore_);
      }
      for (int i = 0; i < awardScore_.size(); i++) {
        output.writeInt32(3, awardScore_.get(i));
      }
      for (int i = 0; i < huaScore_.size(); i++) {
        output.writeInt32(4, huaScore_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(5, isDelay_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userGetScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userGetScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserGetScoreList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tableScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < awardScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(awardScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAwardScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huaScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huaScore_.get(i));
        }
        size += dataSize;
        size += 1 * getHuaScoreList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isDelay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.RefreshScore_Sxth}
     *
     * <pre>
     *刷新用户抓分 1005
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.RefreshScore_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshScore_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshScore_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.class, protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        tableScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        awardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        huaScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        isDelay_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshScore_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth result = new protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userGetScore_ = userGetScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableScore_ = tableScore_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          awardScore_ = java.util.Collections.unmodifiableList(awardScore_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.awardScore_ = awardScore_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          huaScore_ = java.util.Collections.unmodifiableList(huaScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.huaScore_ = huaScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isDelay_ = isDelay_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth.getDefaultInstance()) return this;
        if (!other.userGetScore_.isEmpty()) {
          if (userGetScore_.isEmpty()) {
            userGetScore_ = other.userGetScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserGetScoreIsMutable();
            userGetScore_.addAll(other.userGetScore_);
          }
          onChanged();
        }
        if (other.hasTableScore()) {
          setTableScore(other.getTableScore());
        }
        if (!other.awardScore_.isEmpty()) {
          if (awardScore_.isEmpty()) {
            awardScore_ = other.awardScore_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAwardScoreIsMutable();
            awardScore_.addAll(other.awardScore_);
          }
          onChanged();
        }
        if (!other.huaScore_.isEmpty()) {
          if (huaScore_.isEmpty()) {
            huaScore_ = other.huaScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHuaScoreIsMutable();
            huaScore_.addAll(other.huaScore_);
          }
          onChanged();
        }
        if (other.hasIsDelay()) {
          setIsDelay(other.getIsDelay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.RefreshScore_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 user_get_score = 1;
      private java.util.List<java.lang.Integer> userGetScore_ = java.util.Collections.emptyList();
      private void ensureUserGetScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userGetScore_ = new java.util.ArrayList<java.lang.Integer>(userGetScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserGetScoreList() {
        return java.util.Collections.unmodifiableList(userGetScore_);
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getUserGetScoreCount() {
        return userGetScore_.size();
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getUserGetScore(int index) {
        return userGetScore_.get(index);
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder setUserGetScore(
          int index, int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addUserGetScore(int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addAllUserGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserGetScoreIsMutable();
        super.addAll(values, userGetScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder clearUserGetScore() {
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 table_score = 2;
      private int tableScore_ ;
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public boolean hasTableScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public int getTableScore() {
        return tableScore_;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public Builder setTableScore(int value) {
        bitField0_ |= 0x00000002;
        tableScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public Builder clearTableScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 award_score = 3;
      private java.util.List<java.lang.Integer> awardScore_ = java.util.Collections.emptyList();
      private void ensureAwardScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          awardScore_ = new java.util.ArrayList<java.lang.Integer>(awardScore_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAwardScoreList() {
        return java.util.Collections.unmodifiableList(awardScore_);
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public int getAwardScoreCount() {
        return awardScore_.size();
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public int getAwardScore(int index) {
        return awardScore_.get(index);
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public Builder setAwardScore(
          int index, int value) {
        ensureAwardScoreIsMutable();
        awardScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public Builder addAwardScore(int value) {
        ensureAwardScoreIsMutable();
        awardScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public Builder addAllAwardScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAwardScoreIsMutable();
        super.addAll(values, awardScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 award_score = 3;</code>
       *
       * <pre>
       *奖励分
       * </pre>
       */
      public Builder clearAwardScore() {
        awardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 hua_score = 4;
      private java.util.List<java.lang.Integer> huaScore_ = java.util.Collections.emptyList();
      private void ensureHuaScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          huaScore_ = new java.util.ArrayList<java.lang.Integer>(huaScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuaScoreList() {
        return java.util.Collections.unmodifiableList(huaScore_);
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public int getHuaScoreCount() {
        return huaScore_.size();
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public int getHuaScore(int index) {
        return huaScore_.get(index);
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder setHuaScore(
          int index, int value) {
        ensureHuaScoreIsMutable();
        huaScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder addHuaScore(int value) {
        ensureHuaScoreIsMutable();
        huaScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder addAllHuaScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuaScoreIsMutable();
        super.addAll(values, huaScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_score = 4;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder clearHuaScore() {
        huaScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional bool is_delay = 5;
      private boolean isDelay_ ;
      /**
       * <code>optional bool is_delay = 5;</code>
       *
       * <pre>
       *是否延迟
       * </pre>
       */
      public boolean hasIsDelay() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool is_delay = 5;</code>
       *
       * <pre>
       *是否延迟
       * </pre>
       */
      public boolean getIsDelay() {
        return isDelay_;
      }
      /**
       * <code>optional bool is_delay = 5;</code>
       *
       * <pre>
       *是否延迟
       * </pre>
       */
      public Builder setIsDelay(boolean value) {
        bitField0_ |= 0x00000010;
        isDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_delay = 5;</code>
       *
       * <pre>
       *是否延迟
       * </pre>
       */
      public Builder clearIsDelay() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isDelay_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.RefreshScore_Sxth)
    }

    static {
      defaultInstance = new RefreshScore_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.RefreshScore_Sxth)
  }

  public interface OutCardDataWsk_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 out_card_player = 1;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    boolean hasOutCardPlayer();
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    int getOutCardPlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 cards_count = 3;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    boolean hasCardsCount();
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getCardsCount();

    // optional int32 card_type = 4;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType();

    // optional int32 cur_player = 5;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurPlayer();
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurPlayer();

    // repeated int32 pr_cards_data = 6;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 7;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 8;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional bool is_first_out = 9;
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    boolean getIsFirstOut();

    // optional int32 display_time = 10;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated .Int32ArrayResponse user_can_out_data = 11;
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getUserCanOutDataList();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index);
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getUserCanOutDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
        int index);

    // repeated int32 user_can_out_count = 12;
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutCountList();
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCountCount();
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCount(int index);

    // repeated int32 user_can_out_type = 18;
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutTypeList();
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getUserCanOutTypeCount();
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getUserCanOutType(int index);

    // repeated int32 user_get_score = 13;
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserGetScoreList();
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    int getUserGetScoreCount();
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    int getUserGetScore(int index);

    // repeated int32 hand_card_count = 14;
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 15;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);

    // repeated int32 win_order = 16;
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);

    // optional int32 is_current_first_out = 17;
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    boolean hasIsCurrentFirstOut();
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    int getIsCurrentFirstOut();

    // repeated int32 boom_card_data_count = 19;
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getBoomCardDataCountList();
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    int getBoomCardDataCountCount();
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    int getBoomCardDataCount(int index);

    // repeated .Int32ArrayResponse boom_card_data = 20;
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getBoomCardDataList();
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getBoomCardData(int index);
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    int getBoomCardDataCount();
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getBoomCardDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getBoomCardDataOrBuilder(
        int index);

    // repeated int32 five_ten_k_card_data_count = 21;
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getFiveTenKCardDataCountList();
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    int getFiveTenKCardDataCountCount();
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    int getFiveTenKCardDataCount(int index);

    // repeated .Int32ArrayResponse five_ten_k_card_data = 22;
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getFiveTenKCardDataList();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardData(int index);
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    int getFiveTenKCardDataCount();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getFiveTenKCardDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataOrBuilder(
        int index);

    // repeated int32 tonghua_card_data_count = 23;
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getTonghuaCardDataCountList();
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    int getTonghuaCardDataCountCount();
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    int getTonghuaCardDataCount(int index);

    // repeated .Int32ArrayResponse tonghua_card_data = 24;
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getTonghuaCardDataList();
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getTonghuaCardData(int index);
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    int getTonghuaCardDataCount();
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getTonghuaCardDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTonghuaCardDataOrBuilder(
        int index);

    // repeated int32 five_ten_k_card_data_count_fu = 25;
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getFiveTenKCardDataCountFuList();
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    int getFiveTenKCardDataCountFuCount();
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    int getFiveTenKCardDataCountFu(int index);

    // repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getFiveTenKCardDataFuList();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardDataFu(int index);
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    int getFiveTenKCardDataFuCount();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getFiveTenKCardDataFuOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataFuOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code sxth.OutCardDataWsk_Sxth}
   *
   * <pre>
   *用户出牌 1003
   * </pre>
   */
  public static final class OutCardDataWsk_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements OutCardDataWsk_SxthOrBuilder {
    // Use OutCardDataWsk_Sxth.newBuilder() to construct.
    private OutCardDataWsk_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OutCardDataWsk_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OutCardDataWsk_Sxth defaultInstance;
    public static OutCardDataWsk_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public OutCardDataWsk_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OutCardDataWsk_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              outCardPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardsCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              curPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              isFirstOut_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                userCanOutData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000400;
              }
              userCanOutData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              userCanOutCount_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              userGetScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userGetScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00008000;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              bitField0_ |= 0x00000100;
              isCurrentFirstOut_ = input.readInt32();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                userCanOutType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              userCanOutType_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                userCanOutType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                boomCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              boomCardDataCount_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                boomCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                boomCardDataCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                boomCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00080000;
              }
              boomCardData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                fiveTenKCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              fiveTenKCardDataCount_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                fiveTenKCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fiveTenKCardDataCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                fiveTenKCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00200000;
              }
              fiveTenKCardData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 184: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                tonghuaCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              tonghuaCardDataCount_.add(input.readInt32());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                tonghuaCardDataCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                tonghuaCardDataCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 194: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                tonghuaCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00800000;
              }
              tonghuaCardData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 200: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                fiveTenKCardDataCountFu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              fiveTenKCardDataCountFu_.add(input.readInt32());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                fiveTenKCardDataCountFu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fiveTenKCardDataCountFu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 210: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                fiveTenKCardDataFu_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x02000000;
              }
              fiveTenKCardDataFu_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          userCanOutCount_ = java.util.Collections.unmodifiableList(userCanOutCount_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutType_ = java.util.Collections.unmodifiableList(userCanOutType_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          boomCardDataCount_ = java.util.Collections.unmodifiableList(boomCardDataCount_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          boomCardData_ = java.util.Collections.unmodifiableList(boomCardData_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          fiveTenKCardDataCount_ = java.util.Collections.unmodifiableList(fiveTenKCardDataCount_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          fiveTenKCardData_ = java.util.Collections.unmodifiableList(fiveTenKCardData_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          tonghuaCardDataCount_ = java.util.Collections.unmodifiableList(tonghuaCardDataCount_);
        }
        if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
          tonghuaCardData_ = java.util.Collections.unmodifiableList(tonghuaCardData_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          fiveTenKCardDataCountFu_ = java.util.Collections.unmodifiableList(fiveTenKCardDataCountFu_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          fiveTenKCardDataFu_ = java.util.Collections.unmodifiableList(fiveTenKCardDataFu_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_OutCardDataWsk_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_OutCardDataWsk_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<OutCardDataWsk_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<OutCardDataWsk_Sxth>() {
      public OutCardDataWsk_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutCardDataWsk_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OutCardDataWsk_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 out_card_player = 1;
    public static final int OUT_CARD_PLAYER_FIELD_NUMBER = 1;
    private int outCardPlayer_;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public boolean hasOutCardPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public int getOutCardPlayer() {
      return outCardPlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 cards_count = 3;
    public static final int CARDS_COUNT_FIELD_NUMBER = 3;
    private int cardsCount_;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public boolean hasCardsCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getCardsCount() {
      return cardsCount_;
    }

    // optional int32 card_type = 4;
    public static final int CARD_TYPE_FIELD_NUMBER = 4;
    private int cardType_;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 cur_player = 5;
    public static final int CUR_PLAYER_FIELD_NUMBER = 5;
    private int curPlayer_;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurPlayer() {
      return curPlayer_;
    }

    // repeated int32 pr_cards_data = 6;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 7;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 7;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 8;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 8;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional bool is_first_out = 9;
    public static final int IS_FIRST_OUT_FIELD_NUMBER = 9;
    private boolean isFirstOut_;
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    public boolean getIsFirstOut() {
      return isFirstOut_;
    }

    // optional int32 display_time = 10;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 10;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated .Int32ArrayResponse user_can_out_data = 11;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 11;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> userCanOutData_;
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getUserCanOutDataOrBuilderList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
        int index) {
      return userCanOutData_.get(index);
    }

    // repeated int32 user_can_out_count = 12;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> userCanOutCount_;
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutCountList() {
      return userCanOutCount_;
    }
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCountCount() {
      return userCanOutCount_.size();
    }
    /**
     * <code>repeated int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCount(int index) {
      return userCanOutCount_.get(index);
    }

    // repeated int32 user_can_out_type = 18;
    public static final int USER_CAN_OUT_TYPE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> userCanOutType_;
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutTypeList() {
      return userCanOutType_;
    }
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getUserCanOutTypeCount() {
      return userCanOutType_.size();
    }
    /**
     * <code>repeated int32 user_can_out_type = 18;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getUserCanOutType(int index) {
      return userCanOutType_.get(index);
    }

    // repeated int32 user_get_score = 13;
    public static final int USER_GET_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> userGetScore_;
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserGetScoreList() {
      return userGetScore_;
    }
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public int getUserGetScoreCount() {
      return userGetScore_.size();
    }
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public int getUserGetScore(int index) {
      return userGetScore_.get(index);
    }

    // repeated int32 hand_card_count = 14;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 15;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 15;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    // repeated int32 win_order = 16;
    public static final int WIN_ORDER_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    // optional int32 is_current_first_out = 17;
    public static final int IS_CURRENT_FIRST_OUT_FIELD_NUMBER = 17;
    private int isCurrentFirstOut_;
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    public boolean hasIsCurrentFirstOut() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    public int getIsCurrentFirstOut() {
      return isCurrentFirstOut_;
    }

    // repeated int32 boom_card_data_count = 19;
    public static final int BOOM_CARD_DATA_COUNT_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> boomCardDataCount_;
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBoomCardDataCountList() {
      return boomCardDataCount_;
    }
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    public int getBoomCardDataCountCount() {
      return boomCardDataCount_.size();
    }
    /**
     * <code>repeated int32 boom_card_data_count = 19;</code>
     *
     * <pre>
     *炸弹数据
     * </pre>
     */
    public int getBoomCardDataCount(int index) {
      return boomCardDataCount_.get(index);
    }

    // repeated .Int32ArrayResponse boom_card_data = 20;
    public static final int BOOM_CARD_DATA_FIELD_NUMBER = 20;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> boomCardData_;
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getBoomCardDataList() {
      return boomCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getBoomCardDataOrBuilderList() {
      return boomCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    public int getBoomCardDataCount() {
      return boomCardData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getBoomCardData(int index) {
      return boomCardData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getBoomCardDataOrBuilder(
        int index) {
      return boomCardData_.get(index);
    }

    // repeated int32 five_ten_k_card_data_count = 21;
    public static final int FIVE_TEN_K_CARD_DATA_COUNT_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> fiveTenKCardDataCount_;
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFiveTenKCardDataCountList() {
      return fiveTenKCardDataCount_;
    }
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public int getFiveTenKCardDataCountCount() {
      return fiveTenKCardDataCount_.size();
    }
    /**
     * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public int getFiveTenKCardDataCount(int index) {
      return fiveTenKCardDataCount_.get(index);
    }

    // repeated .Int32ArrayResponse five_ten_k_card_data = 22;
    public static final int FIVE_TEN_K_CARD_DATA_FIELD_NUMBER = 22;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> fiveTenKCardData_;
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getFiveTenKCardDataList() {
      return fiveTenKCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getFiveTenKCardDataOrBuilderList() {
      return fiveTenKCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    public int getFiveTenKCardDataCount() {
      return fiveTenKCardData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardData(int index) {
      return fiveTenKCardData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataOrBuilder(
        int index) {
      return fiveTenKCardData_.get(index);
    }

    // repeated int32 tonghua_card_data_count = 23;
    public static final int TONGHUA_CARD_DATA_COUNT_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Integer> tonghuaCardDataCount_;
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTonghuaCardDataCountList() {
      return tonghuaCardDataCount_;
    }
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    public int getTonghuaCardDataCountCount() {
      return tonghuaCardDataCount_.size();
    }
    /**
     * <code>repeated int32 tonghua_card_data_count = 23;</code>
     *
     * <pre>
     *同花数据
     * </pre>
     */
    public int getTonghuaCardDataCount(int index) {
      return tonghuaCardDataCount_.get(index);
    }

    // repeated .Int32ArrayResponse tonghua_card_data = 24;
    public static final int TONGHUA_CARD_DATA_FIELD_NUMBER = 24;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> tonghuaCardData_;
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getTonghuaCardDataList() {
      return tonghuaCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getTonghuaCardDataOrBuilderList() {
      return tonghuaCardData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    public int getTonghuaCardDataCount() {
      return tonghuaCardData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getTonghuaCardData(int index) {
      return tonghuaCardData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTonghuaCardDataOrBuilder(
        int index) {
      return tonghuaCardData_.get(index);
    }

    // repeated int32 five_ten_k_card_data_count_fu = 25;
    public static final int FIVE_TEN_K_CARD_DATA_COUNT_FU_FIELD_NUMBER = 25;
    private java.util.List<java.lang.Integer> fiveTenKCardDataCountFu_;
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFiveTenKCardDataCountFuList() {
      return fiveTenKCardDataCountFu_;
    }
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public int getFiveTenKCardDataCountFuCount() {
      return fiveTenKCardDataCountFu_.size();
    }
    /**
     * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
     *
     * <pre>
     *510K数据
     * </pre>
     */
    public int getFiveTenKCardDataCountFu(int index) {
      return fiveTenKCardDataCountFu_.get(index);
    }

    // repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;
    public static final int FIVE_TEN_K_CARD_DATA_FU_FIELD_NUMBER = 26;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> fiveTenKCardDataFu_;
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getFiveTenKCardDataFuList() {
      return fiveTenKCardDataFu_;
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getFiveTenKCardDataFuOrBuilderList() {
      return fiveTenKCardDataFu_;
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    public int getFiveTenKCardDataFuCount() {
      return fiveTenKCardDataFu_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardDataFu(int index) {
      return fiveTenKCardDataFu_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataFuOrBuilder(
        int index) {
      return fiveTenKCardDataFu_.get(index);
    }

    private void initFields() {
      outCardPlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardsCount_ = 0;
      cardType_ = 0;
      curPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      isFirstOut_ = false;
      displayTime_ = 0;
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = java.util.Collections.emptyList();
      userCanOutType_ = java.util.Collections.emptyList();
      userGetScore_ = java.util.Collections.emptyList();
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
      winOrder_ = java.util.Collections.emptyList();
      isCurrentFirstOut_ = 0;
      boomCardDataCount_ = java.util.Collections.emptyList();
      boomCardData_ = java.util.Collections.emptyList();
      fiveTenKCardDataCount_ = java.util.Collections.emptyList();
      fiveTenKCardData_ = java.util.Collections.emptyList();
      tonghuaCardDataCount_ = java.util.Collections.emptyList();
      tonghuaCardData_ = java.util.Collections.emptyList();
      fiveTenKCardDataCountFu_ = java.util.Collections.emptyList();
      fiveTenKCardDataFu_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, outCardPlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, curPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(6, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(9, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, displayTime_);
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeMessage(11, userCanOutData_.get(i));
      }
      for (int i = 0; i < userCanOutCount_.size(); i++) {
        output.writeInt32(12, userCanOutCount_.get(i));
      }
      for (int i = 0; i < userGetScore_.size(); i++) {
        output.writeInt32(13, userGetScore_.get(i));
      }
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(14, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(15, handCardsData_.get(i));
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(16, winOrder_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(17, isCurrentFirstOut_);
      }
      for (int i = 0; i < userCanOutType_.size(); i++) {
        output.writeInt32(18, userCanOutType_.get(i));
      }
      for (int i = 0; i < boomCardDataCount_.size(); i++) {
        output.writeInt32(19, boomCardDataCount_.get(i));
      }
      for (int i = 0; i < boomCardData_.size(); i++) {
        output.writeMessage(20, boomCardData_.get(i));
      }
      for (int i = 0; i < fiveTenKCardDataCount_.size(); i++) {
        output.writeInt32(21, fiveTenKCardDataCount_.get(i));
      }
      for (int i = 0; i < fiveTenKCardData_.size(); i++) {
        output.writeMessage(22, fiveTenKCardData_.get(i));
      }
      for (int i = 0; i < tonghuaCardDataCount_.size(); i++) {
        output.writeInt32(23, tonghuaCardDataCount_.get(i));
      }
      for (int i = 0; i < tonghuaCardData_.size(); i++) {
        output.writeMessage(24, tonghuaCardData_.get(i));
      }
      for (int i = 0; i < fiveTenKCardDataCountFu_.size(); i++) {
        output.writeInt32(25, fiveTenKCardDataCountFu_.get(i));
      }
      for (int i = 0; i < fiveTenKCardDataFu_.size(); i++) {
        output.writeMessage(26, fiveTenKCardDataFu_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, curPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, displayTime_);
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, userCanOutData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutCount_.get(i));
        }
        size += dataSize;
        size += 1 * getUserCanOutCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userGetScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userGetScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserGetScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, handCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 2 * getWinOrderList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, isCurrentFirstOut_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutType_.get(i));
        }
        size += dataSize;
        size += 2 * getUserCanOutTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < boomCardDataCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(boomCardDataCount_.get(i));
        }
        size += dataSize;
        size += 2 * getBoomCardDataCountList().size();
      }
      for (int i = 0; i < boomCardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, boomCardData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fiveTenKCardDataCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fiveTenKCardDataCount_.get(i));
        }
        size += dataSize;
        size += 2 * getFiveTenKCardDataCountList().size();
      }
      for (int i = 0; i < fiveTenKCardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, fiveTenKCardData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tonghuaCardDataCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(tonghuaCardDataCount_.get(i));
        }
        size += dataSize;
        size += 2 * getTonghuaCardDataCountList().size();
      }
      for (int i = 0; i < tonghuaCardData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, tonghuaCardData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fiveTenKCardDataCountFu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fiveTenKCardDataCountFu_.get(i));
        }
        size += dataSize;
        size += 2 * getFiveTenKCardDataCountFuList().size();
      }
      for (int i = 0; i < fiveTenKCardDataFu_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, fiveTenKCardDataFu_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.OutCardDataWsk_Sxth}
     *
     * <pre>
     *用户出牌 1003
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_OutCardDataWsk_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_OutCardDataWsk_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserCanOutDataFieldBuilder();
          getHandCardsDataFieldBuilder();
          getBoomCardDataFieldBuilder();
          getFiveTenKCardDataFieldBuilder();
          getTonghuaCardDataFieldBuilder();
          getFiveTenKCardDataFuFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        outCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        curPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        isFirstOut_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (userCanOutDataBuilder_ == null) {
          userCanOutData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          userCanOutDataBuilder_.clear();
        }
        userCanOutCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        userCanOutType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          handCardsDataBuilder_.clear();
        }
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        isCurrentFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        boomCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        if (boomCardDataBuilder_ == null) {
          boomCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          boomCardDataBuilder_.clear();
        }
        fiveTenKCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        if (fiveTenKCardDataBuilder_ == null) {
          fiveTenKCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          fiveTenKCardDataBuilder_.clear();
        }
        tonghuaCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        if (tonghuaCardDataBuilder_ == null) {
          tonghuaCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
        } else {
          tonghuaCardDataBuilder_.clear();
        }
        fiveTenKCardDataCountFu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        if (fiveTenKCardDataFuBuilder_ == null) {
          fiveTenKCardDataFu_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
        } else {
          fiveTenKCardDataFuBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_OutCardDataWsk_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth result = new protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outCardPlayer_ = outCardPlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardsCount_ = cardsCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curPlayer_ = curPlayer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (userCanOutDataBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.userCanOutData_ = userCanOutData_;
        } else {
          result.userCanOutData_ = userCanOutDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          userCanOutCount_ = java.util.Collections.unmodifiableList(userCanOutCount_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutType_ = java.util.Collections.unmodifiableList(userCanOutType_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.userCanOutType_ = userCanOutType_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.userGetScore_ = userGetScore_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.winOrder_ = winOrder_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isCurrentFirstOut_ = isCurrentFirstOut_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          boomCardDataCount_ = java.util.Collections.unmodifiableList(boomCardDataCount_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.boomCardDataCount_ = boomCardDataCount_;
        if (boomCardDataBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            boomCardData_ = java.util.Collections.unmodifiableList(boomCardData_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.boomCardData_ = boomCardData_;
        } else {
          result.boomCardData_ = boomCardDataBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          fiveTenKCardDataCount_ = java.util.Collections.unmodifiableList(fiveTenKCardDataCount_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.fiveTenKCardDataCount_ = fiveTenKCardDataCount_;
        if (fiveTenKCardDataBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            fiveTenKCardData_ = java.util.Collections.unmodifiableList(fiveTenKCardData_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.fiveTenKCardData_ = fiveTenKCardData_;
        } else {
          result.fiveTenKCardData_ = fiveTenKCardDataBuilder_.build();
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          tonghuaCardDataCount_ = java.util.Collections.unmodifiableList(tonghuaCardDataCount_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.tonghuaCardDataCount_ = tonghuaCardDataCount_;
        if (tonghuaCardDataBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000)) {
            tonghuaCardData_ = java.util.Collections.unmodifiableList(tonghuaCardData_);
            bitField0_ = (bitField0_ & ~0x00800000);
          }
          result.tonghuaCardData_ = tonghuaCardData_;
        } else {
          result.tonghuaCardData_ = tonghuaCardDataBuilder_.build();
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          fiveTenKCardDataCountFu_ = java.util.Collections.unmodifiableList(fiveTenKCardDataCountFu_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.fiveTenKCardDataCountFu_ = fiveTenKCardDataCountFu_;
        if (fiveTenKCardDataFuBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000)) {
            fiveTenKCardDataFu_ = java.util.Collections.unmodifiableList(fiveTenKCardDataFu_);
            bitField0_ = (bitField0_ & ~0x02000000);
          }
          result.fiveTenKCardDataFu_ = fiveTenKCardDataFu_;
        } else {
          result.fiveTenKCardDataFu_ = fiveTenKCardDataFuBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth.getDefaultInstance()) return this;
        if (other.hasOutCardPlayer()) {
          setOutCardPlayer(other.getOutCardPlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardsCount()) {
          setCardsCount(other.getCardsCount());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasCurPlayer()) {
          setCurPlayer(other.getCurPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (userCanOutDataBuilder_ == null) {
          if (!other.userCanOutData_.isEmpty()) {
            if (userCanOutData_.isEmpty()) {
              userCanOutData_ = other.userCanOutData_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureUserCanOutDataIsMutable();
              userCanOutData_.addAll(other.userCanOutData_);
            }
            onChanged();
          }
        } else {
          if (!other.userCanOutData_.isEmpty()) {
            if (userCanOutDataBuilder_.isEmpty()) {
              userCanOutDataBuilder_.dispose();
              userCanOutDataBuilder_ = null;
              userCanOutData_ = other.userCanOutData_;
              bitField0_ = (bitField0_ & ~0x00000400);
              userCanOutDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUserCanOutDataFieldBuilder() : null;
            } else {
              userCanOutDataBuilder_.addAllMessages(other.userCanOutData_);
            }
          }
        }
        if (!other.userCanOutCount_.isEmpty()) {
          if (userCanOutCount_.isEmpty()) {
            userCanOutCount_ = other.userCanOutCount_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureUserCanOutCountIsMutable();
            userCanOutCount_.addAll(other.userCanOutCount_);
          }
          onChanged();
        }
        if (!other.userCanOutType_.isEmpty()) {
          if (userCanOutType_.isEmpty()) {
            userCanOutType_ = other.userCanOutType_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureUserCanOutTypeIsMutable();
            userCanOutType_.addAll(other.userCanOutType_);
          }
          onChanged();
        }
        if (!other.userGetScore_.isEmpty()) {
          if (userGetScore_.isEmpty()) {
            userGetScore_ = other.userGetScore_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureUserGetScoreIsMutable();
            userGetScore_.addAll(other.userGetScore_);
          }
          onChanged();
        }
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        if (other.hasIsCurrentFirstOut()) {
          setIsCurrentFirstOut(other.getIsCurrentFirstOut());
        }
        if (!other.boomCardDataCount_.isEmpty()) {
          if (boomCardDataCount_.isEmpty()) {
            boomCardDataCount_ = other.boomCardDataCount_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureBoomCardDataCountIsMutable();
            boomCardDataCount_.addAll(other.boomCardDataCount_);
          }
          onChanged();
        }
        if (boomCardDataBuilder_ == null) {
          if (!other.boomCardData_.isEmpty()) {
            if (boomCardData_.isEmpty()) {
              boomCardData_ = other.boomCardData_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureBoomCardDataIsMutable();
              boomCardData_.addAll(other.boomCardData_);
            }
            onChanged();
          }
        } else {
          if (!other.boomCardData_.isEmpty()) {
            if (boomCardDataBuilder_.isEmpty()) {
              boomCardDataBuilder_.dispose();
              boomCardDataBuilder_ = null;
              boomCardData_ = other.boomCardData_;
              bitField0_ = (bitField0_ & ~0x00080000);
              boomCardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoomCardDataFieldBuilder() : null;
            } else {
              boomCardDataBuilder_.addAllMessages(other.boomCardData_);
            }
          }
        }
        if (!other.fiveTenKCardDataCount_.isEmpty()) {
          if (fiveTenKCardDataCount_.isEmpty()) {
            fiveTenKCardDataCount_ = other.fiveTenKCardDataCount_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureFiveTenKCardDataCountIsMutable();
            fiveTenKCardDataCount_.addAll(other.fiveTenKCardDataCount_);
          }
          onChanged();
        }
        if (fiveTenKCardDataBuilder_ == null) {
          if (!other.fiveTenKCardData_.isEmpty()) {
            if (fiveTenKCardData_.isEmpty()) {
              fiveTenKCardData_ = other.fiveTenKCardData_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureFiveTenKCardDataIsMutable();
              fiveTenKCardData_.addAll(other.fiveTenKCardData_);
            }
            onChanged();
          }
        } else {
          if (!other.fiveTenKCardData_.isEmpty()) {
            if (fiveTenKCardDataBuilder_.isEmpty()) {
              fiveTenKCardDataBuilder_.dispose();
              fiveTenKCardDataBuilder_ = null;
              fiveTenKCardData_ = other.fiveTenKCardData_;
              bitField0_ = (bitField0_ & ~0x00200000);
              fiveTenKCardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFiveTenKCardDataFieldBuilder() : null;
            } else {
              fiveTenKCardDataBuilder_.addAllMessages(other.fiveTenKCardData_);
            }
          }
        }
        if (!other.tonghuaCardDataCount_.isEmpty()) {
          if (tonghuaCardDataCount_.isEmpty()) {
            tonghuaCardDataCount_ = other.tonghuaCardDataCount_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureTonghuaCardDataCountIsMutable();
            tonghuaCardDataCount_.addAll(other.tonghuaCardDataCount_);
          }
          onChanged();
        }
        if (tonghuaCardDataBuilder_ == null) {
          if (!other.tonghuaCardData_.isEmpty()) {
            if (tonghuaCardData_.isEmpty()) {
              tonghuaCardData_ = other.tonghuaCardData_;
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              ensureTonghuaCardDataIsMutable();
              tonghuaCardData_.addAll(other.tonghuaCardData_);
            }
            onChanged();
          }
        } else {
          if (!other.tonghuaCardData_.isEmpty()) {
            if (tonghuaCardDataBuilder_.isEmpty()) {
              tonghuaCardDataBuilder_.dispose();
              tonghuaCardDataBuilder_ = null;
              tonghuaCardData_ = other.tonghuaCardData_;
              bitField0_ = (bitField0_ & ~0x00800000);
              tonghuaCardDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTonghuaCardDataFieldBuilder() : null;
            } else {
              tonghuaCardDataBuilder_.addAllMessages(other.tonghuaCardData_);
            }
          }
        }
        if (!other.fiveTenKCardDataCountFu_.isEmpty()) {
          if (fiveTenKCardDataCountFu_.isEmpty()) {
            fiveTenKCardDataCountFu_ = other.fiveTenKCardDataCountFu_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureFiveTenKCardDataCountFuIsMutable();
            fiveTenKCardDataCountFu_.addAll(other.fiveTenKCardDataCountFu_);
          }
          onChanged();
        }
        if (fiveTenKCardDataFuBuilder_ == null) {
          if (!other.fiveTenKCardDataFu_.isEmpty()) {
            if (fiveTenKCardDataFu_.isEmpty()) {
              fiveTenKCardDataFu_ = other.fiveTenKCardDataFu_;
              bitField0_ = (bitField0_ & ~0x02000000);
            } else {
              ensureFiveTenKCardDataFuIsMutable();
              fiveTenKCardDataFu_.addAll(other.fiveTenKCardDataFu_);
            }
            onChanged();
          }
        } else {
          if (!other.fiveTenKCardDataFu_.isEmpty()) {
            if (fiveTenKCardDataFuBuilder_.isEmpty()) {
              fiveTenKCardDataFuBuilder_.dispose();
              fiveTenKCardDataFuBuilder_ = null;
              fiveTenKCardDataFu_ = other.fiveTenKCardDataFu_;
              bitField0_ = (bitField0_ & ~0x02000000);
              fiveTenKCardDataFuBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFiveTenKCardDataFuFieldBuilder() : null;
            } else {
              fiveTenKCardDataFuBuilder_.addAllMessages(other.fiveTenKCardDataFu_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.OutCardDataWsk_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 out_card_player = 1;
      private int outCardPlayer_ ;
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public boolean hasOutCardPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public int getOutCardPlayer() {
        return outCardPlayer_;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder setOutCardPlayer(int value) {
        bitField0_ |= 0x00000001;
        outCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder clearOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 cards_count = 3;
      private int cardsCount_ ;
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public boolean hasCardsCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getCardsCount() {
        return cardsCount_;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setCardsCount(int value) {
        bitField0_ |= 0x00000004;
        cardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_type = 4;
      private int cardType_ ;
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000008;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_player = 5;
      private int curPlayer_ ;
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurPlayer() {
        return curPlayer_;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurPlayer(int value) {
        bitField0_ |= 0x00000010;
        curPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        curPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 6;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 7;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000040;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 8;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000080;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_first_out = 9;
      private boolean isFirstOut_ ;
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public boolean getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public Builder setIsFirstOut(boolean value) {
        bitField0_ |= 0x00000100;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isFirstOut_ = false;
        onChanged();
        return this;
      }

      // optional int32 display_time = 10;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000200;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse user_can_out_data = 11;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> userCanOutData_ =
        java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          userCanOutData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(userCanOutData_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> userCanOutDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getUserCanOutDataList() {
        if (userCanOutDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(userCanOutData_);
        } else {
          return userCanOutDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.size();
        } else {
          return userCanOutDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index) {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.get(index);
        } else {
          return userCanOutDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.set(index, value);
          onChanged();
        } else {
          userCanOutDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.set(index, builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(value);
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(index, value);
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(index, builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          super.addAll(values, userCanOutData_);
          onChanged();
        } else {
          userCanOutDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        if (userCanOutDataBuilder_ == null) {
          userCanOutData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          userCanOutDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder removeUserCanOutData(int index) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.remove(index);
          onChanged();
        } else {
          userCanOutDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getUserCanOutDataBuilder(
          int index) {
        return getUserCanOutDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
          int index) {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.get(index);  } else {
          return userCanOutDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getUserCanOutDataOrBuilderList() {
        if (userCanOutDataBuilder_ != null) {
          return userCanOutDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(userCanOutData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addUserCanOutDataBuilder() {
        return getUserCanOutDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addUserCanOutDataBuilder(
          int index) {
        return getUserCanOutDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getUserCanOutDataBuilderList() {
        return getUserCanOutDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getUserCanOutDataFieldBuilder() {
        if (userCanOutDataBuilder_ == null) {
          userCanOutDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  userCanOutData_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          userCanOutData_ = null;
        }
        return userCanOutDataBuilder_;
      }

      // repeated int32 user_can_out_count = 12;
      private java.util.List<java.lang.Integer> userCanOutCount_ = java.util.Collections.emptyList();
      private void ensureUserCanOutCountIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>(userCanOutCount_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutCountList() {
        return java.util.Collections.unmodifiableList(userCanOutCount_);
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCountCount() {
        return userCanOutCount_.size();
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCount(int index) {
        return userCanOutCount_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setUserCanOutCount(
          int index, int value) {
        ensureUserCanOutCountIsMutable();
        userCanOutCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder addUserCanOutCount(int value) {
        ensureUserCanOutCountIsMutable();
        userCanOutCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder addAllUserCanOutCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutCountIsMutable();
        super.addAll(values, userCanOutCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        userCanOutCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 user_can_out_type = 18;
      private java.util.List<java.lang.Integer> userCanOutType_ = java.util.Collections.emptyList();
      private void ensureUserCanOutTypeIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          userCanOutType_ = new java.util.ArrayList<java.lang.Integer>(userCanOutType_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutTypeList() {
        return java.util.Collections.unmodifiableList(userCanOutType_);
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getUserCanOutTypeCount() {
        return userCanOutType_.size();
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getUserCanOutType(int index) {
        return userCanOutType_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setUserCanOutType(
          int index, int value) {
        ensureUserCanOutTypeIsMutable();
        userCanOutType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addUserCanOutType(int value) {
        ensureUserCanOutTypeIsMutable();
        userCanOutType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addAllUserCanOutType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutTypeIsMutable();
        super.addAll(values, userCanOutType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 18;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearUserCanOutType() {
        userCanOutType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 user_get_score = 13;
      private java.util.List<java.lang.Integer> userGetScore_ = java.util.Collections.emptyList();
      private void ensureUserGetScoreIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          userGetScore_ = new java.util.ArrayList<java.lang.Integer>(userGetScore_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserGetScoreList() {
        return java.util.Collections.unmodifiableList(userGetScore_);
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public int getUserGetScoreCount() {
        return userGetScore_.size();
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public int getUserGetScore(int index) {
        return userGetScore_.get(index);
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder setUserGetScore(
          int index, int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder addUserGetScore(int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder addAllUserGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserGetScoreIsMutable();
        super.addAll(values, userGetScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder clearUserGetScore() {
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 hand_card_count = 14;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 15;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // repeated int32 win_order = 16;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // optional int32 is_current_first_out = 17;
      private int isCurrentFirstOut_ ;
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public boolean hasIsCurrentFirstOut() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public int getIsCurrentFirstOut() {
        return isCurrentFirstOut_;
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public Builder setIsCurrentFirstOut(int value) {
        bitField0_ |= 0x00020000;
        isCurrentFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public Builder clearIsCurrentFirstOut() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isCurrentFirstOut_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 boom_card_data_count = 19;
      private java.util.List<java.lang.Integer> boomCardDataCount_ = java.util.Collections.emptyList();
      private void ensureBoomCardDataCountIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          boomCardDataCount_ = new java.util.ArrayList<java.lang.Integer>(boomCardDataCount_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBoomCardDataCountList() {
        return java.util.Collections.unmodifiableList(boomCardDataCount_);
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public int getBoomCardDataCountCount() {
        return boomCardDataCount_.size();
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public int getBoomCardDataCount(int index) {
        return boomCardDataCount_.get(index);
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public Builder setBoomCardDataCount(
          int index, int value) {
        ensureBoomCardDataCountIsMutable();
        boomCardDataCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public Builder addBoomCardDataCount(int value) {
        ensureBoomCardDataCountIsMutable();
        boomCardDataCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public Builder addAllBoomCardDataCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBoomCardDataCountIsMutable();
        super.addAll(values, boomCardDataCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_data_count = 19;</code>
       *
       * <pre>
       *炸弹数据
       * </pre>
       */
      public Builder clearBoomCardDataCount() {
        boomCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse boom_card_data = 20;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> boomCardData_ =
        java.util.Collections.emptyList();
      private void ensureBoomCardDataIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          boomCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(boomCardData_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> boomCardDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getBoomCardDataList() {
        if (boomCardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boomCardData_);
        } else {
          return boomCardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public int getBoomCardDataCount() {
        if (boomCardDataBuilder_ == null) {
          return boomCardData_.size();
        } else {
          return boomCardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getBoomCardData(int index) {
        if (boomCardDataBuilder_ == null) {
          return boomCardData_.get(index);
        } else {
          return boomCardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder setBoomCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (boomCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoomCardDataIsMutable();
          boomCardData_.set(index, value);
          onChanged();
        } else {
          boomCardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder setBoomCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (boomCardDataBuilder_ == null) {
          ensureBoomCardDataIsMutable();
          boomCardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          boomCardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder addBoomCardData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (boomCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoomCardDataIsMutable();
          boomCardData_.add(value);
          onChanged();
        } else {
          boomCardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder addBoomCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (boomCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoomCardDataIsMutable();
          boomCardData_.add(index, value);
          onChanged();
        } else {
          boomCardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder addBoomCardData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (boomCardDataBuilder_ == null) {
          ensureBoomCardDataIsMutable();
          boomCardData_.add(builderForValue.build());
          onChanged();
        } else {
          boomCardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder addBoomCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (boomCardDataBuilder_ == null) {
          ensureBoomCardDataIsMutable();
          boomCardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          boomCardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder addAllBoomCardData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (boomCardDataBuilder_ == null) {
          ensureBoomCardDataIsMutable();
          super.addAll(values, boomCardData_);
          onChanged();
        } else {
          boomCardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder clearBoomCardData() {
        if (boomCardDataBuilder_ == null) {
          boomCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          boomCardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public Builder removeBoomCardData(int index) {
        if (boomCardDataBuilder_ == null) {
          ensureBoomCardDataIsMutable();
          boomCardData_.remove(index);
          onChanged();
        } else {
          boomCardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getBoomCardDataBuilder(
          int index) {
        return getBoomCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getBoomCardDataOrBuilder(
          int index) {
        if (boomCardDataBuilder_ == null) {
          return boomCardData_.get(index);  } else {
          return boomCardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getBoomCardDataOrBuilderList() {
        if (boomCardDataBuilder_ != null) {
          return boomCardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boomCardData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addBoomCardDataBuilder() {
        return getBoomCardDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addBoomCardDataBuilder(
          int index) {
        return getBoomCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse boom_card_data = 20;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getBoomCardDataBuilderList() {
        return getBoomCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getBoomCardDataFieldBuilder() {
        if (boomCardDataBuilder_ == null) {
          boomCardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  boomCardData_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          boomCardData_ = null;
        }
        return boomCardDataBuilder_;
      }

      // repeated int32 five_ten_k_card_data_count = 21;
      private java.util.List<java.lang.Integer> fiveTenKCardDataCount_ = java.util.Collections.emptyList();
      private void ensureFiveTenKCardDataCountIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          fiveTenKCardDataCount_ = new java.util.ArrayList<java.lang.Integer>(fiveTenKCardDataCount_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFiveTenKCardDataCountList() {
        return java.util.Collections.unmodifiableList(fiveTenKCardDataCount_);
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public int getFiveTenKCardDataCountCount() {
        return fiveTenKCardDataCount_.size();
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public int getFiveTenKCardDataCount(int index) {
        return fiveTenKCardDataCount_.get(index);
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder setFiveTenKCardDataCount(
          int index, int value) {
        ensureFiveTenKCardDataCountIsMutable();
        fiveTenKCardDataCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder addFiveTenKCardDataCount(int value) {
        ensureFiveTenKCardDataCountIsMutable();
        fiveTenKCardDataCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder addAllFiveTenKCardDataCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFiveTenKCardDataCountIsMutable();
        super.addAll(values, fiveTenKCardDataCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count = 21;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder clearFiveTenKCardDataCount() {
        fiveTenKCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse five_ten_k_card_data = 22;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> fiveTenKCardData_ =
        java.util.Collections.emptyList();
      private void ensureFiveTenKCardDataIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          fiveTenKCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(fiveTenKCardData_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> fiveTenKCardDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getFiveTenKCardDataList() {
        if (fiveTenKCardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fiveTenKCardData_);
        } else {
          return fiveTenKCardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public int getFiveTenKCardDataCount() {
        if (fiveTenKCardDataBuilder_ == null) {
          return fiveTenKCardData_.size();
        } else {
          return fiveTenKCardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardData(int index) {
        if (fiveTenKCardDataBuilder_ == null) {
          return fiveTenKCardData_.get(index);
        } else {
          return fiveTenKCardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder setFiveTenKCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.set(index, value);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder setFiveTenKCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataBuilder_ == null) {
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder addFiveTenKCardData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.add(value);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder addFiveTenKCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.add(index, value);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder addFiveTenKCardData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataBuilder_ == null) {
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.add(builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder addFiveTenKCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataBuilder_ == null) {
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder addAllFiveTenKCardData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (fiveTenKCardDataBuilder_ == null) {
          ensureFiveTenKCardDataIsMutable();
          super.addAll(values, fiveTenKCardData_);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder clearFiveTenKCardData() {
        if (fiveTenKCardDataBuilder_ == null) {
          fiveTenKCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public Builder removeFiveTenKCardData(int index) {
        if (fiveTenKCardDataBuilder_ == null) {
          ensureFiveTenKCardDataIsMutable();
          fiveTenKCardData_.remove(index);
          onChanged();
        } else {
          fiveTenKCardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getFiveTenKCardDataBuilder(
          int index) {
        return getFiveTenKCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataOrBuilder(
          int index) {
        if (fiveTenKCardDataBuilder_ == null) {
          return fiveTenKCardData_.get(index);  } else {
          return fiveTenKCardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getFiveTenKCardDataOrBuilderList() {
        if (fiveTenKCardDataBuilder_ != null) {
          return fiveTenKCardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fiveTenKCardData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addFiveTenKCardDataBuilder() {
        return getFiveTenKCardDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addFiveTenKCardDataBuilder(
          int index) {
        return getFiveTenKCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data = 22;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getFiveTenKCardDataBuilderList() {
        return getFiveTenKCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getFiveTenKCardDataFieldBuilder() {
        if (fiveTenKCardDataBuilder_ == null) {
          fiveTenKCardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  fiveTenKCardData_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          fiveTenKCardData_ = null;
        }
        return fiveTenKCardDataBuilder_;
      }

      // repeated int32 tonghua_card_data_count = 23;
      private java.util.List<java.lang.Integer> tonghuaCardDataCount_ = java.util.Collections.emptyList();
      private void ensureTonghuaCardDataCountIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          tonghuaCardDataCount_ = new java.util.ArrayList<java.lang.Integer>(tonghuaCardDataCount_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTonghuaCardDataCountList() {
        return java.util.Collections.unmodifiableList(tonghuaCardDataCount_);
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public int getTonghuaCardDataCountCount() {
        return tonghuaCardDataCount_.size();
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public int getTonghuaCardDataCount(int index) {
        return tonghuaCardDataCount_.get(index);
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public Builder setTonghuaCardDataCount(
          int index, int value) {
        ensureTonghuaCardDataCountIsMutable();
        tonghuaCardDataCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public Builder addTonghuaCardDataCount(int value) {
        ensureTonghuaCardDataCountIsMutable();
        tonghuaCardDataCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public Builder addAllTonghuaCardDataCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTonghuaCardDataCountIsMutable();
        super.addAll(values, tonghuaCardDataCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tonghua_card_data_count = 23;</code>
       *
       * <pre>
       *同花数据
       * </pre>
       */
      public Builder clearTonghuaCardDataCount() {
        tonghuaCardDataCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse tonghua_card_data = 24;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> tonghuaCardData_ =
        java.util.Collections.emptyList();
      private void ensureTonghuaCardDataIsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          tonghuaCardData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(tonghuaCardData_);
          bitField0_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> tonghuaCardDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getTonghuaCardDataList() {
        if (tonghuaCardDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tonghuaCardData_);
        } else {
          return tonghuaCardDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public int getTonghuaCardDataCount() {
        if (tonghuaCardDataBuilder_ == null) {
          return tonghuaCardData_.size();
        } else {
          return tonghuaCardDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getTonghuaCardData(int index) {
        if (tonghuaCardDataBuilder_ == null) {
          return tonghuaCardData_.get(index);
        } else {
          return tonghuaCardDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder setTonghuaCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (tonghuaCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.set(index, value);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder setTonghuaCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (tonghuaCardDataBuilder_ == null) {
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.set(index, builderForValue.build());
          onChanged();
        } else {
          tonghuaCardDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder addTonghuaCardData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (tonghuaCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.add(value);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder addTonghuaCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (tonghuaCardDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.add(index, value);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder addTonghuaCardData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (tonghuaCardDataBuilder_ == null) {
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.add(builderForValue.build());
          onChanged();
        } else {
          tonghuaCardDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder addTonghuaCardData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (tonghuaCardDataBuilder_ == null) {
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.add(index, builderForValue.build());
          onChanged();
        } else {
          tonghuaCardDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder addAllTonghuaCardData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (tonghuaCardDataBuilder_ == null) {
          ensureTonghuaCardDataIsMutable();
          super.addAll(values, tonghuaCardData_);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder clearTonghuaCardData() {
        if (tonghuaCardDataBuilder_ == null) {
          tonghuaCardData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public Builder removeTonghuaCardData(int index) {
        if (tonghuaCardDataBuilder_ == null) {
          ensureTonghuaCardDataIsMutable();
          tonghuaCardData_.remove(index);
          onChanged();
        } else {
          tonghuaCardDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getTonghuaCardDataBuilder(
          int index) {
        return getTonghuaCardDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getTonghuaCardDataOrBuilder(
          int index) {
        if (tonghuaCardDataBuilder_ == null) {
          return tonghuaCardData_.get(index);  } else {
          return tonghuaCardDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getTonghuaCardDataOrBuilderList() {
        if (tonghuaCardDataBuilder_ != null) {
          return tonghuaCardDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tonghuaCardData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addTonghuaCardDataBuilder() {
        return getTonghuaCardDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addTonghuaCardDataBuilder(
          int index) {
        return getTonghuaCardDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse tonghua_card_data = 24;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getTonghuaCardDataBuilderList() {
        return getTonghuaCardDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getTonghuaCardDataFieldBuilder() {
        if (tonghuaCardDataBuilder_ == null) {
          tonghuaCardDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  tonghuaCardData_,
                  ((bitField0_ & 0x00800000) == 0x00800000),
                  getParentForChildren(),
                  isClean());
          tonghuaCardData_ = null;
        }
        return tonghuaCardDataBuilder_;
      }

      // repeated int32 five_ten_k_card_data_count_fu = 25;
      private java.util.List<java.lang.Integer> fiveTenKCardDataCountFu_ = java.util.Collections.emptyList();
      private void ensureFiveTenKCardDataCountFuIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          fiveTenKCardDataCountFu_ = new java.util.ArrayList<java.lang.Integer>(fiveTenKCardDataCountFu_);
          bitField0_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFiveTenKCardDataCountFuList() {
        return java.util.Collections.unmodifiableList(fiveTenKCardDataCountFu_);
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public int getFiveTenKCardDataCountFuCount() {
        return fiveTenKCardDataCountFu_.size();
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public int getFiveTenKCardDataCountFu(int index) {
        return fiveTenKCardDataCountFu_.get(index);
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder setFiveTenKCardDataCountFu(
          int index, int value) {
        ensureFiveTenKCardDataCountFuIsMutable();
        fiveTenKCardDataCountFu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder addFiveTenKCardDataCountFu(int value) {
        ensureFiveTenKCardDataCountFuIsMutable();
        fiveTenKCardDataCountFu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder addAllFiveTenKCardDataCountFu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFiveTenKCardDataCountFuIsMutable();
        super.addAll(values, fiveTenKCardDataCountFu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 five_ten_k_card_data_count_fu = 25;</code>
       *
       * <pre>
       *510K数据
       * </pre>
       */
      public Builder clearFiveTenKCardDataCountFu() {
        fiveTenKCardDataCountFu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> fiveTenKCardDataFu_ =
        java.util.Collections.emptyList();
      private void ensureFiveTenKCardDataFuIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          fiveTenKCardDataFu_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(fiveTenKCardDataFu_);
          bitField0_ |= 0x02000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> fiveTenKCardDataFuBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getFiveTenKCardDataFuList() {
        if (fiveTenKCardDataFuBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fiveTenKCardDataFu_);
        } else {
          return fiveTenKCardDataFuBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public int getFiveTenKCardDataFuCount() {
        if (fiveTenKCardDataFuBuilder_ == null) {
          return fiveTenKCardDataFu_.size();
        } else {
          return fiveTenKCardDataFuBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getFiveTenKCardDataFu(int index) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          return fiveTenKCardDataFu_.get(index);
        } else {
          return fiveTenKCardDataFuBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder setFiveTenKCardDataFu(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.set(index, value);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder setFiveTenKCardDataFu(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.set(index, builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder addFiveTenKCardDataFu(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.add(value);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder addFiveTenKCardDataFu(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.add(index, value);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder addFiveTenKCardDataFu(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.add(builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder addFiveTenKCardDataFu(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.add(index, builderForValue.build());
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder addAllFiveTenKCardDataFu(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          ensureFiveTenKCardDataFuIsMutable();
          super.addAll(values, fiveTenKCardDataFu_);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder clearFiveTenKCardDataFu() {
        if (fiveTenKCardDataFuBuilder_ == null) {
          fiveTenKCardDataFu_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public Builder removeFiveTenKCardDataFu(int index) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          ensureFiveTenKCardDataFuIsMutable();
          fiveTenKCardDataFu_.remove(index);
          onChanged();
        } else {
          fiveTenKCardDataFuBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getFiveTenKCardDataFuBuilder(
          int index) {
        return getFiveTenKCardDataFuFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getFiveTenKCardDataFuOrBuilder(
          int index) {
        if (fiveTenKCardDataFuBuilder_ == null) {
          return fiveTenKCardDataFu_.get(index);  } else {
          return fiveTenKCardDataFuBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getFiveTenKCardDataFuOrBuilderList() {
        if (fiveTenKCardDataFuBuilder_ != null) {
          return fiveTenKCardDataFuBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fiveTenKCardDataFu_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addFiveTenKCardDataFuBuilder() {
        return getFiveTenKCardDataFuFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addFiveTenKCardDataFuBuilder(
          int index) {
        return getFiveTenKCardDataFuFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse five_ten_k_card_data_fu = 26;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getFiveTenKCardDataFuBuilderList() {
        return getFiveTenKCardDataFuFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getFiveTenKCardDataFuFieldBuilder() {
        if (fiveTenKCardDataFuBuilder_ == null) {
          fiveTenKCardDataFuBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  fiveTenKCardDataFu_,
                  ((bitField0_ & 0x02000000) == 0x02000000),
                  getParentForChildren(),
                  isClean());
          fiveTenKCardDataFu_ = null;
        }
        return fiveTenKCardDataFuBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:sxth.OutCardDataWsk_Sxth)
    }

    static {
      defaultInstance = new OutCardDataWsk_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.OutCardDataWsk_Sxth)
  }

  public interface PukeGameEndWsk_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 boom_card_num = 6;
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getBoomCardNumList();
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    int getBoomCardNumCount();
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    int getBoomCardNum(int index);

    // repeated int32 end_score = 7;
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    int getEndScore(int index);

    // repeated int32 reward_score = 8;
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    java.util.List<java.lang.Integer> getRewardScoreList();
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    int getRewardScoreCount();
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    int getRewardScore(int index);

    // optional int32 player_num = 9;
    /**
     * <code>optional int32 player_num = 9;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 9;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 banker_player = 10;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 reason = 11;
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated int32 zhua_fen = 12;
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getZhuaFenList();
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getZhuaFenCount();
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getZhuaFen(int index);

    // repeated int32 win_order = 13;
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);

    // optional int32 game_cell = 14;
    /**
     * <code>optional int32 game_cell = 14;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    boolean hasGameCell();
    /**
     * <code>optional int32 game_cell = 14;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    int getGameCell();

    // repeated int32 friend = 15;
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    java.util.List<java.lang.Integer> getFriendList();
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    int getFriendCount();
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    int getFriend(int index);

    // repeated int32 flower_score = 18;
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    java.util.List<java.lang.Integer> getFlowerScoreList();
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    int getFlowerScoreCount();
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    int getFlowerScore(int index);

    // optional int32 score_tyep = 19;
    /**
     * <code>optional int32 score_tyep = 19;</code>
     *
     * <pre>
     *0:双规 1:保牌 2:负分 3：特大负分
     * </pre>
     */
    boolean hasScoreTyep();
    /**
     * <code>optional int32 score_tyep = 19;</code>
     *
     * <pre>
     *0:双规 1:保牌 2:负分 3：特大负分
     * </pre>
     */
    int getScoreTyep();

    // repeated int32 all_end_score = 16;
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated .RoomPlayerResponse players = 17;
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .RoomPlayerResponse players_other = 20;
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersOtherList();
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOther(int index);
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    int getPlayersOtherCount();
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOtherOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOtherOrBuilder(
        int index);

    // repeated int32 all_end_score_other = 21;
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreOtherList();
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    int getAllEndScoreOtherCount();
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    int getAllEndScoreOther(int index);
  }
  /**
   * Protobuf type {@code sxth.PukeGameEndWsk_Sxth}
   *
   * <pre>
   *结算 1004
   * </pre>
   */
  public static final class PukeGameEndWsk_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndWsk_SxthOrBuilder {
    // Use PukeGameEndWsk_Sxth.newBuilder() to construct.
    private PukeGameEndWsk_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndWsk_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndWsk_Sxth defaultInstance;
    public static PukeGameEndWsk_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndWsk_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndWsk_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                boomCardNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              boomCardNum_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                boomCardNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                boomCardNum_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                rewardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              rewardScore_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                rewardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              reason_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                zhuaFen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              zhuaFen_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                zhuaFen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                zhuaFen_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000040;
              gameCell_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                friend_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              friend_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                friend_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                friend_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00040000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                flowerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              flowerScore_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                flowerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                flowerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00000080;
              scoreTyep_ = input.readInt32();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                playersOther_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00080000;
              }
              playersOther_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                allEndScoreOther_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              allEndScoreOther_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                allEndScoreOther_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScoreOther_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          boomCardNum_ = java.util.Collections.unmodifiableList(boomCardNum_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          rewardScore_ = java.util.Collections.unmodifiableList(rewardScore_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          zhuaFen_ = java.util.Collections.unmodifiableList(zhuaFen_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          friend_ = java.util.Collections.unmodifiableList(friend_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          flowerScore_ = java.util.Collections.unmodifiableList(flowerScore_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          playersOther_ = java.util.Collections.unmodifiableList(playersOther_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          allEndScoreOther_ = java.util.Collections.unmodifiableList(allEndScoreOther_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_PukeGameEndWsk_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_PukeGameEndWsk_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndWsk_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndWsk_Sxth>() {
      public PukeGameEndWsk_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndWsk_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndWsk_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 boom_card_num = 6;
    public static final int BOOM_CARD_NUM_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> boomCardNum_;
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBoomCardNumList() {
      return boomCardNum_;
    }
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    public int getBoomCardNumCount() {
      return boomCardNum_.size();
    }
    /**
     * <code>repeated int32 boom_card_num = 6;</code>
     *
     * <pre>
     *炸弹数量
     * </pre>
     */
    public int getBoomCardNum(int index) {
      return boomCardNum_.get(index);
    }

    // repeated int32 end_score = 7;
    public static final int END_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // repeated int32 reward_score = 8;
    public static final int REWARD_SCORE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> rewardScore_;
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRewardScoreList() {
      return rewardScore_;
    }
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public int getRewardScoreCount() {
      return rewardScore_.size();
    }
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public int getRewardScore(int index) {
      return rewardScore_.get(index);
    }

    // optional int32 player_num = 9;
    public static final int PLAYER_NUM_FIELD_NUMBER = 9;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 9;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 9;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 banker_player = 10;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 10;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 banker_player = 10;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 reason = 11;
    public static final int REASON_FIELD_NUMBER = 11;
    private int reason_;
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 reason = 11;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated int32 zhua_fen = 12;
    public static final int ZHUA_FEN_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> zhuaFen_;
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getZhuaFenList() {
      return zhuaFen_;
    }
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getZhuaFenCount() {
      return zhuaFen_.size();
    }
    /**
     * <code>repeated int32 zhua_fen = 12;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getZhuaFen(int index) {
      return zhuaFen_.get(index);
    }

    // repeated int32 win_order = 13;
    public static final int WIN_ORDER_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 13;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    // optional int32 game_cell = 14;
    public static final int GAME_CELL_FIELD_NUMBER = 14;
    private int gameCell_;
    /**
     * <code>optional int32 game_cell = 14;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public boolean hasGameCell() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_cell = 14;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public int getGameCell() {
      return gameCell_;
    }

    // repeated int32 friend = 15;
    public static final int FRIEND_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> friend_;
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFriendList() {
      return friend_;
    }
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    public int getFriendCount() {
      return friend_.size();
    }
    /**
     * <code>repeated int32 friend = 15;</code>
     *
     * <pre>
     *1的为第一对 2的为第二对
     * </pre>
     */
    public int getFriend(int index) {
      return friend_.get(index);
    }

    // repeated int32 flower_score = 18;
    public static final int FLOWER_SCORE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> flowerScore_;
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFlowerScoreList() {
      return flowerScore_;
    }
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public int getFlowerScoreCount() {
      return flowerScore_.size();
    }
    /**
     * <code>repeated int32 flower_score = 18;</code>
     *
     * <pre>
     *花分
     * </pre>
     */
    public int getFlowerScore(int index) {
      return flowerScore_.get(index);
    }

    // optional int32 score_tyep = 19;
    public static final int SCORE_TYEP_FIELD_NUMBER = 19;
    private int scoreTyep_;
    /**
     * <code>optional int32 score_tyep = 19;</code>
     *
     * <pre>
     *0:双规 1:保牌 2:负分 3：特大负分
     * </pre>
     */
    public boolean hasScoreTyep() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 score_tyep = 19;</code>
     *
     * <pre>
     *0:双规 1:保牌 2:负分 3：特大负分
     * </pre>
     */
    public int getScoreTyep() {
      return scoreTyep_;
    }

    // repeated int32 all_end_score = 16;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 16;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated .RoomPlayerResponse players = 17;
    public static final int PLAYERS_FIELD_NUMBER = 17;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .RoomPlayerResponse players_other = 20;
    public static final int PLAYERS_OTHER_FIELD_NUMBER = 20;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersOther_;
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersOtherList() {
      return playersOther_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOtherOrBuilderList() {
      return playersOther_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    public int getPlayersOtherCount() {
      return playersOther_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOther(int index) {
      return playersOther_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players_other = 20;</code>
     *
     * <pre>
     *大结算用
     * </pre>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOtherOrBuilder(
        int index) {
      return playersOther_.get(index);
    }

    // repeated int32 all_end_score_other = 21;
    public static final int ALL_END_SCORE_OTHER_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> allEndScoreOther_;
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreOtherList() {
      return allEndScoreOther_;
    }
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public int getAllEndScoreOtherCount() {
      return allEndScoreOther_.size();
    }
    /**
     * <code>repeated int32 all_end_score_other = 21;</code>
     *
     * <pre>
     *结算总积分
     * </pre>
     */
    public int getAllEndScoreOther(int index) {
      return allEndScoreOther_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      boomCardNum_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      rewardScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      bankerPlayer_ = 0;
      reason_ = 0;
      zhuaFen_ = java.util.Collections.emptyList();
      winOrder_ = java.util.Collections.emptyList();
      gameCell_ = 0;
      friend_ = java.util.Collections.emptyList();
      flowerScore_ = java.util.Collections.emptyList();
      scoreTyep_ = 0;
      allEndScore_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
      playersOther_ = java.util.Collections.emptyList();
      allEndScoreOther_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < boomCardNum_.size(); i++) {
        output.writeInt32(6, boomCardNum_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(7, endScore_.get(i));
      }
      for (int i = 0; i < rewardScore_.size(); i++) {
        output.writeInt32(8, rewardScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(11, reason_);
      }
      for (int i = 0; i < zhuaFen_.size(); i++) {
        output.writeInt32(12, zhuaFen_.get(i));
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(13, winOrder_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(14, gameCell_);
      }
      for (int i = 0; i < friend_.size(); i++) {
        output.writeInt32(15, friend_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(16, allEndScore_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(17, players_.get(i));
      }
      for (int i = 0; i < flowerScore_.size(); i++) {
        output.writeInt32(18, flowerScore_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(19, scoreTyep_);
      }
      for (int i = 0; i < playersOther_.size(); i++) {
        output.writeMessage(20, playersOther_.get(i));
      }
      for (int i = 0; i < allEndScoreOther_.size(); i++) {
        output.writeInt32(21, allEndScoreOther_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < boomCardNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(boomCardNum_.get(i));
        }
        size += dataSize;
        size += 1 * getBoomCardNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rewardScore_.get(i));
        }
        size += dataSize;
        size += 1 * getRewardScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, reason_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zhuaFen_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zhuaFen_.get(i));
        }
        size += dataSize;
        size += 1 * getZhuaFenList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 1 * getWinOrderList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, gameCell_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < friend_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(friend_.get(i));
        }
        size += dataSize;
        size += 1 * getFriendList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 2 * getAllEndScoreList().size();
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flowerScore_.get(i));
        }
        size += dataSize;
        size += 2 * getFlowerScoreList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, scoreTyep_);
      }
      for (int i = 0; i < playersOther_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, playersOther_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScoreOther_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScoreOther_.get(i));
        }
        size += dataSize;
        size += 2 * getAllEndScoreOtherList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.PukeGameEndWsk_Sxth}
     *
     * <pre>
     *结算 1004
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_PukeGameEndWsk_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_PukeGameEndWsk_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
          getPlayersOtherFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        boomCardNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        rewardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        zhuaFen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        gameCell_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        friend_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        flowerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        scoreTyep_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          playersBuilder_.clear();
        }
        if (playersOtherBuilder_ == null) {
          playersOther_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          playersOtherBuilder_.clear();
        }
        allEndScoreOther_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_PukeGameEndWsk_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth result = new protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          boomCardNum_ = java.util.Collections.unmodifiableList(boomCardNum_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.boomCardNum_ = boomCardNum_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.endScore_ = endScore_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          rewardScore_ = java.util.Collections.unmodifiableList(rewardScore_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.rewardScore_ = rewardScore_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.reason_ = reason_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          zhuaFen_ = java.util.Collections.unmodifiableList(zhuaFen_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.zhuaFen_ = zhuaFen_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.winOrder_ = winOrder_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameCell_ = gameCell_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          friend_ = java.util.Collections.unmodifiableList(friend_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.friend_ = friend_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          flowerScore_ = java.util.Collections.unmodifiableList(flowerScore_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.flowerScore_ = flowerScore_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.scoreTyep_ = scoreTyep_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.allEndScore_ = allEndScore_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (playersOtherBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            playersOther_ = java.util.Collections.unmodifiableList(playersOther_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.playersOther_ = playersOther_;
        } else {
          result.playersOther_ = playersOtherBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          allEndScoreOther_ = java.util.Collections.unmodifiableList(allEndScoreOther_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.allEndScoreOther_ = allEndScoreOther_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.boomCardNum_.isEmpty()) {
          if (boomCardNum_.isEmpty()) {
            boomCardNum_ = other.boomCardNum_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBoomCardNumIsMutable();
            boomCardNum_.addAll(other.boomCardNum_);
          }
          onChanged();
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (!other.rewardScore_.isEmpty()) {
          if (rewardScore_.isEmpty()) {
            rewardScore_ = other.rewardScore_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRewardScoreIsMutable();
            rewardScore_.addAll(other.rewardScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (!other.zhuaFen_.isEmpty()) {
          if (zhuaFen_.isEmpty()) {
            zhuaFen_ = other.zhuaFen_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureZhuaFenIsMutable();
            zhuaFen_.addAll(other.zhuaFen_);
          }
          onChanged();
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        if (other.hasGameCell()) {
          setGameCell(other.getGameCell());
        }
        if (!other.friend_.isEmpty()) {
          if (friend_.isEmpty()) {
            friend_ = other.friend_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureFriendIsMutable();
            friend_.addAll(other.friend_);
          }
          onChanged();
        }
        if (!other.flowerScore_.isEmpty()) {
          if (flowerScore_.isEmpty()) {
            flowerScore_ = other.flowerScore_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureFlowerScoreIsMutable();
            flowerScore_.addAll(other.flowerScore_);
          }
          onChanged();
        }
        if (other.hasScoreTyep()) {
          setScoreTyep(other.getScoreTyep());
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (playersOtherBuilder_ == null) {
          if (!other.playersOther_.isEmpty()) {
            if (playersOther_.isEmpty()) {
              playersOther_ = other.playersOther_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensurePlayersOtherIsMutable();
              playersOther_.addAll(other.playersOther_);
            }
            onChanged();
          }
        } else {
          if (!other.playersOther_.isEmpty()) {
            if (playersOtherBuilder_.isEmpty()) {
              playersOtherBuilder_.dispose();
              playersOtherBuilder_ = null;
              playersOther_ = other.playersOther_;
              bitField0_ = (bitField0_ & ~0x00080000);
              playersOtherBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersOtherFieldBuilder() : null;
            } else {
              playersOtherBuilder_.addAllMessages(other.playersOther_);
            }
          }
        }
        if (!other.allEndScoreOther_.isEmpty()) {
          if (allEndScoreOther_.isEmpty()) {
            allEndScoreOther_ = other.allEndScoreOther_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureAllEndScoreOtherIsMutable();
            allEndScoreOther_.addAll(other.allEndScoreOther_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.PukeGameEndWsk_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 boom_card_num = 6;
      private java.util.List<java.lang.Integer> boomCardNum_ = java.util.Collections.emptyList();
      private void ensureBoomCardNumIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          boomCardNum_ = new java.util.ArrayList<java.lang.Integer>(boomCardNum_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBoomCardNumList() {
        return java.util.Collections.unmodifiableList(boomCardNum_);
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public int getBoomCardNumCount() {
        return boomCardNum_.size();
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public int getBoomCardNum(int index) {
        return boomCardNum_.get(index);
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public Builder setBoomCardNum(
          int index, int value) {
        ensureBoomCardNumIsMutable();
        boomCardNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public Builder addBoomCardNum(int value) {
        ensureBoomCardNumIsMutable();
        boomCardNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public Builder addAllBoomCardNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBoomCardNumIsMutable();
        super.addAll(values, boomCardNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 boom_card_num = 6;</code>
       *
       * <pre>
       *炸弹数量
       * </pre>
       */
      public Builder clearBoomCardNum() {
        boomCardNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 end_score = 7;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 reward_score = 8;
      private java.util.List<java.lang.Integer> rewardScore_ = java.util.Collections.emptyList();
      private void ensureRewardScoreIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          rewardScore_ = new java.util.ArrayList<java.lang.Integer>(rewardScore_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRewardScoreList() {
        return java.util.Collections.unmodifiableList(rewardScore_);
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public int getRewardScoreCount() {
        return rewardScore_.size();
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public int getRewardScore(int index) {
        return rewardScore_.get(index);
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder setRewardScore(
          int index, int value) {
        ensureRewardScoreIsMutable();
        rewardScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder addRewardScore(int value) {
        ensureRewardScoreIsMutable();
        rewardScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder addAllRewardScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardScoreIsMutable();
        super.addAll(values, rewardScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder clearRewardScore() {
        rewardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 player_num = 9;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 9;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 player_num = 9;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 9;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000100;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 9;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_player = 10;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000200;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 10;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 11;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000400;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 11;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000400);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 zhua_fen = 12;
      private java.util.List<java.lang.Integer> zhuaFen_ = java.util.Collections.emptyList();
      private void ensureZhuaFenIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          zhuaFen_ = new java.util.ArrayList<java.lang.Integer>(zhuaFen_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getZhuaFenList() {
        return java.util.Collections.unmodifiableList(zhuaFen_);
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getZhuaFenCount() {
        return zhuaFen_.size();
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getZhuaFen(int index) {
        return zhuaFen_.get(index);
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder setZhuaFen(
          int index, int value) {
        ensureZhuaFenIsMutable();
        zhuaFen_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addZhuaFen(int value) {
        ensureZhuaFenIsMutable();
        zhuaFen_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addAllZhuaFen(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZhuaFenIsMutable();
        super.addAll(values, zhuaFen_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhua_fen = 12;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder clearZhuaFen() {
        zhuaFen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 win_order = 13;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 13;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional int32 game_cell = 14;
      private int gameCell_ ;
      /**
       * <code>optional int32 game_cell = 14;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public boolean hasGameCell() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 game_cell = 14;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public int getGameCell() {
        return gameCell_;
      }
      /**
       * <code>optional int32 game_cell = 14;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder setGameCell(int value) {
        bitField0_ |= 0x00002000;
        gameCell_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_cell = 14;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder clearGameCell() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gameCell_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 friend = 15;
      private java.util.List<java.lang.Integer> friend_ = java.util.Collections.emptyList();
      private void ensureFriendIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          friend_ = new java.util.ArrayList<java.lang.Integer>(friend_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFriendList() {
        return java.util.Collections.unmodifiableList(friend_);
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public int getFriendCount() {
        return friend_.size();
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public int getFriend(int index) {
        return friend_.get(index);
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public Builder setFriend(
          int index, int value) {
        ensureFriendIsMutable();
        friend_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public Builder addFriend(int value) {
        ensureFriendIsMutable();
        friend_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public Builder addAllFriend(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFriendIsMutable();
        super.addAll(values, friend_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 friend = 15;</code>
       *
       * <pre>
       *1的为第一对 2的为第二对
       * </pre>
       */
      public Builder clearFriend() {
        friend_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 flower_score = 18;
      private java.util.List<java.lang.Integer> flowerScore_ = java.util.Collections.emptyList();
      private void ensureFlowerScoreIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          flowerScore_ = new java.util.ArrayList<java.lang.Integer>(flowerScore_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFlowerScoreList() {
        return java.util.Collections.unmodifiableList(flowerScore_);
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public int getFlowerScoreCount() {
        return flowerScore_.size();
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public int getFlowerScore(int index) {
        return flowerScore_.get(index);
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder setFlowerScore(
          int index, int value) {
        ensureFlowerScoreIsMutable();
        flowerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder addFlowerScore(int value) {
        ensureFlowerScoreIsMutable();
        flowerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder addAllFlowerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlowerScoreIsMutable();
        super.addAll(values, flowerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_score = 18;</code>
       *
       * <pre>
       *花分
       * </pre>
       */
      public Builder clearFlowerScore() {
        flowerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional int32 score_tyep = 19;
      private int scoreTyep_ ;
      /**
       * <code>optional int32 score_tyep = 19;</code>
       *
       * <pre>
       *0:双规 1:保牌 2:负分 3：特大负分
       * </pre>
       */
      public boolean hasScoreTyep() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 score_tyep = 19;</code>
       *
       * <pre>
       *0:双规 1:保牌 2:负分 3：特大负分
       * </pre>
       */
      public int getScoreTyep() {
        return scoreTyep_;
      }
      /**
       * <code>optional int32 score_tyep = 19;</code>
       *
       * <pre>
       *0:双规 1:保牌 2:负分 3：特大负分
       * </pre>
       */
      public Builder setScoreTyep(int value) {
        bitField0_ |= 0x00010000;
        scoreTyep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score_tyep = 19;</code>
       *
       * <pre>
       *0:双规 1:保牌 2:负分 3：特大负分
       * </pre>
       */
      public Builder clearScoreTyep() {
        bitField0_ = (bitField0_ & ~0x00010000);
        scoreTyep_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 16;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 16;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated .RoomPlayerResponse players = 17;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 17;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .RoomPlayerResponse players_other = 20;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersOther_ =
        java.util.Collections.emptyList();
      private void ensurePlayersOtherIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          playersOther_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(playersOther_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersOtherBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersOtherList() {
        if (playersOtherBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playersOther_);
        } else {
          return playersOtherBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public int getPlayersOtherCount() {
        if (playersOtherBuilder_ == null) {
          return playersOther_.size();
        } else {
          return playersOtherBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOther(int index) {
        if (playersOtherBuilder_ == null) {
          return playersOther_.get(index);
        } else {
          return playersOtherBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder setPlayersOther(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOtherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOtherIsMutable();
          playersOther_.set(index, value);
          onChanged();
        } else {
          playersOtherBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder setPlayersOther(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOtherBuilder_ == null) {
          ensurePlayersOtherIsMutable();
          playersOther_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersOtherBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder addPlayersOther(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOtherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOtherIsMutable();
          playersOther_.add(value);
          onChanged();
        } else {
          playersOtherBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder addPlayersOther(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOtherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOtherIsMutable();
          playersOther_.add(index, value);
          onChanged();
        } else {
          playersOtherBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder addPlayersOther(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOtherBuilder_ == null) {
          ensurePlayersOtherIsMutable();
          playersOther_.add(builderForValue.build());
          onChanged();
        } else {
          playersOtherBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder addPlayersOther(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOtherBuilder_ == null) {
          ensurePlayersOtherIsMutable();
          playersOther_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersOtherBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder addAllPlayersOther(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersOtherBuilder_ == null) {
          ensurePlayersOtherIsMutable();
          super.addAll(values, playersOther_);
          onChanged();
        } else {
          playersOtherBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder clearPlayersOther() {
        if (playersOtherBuilder_ == null) {
          playersOther_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          playersOtherBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public Builder removePlayersOther(int index) {
        if (playersOtherBuilder_ == null) {
          ensurePlayersOtherIsMutable();
          playersOther_.remove(index);
          onChanged();
        } else {
          playersOtherBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersOtherBuilder(
          int index) {
        return getPlayersOtherFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOtherOrBuilder(
          int index) {
        if (playersOtherBuilder_ == null) {
          return playersOther_.get(index);  } else {
          return playersOtherBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOtherOrBuilderList() {
        if (playersOtherBuilder_ != null) {
          return playersOtherBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playersOther_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersOtherBuilder() {
        return getPlayersOtherFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersOtherBuilder(
          int index) {
        return getPlayersOtherFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_other = 20;</code>
       *
       * <pre>
       *大结算用
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersOtherBuilderList() {
        return getPlayersOtherFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersOtherFieldBuilder() {
        if (playersOtherBuilder_ == null) {
          playersOtherBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  playersOther_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          playersOther_ = null;
        }
        return playersOtherBuilder_;
      }

      // repeated int32 all_end_score_other = 21;
      private java.util.List<java.lang.Integer> allEndScoreOther_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreOtherIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          allEndScoreOther_ = new java.util.ArrayList<java.lang.Integer>(allEndScoreOther_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreOtherList() {
        return java.util.Collections.unmodifiableList(allEndScoreOther_);
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public int getAllEndScoreOtherCount() {
        return allEndScoreOther_.size();
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public int getAllEndScoreOther(int index) {
        return allEndScoreOther_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder setAllEndScoreOther(
          int index, int value) {
        ensureAllEndScoreOtherIsMutable();
        allEndScoreOther_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder addAllEndScoreOther(int value) {
        ensureAllEndScoreOtherIsMutable();
        allEndScoreOther_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder addAllAllEndScoreOther(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreOtherIsMutable();
        super.addAll(values, allEndScoreOther_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score_other = 21;</code>
       *
       * <pre>
       *结算总积分
       * </pre>
       */
      public Builder clearAllEndScoreOther() {
        allEndScoreOther_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.PukeGameEndWsk_Sxth)
    }

    static {
      defaultInstance = new PukeGameEndWsk_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.PukeGameEndWsk_Sxth)
  }

  public interface TableResponse_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // repeated bool trustee = 4;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    java.util.List<java.lang.Boolean> getTrusteeList();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    int getTrusteeCount();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    boolean getTrustee(int index);

    // repeated .Int32ArrayResponse out_cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getOutCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getOutCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index);

    // repeated int32 out_cards_count = 6;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsCountList();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCountCount();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCount(int index);

    // repeated int32 player_pass = 7;
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerPassList();
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    int getPlayerPassCount();
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    int getPlayerPass(int index);

    // repeated int32 card_type = 8;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType(int index);

    // optional int32 pr_out_card_player = 9;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    boolean hasPrOutCardPlayer();
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    int getPrOutCardPlayer();

    // repeated int32 pr_cards_data = 10;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 11;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 12;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional int32 is_first_out = 13;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    int getIsFirstOut();

    // optional int32 display_time = 14;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 card_count = 15;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 16;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional .RoomInfo room_info = 17;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 18;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Int32ArrayResponse user_can_out_data = 19;
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getUserCanOutDataList();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index);
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getUserCanOutDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
        int index);

    // repeated int32 user_can_out_count = 20;
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutCountList();
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCountCount();
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCount(int index);

    // repeated int32 user_can_out_type = 22;
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    java.util.List<java.lang.Integer> getUserCanOutTypeList();
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    int getUserCanOutTypeCount();
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    int getUserCanOutType(int index);

    // repeated int32 win_order = 21;
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);
  }
  /**
   * Protobuf type {@code sxth.TableResponse_Sxth}
   *
   * <pre>
   *1002
   * </pre>
   */
  public static final class TableResponse_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements TableResponse_SxthOrBuilder {
    // Use TableResponse_Sxth.newBuilder() to construct.
    private TableResponse_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse_Sxth defaultInstance;
    public static TableResponse_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              trustee_.add(input.readBool());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                trustee_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              outCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              outCardsCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCardsCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                playerPass_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              playerPass_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                playerPass_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerPass_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              prOutCardPlayer_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              isFirstOut_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00008000;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00020000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                userCanOutData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00040000;
              }
              userCanOutData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              userCanOutCount_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                userCanOutType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              userCanOutType_.add(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                userCanOutType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = java.util.Collections.unmodifiableList(playerPass_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          userCanOutCount_ = java.util.Collections.unmodifiableList(userCanOutCount_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          userCanOutType_ = java.util.Collections.unmodifiableList(userCanOutType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TableResponse_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TableResponse_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.class, protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse_Sxth>() {
      public TableResponse_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // repeated bool trustee = 4;
    public static final int TRUSTEE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Boolean> trustee_;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getTrusteeList() {
      return trustee_;
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public int getTrusteeCount() {
      return trustee_.size();
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public boolean getTrustee(int index) {
      return trustee_.get(index);
    }

    // repeated .Int32ArrayResponse out_cards_data = 5;
    public static final int OUT_CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getOutCardsDataCount() {
      return outCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
      return outCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index) {
      return outCardsData_.get(index);
    }

    // repeated int32 out_cards_count = 6;
    public static final int OUT_CARDS_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> outCardsCount_;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsCountList() {
      return outCardsCount_;
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCountCount() {
      return outCardsCount_.size();
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCount(int index) {
      return outCardsCount_.get(index);
    }

    // repeated int32 player_pass = 7;
    public static final int PLAYER_PASS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> playerPass_;
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerPassList() {
      return playerPass_;
    }
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public int getPlayerPassCount() {
      return playerPass_.size();
    }
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public int getPlayerPass(int index) {
      return playerPass_.get(index);
    }

    // repeated int32 card_type = 8;
    public static final int CARD_TYPE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // optional int32 pr_out_card_player = 9;
    public static final int PR_OUT_CARD_PLAYER_FIELD_NUMBER = 9;
    private int prOutCardPlayer_;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public boolean hasPrOutCardPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public int getPrOutCardPlayer() {
      return prOutCardPlayer_;
    }

    // repeated int32 pr_cards_data = 10;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 11;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 11;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 12;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 12;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional int32 is_first_out = 13;
    public static final int IS_FIRST_OUT_FIELD_NUMBER = 13;
    private int isFirstOut_;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public int getIsFirstOut() {
      return isFirstOut_;
    }

    // optional int32 display_time = 14;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 14;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 card_count = 15;
    public static final int CARD_COUNT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 16;
    public static final int CARDS_DATA_FIELD_NUMBER = 16;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional .RoomInfo room_info = 17;
    public static final int ROOM_INFO_FIELD_NUMBER = 17;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 18;
    public static final int PLAYERS_FIELD_NUMBER = 18;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Int32ArrayResponse user_can_out_data = 19;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 19;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> userCanOutData_;
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getUserCanOutDataOrBuilderList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
        int index) {
      return userCanOutData_.get(index);
    }

    // repeated int32 user_can_out_count = 20;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> userCanOutCount_;
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutCountList() {
      return userCanOutCount_;
    }
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCountCount() {
      return userCanOutCount_.size();
    }
    /**
     * <code>repeated int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCount(int index) {
      return userCanOutCount_.get(index);
    }

    // repeated int32 user_can_out_type = 22;
    public static final int USER_CAN_OUT_TYPE_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> userCanOutType_;
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutTypeList() {
      return userCanOutType_;
    }
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    public int getUserCanOutTypeCount() {
      return userCanOutType_.size();
    }
    /**
     * <code>repeated int32 user_can_out_type = 22;</code>
     */
    public int getUserCanOutType(int index) {
      return userCanOutType_.get(index);
    }

    // repeated int32 win_order = 21;
    public static final int WIN_ORDER_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      trustee_ = java.util.Collections.emptyList();
      outCardsData_ = java.util.Collections.emptyList();
      outCardsCount_ = java.util.Collections.emptyList();
      playerPass_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      prOutCardPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      isFirstOut_ = 0;
      displayTime_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = java.util.Collections.emptyList();
      userCanOutType_ = java.util.Collections.emptyList();
      winOrder_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      for (int i = 0; i < trustee_.size(); i++) {
        output.writeBool(4, trustee_.get(i));
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        output.writeMessage(5, outCardsData_.get(i));
      }
      for (int i = 0; i < outCardsCount_.size(); i++) {
        output.writeInt32(6, outCardsCount_.get(i));
      }
      for (int i = 0; i < playerPass_.size(); i++) {
        output.writeInt32(7, playerPass_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(8, cardType_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, prOutCardPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(10, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, displayTime_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(15, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(18, players_.get(i));
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeMessage(19, userCanOutData_.get(i));
      }
      for (int i = 0; i < userCanOutCount_.size(); i++) {
        output.writeInt32(20, userCanOutCount_.get(i));
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(21, winOrder_.get(i));
      }
      for (int i = 0; i < userCanOutType_.size(); i++) {
        output.writeInt32(22, userCanOutType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTrusteeList().size();
        size += dataSize;
        size += 1 * getTrusteeList().size();
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCardsCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCardsCount_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerPass_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerPass_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerPassList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, prOutCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, players_.get(i));
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, userCanOutData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutCount_.get(i));
        }
        size += dataSize;
        size += 2 * getUserCanOutCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 2 * getWinOrderList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutType_.get(i));
        }
        size += dataSize;
        size += 2 * getUserCanOutTypeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.TableResponse_Sxth}
     *
     * <pre>
     *1002
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.TableResponse_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TableResponse_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TableResponse_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.class, protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutCardsDataFieldBuilder();
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getUserCanOutDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          outCardsDataBuilder_.clear();
        }
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerPass_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        isFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          cardsDataBuilder_.clear();
        }
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          playersBuilder_.clear();
        }
        if (userCanOutDataBuilder_ == null) {
          userCanOutData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          userCanOutDataBuilder_.clear();
        }
        userCanOutCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        userCanOutType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TableResponse_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth result = new protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.trustee_ = trustee_;
        if (outCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outCardsData_ = outCardsData_;
        } else {
          result.outCardsData_ = outCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.outCardsCount_ = outCardsCount_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = java.util.Collections.unmodifiableList(playerPass_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.playerPass_ = playerPass_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prOutCardPlayer_ = prOutCardPlayer_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (userCanOutDataBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.userCanOutData_ = userCanOutData_;
        } else {
          result.userCanOutData_ = userCanOutDataBuilder_.build();
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          userCanOutCount_ = java.util.Collections.unmodifiableList(userCanOutCount_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          userCanOutType_ = java.util.Collections.unmodifiableList(userCanOutType_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.userCanOutType_ = userCanOutType_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.winOrder_ = winOrder_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (!other.trustee_.isEmpty()) {
          if (trustee_.isEmpty()) {
            trustee_ = other.trustee_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTrusteeIsMutable();
            trustee_.addAll(other.trustee_);
          }
          onChanged();
        }
        if (outCardsDataBuilder_ == null) {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsData_.isEmpty()) {
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutCardsDataIsMutable();
              outCardsData_.addAll(other.outCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsDataBuilder_.isEmpty()) {
              outCardsDataBuilder_.dispose();
              outCardsDataBuilder_ = null;
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutCardsDataFieldBuilder() : null;
            } else {
              outCardsDataBuilder_.addAllMessages(other.outCardsData_);
            }
          }
        }
        if (!other.outCardsCount_.isEmpty()) {
          if (outCardsCount_.isEmpty()) {
            outCardsCount_ = other.outCardsCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureOutCardsCountIsMutable();
            outCardsCount_.addAll(other.outCardsCount_);
          }
          onChanged();
        }
        if (!other.playerPass_.isEmpty()) {
          if (playerPass_.isEmpty()) {
            playerPass_ = other.playerPass_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePlayerPassIsMutable();
            playerPass_.addAll(other.playerPass_);
          }
          onChanged();
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (other.hasPrOutCardPlayer()) {
          setPrOutCardPlayer(other.getPrOutCardPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (userCanOutDataBuilder_ == null) {
          if (!other.userCanOutData_.isEmpty()) {
            if (userCanOutData_.isEmpty()) {
              userCanOutData_ = other.userCanOutData_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureUserCanOutDataIsMutable();
              userCanOutData_.addAll(other.userCanOutData_);
            }
            onChanged();
          }
        } else {
          if (!other.userCanOutData_.isEmpty()) {
            if (userCanOutDataBuilder_.isEmpty()) {
              userCanOutDataBuilder_.dispose();
              userCanOutDataBuilder_ = null;
              userCanOutData_ = other.userCanOutData_;
              bitField0_ = (bitField0_ & ~0x00040000);
              userCanOutDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUserCanOutDataFieldBuilder() : null;
            } else {
              userCanOutDataBuilder_.addAllMessages(other.userCanOutData_);
            }
          }
        }
        if (!other.userCanOutCount_.isEmpty()) {
          if (userCanOutCount_.isEmpty()) {
            userCanOutCount_ = other.userCanOutCount_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureUserCanOutCountIsMutable();
            userCanOutCount_.addAll(other.userCanOutCount_);
          }
          onChanged();
        }
        if (!other.userCanOutType_.isEmpty()) {
          if (userCanOutType_.isEmpty()) {
            userCanOutType_ = other.userCanOutType_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureUserCanOutTypeIsMutable();
            userCanOutType_.addAll(other.userCanOutType_);
          }
          onChanged();
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.TableResponse_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated bool trustee = 4;
      private java.util.List<java.lang.Boolean> trustee_ = java.util.Collections.emptyList();
      private void ensureTrusteeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = new java.util.ArrayList<java.lang.Boolean>(trustee_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getTrusteeList() {
        return java.util.Collections.unmodifiableList(trustee_);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public int getTrusteeCount() {
        return trustee_.size();
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public boolean getTrustee(int index) {
        return trustee_.get(index);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder setTrustee(
          int index, boolean value) {
        ensureTrusteeIsMutable();
        trustee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addTrustee(boolean value) {
        ensureTrusteeIsMutable();
        trustee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addAllTrustee(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTrusteeIsMutable();
        super.addAll(values, trustee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder clearTrustee() {
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse out_cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_ =
        java.util.Collections.emptyList();
      private void ensureOutCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(outCardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> outCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
        if (outCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outCardsData_);
        } else {
          return outCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getOutCardsDataCount() {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.size();
        } else {
          return outCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);
        } else {
          return outCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addAllOutCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          super.addAll(values, outCardsData_);
          onChanged();
        } else {
          outCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder clearOutCardsData() {
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder removeOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.remove(index);
          onChanged();
        } else {
          outCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
          int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);  } else {
          return outCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getOutCardsDataOrBuilderList() {
        if (outCardsDataBuilder_ != null) {
          return outCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder() {
        return getOutCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getOutCardsDataBuilderList() {
        return getOutCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getOutCardsDataFieldBuilder() {
        if (outCardsDataBuilder_ == null) {
          outCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  outCardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          outCardsData_ = null;
        }
        return outCardsDataBuilder_;
      }

      // repeated int32 out_cards_count = 6;
      private java.util.List<java.lang.Integer> outCardsCount_ = java.util.Collections.emptyList();
      private void ensureOutCardsCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = new java.util.ArrayList<java.lang.Integer>(outCardsCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsCountList() {
        return java.util.Collections.unmodifiableList(outCardsCount_);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCountCount() {
        return outCardsCount_.size();
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCount(int index) {
        return outCardsCount_.get(index);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder setOutCardsCount(
          int index, int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addOutCardsCount(int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addAllOutCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsCountIsMutable();
        super.addAll(values, outCardsCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder clearOutCardsCount() {
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 player_pass = 7;
      private java.util.List<java.lang.Integer> playerPass_ = java.util.Collections.emptyList();
      private void ensurePlayerPassIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = new java.util.ArrayList<java.lang.Integer>(playerPass_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerPassList() {
        return java.util.Collections.unmodifiableList(playerPass_);
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public int getPlayerPassCount() {
        return playerPass_.size();
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public int getPlayerPass(int index) {
        return playerPass_.get(index);
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder setPlayerPass(
          int index, int value) {
        ensurePlayerPassIsMutable();
        playerPass_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder addPlayerPass(int value) {
        ensurePlayerPassIsMutable();
        playerPass_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder addAllPlayerPass(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerPassIsMutable();
        super.addAll(values, playerPass_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder clearPlayerPass() {
        playerPass_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 card_type = 8;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_player = 9;
      private int prOutCardPlayer_ ;
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public boolean hasPrOutCardPlayer() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public int getPrOutCardPlayer() {
        return prOutCardPlayer_;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder setPrOutCardPlayer(int value) {
        bitField0_ |= 0x00000100;
        prOutCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder clearPrOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000100);
        prOutCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 10;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 11;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000400;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 12;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000800;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_first_out = 13;
      private int isFirstOut_ ;
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public int getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder setIsFirstOut(int value) {
        bitField0_ |= 0x00001000;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isFirstOut_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 14;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00002000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 15;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目 -1不显示数目 -2 显示小于15张 0即为打完了
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 16;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional .RoomInfo room_info = 17;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 18;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Int32ArrayResponse user_can_out_data = 19;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> userCanOutData_ =
        java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(userCanOutData_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> userCanOutDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getUserCanOutDataList() {
        if (userCanOutDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(userCanOutData_);
        } else {
          return userCanOutDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.size();
        } else {
          return userCanOutDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getUserCanOutData(int index) {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.get(index);
        } else {
          return userCanOutDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.set(index, value);
          onChanged();
        } else {
          userCanOutDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.set(index, builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(value);
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (userCanOutDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(index, value);
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.add(index, builderForValue.build());
          onChanged();
        } else {
          userCanOutDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          super.addAll(values, userCanOutData_);
          onChanged();
        } else {
          userCanOutDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        if (userCanOutDataBuilder_ == null) {
          userCanOutData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          userCanOutDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder removeUserCanOutData(int index) {
        if (userCanOutDataBuilder_ == null) {
          ensureUserCanOutDataIsMutable();
          userCanOutData_.remove(index);
          onChanged();
        } else {
          userCanOutDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getUserCanOutDataBuilder(
          int index) {
        return getUserCanOutDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getUserCanOutDataOrBuilder(
          int index) {
        if (userCanOutDataBuilder_ == null) {
          return userCanOutData_.get(index);  } else {
          return userCanOutDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getUserCanOutDataOrBuilderList() {
        if (userCanOutDataBuilder_ != null) {
          return userCanOutDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(userCanOutData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addUserCanOutDataBuilder() {
        return getUserCanOutDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addUserCanOutDataBuilder(
          int index) {
        return getUserCanOutDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getUserCanOutDataBuilderList() {
        return getUserCanOutDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getUserCanOutDataFieldBuilder() {
        if (userCanOutDataBuilder_ == null) {
          userCanOutDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  userCanOutData_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          userCanOutData_ = null;
        }
        return userCanOutDataBuilder_;
      }

      // repeated int32 user_can_out_count = 20;
      private java.util.List<java.lang.Integer> userCanOutCount_ = java.util.Collections.emptyList();
      private void ensureUserCanOutCountIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          userCanOutCount_ = new java.util.ArrayList<java.lang.Integer>(userCanOutCount_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutCountList() {
        return java.util.Collections.unmodifiableList(userCanOutCount_);
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCountCount() {
        return userCanOutCount_.size();
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCount(int index) {
        return userCanOutCount_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setUserCanOutCount(
          int index, int value) {
        ensureUserCanOutCountIsMutable();
        userCanOutCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder addUserCanOutCount(int value) {
        ensureUserCanOutCountIsMutable();
        userCanOutCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder addAllUserCanOutCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutCountIsMutable();
        super.addAll(values, userCanOutCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        userCanOutCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // repeated int32 user_can_out_type = 22;
      private java.util.List<java.lang.Integer> userCanOutType_ = java.util.Collections.emptyList();
      private void ensureUserCanOutTypeIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          userCanOutType_ = new java.util.ArrayList<java.lang.Integer>(userCanOutType_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutTypeList() {
        return java.util.Collections.unmodifiableList(userCanOutType_);
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public int getUserCanOutTypeCount() {
        return userCanOutType_.size();
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public int getUserCanOutType(int index) {
        return userCanOutType_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public Builder setUserCanOutType(
          int index, int value) {
        ensureUserCanOutTypeIsMutable();
        userCanOutType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public Builder addUserCanOutType(int value) {
        ensureUserCanOutTypeIsMutable();
        userCanOutType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public Builder addAllUserCanOutType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutTypeIsMutable();
        super.addAll(values, userCanOutType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_type = 22;</code>
       */
      public Builder clearUserCanOutType() {
        userCanOutType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated int32 win_order = 21;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.TableResponse_Sxth)
    }

    static {
      defaultInstance = new TableResponse_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.TableResponse_Sxth)
  }

  public interface GameStart_Wsk_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 2;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 card_count = 3;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional int32 display_time = 5;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code sxth.GameStart_Wsk_Sxth}
   *
   * <pre>
   *1001
   * </pre>
   */
  public static final class GameStart_Wsk_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements GameStart_Wsk_SxthOrBuilder {
    // Use GameStart_Wsk_Sxth.newBuilder() to construct.
    private GameStart_Wsk_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStart_Wsk_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStart_Wsk_Sxth defaultInstance;
    public static GameStart_Wsk_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public GameStart_Wsk_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStart_Wsk_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_GameStart_Wsk_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_GameStart_Wsk_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStart_Wsk_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<GameStart_Wsk_Sxth>() {
      public GameStart_Wsk_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStart_Wsk_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStart_Wsk_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 card_count = 3;
    public static final int CARD_COUNT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 3;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional int32 display_time = 5;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 5;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 5;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(3, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.GameStart_Wsk_Sxth}
     *
     * <pre>
     *1001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_GameStart_Wsk_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_GameStart_Wsk_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_GameStart_Wsk_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth result = new protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.GameStart_Wsk_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 2;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 card_count = 3;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 3;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional int32 display_time = 5;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000010;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 5;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.GameStart_Wsk_Sxth)
    }

    static {
      defaultInstance = new GameStart_Wsk_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.GameStart_Wsk_Sxth)
  }

  public interface TouXiang_Result_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 is_agree_touxiang = 1;
    /**
     * <code>optional int32 is_agree_touxiang = 1;</code>
     *
     * <pre>
     *是否接受投降 0:拒绝 1：同意
     * </pre>
     */
    boolean hasIsAgreeTouxiang();
    /**
     * <code>optional int32 is_agree_touxiang = 1;</code>
     *
     * <pre>
     *是否接受投降 0:拒绝 1：同意
     * </pre>
     */
    int getIsAgreeTouxiang();

    // optional int32 request_tou_xiang = 2;
    /**
     * <code>optional int32 request_tou_xiang = 2;</code>
     *
     * <pre>
     *请求投降玩家
     * </pre>
     */
    boolean hasRequestTouXiang();
    /**
     * <code>optional int32 request_tou_xiang = 2;</code>
     *
     * <pre>
     *请求投降玩家
     * </pre>
     */
    int getRequestTouXiang();

    // optional string opreate_str = 3;
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    boolean hasOpreateStr();
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    java.lang.String getOpreateStr();
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getOpreateStrBytes();
  }
  /**
   * Protobuf type {@code sxth.TouXiang_Result_Sxth}
   *
   * <pre>
   *1006
   * </pre>
   */
  public static final class TouXiang_Result_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements TouXiang_Result_SxthOrBuilder {
    // Use TouXiang_Result_Sxth.newBuilder() to construct.
    private TouXiang_Result_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TouXiang_Result_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TouXiang_Result_Sxth defaultInstance;
    public static TouXiang_Result_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public TouXiang_Result_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TouXiang_Result_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isAgreeTouxiang_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              requestTouXiang_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              opreateStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Result_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Result_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.class, protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<TouXiang_Result_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<TouXiang_Result_Sxth>() {
      public TouXiang_Result_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TouXiang_Result_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TouXiang_Result_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 is_agree_touxiang = 1;
    public static final int IS_AGREE_TOUXIANG_FIELD_NUMBER = 1;
    private int isAgreeTouxiang_;
    /**
     * <code>optional int32 is_agree_touxiang = 1;</code>
     *
     * <pre>
     *是否接受投降 0:拒绝 1：同意
     * </pre>
     */
    public boolean hasIsAgreeTouxiang() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 is_agree_touxiang = 1;</code>
     *
     * <pre>
     *是否接受投降 0:拒绝 1：同意
     * </pre>
     */
    public int getIsAgreeTouxiang() {
      return isAgreeTouxiang_;
    }

    // optional int32 request_tou_xiang = 2;
    public static final int REQUEST_TOU_XIANG_FIELD_NUMBER = 2;
    private int requestTouXiang_;
    /**
     * <code>optional int32 request_tou_xiang = 2;</code>
     *
     * <pre>
     *请求投降玩家
     * </pre>
     */
    public boolean hasRequestTouXiang() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 request_tou_xiang = 2;</code>
     *
     * <pre>
     *请求投降玩家
     * </pre>
     */
    public int getRequestTouXiang() {
      return requestTouXiang_;
    }

    // optional string opreate_str = 3;
    public static final int OPREATE_STR_FIELD_NUMBER = 3;
    private java.lang.Object opreateStr_;
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public boolean hasOpreateStr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public java.lang.String getOpreateStr() {
      java.lang.Object ref = opreateStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          opreateStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string opreate_str = 3;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOpreateStrBytes() {
      java.lang.Object ref = opreateStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opreateStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      isAgreeTouxiang_ = 0;
      requestTouXiang_ = 0;
      opreateStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, isAgreeTouxiang_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, requestTouXiang_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOpreateStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, isAgreeTouxiang_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, requestTouXiang_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOpreateStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.TouXiang_Result_Sxth}
     *
     * <pre>
     *1006
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.TouXiang_Result_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Result_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Result_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.class, protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isAgreeTouxiang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        requestTouXiang_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Result_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth result = new protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isAgreeTouxiang_ = isAgreeTouxiang_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requestTouXiang_ = requestTouXiang_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.opreateStr_ = opreateStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth.getDefaultInstance()) return this;
        if (other.hasIsAgreeTouxiang()) {
          setIsAgreeTouxiang(other.getIsAgreeTouxiang());
        }
        if (other.hasRequestTouXiang()) {
          setRequestTouXiang(other.getRequestTouXiang());
        }
        if (other.hasOpreateStr()) {
          bitField0_ |= 0x00000004;
          opreateStr_ = other.opreateStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.TouXiang_Result_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 is_agree_touxiang = 1;
      private int isAgreeTouxiang_ ;
      /**
       * <code>optional int32 is_agree_touxiang = 1;</code>
       *
       * <pre>
       *是否接受投降 0:拒绝 1：同意
       * </pre>
       */
      public boolean hasIsAgreeTouxiang() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 is_agree_touxiang = 1;</code>
       *
       * <pre>
       *是否接受投降 0:拒绝 1：同意
       * </pre>
       */
      public int getIsAgreeTouxiang() {
        return isAgreeTouxiang_;
      }
      /**
       * <code>optional int32 is_agree_touxiang = 1;</code>
       *
       * <pre>
       *是否接受投降 0:拒绝 1：同意
       * </pre>
       */
      public Builder setIsAgreeTouxiang(int value) {
        bitField0_ |= 0x00000001;
        isAgreeTouxiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_agree_touxiang = 1;</code>
       *
       * <pre>
       *是否接受投降 0:拒绝 1：同意
       * </pre>
       */
      public Builder clearIsAgreeTouxiang() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isAgreeTouxiang_ = 0;
        onChanged();
        return this;
      }

      // optional int32 request_tou_xiang = 2;
      private int requestTouXiang_ ;
      /**
       * <code>optional int32 request_tou_xiang = 2;</code>
       *
       * <pre>
       *请求投降玩家
       * </pre>
       */
      public boolean hasRequestTouXiang() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 request_tou_xiang = 2;</code>
       *
       * <pre>
       *请求投降玩家
       * </pre>
       */
      public int getRequestTouXiang() {
        return requestTouXiang_;
      }
      /**
       * <code>optional int32 request_tou_xiang = 2;</code>
       *
       * <pre>
       *请求投降玩家
       * </pre>
       */
      public Builder setRequestTouXiang(int value) {
        bitField0_ |= 0x00000002;
        requestTouXiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 request_tou_xiang = 2;</code>
       *
       * <pre>
       *请求投降玩家
       * </pre>
       */
      public Builder clearRequestTouXiang() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requestTouXiang_ = 0;
        onChanged();
        return this;
      }

      // optional string opreate_str = 3;
      private java.lang.Object opreateStr_ = "";
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public boolean hasOpreateStr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public java.lang.String getOpreateStr() {
        java.lang.Object ref = opreateStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          opreateStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOpreateStrBytes() {
        java.lang.Object ref = opreateStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opreateStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder setOpreateStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        opreateStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder clearOpreateStr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opreateStr_ = getDefaultInstance().getOpreateStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string opreate_str = 3;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder setOpreateStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        opreateStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.TouXiang_Result_Sxth)
    }

    static {
      defaultInstance = new TouXiang_Result_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.TouXiang_Result_Sxth)
  }

  public interface effect_type_sxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
     * </pre>
     */
    int getType();

    // optional int32 data = 3;
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    boolean hasData();
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    int getData();
  }
  /**
   * Protobuf type {@code sxth.effect_type_sxth}
   *
   * <pre>
   *1008
   * </pre>
   */
  public static final class effect_type_sxth extends
      com.google.protobuf.GeneratedMessage
      implements effect_type_sxthOrBuilder {
    // Use effect_type_sxth.newBuilder() to construct.
    private effect_type_sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private effect_type_sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final effect_type_sxth defaultInstance;
    public static effect_type_sxth getDefaultInstance() {
      return defaultInstance;
    }

    public effect_type_sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private effect_type_sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              data_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_effect_type_sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_effect_type_sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.effect_type_sxth.class, protobuf.clazz.sxth.SxthRsp.effect_type_sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<effect_type_sxth> PARSER =
        new com.google.protobuf.AbstractParser<effect_type_sxth>() {
      public effect_type_sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new effect_type_sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<effect_type_sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private int data_;
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 data = 3;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    public int getData() {
      return data_;
    }

    private void initFields() {
      seatIndex_ = 0;
      type_ = 0;
      data_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.effect_type_sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.effect_type_sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.effect_type_sxth}
     *
     * <pre>
     *1008
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.effect_type_sxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_effect_type_sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_effect_type_sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.effect_type_sxth.class, protobuf.clazz.sxth.SxthRsp.effect_type_sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.effect_type_sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_effect_type_sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.effect_type_sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.effect_type_sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.effect_type_sxth build() {
        protobuf.clazz.sxth.SxthRsp.effect_type_sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.effect_type_sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.effect_type_sxth result = new protobuf.clazz.sxth.SxthRsp.effect_type_sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.effect_type_sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.effect_type_sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.effect_type_sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.effect_type_sxth.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.effect_type_sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.effect_type_sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1：分数动画 2：四小龙王 3：六六大顺 4：八仙过海 5：十二罗汉 6:投降按钮消失 7：废机 8:等待对家投降
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 data = 3;
      private int data_ ;
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public int getData() {
        return data_;
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public Builder setData(int value) {
        bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 data = 3;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.effect_type_sxth)
    }

    static {
      defaultInstance = new effect_type_sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.effect_type_sxth)
  }

  public interface TouXiang_Ask_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    int getSeatIndex();

    // optional string opreate_str = 2;
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    boolean hasOpreateStr();
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    java.lang.String getOpreateStr();
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getOpreateStrBytes();
  }
  /**
   * Protobuf type {@code sxth.TouXiang_Ask_Sxth}
   *
   * <pre>
   *1009
   * </pre>
   */
  public static final class TouXiang_Ask_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements TouXiang_Ask_SxthOrBuilder {
    // Use TouXiang_Ask_Sxth.newBuilder() to construct.
    private TouXiang_Ask_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TouXiang_Ask_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TouXiang_Ask_Sxth defaultInstance;
    public static TouXiang_Ask_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public TouXiang_Ask_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TouXiang_Ask_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              opreateStr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Ask_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Ask_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.class, protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<TouXiang_Ask_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<TouXiang_Ask_Sxth>() {
      public TouXiang_Ask_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TouXiang_Ask_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TouXiang_Ask_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作玩家
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string opreate_str = 2;
    public static final int OPREATE_STR_FIELD_NUMBER = 2;
    private java.lang.Object opreateStr_;
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public boolean hasOpreateStr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public java.lang.String getOpreateStr() {
      java.lang.Object ref = opreateStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          opreateStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string opreate_str = 2;</code>
     *
     * <pre>
     *消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOpreateStrBytes() {
      java.lang.Object ref = opreateStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opreateStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      seatIndex_ = 0;
      opreateStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOpreateStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOpreateStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.TouXiang_Ask_Sxth}
     *
     * <pre>
     *1009
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Ask_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Ask_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.class, protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_TouXiang_Ask_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth result = new protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opreateStr_ = opreateStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasOpreateStr()) {
          bitField0_ |= 0x00000002;
          opreateStr_ = other.opreateStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.TouXiang_Ask_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作玩家
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string opreate_str = 2;
      private java.lang.Object opreateStr_ = "";
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public boolean hasOpreateStr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public java.lang.String getOpreateStr() {
        java.lang.Object ref = opreateStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          opreateStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOpreateStrBytes() {
        java.lang.Object ref = opreateStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opreateStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder setOpreateStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        opreateStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder clearOpreateStr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opreateStr_ = getDefaultInstance().getOpreateStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string opreate_str = 2;</code>
       *
       * <pre>
       *消息
       * </pre>
       */
      public Builder setOpreateStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        opreateStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.TouXiang_Ask_Sxth)
    }

    static {
      defaultInstance = new TouXiang_Ask_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.TouXiang_Ask_Sxth)
  }

  public interface RefreshCardData_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 hand_card_count = 1;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code sxth.RefreshCardData_Sxth}
   *
   * <pre>
   *1010
   * </pre>
   */
  public static final class RefreshCardData_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements RefreshCardData_SxthOrBuilder {
    // Use RefreshCardData_Sxth.newBuilder() to construct.
    private RefreshCardData_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshCardData_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshCardData_Sxth defaultInstance;
    public static RefreshCardData_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshCardData_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshCardData_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshCardData_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshCardData_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.class, protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshCardData_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<RefreshCardData_Sxth>() {
      public RefreshCardData_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshCardData_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshCardData_Sxth> getParserForType() {
      return PARSER;
    }

    // repeated int32 hand_card_count = 1;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    private void initFields() {
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(1, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(2, handCardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, handCardsData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.RefreshCardData_Sxth}
     *
     * <pre>
     *1010
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.RefreshCardData_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshCardData_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshCardData_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.class, protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_RefreshCardData_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth result = new protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth.getDefaultInstance()) return this;
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.RefreshCardData_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 hand_card_count = 1;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:sxth.RefreshCardData_Sxth)
    }

    static {
      defaultInstance = new RefreshCardData_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.RefreshCardData_Sxth)
  }

  public interface Switch_Seat_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .RoomPlayerResponse players_old = 1;
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersOldList();
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOld(int index);
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    int getPlayersOldCount();
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOldOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOldOrBuilder(
        int index);

    // repeated .RoomPlayerResponse players_new = 2;
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersNewList();
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayersNew(int index);
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    int getPlayersNewCount();
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersNewOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersNewOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code sxth.Switch_Seat_Sxth}
   *
   * <pre>
   *1011
   * </pre>
   */
  public static final class Switch_Seat_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements Switch_Seat_SxthOrBuilder {
    // Use Switch_Seat_Sxth.newBuilder() to construct.
    private Switch_Seat_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Switch_Seat_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Switch_Seat_Sxth defaultInstance;
    public static Switch_Seat_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public Switch_Seat_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Switch_Seat_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playersOld_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              playersOld_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playersNew_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              playersNew_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playersOld_ = java.util.Collections.unmodifiableList(playersOld_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playersNew_ = java.util.Collections.unmodifiableList(playersNew_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Switch_Seat_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Switch_Seat_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.class, protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<Switch_Seat_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<Switch_Seat_Sxth>() {
      public Switch_Seat_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Switch_Seat_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Switch_Seat_Sxth> getParserForType() {
      return PARSER;
    }

    // repeated .RoomPlayerResponse players_old = 1;
    public static final int PLAYERS_OLD_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersOld_;
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersOldList() {
      return playersOld_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOldOrBuilderList() {
      return playersOld_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    public int getPlayersOldCount() {
      return playersOld_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOld(int index) {
      return playersOld_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players_old = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOldOrBuilder(
        int index) {
      return playersOld_.get(index);
    }

    // repeated .RoomPlayerResponse players_new = 2;
    public static final int PLAYERS_NEW_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersNew_;
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersNewList() {
      return playersNew_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersNewOrBuilderList() {
      return playersNew_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    public int getPlayersNewCount() {
      return playersNew_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersNew(int index) {
      return playersNew_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players_new = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersNewOrBuilder(
        int index) {
      return playersNew_.get(index);
    }

    private void initFields() {
      playersOld_ = java.util.Collections.emptyList();
      playersNew_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playersOld_.size(); i++) {
        output.writeMessage(1, playersOld_.get(i));
      }
      for (int i = 0; i < playersNew_.size(); i++) {
        output.writeMessage(2, playersNew_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playersOld_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playersOld_.get(i));
      }
      for (int i = 0; i < playersNew_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playersNew_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.Switch_Seat_Sxth}
     *
     * <pre>
     *1011
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.Switch_Seat_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Switch_Seat_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Switch_Seat_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.class, protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersOldFieldBuilder();
          getPlayersNewFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playersOldBuilder_ == null) {
          playersOld_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playersOldBuilder_.clear();
        }
        if (playersNewBuilder_ == null) {
          playersNew_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersNewBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Switch_Seat_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth result = new protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth(this);
        int from_bitField0_ = bitField0_;
        if (playersOldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playersOld_ = java.util.Collections.unmodifiableList(playersOld_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playersOld_ = playersOld_;
        } else {
          result.playersOld_ = playersOldBuilder_.build();
        }
        if (playersNewBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playersNew_ = java.util.Collections.unmodifiableList(playersNew_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playersNew_ = playersNew_;
        } else {
          result.playersNew_ = playersNewBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth.getDefaultInstance()) return this;
        if (playersOldBuilder_ == null) {
          if (!other.playersOld_.isEmpty()) {
            if (playersOld_.isEmpty()) {
              playersOld_ = other.playersOld_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersOldIsMutable();
              playersOld_.addAll(other.playersOld_);
            }
            onChanged();
          }
        } else {
          if (!other.playersOld_.isEmpty()) {
            if (playersOldBuilder_.isEmpty()) {
              playersOldBuilder_.dispose();
              playersOldBuilder_ = null;
              playersOld_ = other.playersOld_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersOldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersOldFieldBuilder() : null;
            } else {
              playersOldBuilder_.addAllMessages(other.playersOld_);
            }
          }
        }
        if (playersNewBuilder_ == null) {
          if (!other.playersNew_.isEmpty()) {
            if (playersNew_.isEmpty()) {
              playersNew_ = other.playersNew_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersNewIsMutable();
              playersNew_.addAll(other.playersNew_);
            }
            onChanged();
          }
        } else {
          if (!other.playersNew_.isEmpty()) {
            if (playersNewBuilder_.isEmpty()) {
              playersNewBuilder_.dispose();
              playersNewBuilder_ = null;
              playersNew_ = other.playersNew_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersNewBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersNewFieldBuilder() : null;
            } else {
              playersNewBuilder_.addAllMessages(other.playersNew_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.Switch_Seat_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .RoomPlayerResponse players_old = 1;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersOld_ =
        java.util.Collections.emptyList();
      private void ensurePlayersOldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playersOld_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(playersOld_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersOldBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersOldList() {
        if (playersOldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playersOld_);
        } else {
          return playersOldBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public int getPlayersOldCount() {
        if (playersOldBuilder_ == null) {
          return playersOld_.size();
        } else {
          return playersOldBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersOld(int index) {
        if (playersOldBuilder_ == null) {
          return playersOld_.get(index);
        } else {
          return playersOldBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder setPlayersOld(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOldIsMutable();
          playersOld_.set(index, value);
          onChanged();
        } else {
          playersOldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder setPlayersOld(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOldBuilder_ == null) {
          ensurePlayersOldIsMutable();
          playersOld_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersOldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder addPlayersOld(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOldIsMutable();
          playersOld_.add(value);
          onChanged();
        } else {
          playersOldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder addPlayersOld(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersOldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersOldIsMutable();
          playersOld_.add(index, value);
          onChanged();
        } else {
          playersOldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder addPlayersOld(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOldBuilder_ == null) {
          ensurePlayersOldIsMutable();
          playersOld_.add(builderForValue.build());
          onChanged();
        } else {
          playersOldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder addPlayersOld(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersOldBuilder_ == null) {
          ensurePlayersOldIsMutable();
          playersOld_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersOldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder addAllPlayersOld(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersOldBuilder_ == null) {
          ensurePlayersOldIsMutable();
          super.addAll(values, playersOld_);
          onChanged();
        } else {
          playersOldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder clearPlayersOld() {
        if (playersOldBuilder_ == null) {
          playersOld_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersOldBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public Builder removePlayersOld(int index) {
        if (playersOldBuilder_ == null) {
          ensurePlayersOldIsMutable();
          playersOld_.remove(index);
          onChanged();
        } else {
          playersOldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersOldBuilder(
          int index) {
        return getPlayersOldFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOldOrBuilder(
          int index) {
        if (playersOldBuilder_ == null) {
          return playersOld_.get(index);  } else {
          return playersOldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOldOrBuilderList() {
        if (playersOldBuilder_ != null) {
          return playersOldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playersOld_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersOldBuilder() {
        return getPlayersOldFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersOldBuilder(
          int index) {
        return getPlayersOldFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_old = 1;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersOldBuilderList() {
        return getPlayersOldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersOldFieldBuilder() {
        if (playersOldBuilder_ == null) {
          playersOldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  playersOld_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playersOld_ = null;
        }
        return playersOldBuilder_;
      }

      // repeated .RoomPlayerResponse players_new = 2;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> playersNew_ =
        java.util.Collections.emptyList();
      private void ensurePlayersNewIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playersNew_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(playersNew_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersNewBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersNewList() {
        if (playersNewBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playersNew_);
        } else {
          return playersNewBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public int getPlayersNewCount() {
        if (playersNewBuilder_ == null) {
          return playersNew_.size();
        } else {
          return playersNewBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayersNew(int index) {
        if (playersNewBuilder_ == null) {
          return playersNew_.get(index);
        } else {
          return playersNewBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder setPlayersNew(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersNewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersNewIsMutable();
          playersNew_.set(index, value);
          onChanged();
        } else {
          playersNewBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder setPlayersNew(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersNewBuilder_ == null) {
          ensurePlayersNewIsMutable();
          playersNew_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersNewBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder addPlayersNew(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersNewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersNewIsMutable();
          playersNew_.add(value);
          onChanged();
        } else {
          playersNewBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder addPlayersNew(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersNewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersNewIsMutable();
          playersNew_.add(index, value);
          onChanged();
        } else {
          playersNewBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder addPlayersNew(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersNewBuilder_ == null) {
          ensurePlayersNewIsMutable();
          playersNew_.add(builderForValue.build());
          onChanged();
        } else {
          playersNewBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder addPlayersNew(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersNewBuilder_ == null) {
          ensurePlayersNewIsMutable();
          playersNew_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersNewBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder addAllPlayersNew(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersNewBuilder_ == null) {
          ensurePlayersNewIsMutable();
          super.addAll(values, playersNew_);
          onChanged();
        } else {
          playersNewBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder clearPlayersNew() {
        if (playersNewBuilder_ == null) {
          playersNew_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersNewBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public Builder removePlayersNew(int index) {
        if (playersNewBuilder_ == null) {
          ensurePlayersNewIsMutable();
          playersNew_.remove(index);
          onChanged();
        } else {
          playersNewBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersNewBuilder(
          int index) {
        return getPlayersNewFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersNewOrBuilder(
          int index) {
        if (playersNewBuilder_ == null) {
          return playersNew_.get(index);  } else {
          return playersNewBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersNewOrBuilderList() {
        if (playersNewBuilder_ != null) {
          return playersNewBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playersNew_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersNewBuilder() {
        return getPlayersNewFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersNewBuilder(
          int index) {
        return getPlayersNewFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players_new = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersNewBuilderList() {
        return getPlayersNewFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersNewFieldBuilder() {
        if (playersNewBuilder_ == null) {
          playersNewBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  playersNew_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playersNew_ = null;
        }
        return playersNewBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:sxth.Switch_Seat_Sxth)
    }

    static {
      defaultInstance = new Switch_Seat_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.Switch_Seat_Sxth)
  }

  public interface Opreate_RequestWsk_SxthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
     * </pre>
     */
    int getOpreateType();
  }
  /**
   * Protobuf type {@code sxth.Opreate_RequestWsk_Sxth}
   *
   * <pre>
   *请求 1063
   * </pre>
   */
  public static final class Opreate_RequestWsk_Sxth extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_RequestWsk_SxthOrBuilder {
    // Use Opreate_RequestWsk_Sxth.newBuilder() to construct.
    private Opreate_RequestWsk_Sxth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_RequestWsk_Sxth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_RequestWsk_Sxth defaultInstance;
    public static Opreate_RequestWsk_Sxth getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_RequestWsk_Sxth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_RequestWsk_Sxth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Opreate_RequestWsk_Sxth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_RequestWsk_Sxth> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_RequestWsk_Sxth>() {
      public Opreate_RequestWsk_Sxth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_RequestWsk_Sxth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_RequestWsk_Sxth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    private void initFields() {
      opreateType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code sxth.Opreate_RequestWsk_Sxth}
     *
     * <pre>
     *请求 1063
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_SxthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Opreate_RequestWsk_Sxth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.class, protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.Builder.class);
      }

      // Construct using protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.sxth.SxthRsp.internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor;
      }

      public protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth getDefaultInstanceForType() {
        return protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.getDefaultInstance();
      }

      public protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth build() {
        protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth buildPartial() {
        protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth result = new protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth) {
          return mergeFrom((protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth other) {
        if (other == protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.sxth.SxthRsp.Opreate_RequestWsk_Sxth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：投降 2：不投降 3：同意投降 4：拒绝投降 5:排序
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sxth.Opreate_RequestWsk_Sxth)
    }

    static {
      defaultInstance = new Opreate_RequestWsk_Sxth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:sxth.Opreate_RequestWsk_Sxth)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_RefreshScore_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_RefreshScore_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_OutCardDataWsk_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_OutCardDataWsk_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_PukeGameEndWsk_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_PukeGameEndWsk_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_TableResponse_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_TableResponse_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_GameStart_Wsk_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_GameStart_Wsk_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_TouXiang_Result_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_TouXiang_Result_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_effect_type_sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_effect_type_sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_TouXiang_Ask_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_TouXiang_Ask_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_RefreshCardData_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_RefreshCardData_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_Switch_Seat_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_Switch_Seat_Sxth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sxth_Opreate_RequestWsk_Sxth_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016wsk/sxth.proto\022\004sxth\032\024basic/protocol.p" +
      "roto\"z\n\021RefreshScore_Sxth\022\026\n\016user_get_sc" +
      "ore\030\001 \003(\005\022\023\n\013table_score\030\002 \001(\005\022\023\n\013award_" +
      "score\030\003 \003(\005\022\021\n\thua_score\030\004 \003(\005\022\020\n\010is_del" +
      "ay\030\005 \001(\010\"\272\006\n\023OutCardDataWsk_Sxth\022\027\n\017out_" +
      "card_player\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\023\n" +
      "\013cards_count\030\003 \001(\005\022\021\n\tcard_type\030\004 \001(\005\022\022\n" +
      "\ncur_player\030\005 \001(\005\022\025\n\rpr_cards_data\030\006 \003(\005" +
      "\022\026\n\016pr_cards_count\030\007 \001(\005\022\030\n\020pr_out_card_" +
      "type\030\010 \001(\005\022\024\n\014is_first_out\030\t \001(\010\022\024\n\014disp",
      "lay_time\030\n \001(\005\022.\n\021user_can_out_data\030\013 \003(" +
      "\0132\023.Int32ArrayResponse\022\032\n\022user_can_out_c" +
      "ount\030\014 \003(\005\022\031\n\021user_can_out_type\030\022 \003(\005\022\026\n" +
      "\016user_get_score\030\r \003(\005\022\027\n\017hand_card_count" +
      "\030\016 \003(\005\022,\n\017hand_cards_data\030\017 \003(\0132\023.Int32A" +
      "rrayResponse\022\021\n\twin_order\030\020 \003(\005\022\034\n\024is_cu" +
      "rrent_first_out\030\021 \001(\005\022\034\n\024boom_card_data_" +
      "count\030\023 \003(\005\022+\n\016boom_card_data\030\024 \003(\0132\023.In" +
      "t32ArrayResponse\022\"\n\032five_ten_k_card_data" +
      "_count\030\025 \003(\005\0221\n\024five_ten_k_card_data\030\026 \003",
      "(\0132\023.Int32ArrayResponse\022\037\n\027tonghua_card_" +
      "data_count\030\027 \003(\005\022.\n\021tonghua_card_data\030\030 " +
      "\003(\0132\023.Int32ArrayResponse\022%\n\035five_ten_k_c" +
      "ard_data_count_fu\030\031 \003(\005\0224\n\027five_ten_k_ca" +
      "rd_data_fu\030\032 \003(\0132\023.Int32ArrayResponse\"\212\004" +
      "\n\023PukeGameEndWsk_Sxth\022\034\n\troom_info\030\001 \001(\013" +
      "2\t.RoomInfo\022\021\n\tcur_round\030\002 \001(\005\022\022\n\ngame_r" +
      "ound\030\003 \001(\005\022\022\n\ncard_count\030\004 \003(\005\022\'\n\ncards_" +
      "data\030\005 \003(\0132\023.Int32ArrayResponse\022\025\n\rboom_" +
      "card_num\030\006 \003(\005\022\021\n\tend_score\030\007 \003(\005\022\024\n\014rew",
      "ard_score\030\010 \003(\005\022\022\n\nplayer_num\030\t \001(\005\022\025\n\rb" +
      "anker_player\030\n \001(\005\022\016\n\006reason\030\013 \001(\005\022\020\n\010zh" +
      "ua_fen\030\014 \003(\005\022\021\n\twin_order\030\r \003(\005\022\021\n\tgame_" +
      "cell\030\016 \001(\005\022\016\n\006friend\030\017 \003(\005\022\024\n\014flower_sco" +
      "re\030\022 \003(\005\022\022\n\nscore_tyep\030\023 \001(\005\022\025\n\rall_end_" +
      "score\030\020 \003(\005\022$\n\007players\030\021 \003(\0132\023.RoomPlaye" +
      "rResponse\022*\n\rplayers_other\030\024 \003(\0132\023.RoomP" +
      "layerResponse\022\033\n\023all_end_score_other\030\025 \003" +
      "(\005\"\343\004\n\022TableResponse_Sxth\022\025\n\rbanker_play" +
      "er\030\001 \001(\005\022\026\n\016current_player\030\002 \001(\005\022\023\n\013prev",
      "_player\030\003 \001(\005\022\017\n\007trustee\030\004 \003(\010\022+\n\016out_ca" +
      "rds_data\030\005 \003(\0132\023.Int32ArrayResponse\022\027\n\017o" +
      "ut_cards_count\030\006 \003(\005\022\023\n\013player_pass\030\007 \003(" +
      "\005\022\021\n\tcard_type\030\010 \003(\005\022\032\n\022pr_out_card_play" +
      "er\030\t \001(\005\022\025\n\rpr_cards_data\030\n \003(\005\022\026\n\016pr_ca" +
      "rds_count\030\013 \001(\005\022\030\n\020pr_out_card_type\030\014 \001(" +
      "\005\022\024\n\014is_first_out\030\r \001(\005\022\024\n\014display_time\030" +
      "\016 \001(\005\022\022\n\ncard_count\030\017 \003(\005\022\'\n\ncards_data\030" +
      "\020 \003(\0132\023.Int32ArrayResponse\022\034\n\troom_info\030" +
      "\021 \001(\0132\t.RoomInfo\022$\n\007players\030\022 \003(\0132\023.Room",
      "PlayerResponse\022.\n\021user_can_out_data\030\023 \003(" +
      "\0132\023.Int32ArrayResponse\022\032\n\022user_can_out_c" +
      "ount\030\024 \003(\005\022\031\n\021user_can_out_type\030\026 \003(\005\022\021\n" +
      "\twin_order\030\025 \003(\005\"\253\001\n\022GameStart_Wsk_Sxth\022" +
      "\034\n\troom_info\030\001 \001(\0132\t.RoomInfo\022$\n\007players" +
      "\030\002 \003(\0132\023.RoomPlayerResponse\022\022\n\ncard_coun" +
      "t\030\003 \003(\005\022\'\n\ncards_data\030\004 \003(\0132\023.Int32Array" +
      "Response\022\024\n\014display_time\030\005 \001(\005\"a\n\024TouXia" +
      "ng_Result_Sxth\022\031\n\021is_agree_touxiang\030\001 \001(" +
      "\005\022\031\n\021request_tou_xiang\030\002 \001(\005\022\023\n\013opreate_",
      "str\030\003 \001(\t\"B\n\020effect_type_sxth\022\022\n\nseat_in" +
      "dex\030\002 \001(\005\022\014\n\004type\030\001 \001(\005\022\014\n\004data\030\003 \001(\005\"<\n" +
      "\021TouXiang_Ask_Sxth\022\022\n\nseat_index\030\001 \001(\005\022\023" +
      "\n\013opreate_str\030\002 \001(\t\"]\n\024RefreshCardData_S" +
      "xth\022\027\n\017hand_card_count\030\001 \003(\005\022,\n\017hand_car" +
      "ds_data\030\002 \003(\0132\023.Int32ArrayResponse\"f\n\020Sw" +
      "itch_Seat_Sxth\022(\n\013players_old\030\001 \003(\0132\023.Ro" +
      "omPlayerResponse\022(\n\013players_new\030\002 \003(\0132\023." +
      "RoomPlayerResponse\"/\n\027Opreate_RequestWsk" +
      "_Sxth\022\024\n\014opreate_type\030\001 \001(\005B\036\n\023protobuf.",
      "clazz.sxthB\007SxthRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_sxth_RefreshScore_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_sxth_RefreshScore_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_RefreshScore_Sxth_descriptor,
              new java.lang.String[] { "UserGetScore", "TableScore", "AwardScore", "HuaScore", "IsDelay", });
          internal_static_sxth_OutCardDataWsk_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_sxth_OutCardDataWsk_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_OutCardDataWsk_Sxth_descriptor,
              new java.lang.String[] { "OutCardPlayer", "CardsData", "CardsCount", "CardType", "CurPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "IsFirstOut", "DisplayTime", "UserCanOutData", "UserCanOutCount", "UserCanOutType", "UserGetScore", "HandCardCount", "HandCardsData", "WinOrder", "IsCurrentFirstOut", "BoomCardDataCount", "BoomCardData", "FiveTenKCardDataCount", "FiveTenKCardData", "TonghuaCardDataCount", "TonghuaCardData", "FiveTenKCardDataCountFu", "FiveTenKCardDataFu", });
          internal_static_sxth_PukeGameEndWsk_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_sxth_PukeGameEndWsk_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_PukeGameEndWsk_Sxth_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "BoomCardNum", "EndScore", "RewardScore", "PlayerNum", "BankerPlayer", "Reason", "ZhuaFen", "WinOrder", "GameCell", "Friend", "FlowerScore", "ScoreTyep", "AllEndScore", "Players", "PlayersOther", "AllEndScoreOther", });
          internal_static_sxth_TableResponse_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_sxth_TableResponse_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_TableResponse_Sxth_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "Trustee", "OutCardsData", "OutCardsCount", "PlayerPass", "CardType", "PrOutCardPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "IsFirstOut", "DisplayTime", "CardCount", "CardsData", "RoomInfo", "Players", "UserCanOutData", "UserCanOutCount", "UserCanOutType", "WinOrder", });
          internal_static_sxth_GameStart_Wsk_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_sxth_GameStart_Wsk_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_GameStart_Wsk_Sxth_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "CardCount", "CardsData", "DisplayTime", });
          internal_static_sxth_TouXiang_Result_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_sxth_TouXiang_Result_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_TouXiang_Result_Sxth_descriptor,
              new java.lang.String[] { "IsAgreeTouxiang", "RequestTouXiang", "OpreateStr", });
          internal_static_sxth_effect_type_sxth_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_sxth_effect_type_sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_effect_type_sxth_descriptor,
              new java.lang.String[] { "SeatIndex", "Type", "Data", });
          internal_static_sxth_TouXiang_Ask_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_sxth_TouXiang_Ask_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_TouXiang_Ask_Sxth_descriptor,
              new java.lang.String[] { "SeatIndex", "OpreateStr", });
          internal_static_sxth_RefreshCardData_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_sxth_RefreshCardData_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_RefreshCardData_Sxth_descriptor,
              new java.lang.String[] { "HandCardCount", "HandCardsData", });
          internal_static_sxth_Switch_Seat_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_sxth_Switch_Seat_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_Switch_Seat_Sxth_descriptor,
              new java.lang.String[] { "PlayersOld", "PlayersNew", });
          internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_sxth_Opreate_RequestWsk_Sxth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sxth_Opreate_RequestWsk_Sxth_descriptor,
              new java.lang.String[] { "OpreateType", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
