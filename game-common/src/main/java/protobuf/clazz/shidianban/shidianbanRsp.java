// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shidianban/shidianbanProto.proto

package protobuf.clazz.shidianban;

public final class shidianbanRsp {
  private shidianbanRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomPlayerResponseSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();
  }
  /**
   * Protobuf type {@code shidianban.RoomPlayerResponseSdb}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseSdb extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseSdbOrBuilder {
    // Use RoomPlayerResponseSdb.newBuilder() to construct.
    private RoomPlayerResponseSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseSdb defaultInstance;
    public static RoomPlayerResponseSdb getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_RoomPlayerResponseSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_RoomPlayerResponseSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.class, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseSdb> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseSdb>() {
      public RoomPlayerResponseSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.RoomPlayerResponseSdb}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_RoomPlayerResponseSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_RoomPlayerResponseSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.class, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_RoomPlayerResponseSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb result = new protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.RoomPlayerResponseSdb)
    }

    static {
      defaultInstance = new RoomPlayerResponseSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.RoomPlayerResponseSdb)
  }

  public interface PlayerResultSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 player_score = 6;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerScoreList();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScoreCount();
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    int getPlayerScore(int index);
  }
  /**
   * Protobuf type {@code shidianban.PlayerResultSdb}
   *
   * <pre>
   *用户结束
   * </pre>
   */
  public static final class PlayerResultSdb extends
      com.google.protobuf.GeneratedMessage
      implements PlayerResultSdbOrBuilder {
    // Use PlayerResultSdb.newBuilder() to construct.
    private PlayerResultSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerResultSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerResultSdb defaultInstance;
    public static PlayerResultSdb getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerResultSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerResultSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                playerScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PlayerResultSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PlayerResultSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerResultSdb> PARSER =
        new com.google.protobuf.AbstractParser<PlayerResultSdb>() {
      public PlayerResultSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerResultSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerResultSdb> getParserForType() {
      return PARSER;
    }

    // repeated int32 player_score = 6;
    public static final int PLAYER_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> playerScore_;
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerScoreList() {
      return playerScore_;
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScoreCount() {
      return playerScore_.size();
    }
    /**
     * <code>repeated int32 player_score = 6;</code>
     *
     * <pre>
     *总成绩
     * </pre>
     */
    public int getPlayerScore(int index) {
      return playerScore_.get(index);
    }

    private void initFields() {
      playerScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerScore_.size(); i++) {
        output.writeInt32(6, playerScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < playerScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerScore_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.PlayerResultSdb}
     *
     * <pre>
     *用户结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PlayerResultSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PlayerResultSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PlayerResultSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb result = new protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = java.util.Collections.unmodifiableList(playerScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.playerScore_ = playerScore_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance()) return this;
        if (!other.playerScore_.isEmpty()) {
          if (playerScore_.isEmpty()) {
            playerScore_ = other.playerScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlayerScoreIsMutable();
            playerScore_.addAll(other.playerScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 player_score = 6;
      private java.util.List<java.lang.Integer> playerScore_ = java.util.Collections.emptyList();
      private void ensurePlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerScore_ = new java.util.ArrayList<java.lang.Integer>(playerScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerScoreList() {
        return java.util.Collections.unmodifiableList(playerScore_);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScoreCount() {
        return playerScore_.size();
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public int getPlayerScore(int index) {
        return playerScore_.get(index);
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder setPlayerScore(
          int index, int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addPlayerScore(int value) {
        ensurePlayerScoreIsMutable();
        playerScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder addAllPlayerScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerScoreIsMutable();
        super.addAll(values, playerScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_score = 6;</code>
       *
       * <pre>
       *总成绩
       * </pre>
       */
      public Builder clearPlayerScore() {
        playerScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.PlayerResultSdb)
    }

    static {
      defaultInstance = new PlayerResultSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.PlayerResultSdb)
  }

  public interface PukeGameEndSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 card_type = 5;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    int getCardType(int index);

    // repeated int32 end_score = 6;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    int getEndScore(int index);

    // optional int32 player_num = 7;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    boolean hasPlayerNum();
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    int getPlayerNum();

    // optional int32 reason = 8;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated .shidianban.RoomPlayerResponseSdb players = 9;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> 
        getPlayersList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index);
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index);

    // optional .shidianban.PlayerResultSdb player_result = 10;
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    boolean hasPlayerResult();
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb getPlayerResult();
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder getPlayerResultOrBuilder();

    // optional int32 winner = 11;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    boolean hasWinner();
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    int getWinner();

    // repeated string str_ox_value = 12;
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrOxValueList();
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getStrOxValueCount();
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    java.lang.String getStrOxValue(int index);
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrOxValueBytes(int index);

    // optional int32 display_time = 13;
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();

    // optional int32 banker_carry_score = 14;
    /**
     * <code>optional int32 banker_carry_score = 14;</code>
     *
     * <pre>
     *庄家携带分数
     * </pre>
     */
    boolean hasBankerCarryScore();
    /**
     * <code>optional int32 banker_carry_score = 14;</code>
     *
     * <pre>
     *庄家携带分数
     * </pre>
     */
    int getBankerCarryScore();

    // optional bool is_cancle_banker = 15;
    /**
     * <code>optional bool is_cancle_banker = 15;</code>
     *
     * <pre>
     *true 显示下庄，false 不显示
     * </pre>
     */
    boolean hasIsCancleBanker();
    /**
     * <code>optional bool is_cancle_banker = 15;</code>
     *
     * <pre>
     *true 显示下庄，false 不显示
     * </pre>
     */
    boolean getIsCancleBanker();

    // optional int32 cur_banker = 16;
    /**
     * <code>optional int32 cur_banker = 16;</code>
     *
     * <pre>
     *庄家ID
     * </pre>
     */
    boolean hasCurBanker();
    /**
     * <code>optional int32 cur_banker = 16;</code>
     *
     * <pre>
     *庄家ID
     * </pre>
     */
    int getCurBanker();
  }
  /**
   * Protobuf type {@code shidianban.PukeGameEndSdb}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndSdb extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndSdbOrBuilder {
    // Use PukeGameEndSdb.newBuilder() to construct.
    private PukeGameEndSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndSdb defaultInstance;
    public static PukeGameEndSdb getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              playerNum_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>();
                mutable_bitField0_ |= 0x00000100;
              }
              players_.add(input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playerResult_.toBuilder();
              }
              playerResult_ = input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerResult_);
                playerResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              winner_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                strOxValue_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000800;
              }
              strOxValue_.add(input.readBytes());
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              bankerCarryScore_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              isCancleBanker_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              curBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.UnmodifiableLazyStringList(strOxValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PukeGameEndSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PukeGameEndSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.class, protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndSdb> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndSdb>() {
      public PukeGameEndSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 card_type = 5;
    public static final int CARD_TYPE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 5;</code>
     *
     * <pre>
     *牛牛牌型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // repeated int32 end_score = 6;
    public static final int END_SCORE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 6;</code>
     *
     * <pre>
     *结算分数
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // optional int32 player_num = 7;
    public static final int PLAYER_NUM_FIELD_NUMBER = 7;
    private int playerNum_;
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public boolean hasPlayerNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 player_num = 7;</code>
     *
     * <pre>
     *游戏人数
     * </pre>
     */
    public int getPlayerNum() {
      return playerNum_;
    }

    // optional int32 reason = 8;
    public static final int REASON_FIELD_NUMBER = 8;
    private int reason_;
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 8;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated .shidianban.RoomPlayerResponseSdb players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional .shidianban.PlayerResultSdb player_result = 10;
    public static final int PLAYER_RESULT_FIELD_NUMBER = 10;
    private protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb playerResult_;
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public boolean hasPlayerResult() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb getPlayerResult() {
      return playerResult_;
    }
    /**
     * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder getPlayerResultOrBuilder() {
      return playerResult_;
    }

    // optional int32 winner = 11;
    public static final int WINNER_FIELD_NUMBER = 11;
    private int winner_;
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 winner = 11;</code>
     *
     * <pre>
     *赢家s
     * </pre>
     */
    public int getWinner() {
      return winner_;
    }

    // repeated string str_ox_value = 12;
    public static final int STR_OX_VALUE_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList strOxValue_;
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrOxValueList() {
      return strOxValue_;
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getStrOxValueCount() {
      return strOxValue_.size();
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public java.lang.String getStrOxValue(int index) {
      return strOxValue_.get(index);
    }
    /**
     * <code>repeated string str_ox_value = 12;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrOxValueBytes(int index) {
      return strOxValue_.getByteString(index);
    }

    // optional int32 display_time = 13;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 13;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 13;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 banker_carry_score = 14;
    public static final int BANKER_CARRY_SCORE_FIELD_NUMBER = 14;
    private int bankerCarryScore_;
    /**
     * <code>optional int32 banker_carry_score = 14;</code>
     *
     * <pre>
     *庄家携带分数
     * </pre>
     */
    public boolean hasBankerCarryScore() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 banker_carry_score = 14;</code>
     *
     * <pre>
     *庄家携带分数
     * </pre>
     */
    public int getBankerCarryScore() {
      return bankerCarryScore_;
    }

    // optional bool is_cancle_banker = 15;
    public static final int IS_CANCLE_BANKER_FIELD_NUMBER = 15;
    private boolean isCancleBanker_;
    /**
     * <code>optional bool is_cancle_banker = 15;</code>
     *
     * <pre>
     *true 显示下庄，false 不显示
     * </pre>
     */
    public boolean hasIsCancleBanker() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool is_cancle_banker = 15;</code>
     *
     * <pre>
     *true 显示下庄，false 不显示
     * </pre>
     */
    public boolean getIsCancleBanker() {
      return isCancleBanker_;
    }

    // optional int32 cur_banker = 16;
    public static final int CUR_BANKER_FIELD_NUMBER = 16;
    private int curBanker_;
    /**
     * <code>optional int32 cur_banker = 16;</code>
     *
     * <pre>
     *庄家ID
     * </pre>
     */
    public boolean hasCurBanker() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 cur_banker = 16;</code>
     *
     * <pre>
     *庄家ID
     * </pre>
     */
    public int getCurBanker() {
      return curBanker_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      playerNum_ = 0;
      reason_ = 0;
      players_ = java.util.Collections.emptyList();
      playerResult_ = protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance();
      winner_ = 0;
      strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      displayTime_ = 0;
      bankerCarryScore_ = 0;
      isCancleBanker_ = false;
      curBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(5, cardType_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(6, endScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, winner_);
      }
      for (int i = 0; i < strOxValue_.size(); i++) {
        output.writeBytes(12, strOxValue_.getByteString(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, displayTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(14, bankerCarryScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(15, isCancleBanker_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(16, curBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, playerNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, reason_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, playerResult_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, winner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strOxValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strOxValue_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStrOxValueList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, displayTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, bankerCarryScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, isCancleBanker_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, curBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.PukeGameEndSdb}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PukeGameEndSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PukeGameEndSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.class, protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getPlayersFieldBuilder();
          getPlayerResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersBuilder_.clear();
        }
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        winner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        bankerCarryScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        isCancleBanker_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        curBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_PukeGameEndSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb result = new protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cardType_ = cardType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerNum_ = playerNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playerResultBuilder_ == null) {
          result.playerResult_ = playerResult_;
        } else {
          result.playerResult_ = playerResultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winner_ = winner_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strOxValue_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.strOxValue_ = strOxValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.bankerCarryScore_ = bankerCarryScore_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isCancleBanker_ = isCancleBanker_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.curBanker_ = curBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (other.hasPlayerNum()) {
          setPlayerNum(other.getPlayerNum());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasPlayerResult()) {
          mergePlayerResult(other.getPlayerResult());
        }
        if (other.hasWinner()) {
          setWinner(other.getWinner());
        }
        if (!other.strOxValue_.isEmpty()) {
          if (strOxValue_.isEmpty()) {
            strOxValue_ = other.strOxValue_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureStrOxValueIsMutable();
            strOxValue_.addAll(other.strOxValue_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasBankerCarryScore()) {
          setBankerCarryScore(other.getBankerCarryScore());
        }
        if (other.hasIsCancleBanker()) {
          setIsCancleBanker(other.getIsCancleBanker());
        }
        if (other.hasCurBanker()) {
          setCurBanker(other.getCurBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.PukeGameEndSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 card_type = 5;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 5;</code>
       *
       * <pre>
       *牛牛牌型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 end_score = 6;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 6;</code>
       *
       * <pre>
       *结算分数
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 player_num = 7;
      private int playerNum_ ;
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public boolean hasPlayerNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public int getPlayerNum() {
        return playerNum_;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder setPlayerNum(int value) {
        bitField0_ |= 0x00000040;
        playerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_num = 7;</code>
       *
       * <pre>
       *游戏人数
       * </pre>
       */
      public Builder clearPlayerNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 8;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000080;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 8;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated .shidianban.RoomPlayerResponseSdb players = 9;
      private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>(players_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional .shidianban.PlayerResultSdb player_result = 10;
      private protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb playerResult_ = protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder> playerResultBuilder_;
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public boolean hasPlayerResult() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb getPlayerResult() {
        if (playerResultBuilder_ == null) {
          return playerResult_;
        } else {
          return playerResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb value) {
        if (playerResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerResult_ = value;
          onChanged();
        } else {
          playerResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setPlayerResult(
          protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder builderForValue) {
        if (playerResultBuilder_ == null) {
          playerResult_ = builderForValue.build();
          onChanged();
        } else {
          playerResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder mergePlayerResult(protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb value) {
        if (playerResultBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              playerResult_ != protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance()) {
            playerResult_ =
              protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.newBuilder(playerResult_).mergeFrom(value).buildPartial();
          } else {
            playerResult_ = value;
          }
          onChanged();
        } else {
          playerResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearPlayerResult() {
        if (playerResultBuilder_ == null) {
          playerResult_ = protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.getDefaultInstance();
          onChanged();
        } else {
          playerResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder getPlayerResultBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getPlayerResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder getPlayerResultOrBuilder() {
        if (playerResultBuilder_ != null) {
          return playerResultBuilder_.getMessageOrBuilder();
        } else {
          return playerResult_;
        }
      }
      /**
       * <code>optional .shidianban.PlayerResultSdb player_result = 10;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder> 
          getPlayerResultFieldBuilder() {
        if (playerResultBuilder_ == null) {
          playerResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.PlayerResultSdbOrBuilder>(
                  playerResult_,
                  getParentForChildren(),
                  isClean());
          playerResult_ = null;
        }
        return playerResultBuilder_;
      }

      // optional int32 winner = 11;
      private int winner_ ;
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public int getWinner() {
        return winner_;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder setWinner(int value) {
        bitField0_ |= 0x00000400;
        winner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winner = 11;</code>
       *
       * <pre>
       *赢家s
       * </pre>
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00000400);
        winner_ = 0;
        onChanged();
        return this;
      }

      // repeated string str_ox_value = 12;
      private com.google.protobuf.LazyStringList strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrOxValueIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          strOxValue_ = new com.google.protobuf.LazyStringArrayList(strOxValue_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrOxValueList() {
        return java.util.Collections.unmodifiableList(strOxValue_);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getStrOxValueCount() {
        return strOxValue_.size();
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public java.lang.String getStrOxValue(int index) {
        return strOxValue_.get(index);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrOxValueBytes(int index) {
        return strOxValue_.getByteString(index);
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setStrOxValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addStrOxValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addAllStrOxValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrOxValueIsMutable();
        super.addAll(values, strOxValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearStrOxValue() {
        strOxValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_ox_value = 12;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder addStrOxValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrOxValueIsMutable();
        strOxValue_.add(value);
        onChanged();
        return this;
      }

      // optional int32 display_time = 13;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00001000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 13;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_carry_score = 14;
      private int bankerCarryScore_ ;
      /**
       * <code>optional int32 banker_carry_score = 14;</code>
       *
       * <pre>
       *庄家携带分数
       * </pre>
       */
      public boolean hasBankerCarryScore() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 banker_carry_score = 14;</code>
       *
       * <pre>
       *庄家携带分数
       * </pre>
       */
      public int getBankerCarryScore() {
        return bankerCarryScore_;
      }
      /**
       * <code>optional int32 banker_carry_score = 14;</code>
       *
       * <pre>
       *庄家携带分数
       * </pre>
       */
      public Builder setBankerCarryScore(int value) {
        bitField0_ |= 0x00002000;
        bankerCarryScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_carry_score = 14;</code>
       *
       * <pre>
       *庄家携带分数
       * </pre>
       */
      public Builder clearBankerCarryScore() {
        bitField0_ = (bitField0_ & ~0x00002000);
        bankerCarryScore_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_cancle_banker = 15;
      private boolean isCancleBanker_ ;
      /**
       * <code>optional bool is_cancle_banker = 15;</code>
       *
       * <pre>
       *true 显示下庄，false 不显示
       * </pre>
       */
      public boolean hasIsCancleBanker() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool is_cancle_banker = 15;</code>
       *
       * <pre>
       *true 显示下庄，false 不显示
       * </pre>
       */
      public boolean getIsCancleBanker() {
        return isCancleBanker_;
      }
      /**
       * <code>optional bool is_cancle_banker = 15;</code>
       *
       * <pre>
       *true 显示下庄，false 不显示
       * </pre>
       */
      public Builder setIsCancleBanker(boolean value) {
        bitField0_ |= 0x00004000;
        isCancleBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_cancle_banker = 15;</code>
       *
       * <pre>
       *true 显示下庄，false 不显示
       * </pre>
       */
      public Builder clearIsCancleBanker() {
        bitField0_ = (bitField0_ & ~0x00004000);
        isCancleBanker_ = false;
        onChanged();
        return this;
      }

      // optional int32 cur_banker = 16;
      private int curBanker_ ;
      /**
       * <code>optional int32 cur_banker = 16;</code>
       *
       * <pre>
       *庄家ID
       * </pre>
       */
      public boolean hasCurBanker() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 cur_banker = 16;</code>
       *
       * <pre>
       *庄家ID
       * </pre>
       */
      public int getCurBanker() {
        return curBanker_;
      }
      /**
       * <code>optional int32 cur_banker = 16;</code>
       *
       * <pre>
       *庄家ID
       * </pre>
       */
      public Builder setCurBanker(int value) {
        bitField0_ |= 0x00008000;
        curBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker = 16;</code>
       *
       * <pre>
       *庄家ID
       * </pre>
       */
      public Builder clearCurBanker() {
        bitField0_ = (bitField0_ & ~0x00008000);
        curBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.PukeGameEndSdb)
    }

    static {
      defaultInstance = new PukeGameEndSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.PukeGameEndSdb)
  }

  public interface TableResponseSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional .RoomInfo room_info = 2;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> 
        getPlayersList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index);
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Int32ArrayResponse cards_data = 4;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 jetton_score = 5;
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    java.util.List<java.lang.Integer> getJettonScoreList();
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScoreCount();
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    int getJettonScore(int index);

    // optional int32 scene_status = 6;
    /**
     * <code>optional int32 scene_status = 6;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    boolean hasSceneStatus();
    /**
     * <code>optional int32 scene_status = 6;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    int getSceneStatus();

    // repeated int32 ox_value = 7;
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    java.util.List<java.lang.Integer> getOxValueList();
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getOxValueCount();
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getOxValue(int index);

    // repeated int32 times = 8;
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getTimesList();
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimesCount();
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes(int index);

    // repeated int32 call_button = 9;
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallButtonList();
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    int getCallButtonCount();
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    int getCallButton(int index);

    // repeated int32 shai_zi = 10;
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    java.util.List<java.lang.Integer> getShaiZiList();
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    int getShaiZiCount();
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    int getShaiZi(int index);

    // optional int32 operate_index = 11;
    /**
     * <code>optional int32 operate_index = 11;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    boolean hasOperateIndex();
    /**
     * <code>optional int32 operate_index = 11;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    int getOperateIndex();
  }
  /**
   * Protobuf type {@code shidianban.TableResponseSdb}
   */
  public static final class TableResponseSdb extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseSdbOrBuilder {
    // Use TableResponseSdb.newBuilder() to construct.
    private TableResponseSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponseSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponseSdb defaultInstance;
    public static TableResponseSdb getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponseSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponseSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 18: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              jettonScore_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                jettonScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                jettonScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              sceneStatus_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              oxValue_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                oxValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                oxValue_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              times_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                times_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                times_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              callButton_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                callButton_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                callButton_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                shaiZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              shaiZi_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                shaiZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                shaiZi_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              operateIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          shaiZi_ = java.util.Collections.unmodifiableList(shaiZi_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_TableResponseSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_TableResponseSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.class, protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponseSdb> PARSER =
        new com.google.protobuf.AbstractParser<TableResponseSdb>() {
      public TableResponseSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponseSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponseSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional .RoomInfo room_info = 2;
    public static final int ROOM_INFO_FIELD_NUMBER = 2;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 4;
    public static final int CARDS_DATA_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 jetton_score = 5;
    public static final int JETTON_SCORE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> jettonScore_;
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJettonScoreList() {
      return jettonScore_;
    }
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScoreCount() {
      return jettonScore_.size();
    }
    /**
     * <code>repeated int32 jetton_score = 5;</code>
     *
     * <pre>
     *玩家下注
     * </pre>
     */
    public int getJettonScore(int index) {
      return jettonScore_.get(index);
    }

    // optional int32 scene_status = 6;
    public static final int SCENE_STATUS_FIELD_NUMBER = 6;
    private int sceneStatus_;
    /**
     * <code>optional int32 scene_status = 6;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public boolean hasSceneStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 scene_status = 6;</code>
     *
     * <pre>
     *场景状态
     * </pre>
     */
    public int getSceneStatus() {
      return sceneStatus_;
    }

    // repeated int32 ox_value = 7;
    public static final int OX_VALUE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> oxValue_;
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOxValueList() {
      return oxValue_;
    }
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getOxValueCount() {
      return oxValue_.size();
    }
    /**
     * <code>repeated int32 ox_value = 7;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getOxValue(int index) {
      return oxValue_.get(index);
    }

    // repeated int32 times = 8;
    public static final int TIMES_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> times_;
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTimesList() {
      return times_;
    }
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated int32 times = 8;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes(int index) {
      return times_.get(index);
    }

    // repeated int32 call_button = 9;
    public static final int CALL_BUTTON_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> callButton_;
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallButtonList() {
      return callButton_;
    }
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public int getCallButtonCount() {
      return callButton_.size();
    }
    /**
     * <code>repeated int32 call_button = 9;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public int getCallButton(int index) {
      return callButton_.get(index);
    }

    // repeated int32 shai_zi = 10;
    public static final int SHAI_ZI_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> shaiZi_;
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getShaiZiList() {
      return shaiZi_;
    }
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public int getShaiZiCount() {
      return shaiZi_.size();
    }
    /**
     * <code>repeated int32 shai_zi = 10;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public int getShaiZi(int index) {
      return shaiZi_.get(index);
    }

    // optional int32 operate_index = 11;
    public static final int OPERATE_INDEX_FIELD_NUMBER = 11;
    private int operateIndex_;
    /**
     * <code>optional int32 operate_index = 11;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public boolean hasOperateIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 operate_index = 11;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public int getOperateIndex() {
      return operateIndex_;
    }

    private void initFields() {
      bankerPlayer_ = 0;
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      jettonScore_ = java.util.Collections.emptyList();
      sceneStatus_ = 0;
      oxValue_ = java.util.Collections.emptyList();
      times_ = java.util.Collections.emptyList();
      callButton_ = java.util.Collections.emptyList();
      shaiZi_ = java.util.Collections.emptyList();
      operateIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(4, cardsData_.get(i));
      }
      for (int i = 0; i < jettonScore_.size(); i++) {
        output.writeInt32(5, jettonScore_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(6, sceneStatus_);
      }
      for (int i = 0; i < oxValue_.size(); i++) {
        output.writeInt32(7, oxValue_.get(i));
      }
      for (int i = 0; i < times_.size(); i++) {
        output.writeInt32(8, times_.get(i));
      }
      for (int i = 0; i < callButton_.size(); i++) {
        output.writeInt32(9, callButton_.get(i));
      }
      for (int i = 0; i < shaiZi_.size(); i++) {
        output.writeInt32(10, shaiZi_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(11, operateIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jettonScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jettonScore_.get(i));
        }
        size += dataSize;
        size += 1 * getJettonScoreList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, sceneStatus_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < oxValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(oxValue_.get(i));
        }
        size += dataSize;
        size += 1 * getOxValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < times_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(times_.get(i));
        }
        size += dataSize;
        size += 1 * getTimesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callButton_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callButton_.get(i));
        }
        size += dataSize;
        size += 1 * getCallButtonList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shaiZi_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shaiZi_.get(i));
        }
        size += dataSize;
        size += 1 * getShaiZiList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, operateIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.TableResponseSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_TableResponseSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_TableResponseSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.class, protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cardsDataBuilder_.clear();
        }
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        sceneStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        shaiZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        operateIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_TableResponseSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb result = new protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonScore_ = java.util.Collections.unmodifiableList(jettonScore_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sceneStatus_ = sceneStatus_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          oxValue_ = java.util.Collections.unmodifiableList(oxValue_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.oxValue_ = oxValue_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          times_ = java.util.Collections.unmodifiableList(times_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.times_ = times_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          callButton_ = java.util.Collections.unmodifiableList(callButton_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.callButton_ = callButton_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          shaiZi_ = java.util.Collections.unmodifiableList(shaiZi_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.shaiZi_ = shaiZi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000008;
        }
        result.operateIndex_ = operateIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.jettonScore_.isEmpty()) {
          if (jettonScore_.isEmpty()) {
            jettonScore_ = other.jettonScore_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureJettonScoreIsMutable();
            jettonScore_.addAll(other.jettonScore_);
          }
          onChanged();
        }
        if (other.hasSceneStatus()) {
          setSceneStatus(other.getSceneStatus());
        }
        if (!other.oxValue_.isEmpty()) {
          if (oxValue_.isEmpty()) {
            oxValue_ = other.oxValue_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOxValueIsMutable();
            oxValue_.addAll(other.oxValue_);
          }
          onChanged();
        }
        if (!other.times_.isEmpty()) {
          if (times_.isEmpty()) {
            times_ = other.times_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureTimesIsMutable();
            times_.addAll(other.times_);
          }
          onChanged();
        }
        if (!other.callButton_.isEmpty()) {
          if (callButton_.isEmpty()) {
            callButton_ = other.callButton_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCallButtonIsMutable();
            callButton_.addAll(other.callButton_);
          }
          onChanged();
        }
        if (!other.shaiZi_.isEmpty()) {
          if (shaiZi_.isEmpty()) {
            shaiZi_ = other.shaiZi_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureShaiZiIsMutable();
            shaiZi_.addAll(other.shaiZi_);
          }
          onChanged();
        }
        if (other.hasOperateIndex()) {
          setOperateIndex(other.getOperateIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.TableResponseSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional .RoomInfo room_info = 2;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .shidianban.RoomPlayerResponseSdb players = 3;
      private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Int32ArrayResponse cards_data = 4;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 4;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 jetton_score = 5;
      private java.util.List<java.lang.Integer> jettonScore_ = java.util.Collections.emptyList();
      private void ensureJettonScoreIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          jettonScore_ = new java.util.ArrayList<java.lang.Integer>(jettonScore_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJettonScoreList() {
        return java.util.Collections.unmodifiableList(jettonScore_);
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScoreCount() {
        return jettonScore_.size();
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public int getJettonScore(int index) {
        return jettonScore_.get(index);
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder setJettonScore(
          int index, int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addJettonScore(int value) {
        ensureJettonScoreIsMutable();
        jettonScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder addAllJettonScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJettonScoreIsMutable();
        super.addAll(values, jettonScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jetton_score = 5;</code>
       *
       * <pre>
       *玩家下注
       * </pre>
       */
      public Builder clearJettonScore() {
        jettonScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 scene_status = 6;
      private int sceneStatus_ ;
      /**
       * <code>optional int32 scene_status = 6;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public boolean hasSceneStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 scene_status = 6;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public int getSceneStatus() {
        return sceneStatus_;
      }
      /**
       * <code>optional int32 scene_status = 6;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder setSceneStatus(int value) {
        bitField0_ |= 0x00000020;
        sceneStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_status = 6;</code>
       *
       * <pre>
       *场景状态
       * </pre>
       */
      public Builder clearSceneStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sceneStatus_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 ox_value = 7;
      private java.util.List<java.lang.Integer> oxValue_ = java.util.Collections.emptyList();
      private void ensureOxValueIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          oxValue_ = new java.util.ArrayList<java.lang.Integer>(oxValue_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOxValueList() {
        return java.util.Collections.unmodifiableList(oxValue_);
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getOxValueCount() {
        return oxValue_.size();
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getOxValue(int index) {
        return oxValue_.get(index);
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setOxValue(
          int index, int value) {
        ensureOxValueIsMutable();
        oxValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addOxValue(int value) {
        ensureOxValueIsMutable();
        oxValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder addAllOxValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOxValueIsMutable();
        super.addAll(values, oxValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ox_value = 7;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearOxValue() {
        oxValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 times = 8;
      private java.util.List<java.lang.Integer> times_ = java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          times_ = new java.util.ArrayList<java.lang.Integer>(times_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTimesList() {
        return java.util.Collections.unmodifiableList(times_);
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimesCount() {
        return times_.size();
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes(int index) {
        return times_.get(index);
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(
          int index, int value) {
        ensureTimesIsMutable();
        times_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addTimes(int value) {
        ensureTimesIsMutable();
        times_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimesIsMutable();
        super.addAll(values, times_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 times = 8;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        times_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 call_button = 9;
      private java.util.List<java.lang.Integer> callButton_ = java.util.Collections.emptyList();
      private void ensureCallButtonIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          callButton_ = new java.util.ArrayList<java.lang.Integer>(callButton_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallButtonList() {
        return java.util.Collections.unmodifiableList(callButton_);
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public int getCallButtonCount() {
        return callButton_.size();
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public int getCallButton(int index) {
        return callButton_.get(index);
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder setCallButton(
          int index, int value) {
        ensureCallButtonIsMutable();
        callButton_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder addCallButton(int value) {
        ensureCallButtonIsMutable();
        callButton_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder addAllCallButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallButtonIsMutable();
        super.addAll(values, callButton_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_button = 9;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder clearCallButton() {
        callButton_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 shai_zi = 10;
      private java.util.List<java.lang.Integer> shaiZi_ = java.util.Collections.emptyList();
      private void ensureShaiZiIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          shaiZi_ = new java.util.ArrayList<java.lang.Integer>(shaiZi_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getShaiZiList() {
        return java.util.Collections.unmodifiableList(shaiZi_);
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public int getShaiZiCount() {
        return shaiZi_.size();
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public int getShaiZi(int index) {
        return shaiZi_.get(index);
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder setShaiZi(
          int index, int value) {
        ensureShaiZiIsMutable();
        shaiZi_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder addShaiZi(int value) {
        ensureShaiZiIsMutable();
        shaiZi_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder addAllShaiZi(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShaiZiIsMutable();
        super.addAll(values, shaiZi_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 10;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder clearShaiZi() {
        shaiZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 operate_index = 11;
      private int operateIndex_ ;
      /**
       * <code>optional int32 operate_index = 11;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public boolean hasOperateIndex() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 operate_index = 11;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public int getOperateIndex() {
        return operateIndex_;
      }
      /**
       * <code>optional int32 operate_index = 11;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder setOperateIndex(int value) {
        bitField0_ |= 0x00000400;
        operateIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_index = 11;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder clearOperateIndex() {
        bitField0_ = (bitField0_ & ~0x00000400);
        operateIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.TableResponseSdb)
    }

    static {
      defaultInstance = new TableResponseSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.TableResponseSdb)
  }

  public interface ButtonOperateSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
     * </pre>
     */
    int getOpreateType();

    // repeated int32 button = 2;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    java.util.List<java.lang.Integer> getButtonList();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButtonCount();
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    int getButton(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 min_score = 4;
    /**
     * <code>optional int32 min_score = 4;</code>
     *
     * <pre>
     *最小下注
     * </pre>
     */
    boolean hasMinScore();
    /**
     * <code>optional int32 min_score = 4;</code>
     *
     * <pre>
     *最小下注
     * </pre>
     */
    int getMinScore();

    // optional int32 max_score = 5;
    /**
     * <code>optional int32 max_score = 5;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    boolean hasMaxScore();
    /**
     * <code>optional int32 max_score = 5;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    int getMaxScore();

    // optional int32 seat_index = 6;
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    int getSeatIndex();
  }
  /**
   * Protobuf type {@code shidianban.ButtonOperateSdb}
   */
  public static final class ButtonOperateSdb extends
      com.google.protobuf.GeneratedMessage
      implements ButtonOperateSdbOrBuilder {
    // Use ButtonOperateSdb.newBuilder() to construct.
    private ButtonOperateSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ButtonOperateSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ButtonOperateSdb defaultInstance;
    public static ButtonOperateSdb getDefaultInstance() {
      return defaultInstance;
    }

    public ButtonOperateSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonOperateSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              button_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                button_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                button_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              minScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              maxScore_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              seatIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ButtonOperateSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ButtonOperateSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.class, protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<ButtonOperateSdb> PARSER =
        new com.google.protobuf.AbstractParser<ButtonOperateSdb>() {
      public ButtonOperateSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ButtonOperateSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonOperateSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated int32 button = 2;
    public static final int BUTTON_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> button_;
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getButtonList() {
      return button_;
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButtonCount() {
      return button_.size();
    }
    /**
     * <code>repeated int32 button = 2;</code>
     *
     * <pre>
     *玩家按钮
     * </pre>
     */
    public int getButton(int index) {
      return button_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *下注时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 min_score = 4;
    public static final int MIN_SCORE_FIELD_NUMBER = 4;
    private int minScore_;
    /**
     * <code>optional int32 min_score = 4;</code>
     *
     * <pre>
     *最小下注
     * </pre>
     */
    public boolean hasMinScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 min_score = 4;</code>
     *
     * <pre>
     *最小下注
     * </pre>
     */
    public int getMinScore() {
      return minScore_;
    }

    // optional int32 max_score = 5;
    public static final int MAX_SCORE_FIELD_NUMBER = 5;
    private int maxScore_;
    /**
     * <code>optional int32 max_score = 5;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    public boolean hasMaxScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 max_score = 5;</code>
     *
     * <pre>
     *最大下注
     * </pre>
     */
    public int getMaxScore() {
      return maxScore_;
    }

    // optional int32 seat_index = 6;
    public static final int SEAT_INDEX_FIELD_NUMBER = 6;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 seat_index = 6;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    private void initFields() {
      opreateType_ = 0;
      button_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      minScore_ = 0;
      maxScore_ = 0;
      seatIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < button_.size(); i++) {
        output.writeInt32(2, button_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, minScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, maxScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, seatIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < button_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(button_.get(i));
        }
        size += dataSize;
        size += 1 * getButtonList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seatIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.ButtonOperateSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ButtonOperateSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ButtonOperateSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.class, protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ButtonOperateSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb result = new protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = java.util.Collections.unmodifiableList(button_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.button_ = button_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minScore_ = minScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxScore_ = maxScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seatIndex_ = seatIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (!other.button_.isEmpty()) {
          if (button_.isEmpty()) {
            button_ = other.button_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureButtonIsMutable();
            button_.addAll(other.button_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasMinScore()) {
          setMinScore(other.getMinScore());
        }
        if (other.hasMaxScore()) {
          setMaxScore(other.getMaxScore());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.ButtonOperateSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *按钮显示类型 --0是抢庄 1是下注2开牌 3选择庄家分数
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 button = 2;
      private java.util.List<java.lang.Integer> button_ = java.util.Collections.emptyList();
      private void ensureButtonIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          button_ = new java.util.ArrayList<java.lang.Integer>(button_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getButtonList() {
        return java.util.Collections.unmodifiableList(button_);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButtonCount() {
        return button_.size();
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public int getButton(int index) {
        return button_.get(index);
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder setButton(
          int index, int value) {
        ensureButtonIsMutable();
        button_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addButton(int value) {
        ensureButtonIsMutable();
        button_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder addAllButton(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureButtonIsMutable();
        super.addAll(values, button_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 button = 2;</code>
       *
       * <pre>
       *玩家按钮
       * </pre>
       */
      public Builder clearButton() {
        button_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *下注时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 min_score = 4;
      private int minScore_ ;
      /**
       * <code>optional int32 min_score = 4;</code>
       *
       * <pre>
       *最小下注
       * </pre>
       */
      public boolean hasMinScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 min_score = 4;</code>
       *
       * <pre>
       *最小下注
       * </pre>
       */
      public int getMinScore() {
        return minScore_;
      }
      /**
       * <code>optional int32 min_score = 4;</code>
       *
       * <pre>
       *最小下注
       * </pre>
       */
      public Builder setMinScore(int value) {
        bitField0_ |= 0x00000008;
        minScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_score = 4;</code>
       *
       * <pre>
       *最小下注
       * </pre>
       */
      public Builder clearMinScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_score = 5;
      private int maxScore_ ;
      /**
       * <code>optional int32 max_score = 5;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public boolean hasMaxScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 max_score = 5;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public int getMaxScore() {
        return maxScore_;
      }
      /**
       * <code>optional int32 max_score = 5;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public Builder setMaxScore(int value) {
        bitField0_ |= 0x00000010;
        maxScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_score = 5;</code>
       *
       * <pre>
       *最大下注
       * </pre>
       */
      public Builder clearMaxScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 6;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000020;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 6;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.ButtonOperateSdb)
    }

    static {
      defaultInstance = new ButtonOperateSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.ButtonOperateSdb)
  }

  public interface GameStartSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> 
        getPlayersList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index);
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 cur_banker = 4;
    /**
     * <code>optional int32 cur_banker = 4;</code>
     *
     * <pre>
     * 庄家
     * </pre>
     */
    boolean hasCurBanker();
    /**
     * <code>optional int32 cur_banker = 4;</code>
     *
     * <pre>
     * 庄家
     * </pre>
     */
    int getCurBanker();
  }
  /**
   * Protobuf type {@code shidianban.GameStartSdb}
   */
  public static final class GameStartSdb extends
      com.google.protobuf.GeneratedMessage
      implements GameStartSdbOrBuilder {
    // Use GameStartSdb.newBuilder() to construct.
    private GameStartSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStartSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStartSdb defaultInstance;
    public static GameStartSdb getDefaultInstance() {
      return defaultInstance;
    }

    public GameStartSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStartSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              curBanker_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_GameStartSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_GameStartSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.class, protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStartSdb> PARSER =
        new com.google.protobuf.AbstractParser<GameStartSdb>() {
      public GameStartSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStartSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStartSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 cur_banker = 4;
    public static final int CUR_BANKER_FIELD_NUMBER = 4;
    private int curBanker_;
    /**
     * <code>optional int32 cur_banker = 4;</code>
     *
     * <pre>
     * 庄家
     * </pre>
     */
    public boolean hasCurBanker() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_banker = 4;</code>
     *
     * <pre>
     * 庄家
     * </pre>
     */
    public int getCurBanker() {
      return curBanker_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      curBanker_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, curBanker_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, curBanker_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.GameStartSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.GameStartSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_GameStartSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_GameStartSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.class, protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        curBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_GameStartSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb result = new protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curBanker_ = curBanker_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasCurBanker()) {
          setCurBanker(other.getCurBanker());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.GameStartSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .shidianban.RoomPlayerResponseSdb players = 3;
      private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 cur_banker = 4;
      private int curBanker_ ;
      /**
       * <code>optional int32 cur_banker = 4;</code>
       *
       * <pre>
       * 庄家
       * </pre>
       */
      public boolean hasCurBanker() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cur_banker = 4;</code>
       *
       * <pre>
       * 庄家
       * </pre>
       */
      public int getCurBanker() {
        return curBanker_;
      }
      /**
       * <code>optional int32 cur_banker = 4;</code>
       *
       * <pre>
       * 庄家
       * </pre>
       */
      public Builder setCurBanker(int value) {
        bitField0_ |= 0x00000004;
        curBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker = 4;</code>
       *
       * <pre>
       * 庄家
       * </pre>
       */
      public Builder clearCurBanker() {
        bitField0_ = (bitField0_ & ~0x00000004);
        curBanker_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.GameStartSdb)
    }

    static {
      defaultInstance = new GameStartSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.GameStartSdb)
  }

  public interface JettonResultSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_seat = 1;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    boolean hasJettonSeat();
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    int getJettonSeat();

    // optional int32 jetton_score = 2;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    int getJettonScore();

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> 
        getPlayersList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index);
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code shidianban.JettonResultSdb}
   */
  public static final class JettonResultSdb extends
      com.google.protobuf.GeneratedMessage
      implements JettonResultSdbOrBuilder {
    // Use JettonResultSdb.newBuilder() to construct.
    private JettonResultSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JettonResultSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JettonResultSdb defaultInstance;
    public static JettonResultSdb getDefaultInstance() {
      return defaultInstance;
    }

    public JettonResultSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JettonResultSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jettonScore_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_JettonResultSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_JettonResultSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<JettonResultSdb> PARSER =
        new com.google.protobuf.AbstractParser<JettonResultSdb>() {
      public JettonResultSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JettonResultSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JettonResultSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_seat = 1;
    public static final int JETTON_SEAT_FIELD_NUMBER = 1;
    private int jettonSeat_;
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public boolean hasJettonSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_seat = 1;</code>
     *
     * <pre>
     * 下注用户的位置
     * </pre>
     */
    public int getJettonSeat() {
      return jettonSeat_;
    }

    // optional int32 jetton_score = 2;
    public static final int JETTON_SCORE_FIELD_NUMBER = 2;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 jetton_score = 2;</code>
     *
     * <pre>
     *下注用户的分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // repeated .shidianban.RoomPlayerResponseSdb players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      jettonSeat_ = 0;
      jettonScore_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jettonScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, jettonScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.JettonResultSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_JettonResultSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_JettonResultSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_JettonResultSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb result = new protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonSeat_ = jettonSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jettonScore_ = jettonScore_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb.getDefaultInstance()) return this;
        if (other.hasJettonSeat()) {
          setJettonSeat(other.getJettonSeat());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.JettonResultSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_seat = 1;
      private int jettonSeat_ ;
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public boolean hasJettonSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public int getJettonSeat() {
        return jettonSeat_;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder setJettonSeat(int value) {
        bitField0_ |= 0x00000001;
        jettonSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_seat = 1;</code>
       *
       * <pre>
       * 下注用户的位置
       * </pre>
       */
      public Builder clearJettonSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 2;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000002;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 2;</code>
       *
       * <pre>
       *下注用户的分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // repeated .shidianban.RoomPlayerResponseSdb players = 3;
      private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 3;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.JettonResultSdb)
    }

    static {
      defaultInstance = new JettonResultSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.JettonResultSdb)
  }

  public interface ShaiziResultSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 shai_zi = 1;
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    java.util.List<java.lang.Integer> getShaiZiList();
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    int getShaiZiCount();
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    int getShaiZi(int index);

    // optional int32 operate_index = 2;
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    boolean hasOperateIndex();
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    int getOperateIndex();
  }
  /**
   * Protobuf type {@code shidianban.ShaiziResultSdb}
   */
  public static final class ShaiziResultSdb extends
      com.google.protobuf.GeneratedMessage
      implements ShaiziResultSdbOrBuilder {
    // Use ShaiziResultSdb.newBuilder() to construct.
    private ShaiziResultSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShaiziResultSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShaiziResultSdb defaultInstance;
    public static ShaiziResultSdb getDefaultInstance() {
      return defaultInstance;
    }

    public ShaiziResultSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShaiziResultSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                shaiZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              shaiZi_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                shaiZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                shaiZi_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              operateIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          shaiZi_ = java.util.Collections.unmodifiableList(shaiZi_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ShaiziResultSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ShaiziResultSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<ShaiziResultSdb> PARSER =
        new com.google.protobuf.AbstractParser<ShaiziResultSdb>() {
      public ShaiziResultSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShaiziResultSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShaiziResultSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 shai_zi = 1;
    public static final int SHAI_ZI_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> shaiZi_;
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getShaiZiList() {
      return shaiZi_;
    }
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public int getShaiZiCount() {
      return shaiZi_.size();
    }
    /**
     * <code>repeated int32 shai_zi = 1;</code>
     *
     * <pre>
     * 色子值
     * </pre>
     */
    public int getShaiZi(int index) {
      return shaiZi_.get(index);
    }

    // optional int32 operate_index = 2;
    public static final int OPERATE_INDEX_FIELD_NUMBER = 2;
    private int operateIndex_;
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public boolean hasOperateIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 operate_index = 2;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public int getOperateIndex() {
      return operateIndex_;
    }

    private void initFields() {
      shaiZi_ = java.util.Collections.emptyList();
      operateIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < shaiZi_.size(); i++) {
        output.writeInt32(1, shaiZi_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, operateIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < shaiZi_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shaiZi_.get(i));
        }
        size += dataSize;
        size += 1 * getShaiZiList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, operateIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.ShaiziResultSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ShaiziResultSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ShaiziResultSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        shaiZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        operateIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_ShaiziResultSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb result = new protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          shaiZi_ = java.util.Collections.unmodifiableList(shaiZi_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.shaiZi_ = shaiZi_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operateIndex_ = operateIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb.getDefaultInstance()) return this;
        if (!other.shaiZi_.isEmpty()) {
          if (shaiZi_.isEmpty()) {
            shaiZi_ = other.shaiZi_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureShaiZiIsMutable();
            shaiZi_.addAll(other.shaiZi_);
          }
          onChanged();
        }
        if (other.hasOperateIndex()) {
          setOperateIndex(other.getOperateIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.ShaiziResultSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 shai_zi = 1;
      private java.util.List<java.lang.Integer> shaiZi_ = java.util.Collections.emptyList();
      private void ensureShaiZiIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          shaiZi_ = new java.util.ArrayList<java.lang.Integer>(shaiZi_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getShaiZiList() {
        return java.util.Collections.unmodifiableList(shaiZi_);
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public int getShaiZiCount() {
        return shaiZi_.size();
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public int getShaiZi(int index) {
        return shaiZi_.get(index);
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder setShaiZi(
          int index, int value) {
        ensureShaiZiIsMutable();
        shaiZi_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder addShaiZi(int value) {
        ensureShaiZiIsMutable();
        shaiZi_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder addAllShaiZi(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShaiZiIsMutable();
        super.addAll(values, shaiZi_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 shai_zi = 1;</code>
       *
       * <pre>
       * 色子值
       * </pre>
       */
      public Builder clearShaiZi() {
        shaiZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 operate_index = 2;
      private int operateIndex_ ;
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public boolean hasOperateIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public int getOperateIndex() {
        return operateIndex_;
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder setOperateIndex(int value) {
        bitField0_ |= 0x00000002;
        operateIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operate_index = 2;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder clearOperateIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operateIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.ShaiziResultSdb)
    }

    static {
      defaultInstance = new ShaiziResultSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.ShaiziResultSdb)
  }

  public interface SelectdBankerSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code shidianban.SelectdBankerSdb}
   */
  public static final class SelectdBankerSdb extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerSdbOrBuilder {
    // Use SelectdBankerSdb.newBuilder() to construct.
    private SelectdBankerSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerSdb defaultInstance;
    public static SelectdBankerSdb getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerSdb> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerSdb>() {
      public SelectdBankerSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.SelectdBankerSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb result = new protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.SelectdBankerSdb)
    }

    static {
      defaultInstance = new SelectdBankerSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.SelectdBankerSdb)
  }

  public interface SelectdBankerResultSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_seat = 1;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    boolean hasBankerSeat();
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    int getBankerSeat();

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    int getBankerScore();
  }
  /**
   * Protobuf type {@code shidianban.SelectdBankerResultSdb}
   */
  public static final class SelectdBankerResultSdb extends
      com.google.protobuf.GeneratedMessage
      implements SelectdBankerResultSdbOrBuilder {
    // Use SelectdBankerResultSdb.newBuilder() to construct.
    private SelectdBankerResultSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SelectdBankerResultSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SelectdBankerResultSdb defaultInstance;
    public static SelectdBankerResultSdb getDefaultInstance() {
      return defaultInstance;
    }

    public SelectdBankerResultSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SelectdBankerResultSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerSeat_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerResultSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerResultSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SelectdBankerResultSdb> PARSER =
        new com.google.protobuf.AbstractParser<SelectdBankerResultSdb>() {
      public SelectdBankerResultSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SelectdBankerResultSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SelectdBankerResultSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_seat = 1;
    public static final int BANKER_SEAT_FIELD_NUMBER = 1;
    private int bankerSeat_;
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public boolean hasBankerSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_seat = 1;</code>
     *
     * <pre>
     * 抢庄用户的位置
     * </pre>
     */
    public int getBankerSeat() {
      return bankerSeat_;
    }

    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *抢庄用户的倍数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    private void initFields() {
      bankerSeat_ = 0;
      bankerScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.SelectdBankerResultSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerResultSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerResultSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SelectdBankerResultSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb result = new protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerSeat_ = bankerSeat_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerScore_ = bankerScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb.getDefaultInstance()) return this;
        if (other.hasBankerSeat()) {
          setBankerSeat(other.getBankerSeat());
        }
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.SelectdBankerResultSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_seat = 1;
      private int bankerSeat_ ;
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public boolean hasBankerSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public int getBankerSeat() {
        return bankerSeat_;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder setBankerSeat(int value) {
        bitField0_ |= 0x00000001;
        bankerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_seat = 1;</code>
       *
       * <pre>
       * 抢庄用户的位置
       * </pre>
       */
      public Builder clearBankerSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000002;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *抢庄用户的倍数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.SelectdBankerResultSdb)
    }

    static {
      defaultInstance = new SelectdBankerResultSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.SelectdBankerResultSdb)
  }

  public interface CarryBankerScoreResultSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_score = 2;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *庄家的携带分数
     * </pre>
     */
    boolean hasBankerScore();
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *庄家的携带分数
     * </pre>
     */
    int getBankerScore();

    // repeated .shidianban.RoomPlayerResponseSdb players = 9;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> 
        getPlayersList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index);
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code shidianban.CarryBankerScoreResultSdb}
   */
  public static final class CarryBankerScoreResultSdb extends
      com.google.protobuf.GeneratedMessage
      implements CarryBankerScoreResultSdbOrBuilder {
    // Use CarryBankerScoreResultSdb.newBuilder() to construct.
    private CarryBankerScoreResultSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CarryBankerScoreResultSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CarryBankerScoreResultSdb defaultInstance;
    public static CarryBankerScoreResultSdb getDefaultInstance() {
      return defaultInstance;
    }

    public CarryBankerScoreResultSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CarryBankerScoreResultSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              bankerScore_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_CarryBankerScoreResultSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_CarryBankerScoreResultSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<CarryBankerScoreResultSdb> PARSER =
        new com.google.protobuf.AbstractParser<CarryBankerScoreResultSdb>() {
      public CarryBankerScoreResultSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CarryBankerScoreResultSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CarryBankerScoreResultSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_score = 2;
    public static final int BANKER_SCORE_FIELD_NUMBER = 2;
    private int bankerScore_;
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *庄家的携带分数
     * </pre>
     */
    public boolean hasBankerScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_score = 2;</code>
     *
     * <pre>
     *庄家的携带分数
     * </pre>
     */
    public int getBankerScore() {
      return bankerScore_;
    }

    // repeated .shidianban.RoomPlayerResponseSdb players = 9;
    public static final int PLAYERS_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_;
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
     */
    public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      bankerScore_ = 0;
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, bankerScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(9, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerScore_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.CarryBankerScoreResultSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_CarryBankerScoreResultSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_CarryBankerScoreResultSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.class, protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_CarryBankerScoreResultSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb result = new protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerScore_ = bankerScore_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb.getDefaultInstance()) return this;
        if (other.hasBankerScore()) {
          setBankerScore(other.getBankerScore());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.CarryBankerScoreResultSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_score = 2;
      private int bankerScore_ ;
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *庄家的携带分数
       * </pre>
       */
      public boolean hasBankerScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *庄家的携带分数
       * </pre>
       */
      public int getBankerScore() {
        return bankerScore_;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *庄家的携带分数
       * </pre>
       */
      public Builder setBankerScore(int value) {
        bitField0_ |= 0x00000001;
        bankerScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_score = 2;</code>
       *
       * <pre>
       *庄家的携带分数
       * </pre>
       */
      public Builder clearBankerScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerScore_ = 0;
        onChanged();
        return this;
      }

      // repeated .shidianban.RoomPlayerResponseSdb players = 9;
      private java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> playersBuilder_;

      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<? extends protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.getDefaultInstance());
      }
      /**
       * <code>repeated .shidianban.RoomPlayerResponseSdb players = 9;</code>
       */
      public java.util.List<protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdb.Builder, protobuf.clazz.shidianban.shidianbanRsp.RoomPlayerResponseSdbOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.CarryBankerScoreResultSdb)
    }

    static {
      defaultInstance = new CarryBankerScoreResultSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.CarryBankerScoreResultSdb)
  }

  public interface SendCardSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    int getOpreateType();

    // repeated .Int32ArrayResponse send_card = 2;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    int getDisplayTime();

    // optional int32 ox_value = 4;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    int getOxValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code shidianban.SendCardSdb}
   */
  public static final class SendCardSdb extends
      com.google.protobuf.GeneratedMessage
      implements SendCardSdbOrBuilder {
    // Use SendCardSdb.newBuilder() to construct.
    private SendCardSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCardSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCardSdb defaultInstance;
    public static SendCardSdb getDefaultInstance() {
      return defaultInstance;
    }

    public SendCardSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCardSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oxValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SendCardSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SendCardSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCardSdb> PARSER =
        new com.google.protobuf.AbstractParser<SendCardSdb>() {
      public SendCardSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCardSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCardSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *0:抢庄前 1:抢庄后
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // repeated .Int32ArrayResponse send_card = 2;
    public static final int SEND_CARD_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 2;</code>
     *
     * <pre>
     * 发牌
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     * 显示牌
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 ox_value = 4;
    public static final int OX_VALUE_FIELD_NUMBER = 4;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    private void initFields() {
      opreateType_ = 0;
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      oxValue_ = 0;
      times_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.SendCardSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.SendCardSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SendCardSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SendCardSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.class, protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_SendCardSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb result = new protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oxValue_ = oxValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.SendCardSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *0:抢庄前 1:抢庄后
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse send_card = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 2;</code>
       *
       * <pre>
       * 发牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       * 显示牌
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ox_value = 4;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000008;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.SendCardSdb)
    }

    static {
      defaultInstance = new SendCardSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.SendCardSdb)
  }

  public interface YaoCardResutlSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    int getCards(int index);

    // optional bool is_stop = 3;
    /**
     * <code>optional bool is_stop = 3;</code>
     *
     * <pre>
     *true 停牌，  false 继续操作
     * </pre>
     */
    boolean hasIsStop();
    /**
     * <code>optional bool is_stop = 3;</code>
     *
     * <pre>
     *true 停牌，  false 继续操作
     * </pre>
     */
    boolean getIsStop();

    // optional int32 sdb_value = 4;
    /**
     * <code>optional int32 sdb_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    boolean hasSdbValue();
    /**
     * <code>optional int32 sdb_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    int getSdbValue();
  }
  /**
   * Protobuf type {@code shidianban.YaoCardResutlSdb}
   */
  public static final class YaoCardResutlSdb extends
      com.google.protobuf.GeneratedMessage
      implements YaoCardResutlSdbOrBuilder {
    // Use YaoCardResutlSdb.newBuilder() to construct.
    private YaoCardResutlSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YaoCardResutlSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YaoCardResutlSdb defaultInstance;
    public static YaoCardResutlSdb getDefaultInstance() {
      return defaultInstance;
    }

    public YaoCardResutlSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YaoCardResutlSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isStop_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              sdbValue_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_YaoCardResutlSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_YaoCardResutlSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.class, protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<YaoCardResutlSdb> PARSER =
        new com.google.protobuf.AbstractParser<YaoCardResutlSdb>() {
      public YaoCardResutlSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YaoCardResutlSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YaoCardResutlSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *操作用户
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *所操作的牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional bool is_stop = 3;
    public static final int IS_STOP_FIELD_NUMBER = 3;
    private boolean isStop_;
    /**
     * <code>optional bool is_stop = 3;</code>
     *
     * <pre>
     *true 停牌，  false 继续操作
     * </pre>
     */
    public boolean hasIsStop() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_stop = 3;</code>
     *
     * <pre>
     *true 停牌，  false 继续操作
     * </pre>
     */
    public boolean getIsStop() {
      return isStop_;
    }

    // optional int32 sdb_value = 4;
    public static final int SDB_VALUE_FIELD_NUMBER = 4;
    private int sdbValue_;
    /**
     * <code>optional int32 sdb_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public boolean hasSdbValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 sdb_value = 4;</code>
     *
     * <pre>
     *点数
     * </pre>
     */
    public int getSdbValue() {
      return sdbValue_;
    }

    private void initFields() {
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      isStop_ = false;
      sdbValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isStop_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, sdbValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isStop_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sdbValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.YaoCardResutlSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_YaoCardResutlSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_YaoCardResutlSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.class, protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isStop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        sdbValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_YaoCardResutlSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb result = new protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isStop_ = isStop_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sdbValue_ = sdbValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasIsStop()) {
          setIsStop(other.getIsStop());
        }
        if (other.hasSdbValue()) {
          setSdbValue(other.getSdbValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.YaoCardResutlSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *操作用户
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *所操作的牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional bool is_stop = 3;
      private boolean isStop_ ;
      /**
       * <code>optional bool is_stop = 3;</code>
       *
       * <pre>
       *true 停牌，  false 继续操作
       * </pre>
       */
      public boolean hasIsStop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_stop = 3;</code>
       *
       * <pre>
       *true 停牌，  false 继续操作
       * </pre>
       */
      public boolean getIsStop() {
        return isStop_;
      }
      /**
       * <code>optional bool is_stop = 3;</code>
       *
       * <pre>
       *true 停牌，  false 继续操作
       * </pre>
       */
      public Builder setIsStop(boolean value) {
        bitField0_ |= 0x00000004;
        isStop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_stop = 3;</code>
       *
       * <pre>
       *true 停牌，  false 继续操作
       * </pre>
       */
      public Builder clearIsStop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isStop_ = false;
        onChanged();
        return this;
      }

      // optional int32 sdb_value = 4;
      private int sdbValue_ ;
      /**
       * <code>optional int32 sdb_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public boolean hasSdbValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sdb_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public int getSdbValue() {
        return sdbValue_;
      }
      /**
       * <code>optional int32 sdb_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder setSdbValue(int value) {
        bitField0_ |= 0x00000008;
        sdbValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sdb_value = 4;</code>
       *
       * <pre>
       *点数
       * </pre>
       */
      public Builder clearSdbValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sdbValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.YaoCardResutlSdb)
    }

    static {
      defaultInstance = new YaoCardResutlSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.YaoCardResutlSdb)
  }

  public interface OpenCardSdbOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool open_card = 1;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean hasOpenCard();
    /**
     * <code>optional bool open_card = 1;</code>
     */
    boolean getOpenCard();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    int getSeatIndex();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    int getCards(int index);

    // optional int32 ox_value = 4;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    boolean hasOxValue();
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    int getOxValue();

    // optional int32 times = 5;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code shidianban.OpenCardSdb}
   */
  public static final class OpenCardSdb extends
      com.google.protobuf.GeneratedMessage
      implements OpenCardSdbOrBuilder {
    // Use OpenCardSdb.newBuilder() to construct.
    private OpenCardSdb(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCardSdb(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCardSdb defaultInstance;
    public static OpenCardSdb getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCardSdb getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCardSdb(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              openCard_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              oxValue_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_OpenCardSdb_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_OpenCardSdb_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.class, protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCardSdb> PARSER =
        new com.google.protobuf.AbstractParser<OpenCardSdb>() {
      public OpenCardSdb parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCardSdb(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCardSdb> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool open_card = 1;
    public static final int OPEN_CARD_FIELD_NUMBER = 1;
    private boolean openCard_;
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean hasOpenCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool open_card = 1;</code>
     */
    public boolean getOpenCard() {
      return openCard_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 ox_value = 4;
    public static final int OX_VALUE_FIELD_NUMBER = 4;
    private int oxValue_;
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public boolean hasOxValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ox_value = 4;</code>
     *
     * <pre>
     *牛几
     * </pre>
     */
    public int getOxValue() {
      return oxValue_;
    }

    // optional int32 times = 5;
    public static final int TIMES_FIELD_NUMBER = 5;
    private int times_;
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 times = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    private void initFields() {
      openCard_ = false;
      seatIndex_ = 0;
      cards_ = java.util.Collections.emptyList();
      oxValue_ = 0;
      times_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, times_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, openCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, oxValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, times_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.OpenCardSdb}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdbOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_OpenCardSdb_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_OpenCardSdb_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.class, protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        openCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        oxValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_OpenCardSdb_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb build() {
        protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb result = new protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oxValue_ = oxValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb.getDefaultInstance()) return this;
        if (other.hasOpenCard()) {
          setOpenCard(other.getOpenCard());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasOxValue()) {
          setOxValue(other.getOxValue());
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.OpenCardSdb) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool open_card = 1;
      private boolean openCard_ ;
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean hasOpenCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public boolean getOpenCard() {
        return openCard_;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder setOpenCard(boolean value) {
        bitField0_ |= 0x00000001;
        openCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_card = 1;</code>
       */
      public Builder clearOpenCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        openCard_ = false;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 ox_value = 4;
      private int oxValue_ ;
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public boolean hasOxValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public int getOxValue() {
        return oxValue_;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder setOxValue(int value) {
        bitField0_ |= 0x00000008;
        oxValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ox_value = 4;</code>
       *
       * <pre>
       *牛几
       * </pre>
       */
      public Builder clearOxValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oxValue_ = 0;
        onChanged();
        return this;
      }

      // optional int32 times = 5;
      private int times_ ;
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000010;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 times = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        times_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.OpenCardSdb)
    }

    static {
      defaultInstance = new OpenCardSdb(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.OpenCardSdb)
  }

  public interface Opreate_Sdb_RequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
     * </pre>
     */
    int getOpreateType();

    // optional int32 add_jetton_score = 2;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
     * </pre>
     */
    boolean hasAddJettonScore();
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
     * </pre>
     */
    int getAddJettonScore();

    // optional int32 jetton_score = 3;
    /**
     * <code>optional int32 jetton_score = 3;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 3;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    int getJettonScore();
  }
  /**
   * Protobuf type {@code shidianban.Opreate_Sdb_Request}
   *
   * <pre>
   *请求
   * </pre>
   */
  public static final class Opreate_Sdb_Request extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_Sdb_RequestOrBuilder {
    // Use Opreate_Sdb_Request.newBuilder() to construct.
    private Opreate_Sdb_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_Sdb_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_Sdb_Request defaultInstance;
    public static Opreate_Sdb_Request getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_Sdb_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_Sdb_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              addJettonScore_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              jettonScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_Opreate_Sdb_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_Opreate_Sdb_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.class, protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_Sdb_Request> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_Sdb_Request>() {
      public Opreate_Sdb_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_Sdb_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_Sdb_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 add_jetton_score = 2;
    public static final int ADD_JETTON_SCORE_FIELD_NUMBER = 2;
    private int addJettonScore_;
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
     * </pre>
     */
    public boolean hasAddJettonScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 add_jetton_score = 2;</code>
     *
     * <pre>
     *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
     * </pre>
     */
    public int getAddJettonScore() {
      return addJettonScore_;
    }

    // optional int32 jetton_score = 3;
    public static final int JETTON_SCORE_FIELD_NUMBER = 3;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 3;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jetton_score = 3;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    private void initFields() {
      opreateType_ = 0;
      addJettonScore_ = 0;
      jettonScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, jettonScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, addJettonScore_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, jettonScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shidianban.Opreate_Sdb_Request}
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_Opreate_Sdb_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_Opreate_Sdb_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.class, protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.Builder.class);
      }

      // Construct using protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        addJettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.internal_static_shidianban_Opreate_Sdb_Request_descriptor;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request getDefaultInstanceForType() {
        return protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.getDefaultInstance();
      }

      public protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request build() {
        protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request buildPartial() {
        protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request result = new protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addJettonScore_ = addJettonScore_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jettonScore_ = jettonScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request) {
          return mergeFrom((protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request other) {
        if (other == protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasAddJettonScore()) {
          setAddJettonScore(other.getAddJettonScore());
        }
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.shidianban.shidianbanRsp.Opreate_Sdb_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1:r抢庄 2：下注  3：要牌， 和 停牌 4:选择庄家分数5:下庄
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 add_jetton_score = 2;
      private int addJettonScore_ ;
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
       * </pre>
       */
      public boolean hasAddJettonScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
       * </pre>
       */
      public int getAddJettonScore() {
        return addJettonScore_;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
       * </pre>
       */
      public Builder setAddJettonScore(int value) {
        bitField0_ |= 0x00000002;
        addJettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton_score = 2;</code>
       *
       * <pre>
       *加注筹码数量 //下注下标  如果下注 下标为负数-1 (下标 1： 要牌，0:停牌)
       * </pre>
       */
      public Builder clearAddJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addJettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jetton_score = 3;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 3;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 jetton_score = 3;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 3;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000004;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 3;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:shidianban.Opreate_Sdb_Request)
    }

    static {
      defaultInstance = new Opreate_Sdb_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:shidianban.Opreate_Sdb_Request)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_RoomPlayerResponseSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_RoomPlayerResponseSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_PlayerResultSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_PlayerResultSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_PukeGameEndSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_PukeGameEndSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_TableResponseSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_TableResponseSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_ButtonOperateSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_ButtonOperateSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_GameStartSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_GameStartSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_JettonResultSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_JettonResultSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_ShaiziResultSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_ShaiziResultSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_SelectdBankerSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_SelectdBankerSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_SelectdBankerResultSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_SelectdBankerResultSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_CarryBankerScoreResultSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_CarryBankerScoreResultSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_SendCardSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_SendCardSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_YaoCardResutlSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_YaoCardResutlSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_OpenCardSdb_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_OpenCardSdb_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_shidianban_Opreate_Sdb_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_shidianban_Opreate_Sdb_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n shidianban/shidianbanProto.proto\022\nshid" +
      "ianban\032\024basic/protocol.proto\"\230\002\n\025RoomPla" +
      "yerResponseSdb\022\022\n\naccount_id\030\001 \001(\003\022\021\n\tus" +
      "er_name\030\002 \001(\t\022\024\n\014head_img_url\030\003 \001(\t\022\022\n\ns" +
      "eat_index\030\004 \001(\005\022\n\n\002ip\030\005 \001(\t\022\016\n\006online\030\006 " +
      "\001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005score\030\010 \001(\002\022\r\n\005ready" +
      "\030\t \001(\005\022\017\n\007ip_addr\030\n \001(\t\022%\n\rlocationInfor" +
      "\030\013 \001(\0132\016.LocationInfor\022\022\n\nis_trustee\030\014 \001" +
      "(\010\022\r\n\005money\030\r \001(\003\022\014\n\004gold\030\016 \001(\003\"\'\n\017Playe" +
      "rResultSdb\022\024\n\014player_score\030\006 \003(\005\"\266\003\n\016Puk",
      "eGameEndSdb\022\034\n\troom_info\030\001 \001(\0132\t.RoomInf" +
      "o\022\021\n\tcur_round\030\002 \001(\005\022\022\n\ngame_round\030\003 \001(\005" +
      "\022\'\n\ncards_data\030\004 \003(\0132\023.Int32ArrayRespons" +
      "e\022\021\n\tcard_type\030\005 \003(\005\022\021\n\tend_score\030\006 \003(\005\022" +
      "\022\n\nplayer_num\030\007 \001(\005\022\016\n\006reason\030\010 \001(\005\0222\n\007p" +
      "layers\030\t \003(\0132!.shidianban.RoomPlayerResp" +
      "onseSdb\0222\n\rplayer_result\030\n \001(\0132\033.shidian" +
      "ban.PlayerResultSdb\022\016\n\006winner\030\013 \001(\005\022\024\n\014s" +
      "tr_ox_value\030\014 \003(\t\022\024\n\014display_time\030\r \001(\005\022" +
      "\032\n\022banker_carry_score\030\016 \001(\005\022\030\n\020is_cancle",
      "_banker\030\017 \001(\010\022\022\n\ncur_banker\030\020 \001(\005\"\256\002\n\020Ta" +
      "bleResponseSdb\022\025\n\rbanker_player\030\001 \001(\005\022\034\n" +
      "\troom_info\030\002 \001(\0132\t.RoomInfo\0222\n\007players\030\003" +
      " \003(\0132!.shidianban.RoomPlayerResponseSdb\022" +
      "\'\n\ncards_data\030\004 \003(\0132\023.Int32ArrayResponse" +
      "\022\024\n\014jetton_score\030\005 \003(\005\022\024\n\014scene_status\030\006" +
      " \001(\005\022\020\n\010ox_value\030\007 \003(\005\022\r\n\005times\030\010 \003(\005\022\023\n" +
      "\013call_button\030\t \003(\005\022\017\n\007shai_zi\030\n \003(\005\022\025\n\ro" +
      "perate_index\030\013 \001(\005\"\210\001\n\020ButtonOperateSdb\022" +
      "\024\n\014opreate_type\030\001 \001(\005\022\016\n\006button\030\002 \003(\005\022\024\n",
      "\014display_time\030\003 \001(\005\022\021\n\tmin_score\030\004 \001(\005\022\021" +
      "\n\tmax_score\030\005 \001(\005\022\022\n\nseat_index\030\006 \001(\005\"t\n" +
      "\014GameStartSdb\022\034\n\troom_info\030\001 \001(\0132\t.RoomI" +
      "nfo\0222\n\007players\030\003 \003(\0132!.shidianban.RoomPl" +
      "ayerResponseSdb\022\022\n\ncur_banker\030\004 \001(\005\"p\n\017J" +
      "ettonResultSdb\022\023\n\013jetton_seat\030\001 \001(\005\022\024\n\014j" +
      "etton_score\030\002 \001(\005\0222\n\007players\030\003 \003(\0132!.shi" +
      "dianban.RoomPlayerResponseSdb\"9\n\017ShaiziR" +
      "esultSdb\022\017\n\007shai_zi\030\001 \003(\005\022\025\n\roperate_ind" +
      "ex\030\002 \001(\005\"=\n\020SelectdBankerSdb\022\023\n\013banker_s",
      "eat\030\001 \001(\005\022\024\n\014banker_score\030\002 \001(\005\"C\n\026Selec" +
      "tdBankerResultSdb\022\023\n\013banker_seat\030\001 \001(\005\022\024" +
      "\n\014banker_score\030\002 \001(\005\"e\n\031CarryBankerScore" +
      "ResultSdb\022\024\n\014banker_score\030\002 \001(\005\0222\n\007playe" +
      "rs\030\t \003(\0132!.shidianban.RoomPlayerResponse" +
      "Sdb\"\202\001\n\013SendCardSdb\022\024\n\014opreate_type\030\001 \001(" +
      "\005\022&\n\tsend_card\030\002 \003(\0132\023.Int32ArrayRespons" +
      "e\022\024\n\014display_time\030\003 \001(\005\022\020\n\010ox_value\030\004 \001(" +
      "\005\022\r\n\005times\030\005 \001(\005\"Y\n\020YaoCardResutlSdb\022\022\n\n" +
      "seat_index\030\001 \001(\005\022\r\n\005cards\030\002 \003(\005\022\017\n\007is_st",
      "op\030\003 \001(\010\022\021\n\tsdb_value\030\004 \001(\005\"d\n\013OpenCardS" +
      "db\022\021\n\topen_card\030\001 \001(\010\022\022\n\nseat_index\030\002 \001(" +
      "\005\022\r\n\005cards\030\003 \003(\005\022\020\n\010ox_value\030\004 \001(\005\022\r\n\005ti" +
      "mes\030\005 \001(\005\"[\n\023Opreate_Sdb_Request\022\024\n\014opre" +
      "ate_type\030\001 \001(\005\022\030\n\020add_jetton_score\030\002 \001(\005" +
      "\022\024\n\014jetton_score\030\003 \001(\005B*\n\031protobuf.clazz" +
      ".shidianbanB\rshidianbanRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_shidianban_RoomPlayerResponseSdb_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_shidianban_RoomPlayerResponseSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_RoomPlayerResponseSdb_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", });
          internal_static_shidianban_PlayerResultSdb_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_shidianban_PlayerResultSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_PlayerResultSdb_descriptor,
              new java.lang.String[] { "PlayerScore", });
          internal_static_shidianban_PukeGameEndSdb_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_shidianban_PukeGameEndSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_PukeGameEndSdb_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardsData", "CardType", "EndScore", "PlayerNum", "Reason", "Players", "PlayerResult", "Winner", "StrOxValue", "DisplayTime", "BankerCarryScore", "IsCancleBanker", "CurBanker", });
          internal_static_shidianban_TableResponseSdb_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_shidianban_TableResponseSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_TableResponseSdb_descriptor,
              new java.lang.String[] { "BankerPlayer", "RoomInfo", "Players", "CardsData", "JettonScore", "SceneStatus", "OxValue", "Times", "CallButton", "ShaiZi", "OperateIndex", });
          internal_static_shidianban_ButtonOperateSdb_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_shidianban_ButtonOperateSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_ButtonOperateSdb_descriptor,
              new java.lang.String[] { "OpreateType", "Button", "DisplayTime", "MinScore", "MaxScore", "SeatIndex", });
          internal_static_shidianban_GameStartSdb_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_shidianban_GameStartSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_GameStartSdb_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "CurBanker", });
          internal_static_shidianban_JettonResultSdb_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_shidianban_JettonResultSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_JettonResultSdb_descriptor,
              new java.lang.String[] { "JettonSeat", "JettonScore", "Players", });
          internal_static_shidianban_ShaiziResultSdb_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_shidianban_ShaiziResultSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_ShaiziResultSdb_descriptor,
              new java.lang.String[] { "ShaiZi", "OperateIndex", });
          internal_static_shidianban_SelectdBankerSdb_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_shidianban_SelectdBankerSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_SelectdBankerSdb_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_shidianban_SelectdBankerResultSdb_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_shidianban_SelectdBankerResultSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_SelectdBankerResultSdb_descriptor,
              new java.lang.String[] { "BankerSeat", "BankerScore", });
          internal_static_shidianban_CarryBankerScoreResultSdb_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_shidianban_CarryBankerScoreResultSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_CarryBankerScoreResultSdb_descriptor,
              new java.lang.String[] { "BankerScore", "Players", });
          internal_static_shidianban_SendCardSdb_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_shidianban_SendCardSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_SendCardSdb_descriptor,
              new java.lang.String[] { "OpreateType", "SendCard", "DisplayTime", "OxValue", "Times", });
          internal_static_shidianban_YaoCardResutlSdb_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_shidianban_YaoCardResutlSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_YaoCardResutlSdb_descriptor,
              new java.lang.String[] { "SeatIndex", "Cards", "IsStop", "SdbValue", });
          internal_static_shidianban_OpenCardSdb_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_shidianban_OpenCardSdb_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_OpenCardSdb_descriptor,
              new java.lang.String[] { "OpenCard", "SeatIndex", "Cards", "OxValue", "Times", });
          internal_static_shidianban_Opreate_Sdb_Request_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_shidianban_Opreate_Sdb_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_shidianban_Opreate_Sdb_Request_descriptor,
              new java.lang.String[] { "OpreateType", "AddJettonScore", "JettonScore", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
