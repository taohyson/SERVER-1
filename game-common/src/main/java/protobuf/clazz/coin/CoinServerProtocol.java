// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coin/CoinServerProtocol.proto

package protobuf.clazz.coin;

public final class CoinServerProtocol {
  private CoinServerProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface S2SGameMatchRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional .coin.GameMatchRequest matchReq = 2;
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    boolean hasMatchReq();
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    protobuf.clazz.coin.CoinProtocol.GameMatchRequest getMatchReq();
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder getMatchReqOrBuilder();
  }
  /**
   * Protobuf type {@code coin.S2SGameMatchRequest}
   */
  public static final class S2SGameMatchRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SGameMatchRequestOrBuilder {
    // Use S2SGameMatchRequest.newBuilder() to construct.
    private S2SGameMatchRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SGameMatchRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SGameMatchRequest defaultInstance;
    public static S2SGameMatchRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SGameMatchRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SGameMatchRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = matchReq_.toBuilder();
              }
              matchReq_ = input.readMessage(protobuf.clazz.coin.CoinProtocol.GameMatchRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(matchReq_);
                matchReq_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameMatchRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameMatchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SGameMatchRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SGameMatchRequest>() {
      public S2SGameMatchRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SGameMatchRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SGameMatchRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional .coin.GameMatchRequest matchReq = 2;
    public static final int MATCHREQ_FIELD_NUMBER = 2;
    private protobuf.clazz.coin.CoinProtocol.GameMatchRequest matchReq_;
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    public boolean hasMatchReq() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    public protobuf.clazz.coin.CoinProtocol.GameMatchRequest getMatchReq() {
      return matchReq_;
    }
    /**
     * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
     */
    public protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder getMatchReqOrBuilder() {
      return matchReq_;
    }

    private void initFields() {
      accountId_ = 0L;
      matchReq_ = protobuf.clazz.coin.CoinProtocol.GameMatchRequest.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, matchReq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, matchReq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SGameMatchRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameMatchRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameMatchRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMatchReqFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (matchReqBuilder_ == null) {
          matchReq_ = protobuf.clazz.coin.CoinProtocol.GameMatchRequest.getDefaultInstance();
        } else {
          matchReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameMatchRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (matchReqBuilder_ == null) {
          result.matchReq_ = matchReq_;
        } else {
          result.matchReq_ = matchReqBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasMatchReq()) {
          mergeMatchReq(other.getMatchReq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SGameMatchRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional .coin.GameMatchRequest matchReq = 2;
      private protobuf.clazz.coin.CoinProtocol.GameMatchRequest matchReq_ = protobuf.clazz.coin.CoinProtocol.GameMatchRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.coin.CoinProtocol.GameMatchRequest, protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder, protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder> matchReqBuilder_;
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public boolean hasMatchReq() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public protobuf.clazz.coin.CoinProtocol.GameMatchRequest getMatchReq() {
        if (matchReqBuilder_ == null) {
          return matchReq_;
        } else {
          return matchReqBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public Builder setMatchReq(protobuf.clazz.coin.CoinProtocol.GameMatchRequest value) {
        if (matchReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          matchReq_ = value;
          onChanged();
        } else {
          matchReqBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public Builder setMatchReq(
          protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder builderForValue) {
        if (matchReqBuilder_ == null) {
          matchReq_ = builderForValue.build();
          onChanged();
        } else {
          matchReqBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public Builder mergeMatchReq(protobuf.clazz.coin.CoinProtocol.GameMatchRequest value) {
        if (matchReqBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              matchReq_ != protobuf.clazz.coin.CoinProtocol.GameMatchRequest.getDefaultInstance()) {
            matchReq_ =
              protobuf.clazz.coin.CoinProtocol.GameMatchRequest.newBuilder(matchReq_).mergeFrom(value).buildPartial();
          } else {
            matchReq_ = value;
          }
          onChanged();
        } else {
          matchReqBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public Builder clearMatchReq() {
        if (matchReqBuilder_ == null) {
          matchReq_ = protobuf.clazz.coin.CoinProtocol.GameMatchRequest.getDefaultInstance();
          onChanged();
        } else {
          matchReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder getMatchReqBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMatchReqFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      public protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder getMatchReqOrBuilder() {
        if (matchReqBuilder_ != null) {
          return matchReqBuilder_.getMessageOrBuilder();
        } else {
          return matchReq_;
        }
      }
      /**
       * <code>optional .coin.GameMatchRequest matchReq = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.coin.CoinProtocol.GameMatchRequest, protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder, protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder> 
          getMatchReqFieldBuilder() {
        if (matchReqBuilder_ == null) {
          matchReqBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.coin.CoinProtocol.GameMatchRequest, protobuf.clazz.coin.CoinProtocol.GameMatchRequest.Builder, protobuf.clazz.coin.CoinProtocol.GameMatchRequestOrBuilder>(
                  matchReq_,
                  getParentForChildren(),
                  isClean());
          matchReq_ = null;
        }
        return matchReqBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SGameMatchRequest)
    }

    static {
      defaultInstance = new S2SGameMatchRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SGameMatchRequest)
  }

  public interface S2SCoineRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();
  }
  /**
   * Protobuf type {@code coin.S2SCoineRequest}
   */
  public static final class S2SCoineRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SCoineRequestOrBuilder {
    // Use S2SCoineRequest.newBuilder() to construct.
    private S2SCoineRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SCoineRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SCoineRequest defaultInstance;
    public static S2SCoineRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SCoineRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SCoineRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SCoineRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SCoineRequest>() {
      public S2SCoineRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SCoineRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SCoineRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    private void initFields() {
      accountId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SCoineRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoineRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoineRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoineRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SCoineRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SCoineRequest)
    }

    static {
      defaultInstance = new S2SCoineRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SCoineRequest)
  }

  public interface S2SMatchSuccessRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .coin.CoinPlayerProto accounts = 1;
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> 
        getAccountsList();
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto getAccounts(int index);
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    int getAccountsCount();
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder> 
        getAccountsOrBuilderList();
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder getAccountsOrBuilder(
        int index);

    // optional int32 gameId = 2;
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    int getGameId();

    // optional int32 detailId = 3;
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    boolean hasDetailId();
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    int getDetailId();

    // optional int32 coinIndex = 4;
    /**
     * <code>optional int32 coinIndex = 4;</code>
     */
    boolean hasCoinIndex();
    /**
     * <code>optional int32 coinIndex = 4;</code>
     */
    int getCoinIndex();
  }
  /**
   * Protobuf type {@code coin.S2SMatchSuccessRequest}
   */
  public static final class S2SMatchSuccessRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SMatchSuccessRequestOrBuilder {
    // Use S2SMatchSuccessRequest.newBuilder() to construct.
    private S2SMatchSuccessRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SMatchSuccessRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SMatchSuccessRequest defaultInstance;
    public static S2SMatchSuccessRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SMatchSuccessRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SMatchSuccessRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                accounts_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              accounts_.add(input.readMessage(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              gameId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              detailId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              coinIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          accounts_ = java.util.Collections.unmodifiableList(accounts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SMatchSuccessRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SMatchSuccessRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SMatchSuccessRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SMatchSuccessRequest>() {
      public S2SMatchSuccessRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SMatchSuccessRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SMatchSuccessRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .coin.CoinPlayerProto accounts = 1;
    public static final int ACCOUNTS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> accounts_;
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> getAccountsList() {
      return accounts_;
    }
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder> 
        getAccountsOrBuilderList() {
      return accounts_;
    }
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public int getAccountsCount() {
      return accounts_.size();
    }
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto getAccounts(int index) {
      return accounts_.get(index);
    }
    /**
     * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
     *
     * <pre>
     * 成员列表
     * </pre>
     */
    public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder getAccountsOrBuilder(
        int index) {
      return accounts_.get(index);
    }

    // optional int32 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private int gameId_;
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    // optional int32 detailId = 3;
    public static final int DETAILID_FIELD_NUMBER = 3;
    private int detailId_;
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    public boolean hasDetailId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    public int getDetailId() {
      return detailId_;
    }

    // optional int32 coinIndex = 4;
    public static final int COININDEX_FIELD_NUMBER = 4;
    private int coinIndex_;
    /**
     * <code>optional int32 coinIndex = 4;</code>
     */
    public boolean hasCoinIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 coinIndex = 4;</code>
     */
    public int getCoinIndex() {
      return coinIndex_;
    }

    private void initFields() {
      accounts_ = java.util.Collections.emptyList();
      gameId_ = 0;
      detailId_ = 0;
      coinIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAccountsCount(); i++) {
        if (!getAccounts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < accounts_.size(); i++) {
        output.writeMessage(1, accounts_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, detailId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, coinIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < accounts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, accounts_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, detailId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, coinIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SMatchSuccessRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SMatchSuccessRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SMatchSuccessRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAccountsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (accountsBuilder_ == null) {
          accounts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          accountsBuilder_.clear();
        }
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        detailId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        coinIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SMatchSuccessRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (accountsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            accounts_ = java.util.Collections.unmodifiableList(accounts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.accounts_ = accounts_;
        } else {
          result.accounts_ = accountsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameId_ = gameId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.detailId_ = detailId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.coinIndex_ = coinIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest.getDefaultInstance()) return this;
        if (accountsBuilder_ == null) {
          if (!other.accounts_.isEmpty()) {
            if (accounts_.isEmpty()) {
              accounts_ = other.accounts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAccountsIsMutable();
              accounts_.addAll(other.accounts_);
            }
            onChanged();
          }
        } else {
          if (!other.accounts_.isEmpty()) {
            if (accountsBuilder_.isEmpty()) {
              accountsBuilder_.dispose();
              accountsBuilder_ = null;
              accounts_ = other.accounts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              accountsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccountsFieldBuilder() : null;
            } else {
              accountsBuilder_.addAllMessages(other.accounts_);
            }
          }
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasDetailId()) {
          setDetailId(other.getDetailId());
        }
        if (other.hasCoinIndex()) {
          setCoinIndex(other.getCoinIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAccountsCount(); i++) {
          if (!getAccounts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SMatchSuccessRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .coin.CoinPlayerProto accounts = 1;
      private java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> accounts_ =
        java.util.Collections.emptyList();
      private void ensureAccountsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          accounts_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto>(accounts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder> accountsBuilder_;

      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> getAccountsList() {
        if (accountsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accounts_);
        } else {
          return accountsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public int getAccountsCount() {
        if (accountsBuilder_ == null) {
          return accounts_.size();
        } else {
          return accountsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto getAccounts(int index) {
        if (accountsBuilder_ == null) {
          return accounts_.get(index);
        } else {
          return accountsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder setAccounts(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.set(index, value);
          onChanged();
        } else {
          accountsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder setAccounts(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.set(index, builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAccounts(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.add(value);
          onChanged();
        } else {
          accountsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAccounts(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto value) {
        if (accountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountsIsMutable();
          accounts_.add(index, value);
          onChanged();
        } else {
          accountsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAccounts(
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.add(builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAccounts(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder builderForValue) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.add(index, builderForValue.build());
          onChanged();
        } else {
          accountsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder addAllAccounts(
          java.lang.Iterable<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto> values) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          super.addAll(values, accounts_);
          onChanged();
        } else {
          accountsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder clearAccounts() {
        if (accountsBuilder_ == null) {
          accounts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          accountsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public Builder removeAccounts(int index) {
        if (accountsBuilder_ == null) {
          ensureAccountsIsMutable();
          accounts_.remove(index);
          onChanged();
        } else {
          accountsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder getAccountsBuilder(
          int index) {
        return getAccountsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder getAccountsOrBuilder(
          int index) {
        if (accountsBuilder_ == null) {
          return accounts_.get(index);  } else {
          return accountsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder> 
           getAccountsOrBuilderList() {
        if (accountsBuilder_ != null) {
          return accountsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accounts_);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder addAccountsBuilder() {
        return getAccountsFieldBuilder().addBuilder(
            protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder addAccountsBuilder(
          int index) {
        return getAccountsFieldBuilder().addBuilder(
            index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.CoinPlayerProto accounts = 1;</code>
       *
       * <pre>
       * 成员列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder> 
           getAccountsBuilderList() {
        return getAccountsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder> 
          getAccountsFieldBuilder() {
        if (accountsBuilder_ == null) {
          accountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder>(
                  accounts_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          accounts_ = null;
        }
        return accountsBuilder_;
      }

      // optional int32 gameId = 2;
      private int gameId_ ;
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000002;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 detailId = 3;
      private int detailId_ ;
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public boolean hasDetailId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public int getDetailId() {
        return detailId_;
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public Builder setDetailId(int value) {
        bitField0_ |= 0x00000004;
        detailId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public Builder clearDetailId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        detailId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 coinIndex = 4;
      private int coinIndex_ ;
      /**
       * <code>optional int32 coinIndex = 4;</code>
       */
      public boolean hasCoinIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 coinIndex = 4;</code>
       */
      public int getCoinIndex() {
        return coinIndex_;
      }
      /**
       * <code>optional int32 coinIndex = 4;</code>
       */
      public Builder setCoinIndex(int value) {
        bitField0_ |= 0x00000008;
        coinIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coinIndex = 4;</code>
       */
      public Builder clearCoinIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        coinIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SMatchSuccessRequest)
    }

    static {
      defaultInstance = new S2SMatchSuccessRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SMatchSuccessRequest)
  }

  public interface S2SGameEnterRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional int32 proxyId = 2;
    /**
     * <code>optional int32 proxyId = 2;</code>
     */
    boolean hasProxyId();
    /**
     * <code>optional int32 proxyId = 2;</code>
     */
    int getProxyId();
  }
  /**
   * Protobuf type {@code coin.S2SGameEnterRequest}
   */
  public static final class S2SGameEnterRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SGameEnterRequestOrBuilder {
    // Use S2SGameEnterRequest.newBuilder() to construct.
    private S2SGameEnterRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SGameEnterRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SGameEnterRequest defaultInstance;
    public static S2SGameEnterRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SGameEnterRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SGameEnterRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              proxyId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameEnterRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameEnterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SGameEnterRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SGameEnterRequest>() {
      public S2SGameEnterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SGameEnterRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SGameEnterRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 proxyId = 2;
    public static final int PROXYID_FIELD_NUMBER = 2;
    private int proxyId_;
    /**
     * <code>optional int32 proxyId = 2;</code>
     */
    public boolean hasProxyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 proxyId = 2;</code>
     */
    public int getProxyId() {
      return proxyId_;
    }

    private void initFields() {
      accountId_ = 0L;
      proxyId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, proxyId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, proxyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SGameEnterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameEnterRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameEnterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        proxyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameEnterRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.proxyId_ = proxyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasProxyId()) {
          setProxyId(other.getProxyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SGameEnterRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 proxyId = 2;
      private int proxyId_ ;
      /**
       * <code>optional int32 proxyId = 2;</code>
       */
      public boolean hasProxyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 proxyId = 2;</code>
       */
      public int getProxyId() {
        return proxyId_;
      }
      /**
       * <code>optional int32 proxyId = 2;</code>
       */
      public Builder setProxyId(int value) {
        bitField0_ |= 0x00000002;
        proxyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 proxyId = 2;</code>
       */
      public Builder clearProxyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        proxyId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SGameEnterRequest)
    }

    static {
      defaultInstance = new S2SGameEnterRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SGameEnterRequest)
  }

  public interface S2SGameExitRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();
  }
  /**
   * Protobuf type {@code coin.S2SGameExitRequest}
   */
  public static final class S2SGameExitRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SGameExitRequestOrBuilder {
    // Use S2SGameExitRequest.newBuilder() to construct.
    private S2SGameExitRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SGameExitRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SGameExitRequest defaultInstance;
    public static S2SGameExitRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SGameExitRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SGameExitRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameExitRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameExitRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SGameExitRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SGameExitRequest>() {
      public S2SGameExitRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SGameExitRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SGameExitRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    private void initFields() {
      accountId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SGameExitRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameExitRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameExitRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameExitRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SGameExitRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SGameExitRequest)
    }

    static {
      defaultInstance = new S2SGameExitRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SGameExitRequest)
  }

  public interface S2SGameReliefRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional int32 gameId = 2;
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    int getGameId();

    // optional int32 detailId = 3;
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    boolean hasDetailId();
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    int getDetailId();
  }
  /**
   * Protobuf type {@code coin.S2SGameReliefRequest}
   */
  public static final class S2SGameReliefRequest extends
      com.google.protobuf.GeneratedMessage
      implements S2SGameReliefRequestOrBuilder {
    // Use S2SGameReliefRequest.newBuilder() to construct.
    private S2SGameReliefRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SGameReliefRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SGameReliefRequest defaultInstance;
    public static S2SGameReliefRequest getDefaultInstance() {
      return defaultInstance;
    }

    public S2SGameReliefRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SGameReliefRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              detailId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameReliefRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameReliefRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SGameReliefRequest> PARSER =
        new com.google.protobuf.AbstractParser<S2SGameReliefRequest>() {
      public S2SGameReliefRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SGameReliefRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SGameReliefRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private int gameId_;
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gameId = 2;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    // optional int32 detailId = 3;
    public static final int DETAILID_FIELD_NUMBER = 3;
    private int detailId_;
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    public boolean hasDetailId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 detailId = 3;</code>
     */
    public int getDetailId() {
      return detailId_;
    }

    private void initFields() {
      accountId_ = 0L;
      gameId_ = 0;
      detailId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gameId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, detailId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, detailId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SGameReliefRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameReliefRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameReliefRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.class, protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        detailId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SGameReliefRequest_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest result = new protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameId_ = gameId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.detailId_ = detailId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasDetailId()) {
          setDetailId(other.getDetailId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SGameReliefRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 gameId = 2;
      private int gameId_ ;
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000002;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameId = 2;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 detailId = 3;
      private int detailId_ ;
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public boolean hasDetailId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public int getDetailId() {
        return detailId_;
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public Builder setDetailId(int value) {
        bitField0_ |= 0x00000004;
        detailId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 detailId = 3;</code>
       */
      public Builder clearDetailId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        detailId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SGameReliefRequest)
    }

    static {
      defaultInstance = new S2SGameReliefRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SGameReliefRequest)
  }

  public interface S2SCoinMsgStatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gameId = 1;
    /**
     * <code>optional int32 gameId = 1;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional int32 gameId = 1;</code>
     */
    int getGameId();

    // optional int32 detailId = 2;
    /**
     * <code>optional int32 detailId = 2;</code>
     */
    boolean hasDetailId();
    /**
     * <code>optional int32 detailId = 2;</code>
     */
    int getDetailId();

    // repeated .coin.CoinPlayerMsg msgs = 4;
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> 
        getMsgsList();
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg getMsgs(int index);
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    int getMsgsCount();
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder> 
        getMsgsOrBuilderList();
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder getMsgsOrBuilder(
        int index);

    // optional int32 playTime = 5;
    /**
     * <code>optional int32 playTime = 5;</code>
     */
    boolean hasPlayTime();
    /**
     * <code>optional int32 playTime = 5;</code>
     */
    int getPlayTime();
  }
  /**
   * Protobuf type {@code coin.S2SCoinMsgStat}
   */
  public static final class S2SCoinMsgStat extends
      com.google.protobuf.GeneratedMessage
      implements S2SCoinMsgStatOrBuilder {
    // Use S2SCoinMsgStat.newBuilder() to construct.
    private S2SCoinMsgStat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SCoinMsgStat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SCoinMsgStat defaultInstance;
    public static S2SCoinMsgStat getDefaultInstance() {
      return defaultInstance;
    }

    public S2SCoinMsgStat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SCoinMsgStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              detailId_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                msgs_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg>();
                mutable_bitField0_ |= 0x00000004;
              }
              msgs_.add(input.readMessage(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              playTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          msgs_ = java.util.Collections.unmodifiableList(msgs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinMsgStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinMsgStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SCoinMsgStat> PARSER =
        new com.google.protobuf.AbstractParser<S2SCoinMsgStat>() {
      public S2SCoinMsgStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SCoinMsgStat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SCoinMsgStat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private int gameId_;
    /**
     * <code>optional int32 gameId = 1;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gameId = 1;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    // optional int32 detailId = 2;
    public static final int DETAILID_FIELD_NUMBER = 2;
    private int detailId_;
    /**
     * <code>optional int32 detailId = 2;</code>
     */
    public boolean hasDetailId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 detailId = 2;</code>
     */
    public int getDetailId() {
      return detailId_;
    }

    // repeated .coin.CoinPlayerMsg msgs = 4;
    public static final int MSGS_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> msgs_;
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> getMsgsList() {
      return msgs_;
    }
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder> 
        getMsgsOrBuilderList() {
      return msgs_;
    }
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    public int getMsgsCount() {
      return msgs_.size();
    }
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg getMsgs(int index) {
      return msgs_.get(index);
    }
    /**
     * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
     */
    public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder getMsgsOrBuilder(
        int index) {
      return msgs_.get(index);
    }

    // optional int32 playTime = 5;
    public static final int PLAYTIME_FIELD_NUMBER = 5;
    private int playTime_;
    /**
     * <code>optional int32 playTime = 5;</code>
     */
    public boolean hasPlayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 playTime = 5;</code>
     */
    public int getPlayTime() {
      return playTime_;
    }

    private void initFields() {
      gameId_ = 0;
      detailId_ = 0;
      msgs_ = java.util.Collections.emptyList();
      playTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getMsgsCount(); i++) {
        if (!getMsgs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, detailId_);
      }
      for (int i = 0; i < msgs_.size(); i++) {
        output.writeMessage(4, msgs_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, playTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, detailId_);
      }
      for (int i = 0; i < msgs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, msgs_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, playTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SCoinMsgStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinMsgStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinMsgStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMsgsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        detailId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (msgsBuilder_ == null) {
          msgs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          msgsBuilder_.clear();
        }
        playTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinMsgStat_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat result = new protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameId_ = gameId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.detailId_ = detailId_;
        if (msgsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            msgs_ = java.util.Collections.unmodifiableList(msgs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.msgs_ = msgs_;
        } else {
          result.msgs_ = msgsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playTime_ = playTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasDetailId()) {
          setDetailId(other.getDetailId());
        }
        if (msgsBuilder_ == null) {
          if (!other.msgs_.isEmpty()) {
            if (msgs_.isEmpty()) {
              msgs_ = other.msgs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMsgsIsMutable();
              msgs_.addAll(other.msgs_);
            }
            onChanged();
          }
        } else {
          if (!other.msgs_.isEmpty()) {
            if (msgsBuilder_.isEmpty()) {
              msgsBuilder_.dispose();
              msgsBuilder_ = null;
              msgs_ = other.msgs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              msgsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMsgsFieldBuilder() : null;
            } else {
              msgsBuilder_.addAllMessages(other.msgs_);
            }
          }
        }
        if (other.hasPlayTime()) {
          setPlayTime(other.getPlayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMsgsCount(); i++) {
          if (!getMsgs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SCoinMsgStat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gameId = 1;
      private int gameId_ ;
      /**
       * <code>optional int32 gameId = 1;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gameId = 1;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>optional int32 gameId = 1;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000001;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameId = 1;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 detailId = 2;
      private int detailId_ ;
      /**
       * <code>optional int32 detailId = 2;</code>
       */
      public boolean hasDetailId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 detailId = 2;</code>
       */
      public int getDetailId() {
        return detailId_;
      }
      /**
       * <code>optional int32 detailId = 2;</code>
       */
      public Builder setDetailId(int value) {
        bitField0_ |= 0x00000002;
        detailId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 detailId = 2;</code>
       */
      public Builder clearDetailId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        detailId_ = 0;
        onChanged();
        return this;
      }

      // repeated .coin.CoinPlayerMsg msgs = 4;
      private java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> msgs_ =
        java.util.Collections.emptyList();
      private void ensureMsgsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          msgs_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg>(msgs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder> msgsBuilder_;

      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> getMsgsList() {
        if (msgsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(msgs_);
        } else {
          return msgsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public int getMsgsCount() {
        if (msgsBuilder_ == null) {
          return msgs_.size();
        } else {
          return msgsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg getMsgs(int index) {
        if (msgsBuilder_ == null) {
          return msgs_.get(index);
        } else {
          return msgsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder setMsgs(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.set(index, value);
          onChanged();
        } else {
          msgsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder setMsgs(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.set(index, builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder addMsgs(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.add(value);
          onChanged();
        } else {
          msgsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder addMsgs(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.add(index, value);
          onChanged();
        } else {
          msgsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder addMsgs(
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.add(builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder addMsgs(
          int index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.add(index, builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder addAllMsgs(
          java.lang.Iterable<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg> values) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          super.addAll(values, msgs_);
          onChanged();
        } else {
          msgsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder clearMsgs() {
        if (msgsBuilder_ == null) {
          msgs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          msgsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public Builder removeMsgs(int index) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.remove(index);
          onChanged();
        } else {
          msgsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder getMsgsBuilder(
          int index) {
        return getMsgsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder getMsgsOrBuilder(
          int index) {
        if (msgsBuilder_ == null) {
          return msgs_.get(index);  } else {
          return msgsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder> 
           getMsgsOrBuilderList() {
        if (msgsBuilder_ != null) {
          return msgsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(msgs_);
        }
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder addMsgsBuilder() {
        return getMsgsFieldBuilder().addBuilder(
            protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder addMsgsBuilder(
          int index) {
        return getMsgsFieldBuilder().addBuilder(
            index, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.CoinPlayerMsg msgs = 4;</code>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder> 
           getMsgsBuilderList() {
        return getMsgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder> 
          getMsgsFieldBuilder() {
        if (msgsBuilder_ == null) {
          msgsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder>(
                  msgs_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          msgs_ = null;
        }
        return msgsBuilder_;
      }

      // optional int32 playTime = 5;
      private int playTime_ ;
      /**
       * <code>optional int32 playTime = 5;</code>
       */
      public boolean hasPlayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       */
      public int getPlayTime() {
        return playTime_;
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       */
      public Builder setPlayTime(int value) {
        bitField0_ |= 0x00000008;
        playTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playTime = 5;</code>
       */
      public Builder clearPlayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SCoinMsgStat)
    }

    static {
      defaultInstance = new S2SCoinMsgStat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SCoinMsgStat)
  }

  public interface CoinPlayerMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional bool isRobot = 2;
    /**
     * <code>optional bool isRobot = 2;</code>
     */
    boolean hasIsRobot();
    /**
     * <code>optional bool isRobot = 2;</code>
     */
    boolean getIsRobot();

    // optional int32 winCoin = 3;
    /**
     * <code>optional int32 winCoin = 3;</code>
     */
    boolean hasWinCoin();
    /**
     * <code>optional int32 winCoin = 3;</code>
     */
    int getWinCoin();

    // optional bool isBankrupt = 4;
    /**
     * <code>optional bool isBankrupt = 4;</code>
     */
    boolean hasIsBankrupt();
    /**
     * <code>optional bool isBankrupt = 4;</code>
     */
    boolean getIsBankrupt();

    // optional int32 baseCoin = 5;
    /**
     * <code>optional int32 baseCoin = 5;</code>
     */
    boolean hasBaseCoin();
    /**
     * <code>optional int32 baseCoin = 5;</code>
     */
    int getBaseCoin();

    // optional int64 playTime = 6;
    /**
     * <code>optional int64 playTime = 6;</code>
     *
     * <pre>
     *金币场时间
     * </pre>
     */
    boolean hasPlayTime();
    /**
     * <code>optional int64 playTime = 6;</code>
     *
     * <pre>
     *金币场时间
     * </pre>
     */
    long getPlayTime();

    // optional int64 createTime = 7;
    /**
     * <code>optional int64 createTime = 7;</code>
     *
     * <pre>
     *注册时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 7;</code>
     *
     * <pre>
     *注册时间
     * </pre>
     */
    long getCreateTime();

    // optional int64 nowTime = 8;
    /**
     * <code>optional int64 nowTime = 8;</code>
     */
    boolean hasNowTime();
    /**
     * <code>optional int64 nowTime = 8;</code>
     */
    long getNowTime();

    // optional bool cornucopia = 9;
    /**
     * <code>optional bool cornucopia = 9;</code>
     *
     * <pre>
     *聚宝盆
     * </pre>
     */
    boolean hasCornucopia();
    /**
     * <code>optional bool cornucopia = 9;</code>
     *
     * <pre>
     *聚宝盆
     * </pre>
     */
    boolean getCornucopia();

    // optional int32 recycleCoin = 10;
    /**
     * <code>optional int32 recycleCoin = 10;</code>
     *
     * <pre>
     *回收的金币数
     * </pre>
     */
    boolean hasRecycleCoin();
    /**
     * <code>optional int32 recycleCoin = 10;</code>
     *
     * <pre>
     *回收的金币数
     * </pre>
     */
    int getRecycleCoin();

    // optional int32 cornucopiaCost = 11;
    /**
     * <code>optional int32 cornucopiaCost = 11;</code>
     *
     * <pre>
     *参与消耗
     * </pre>
     */
    boolean hasCornucopiaCost();
    /**
     * <code>optional int32 cornucopiaCost = 11;</code>
     *
     * <pre>
     *参与消耗
     * </pre>
     */
    int getCornucopiaCost();

    // repeated .CommonLI cardTypeValue = 12;
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    java.util.List<protobuf.clazz.Common.CommonLI> 
        getCardTypeValueList();
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    protobuf.clazz.Common.CommonLI getCardTypeValue(int index);
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    int getCardTypeValueCount();
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getCardTypeValueOrBuilderList();
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    protobuf.clazz.Common.CommonLIOrBuilder getCardTypeValueOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code coin.CoinPlayerMsg}
   */
  public static final class CoinPlayerMsg extends
      com.google.protobuf.GeneratedMessage
      implements CoinPlayerMsgOrBuilder {
    // Use CoinPlayerMsg.newBuilder() to construct.
    private CoinPlayerMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CoinPlayerMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CoinPlayerMsg defaultInstance;
    public static CoinPlayerMsg getDefaultInstance() {
      return defaultInstance;
    }

    public CoinPlayerMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CoinPlayerMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isRobot_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              winCoin_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isBankrupt_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              baseCoin_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              playTime_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              createTime_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              nowTime_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              cornucopia_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              recycleCoin_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              cornucopiaCost_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                cardTypeValue_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>();
                mutable_bitField0_ |= 0x00000800;
              }
              cardTypeValue_.add(input.readMessage(protobuf.clazz.Common.CommonLI.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          cardTypeValue_ = java.util.Collections.unmodifiableList(cardTypeValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.class, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<CoinPlayerMsg> PARSER =
        new com.google.protobuf.AbstractParser<CoinPlayerMsg>() {
      public CoinPlayerMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CoinPlayerMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CoinPlayerMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional bool isRobot = 2;
    public static final int ISROBOT_FIELD_NUMBER = 2;
    private boolean isRobot_;
    /**
     * <code>optional bool isRobot = 2;</code>
     */
    public boolean hasIsRobot() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isRobot = 2;</code>
     */
    public boolean getIsRobot() {
      return isRobot_;
    }

    // optional int32 winCoin = 3;
    public static final int WINCOIN_FIELD_NUMBER = 3;
    private int winCoin_;
    /**
     * <code>optional int32 winCoin = 3;</code>
     */
    public boolean hasWinCoin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 winCoin = 3;</code>
     */
    public int getWinCoin() {
      return winCoin_;
    }

    // optional bool isBankrupt = 4;
    public static final int ISBANKRUPT_FIELD_NUMBER = 4;
    private boolean isBankrupt_;
    /**
     * <code>optional bool isBankrupt = 4;</code>
     */
    public boolean hasIsBankrupt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool isBankrupt = 4;</code>
     */
    public boolean getIsBankrupt() {
      return isBankrupt_;
    }

    // optional int32 baseCoin = 5;
    public static final int BASECOIN_FIELD_NUMBER = 5;
    private int baseCoin_;
    /**
     * <code>optional int32 baseCoin = 5;</code>
     */
    public boolean hasBaseCoin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 baseCoin = 5;</code>
     */
    public int getBaseCoin() {
      return baseCoin_;
    }

    // optional int64 playTime = 6;
    public static final int PLAYTIME_FIELD_NUMBER = 6;
    private long playTime_;
    /**
     * <code>optional int64 playTime = 6;</code>
     *
     * <pre>
     *金币场时间
     * </pre>
     */
    public boolean hasPlayTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 playTime = 6;</code>
     *
     * <pre>
     *金币场时间
     * </pre>
     */
    public long getPlayTime() {
      return playTime_;
    }

    // optional int64 createTime = 7;
    public static final int CREATETIME_FIELD_NUMBER = 7;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 7;</code>
     *
     * <pre>
     *注册时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 createTime = 7;</code>
     *
     * <pre>
     *注册时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // optional int64 nowTime = 8;
    public static final int NOWTIME_FIELD_NUMBER = 8;
    private long nowTime_;
    /**
     * <code>optional int64 nowTime = 8;</code>
     */
    public boolean hasNowTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 nowTime = 8;</code>
     */
    public long getNowTime() {
      return nowTime_;
    }

    // optional bool cornucopia = 9;
    public static final int CORNUCOPIA_FIELD_NUMBER = 9;
    private boolean cornucopia_;
    /**
     * <code>optional bool cornucopia = 9;</code>
     *
     * <pre>
     *聚宝盆
     * </pre>
     */
    public boolean hasCornucopia() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool cornucopia = 9;</code>
     *
     * <pre>
     *聚宝盆
     * </pre>
     */
    public boolean getCornucopia() {
      return cornucopia_;
    }

    // optional int32 recycleCoin = 10;
    public static final int RECYCLECOIN_FIELD_NUMBER = 10;
    private int recycleCoin_;
    /**
     * <code>optional int32 recycleCoin = 10;</code>
     *
     * <pre>
     *回收的金币数
     * </pre>
     */
    public boolean hasRecycleCoin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 recycleCoin = 10;</code>
     *
     * <pre>
     *回收的金币数
     * </pre>
     */
    public int getRecycleCoin() {
      return recycleCoin_;
    }

    // optional int32 cornucopiaCost = 11;
    public static final int CORNUCOPIACOST_FIELD_NUMBER = 11;
    private int cornucopiaCost_;
    /**
     * <code>optional int32 cornucopiaCost = 11;</code>
     *
     * <pre>
     *参与消耗
     * </pre>
     */
    public boolean hasCornucopiaCost() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 cornucopiaCost = 11;</code>
     *
     * <pre>
     *参与消耗
     * </pre>
     */
    public int getCornucopiaCost() {
      return cornucopiaCost_;
    }

    // repeated .CommonLI cardTypeValue = 12;
    public static final int CARDTYPEVALUE_FIELD_NUMBER = 12;
    private java.util.List<protobuf.clazz.Common.CommonLI> cardTypeValue_;
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    public java.util.List<protobuf.clazz.Common.CommonLI> getCardTypeValueList() {
      return cardTypeValue_;
    }
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getCardTypeValueOrBuilderList() {
      return cardTypeValue_;
    }
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    public int getCardTypeValueCount() {
      return cardTypeValue_.size();
    }
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    public protobuf.clazz.Common.CommonLI getCardTypeValue(int index) {
      return cardTypeValue_.get(index);
    }
    /**
     * <code>repeated .CommonLI cardTypeValue = 12;</code>
     *
     * <pre>
     *触发的牌型值
     * </pre>
     */
    public protobuf.clazz.Common.CommonLIOrBuilder getCardTypeValueOrBuilder(
        int index) {
      return cardTypeValue_.get(index);
    }

    private void initFields() {
      accountId_ = 0L;
      isRobot_ = false;
      winCoin_ = 0;
      isBankrupt_ = false;
      baseCoin_ = 0;
      playTime_ = 0L;
      createTime_ = 0L;
      nowTime_ = 0L;
      cornucopia_ = false;
      recycleCoin_ = 0;
      cornucopiaCost_ = 0;
      cardTypeValue_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCardTypeValueCount(); i++) {
        if (!getCardTypeValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isRobot_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, winCoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isBankrupt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, baseCoin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, playTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, createTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, nowTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, cornucopia_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, recycleCoin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, cornucopiaCost_);
      }
      for (int i = 0; i < cardTypeValue_.size(); i++) {
        output.writeMessage(12, cardTypeValue_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isRobot_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, winCoin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isBankrupt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, baseCoin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, playTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, createTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, nowTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, cornucopia_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, recycleCoin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, cornucopiaCost_);
      }
      for (int i = 0; i < cardTypeValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, cardTypeValue_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CoinPlayerMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.class, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardTypeValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        isRobot_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        winCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isBankrupt_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        baseCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        playTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        nowTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        cornucopia_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        recycleCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cornucopiaCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (cardTypeValueBuilder_ == null) {
          cardTypeValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          cardTypeValueBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerMsg_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg build() {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg result = new protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isRobot_ = isRobot_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.winCoin_ = winCoin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isBankrupt_ = isBankrupt_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.baseCoin_ = baseCoin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playTime_ = playTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.nowTime_ = nowTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cornucopia_ = cornucopia_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.recycleCoin_ = recycleCoin_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cornucopiaCost_ = cornucopiaCost_;
        if (cardTypeValueBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            cardTypeValue_ = java.util.Collections.unmodifiableList(cardTypeValue_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.cardTypeValue_ = cardTypeValue_;
        } else {
          result.cardTypeValue_ = cardTypeValueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasIsRobot()) {
          setIsRobot(other.getIsRobot());
        }
        if (other.hasWinCoin()) {
          setWinCoin(other.getWinCoin());
        }
        if (other.hasIsBankrupt()) {
          setIsBankrupt(other.getIsBankrupt());
        }
        if (other.hasBaseCoin()) {
          setBaseCoin(other.getBaseCoin());
        }
        if (other.hasPlayTime()) {
          setPlayTime(other.getPlayTime());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasNowTime()) {
          setNowTime(other.getNowTime());
        }
        if (other.hasCornucopia()) {
          setCornucopia(other.getCornucopia());
        }
        if (other.hasRecycleCoin()) {
          setRecycleCoin(other.getRecycleCoin());
        }
        if (other.hasCornucopiaCost()) {
          setCornucopiaCost(other.getCornucopiaCost());
        }
        if (cardTypeValueBuilder_ == null) {
          if (!other.cardTypeValue_.isEmpty()) {
            if (cardTypeValue_.isEmpty()) {
              cardTypeValue_ = other.cardTypeValue_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureCardTypeValueIsMutable();
              cardTypeValue_.addAll(other.cardTypeValue_);
            }
            onChanged();
          }
        } else {
          if (!other.cardTypeValue_.isEmpty()) {
            if (cardTypeValueBuilder_.isEmpty()) {
              cardTypeValueBuilder_.dispose();
              cardTypeValueBuilder_ = null;
              cardTypeValue_ = other.cardTypeValue_;
              bitField0_ = (bitField0_ & ~0x00000800);
              cardTypeValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardTypeValueFieldBuilder() : null;
            } else {
              cardTypeValueBuilder_.addAllMessages(other.cardTypeValue_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCardTypeValueCount(); i++) {
          if (!getCardTypeValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CoinPlayerMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional bool isRobot = 2;
      private boolean isRobot_ ;
      /**
       * <code>optional bool isRobot = 2;</code>
       */
      public boolean hasIsRobot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isRobot = 2;</code>
       */
      public boolean getIsRobot() {
        return isRobot_;
      }
      /**
       * <code>optional bool isRobot = 2;</code>
       */
      public Builder setIsRobot(boolean value) {
        bitField0_ |= 0x00000002;
        isRobot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isRobot = 2;</code>
       */
      public Builder clearIsRobot() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isRobot_ = false;
        onChanged();
        return this;
      }

      // optional int32 winCoin = 3;
      private int winCoin_ ;
      /**
       * <code>optional int32 winCoin = 3;</code>
       */
      public boolean hasWinCoin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 winCoin = 3;</code>
       */
      public int getWinCoin() {
        return winCoin_;
      }
      /**
       * <code>optional int32 winCoin = 3;</code>
       */
      public Builder setWinCoin(int value) {
        bitField0_ |= 0x00000004;
        winCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCoin = 3;</code>
       */
      public Builder clearWinCoin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        winCoin_ = 0;
        onChanged();
        return this;
      }

      // optional bool isBankrupt = 4;
      private boolean isBankrupt_ ;
      /**
       * <code>optional bool isBankrupt = 4;</code>
       */
      public boolean hasIsBankrupt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isBankrupt = 4;</code>
       */
      public boolean getIsBankrupt() {
        return isBankrupt_;
      }
      /**
       * <code>optional bool isBankrupt = 4;</code>
       */
      public Builder setIsBankrupt(boolean value) {
        bitField0_ |= 0x00000008;
        isBankrupt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isBankrupt = 4;</code>
       */
      public Builder clearIsBankrupt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isBankrupt_ = false;
        onChanged();
        return this;
      }

      // optional int32 baseCoin = 5;
      private int baseCoin_ ;
      /**
       * <code>optional int32 baseCoin = 5;</code>
       */
      public boolean hasBaseCoin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 baseCoin = 5;</code>
       */
      public int getBaseCoin() {
        return baseCoin_;
      }
      /**
       * <code>optional int32 baseCoin = 5;</code>
       */
      public Builder setBaseCoin(int value) {
        bitField0_ |= 0x00000010;
        baseCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseCoin = 5;</code>
       */
      public Builder clearBaseCoin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        baseCoin_ = 0;
        onChanged();
        return this;
      }

      // optional int64 playTime = 6;
      private long playTime_ ;
      /**
       * <code>optional int64 playTime = 6;</code>
       *
       * <pre>
       *金币场时间
       * </pre>
       */
      public boolean hasPlayTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 playTime = 6;</code>
       *
       * <pre>
       *金币场时间
       * </pre>
       */
      public long getPlayTime() {
        return playTime_;
      }
      /**
       * <code>optional int64 playTime = 6;</code>
       *
       * <pre>
       *金币场时间
       * </pre>
       */
      public Builder setPlayTime(long value) {
        bitField0_ |= 0x00000020;
        playTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playTime = 6;</code>
       *
       * <pre>
       *金币场时间
       * </pre>
       */
      public Builder clearPlayTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 createTime = 7;
      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 7;</code>
       *
       * <pre>
       *注册时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       *
       * <pre>
       *注册时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       *
       * <pre>
       *注册时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000040;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       *
       * <pre>
       *注册时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 nowTime = 8;
      private long nowTime_ ;
      /**
       * <code>optional int64 nowTime = 8;</code>
       */
      public boolean hasNowTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 nowTime = 8;</code>
       */
      public long getNowTime() {
        return nowTime_;
      }
      /**
       * <code>optional int64 nowTime = 8;</code>
       */
      public Builder setNowTime(long value) {
        bitField0_ |= 0x00000080;
        nowTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 nowTime = 8;</code>
       */
      public Builder clearNowTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nowTime_ = 0L;
        onChanged();
        return this;
      }

      // optional bool cornucopia = 9;
      private boolean cornucopia_ ;
      /**
       * <code>optional bool cornucopia = 9;</code>
       *
       * <pre>
       *聚宝盆
       * </pre>
       */
      public boolean hasCornucopia() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool cornucopia = 9;</code>
       *
       * <pre>
       *聚宝盆
       * </pre>
       */
      public boolean getCornucopia() {
        return cornucopia_;
      }
      /**
       * <code>optional bool cornucopia = 9;</code>
       *
       * <pre>
       *聚宝盆
       * </pre>
       */
      public Builder setCornucopia(boolean value) {
        bitField0_ |= 0x00000100;
        cornucopia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool cornucopia = 9;</code>
       *
       * <pre>
       *聚宝盆
       * </pre>
       */
      public Builder clearCornucopia() {
        bitField0_ = (bitField0_ & ~0x00000100);
        cornucopia_ = false;
        onChanged();
        return this;
      }

      // optional int32 recycleCoin = 10;
      private int recycleCoin_ ;
      /**
       * <code>optional int32 recycleCoin = 10;</code>
       *
       * <pre>
       *回收的金币数
       * </pre>
       */
      public boolean hasRecycleCoin() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 recycleCoin = 10;</code>
       *
       * <pre>
       *回收的金币数
       * </pre>
       */
      public int getRecycleCoin() {
        return recycleCoin_;
      }
      /**
       * <code>optional int32 recycleCoin = 10;</code>
       *
       * <pre>
       *回收的金币数
       * </pre>
       */
      public Builder setRecycleCoin(int value) {
        bitField0_ |= 0x00000200;
        recycleCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recycleCoin = 10;</code>
       *
       * <pre>
       *回收的金币数
       * </pre>
       */
      public Builder clearRecycleCoin() {
        bitField0_ = (bitField0_ & ~0x00000200);
        recycleCoin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cornucopiaCost = 11;
      private int cornucopiaCost_ ;
      /**
       * <code>optional int32 cornucopiaCost = 11;</code>
       *
       * <pre>
       *参与消耗
       * </pre>
       */
      public boolean hasCornucopiaCost() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 cornucopiaCost = 11;</code>
       *
       * <pre>
       *参与消耗
       * </pre>
       */
      public int getCornucopiaCost() {
        return cornucopiaCost_;
      }
      /**
       * <code>optional int32 cornucopiaCost = 11;</code>
       *
       * <pre>
       *参与消耗
       * </pre>
       */
      public Builder setCornucopiaCost(int value) {
        bitField0_ |= 0x00000400;
        cornucopiaCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cornucopiaCost = 11;</code>
       *
       * <pre>
       *参与消耗
       * </pre>
       */
      public Builder clearCornucopiaCost() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cornucopiaCost_ = 0;
        onChanged();
        return this;
      }

      // repeated .CommonLI cardTypeValue = 12;
      private java.util.List<protobuf.clazz.Common.CommonLI> cardTypeValue_ =
        java.util.Collections.emptyList();
      private void ensureCardTypeValueIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          cardTypeValue_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>(cardTypeValue_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> cardTypeValueBuilder_;

      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI> getCardTypeValueList() {
        if (cardTypeValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardTypeValue_);
        } else {
          return cardTypeValueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public int getCardTypeValueCount() {
        if (cardTypeValueBuilder_ == null) {
          return cardTypeValue_.size();
        } else {
          return cardTypeValueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI getCardTypeValue(int index) {
        if (cardTypeValueBuilder_ == null) {
          return cardTypeValue_.get(index);
        } else {
          return cardTypeValueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder setCardTypeValue(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (cardTypeValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeValueIsMutable();
          cardTypeValue_.set(index, value);
          onChanged();
        } else {
          cardTypeValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder setCardTypeValue(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (cardTypeValueBuilder_ == null) {
          ensureCardTypeValueIsMutable();
          cardTypeValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder addCardTypeValue(protobuf.clazz.Common.CommonLI value) {
        if (cardTypeValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeValueIsMutable();
          cardTypeValue_.add(value);
          onChanged();
        } else {
          cardTypeValueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder addCardTypeValue(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (cardTypeValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardTypeValueIsMutable();
          cardTypeValue_.add(index, value);
          onChanged();
        } else {
          cardTypeValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder addCardTypeValue(
          protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (cardTypeValueBuilder_ == null) {
          ensureCardTypeValueIsMutable();
          cardTypeValue_.add(builderForValue.build());
          onChanged();
        } else {
          cardTypeValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder addCardTypeValue(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (cardTypeValueBuilder_ == null) {
          ensureCardTypeValueIsMutable();
          cardTypeValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardTypeValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder addAllCardTypeValue(
          java.lang.Iterable<? extends protobuf.clazz.Common.CommonLI> values) {
        if (cardTypeValueBuilder_ == null) {
          ensureCardTypeValueIsMutable();
          super.addAll(values, cardTypeValue_);
          onChanged();
        } else {
          cardTypeValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder clearCardTypeValue() {
        if (cardTypeValueBuilder_ == null) {
          cardTypeValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          cardTypeValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public Builder removeCardTypeValue(int index) {
        if (cardTypeValueBuilder_ == null) {
          ensureCardTypeValueIsMutable();
          cardTypeValue_.remove(index);
          onChanged();
        } else {
          cardTypeValueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder getCardTypeValueBuilder(
          int index) {
        return getCardTypeValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public protobuf.clazz.Common.CommonLIOrBuilder getCardTypeValueOrBuilder(
          int index) {
        if (cardTypeValueBuilder_ == null) {
          return cardTypeValue_.get(index);  } else {
          return cardTypeValueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
           getCardTypeValueOrBuilderList() {
        if (cardTypeValueBuilder_ != null) {
          return cardTypeValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardTypeValue_);
        }
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addCardTypeValueBuilder() {
        return getCardTypeValueFieldBuilder().addBuilder(
            protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addCardTypeValueBuilder(
          int index) {
        return getCardTypeValueFieldBuilder().addBuilder(
            index, protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI cardTypeValue = 12;</code>
       *
       * <pre>
       *触发的牌型值
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI.Builder> 
           getCardTypeValueBuilderList() {
        return getCardTypeValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> 
          getCardTypeValueFieldBuilder() {
        if (cardTypeValueBuilder_ == null) {
          cardTypeValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder>(
                  cardTypeValue_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          cardTypeValue_ = null;
        }
        return cardTypeValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:coin.CoinPlayerMsg)
    }

    static {
      defaultInstance = new CoinPlayerMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CoinPlayerMsg)
  }

  public interface S2SCoinStoreStatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 accountId = 1;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional int32 opType = 2;
    /**
     * <code>optional int32 opType = 2;</code>
     */
    boolean hasOpType();
    /**
     * <code>optional int32 opType = 2;</code>
     */
    int getOpType();

    // optional int32 gold = 3;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    int getGold();

    // optional int32 coin = 4;
    /**
     * <code>optional int32 coin = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int32 coin = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    int getCoin();

    // optional int32 uiType = 5;
    /**
     * <code>optional int32 uiType = 5;</code>
     */
    boolean hasUiType();
    /**
     * <code>optional int32 uiType = 5;</code>
     */
    int getUiType();

    // optional int32 subUiType = 6;
    /**
     * <code>optional int32 subUiType = 6;</code>
     */
    boolean hasSubUiType();
    /**
     * <code>optional int32 subUiType = 6;</code>
     */
    int getSubUiType();

    // optional int32 opId = 7;
    /**
     * <code>optional int32 opId = 7;</code>
     *
     * <pre>
     *操作ID
     * </pre>
     */
    boolean hasOpId();
    /**
     * <code>optional int32 opId = 7;</code>
     *
     * <pre>
     *操作ID
     * </pre>
     */
    int getOpId();
  }
  /**
   * Protobuf type {@code coin.S2SCoinStoreStat}
   */
  public static final class S2SCoinStoreStat extends
      com.google.protobuf.GeneratedMessage
      implements S2SCoinStoreStatOrBuilder {
    // Use S2SCoinStoreStat.newBuilder() to construct.
    private S2SCoinStoreStat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private S2SCoinStoreStat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final S2SCoinStoreStat defaultInstance;
    public static S2SCoinStoreStat getDefaultInstance() {
      return defaultInstance;
    }

    public S2SCoinStoreStat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private S2SCoinStoreStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gold_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              coin_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uiType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              subUiType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              opId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinStoreStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinStoreStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.Builder.class);
    }

    public static com.google.protobuf.Parser<S2SCoinStoreStat> PARSER =
        new com.google.protobuf.AbstractParser<S2SCoinStoreStat>() {
      public S2SCoinStoreStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2SCoinStoreStat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<S2SCoinStoreStat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 opType = 2;
    public static final int OPTYPE_FIELD_NUMBER = 2;
    private int opType_;
    /**
     * <code>optional int32 opType = 2;</code>
     */
    public boolean hasOpType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 opType = 2;</code>
     */
    public int getOpType() {
      return opType_;
    }

    // optional int32 gold = 3;
    public static final int GOLD_FIELD_NUMBER = 3;
    private int gold_;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 coin = 4;
    public static final int COIN_FIELD_NUMBER = 4;
    private int coin_;
    /**
     * <code>optional int32 coin = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 coin = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public int getCoin() {
      return coin_;
    }

    // optional int32 uiType = 5;
    public static final int UITYPE_FIELD_NUMBER = 5;
    private int uiType_;
    /**
     * <code>optional int32 uiType = 5;</code>
     */
    public boolean hasUiType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 uiType = 5;</code>
     */
    public int getUiType() {
      return uiType_;
    }

    // optional int32 subUiType = 6;
    public static final int SUBUITYPE_FIELD_NUMBER = 6;
    private int subUiType_;
    /**
     * <code>optional int32 subUiType = 6;</code>
     */
    public boolean hasSubUiType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 subUiType = 6;</code>
     */
    public int getSubUiType() {
      return subUiType_;
    }

    // optional int32 opId = 7;
    public static final int OPID_FIELD_NUMBER = 7;
    private int opId_;
    /**
     * <code>optional int32 opId = 7;</code>
     *
     * <pre>
     *操作ID
     * </pre>
     */
    public boolean hasOpId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 opId = 7;</code>
     *
     * <pre>
     *操作ID
     * </pre>
     */
    public int getOpId() {
      return opId_;
    }

    private void initFields() {
      accountId_ = 0L;
      opType_ = 0;
      gold_ = 0;
      coin_ = 0;
      uiType_ = 0;
      subUiType_ = 0;
      opId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, coin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, uiType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, subUiType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, opId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, coin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, uiType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, subUiType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, opId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.S2SCoinStoreStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinStoreStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinStoreStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.class, protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        opType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        coin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        uiType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        subUiType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        opId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_S2SCoinStoreStat_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat build() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat result = new protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opType_ = opType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uiType_ = uiType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.subUiType_ = subUiType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.opId_ = opId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasOpType()) {
          setOpType(other.getOpType());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasUiType()) {
          setUiType(other.getUiType());
        }
        if (other.hasSubUiType()) {
          setSubUiType(other.getSubUiType());
        }
        if (other.hasOpId()) {
          setOpId(other.getOpId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.S2SCoinStoreStat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 opType = 2;
      private int opType_ ;
      /**
       * <code>optional int32 opType = 2;</code>
       */
      public boolean hasOpType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 opType = 2;</code>
       */
      public int getOpType() {
        return opType_;
      }
      /**
       * <code>optional int32 opType = 2;</code>
       */
      public Builder setOpType(int value) {
        bitField0_ |= 0x00000002;
        opType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opType = 2;</code>
       */
      public Builder clearOpType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gold = 3;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000004;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 coin = 4;
      private int coin_ ;
      /**
       * <code>optional int32 coin = 4;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 coin = 4;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <code>optional int32 coin = 4;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setCoin(int value) {
        bitField0_ |= 0x00000008;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coin = 4;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        coin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 uiType = 5;
      private int uiType_ ;
      /**
       * <code>optional int32 uiType = 5;</code>
       */
      public boolean hasUiType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 uiType = 5;</code>
       */
      public int getUiType() {
        return uiType_;
      }
      /**
       * <code>optional int32 uiType = 5;</code>
       */
      public Builder setUiType(int value) {
        bitField0_ |= 0x00000010;
        uiType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uiType = 5;</code>
       */
      public Builder clearUiType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uiType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 subUiType = 6;
      private int subUiType_ ;
      /**
       * <code>optional int32 subUiType = 6;</code>
       */
      public boolean hasSubUiType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 subUiType = 6;</code>
       */
      public int getSubUiType() {
        return subUiType_;
      }
      /**
       * <code>optional int32 subUiType = 6;</code>
       */
      public Builder setSubUiType(int value) {
        bitField0_ |= 0x00000020;
        subUiType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 subUiType = 6;</code>
       */
      public Builder clearSubUiType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        subUiType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 opId = 7;
      private int opId_ ;
      /**
       * <code>optional int32 opId = 7;</code>
       *
       * <pre>
       *操作ID
       * </pre>
       */
      public boolean hasOpId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 opId = 7;</code>
       *
       * <pre>
       *操作ID
       * </pre>
       */
      public int getOpId() {
        return opId_;
      }
      /**
       * <code>optional int32 opId = 7;</code>
       *
       * <pre>
       *操作ID
       * </pre>
       */
      public Builder setOpId(int value) {
        bitField0_ |= 0x00000040;
        opId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opId = 7;</code>
       *
       * <pre>
       *操作ID
       * </pre>
       */
      public Builder clearOpId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        opId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.S2SCoinStoreStat)
    }

    static {
      defaultInstance = new S2SCoinStoreStat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.S2SCoinStoreStat)
  }

  public interface CornucopiaAwardProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 accountId = 1;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>required int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional int32 gameTypeIndex = 2;
    /**
     * <code>optional int32 gameTypeIndex = 2;</code>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 gameTypeIndex = 2;</code>
     */
    int getGameTypeIndex();

    // optional int32 roundLevel = 3;
    /**
     * <code>optional int32 roundLevel = 3;</code>
     */
    boolean hasRoundLevel();
    /**
     * <code>optional int32 roundLevel = 3;</code>
     */
    int getRoundLevel();

    // repeated int32 exciteIds = 4;
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getExciteIdsList();
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    int getExciteIdsCount();
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    int getExciteIds(int index);

    // optional int32 optimalOutput = 5;
    /**
     * <code>optional int32 optimalOutput = 5;</code>
     *
     * <pre>
     *最优倍数
     * </pre>
     */
    boolean hasOptimalOutput();
    /**
     * <code>optional int32 optimalOutput = 5;</code>
     *
     * <pre>
     *最优倍数
     * </pre>
     */
    int getOptimalOutput();

    // optional string categoryName = 6;
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    boolean hasCategoryName();
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    java.lang.String getCategoryName();
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getCategoryNameBytes();

    // optional int32 roomId = 7;
    /**
     * <code>optional int32 roomId = 7;</code>
     *
     * <pre>
     *房间id
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 roomId = 7;</code>
     *
     * <pre>
     *房间id
     * </pre>
     */
    int getRoomId();

    // optional int64 optimalCategoryId = 8;
    /**
     * <code>optional int64 optimalCategoryId = 8;</code>
     *
     * <pre>
     *最优奖励的牌型Id
     * </pre>
     */
    boolean hasOptimalCategoryId();
    /**
     * <code>optional int64 optimalCategoryId = 8;</code>
     *
     * <pre>
     *最优奖励的牌型Id
     * </pre>
     */
    long getOptimalCategoryId();

    // optional int32 detailId = 9;
    /**
     * <code>optional int32 detailId = 9;</code>
     *
     * <pre>
     *场次id
     * </pre>
     */
    boolean hasDetailId();
    /**
     * <code>optional int32 detailId = 9;</code>
     *
     * <pre>
     *场次id
     * </pre>
     */
    int getDetailId();

    // optional int32 outputType = 10;
    /**
     * <code>optional int32 outputType = 10;</code>
     *
     * <pre>
     *产出数值类型1百分比2实际数值
     * </pre>
     */
    boolean hasOutputType();
    /**
     * <code>optional int32 outputType = 10;</code>
     *
     * <pre>
     *产出数值类型1百分比2实际数值
     * </pre>
     */
    int getOutputType();
  }
  /**
   * Protobuf type {@code coin.CornucopiaAwardProto}
   */
  public static final class CornucopiaAwardProto extends
      com.google.protobuf.GeneratedMessage
      implements CornucopiaAwardProtoOrBuilder {
    // Use CornucopiaAwardProto.newBuilder() to construct.
    private CornucopiaAwardProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CornucopiaAwardProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CornucopiaAwardProto defaultInstance;
    public static CornucopiaAwardProto getDefaultInstance() {
      return defaultInstance;
    }

    public CornucopiaAwardProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CornucopiaAwardProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roundLevel_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                exciteIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              exciteIds_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                exciteIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                exciteIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              optimalOutput_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              categoryName_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              roomId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              optimalCategoryId_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              detailId_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              outputType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          exciteIds_ = java.util.Collections.unmodifiableList(exciteIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaAwardProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaAwardProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.Builder.class);
    }

    public static com.google.protobuf.Parser<CornucopiaAwardProto> PARSER =
        new com.google.protobuf.AbstractParser<CornucopiaAwardProto>() {
      public CornucopiaAwardProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CornucopiaAwardProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CornucopiaAwardProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 gameTypeIndex = 2;
    public static final int GAMETYPEINDEX_FIELD_NUMBER = 2;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 gameTypeIndex = 2;</code>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gameTypeIndex = 2;</code>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // optional int32 roundLevel = 3;
    public static final int ROUNDLEVEL_FIELD_NUMBER = 3;
    private int roundLevel_;
    /**
     * <code>optional int32 roundLevel = 3;</code>
     */
    public boolean hasRoundLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 roundLevel = 3;</code>
     */
    public int getRoundLevel() {
      return roundLevel_;
    }

    // repeated int32 exciteIds = 4;
    public static final int EXCITEIDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> exciteIds_;
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getExciteIdsList() {
      return exciteIds_;
    }
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    public int getExciteIdsCount() {
      return exciteIds_.size();
    }
    /**
     * <code>repeated int32 exciteIds = 4;</code>
     *
     * <pre>
     *达成条件id列表
     * </pre>
     */
    public int getExciteIds(int index) {
      return exciteIds_.get(index);
    }

    // optional int32 optimalOutput = 5;
    public static final int OPTIMALOUTPUT_FIELD_NUMBER = 5;
    private int optimalOutput_;
    /**
     * <code>optional int32 optimalOutput = 5;</code>
     *
     * <pre>
     *最优倍数
     * </pre>
     */
    public boolean hasOptimalOutput() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 optimalOutput = 5;</code>
     *
     * <pre>
     *最优倍数
     * </pre>
     */
    public int getOptimalOutput() {
      return optimalOutput_;
    }

    // optional string categoryName = 6;
    public static final int CATEGORYNAME_FIELD_NUMBER = 6;
    private java.lang.Object categoryName_;
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    public boolean hasCategoryName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    public java.lang.String getCategoryName() {
      java.lang.Object ref = categoryName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          categoryName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string categoryName = 6;</code>
     *
     * <pre>
     *最优奖励的牌型名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCategoryNameBytes() {
      java.lang.Object ref = categoryName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        categoryName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 roomId = 7;
    public static final int ROOMID_FIELD_NUMBER = 7;
    private int roomId_;
    /**
     * <code>optional int32 roomId = 7;</code>
     *
     * <pre>
     *房间id
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 roomId = 7;</code>
     *
     * <pre>
     *房间id
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int64 optimalCategoryId = 8;
    public static final int OPTIMALCATEGORYID_FIELD_NUMBER = 8;
    private long optimalCategoryId_;
    /**
     * <code>optional int64 optimalCategoryId = 8;</code>
     *
     * <pre>
     *最优奖励的牌型Id
     * </pre>
     */
    public boolean hasOptimalCategoryId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 optimalCategoryId = 8;</code>
     *
     * <pre>
     *最优奖励的牌型Id
     * </pre>
     */
    public long getOptimalCategoryId() {
      return optimalCategoryId_;
    }

    // optional int32 detailId = 9;
    public static final int DETAILID_FIELD_NUMBER = 9;
    private int detailId_;
    /**
     * <code>optional int32 detailId = 9;</code>
     *
     * <pre>
     *场次id
     * </pre>
     */
    public boolean hasDetailId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 detailId = 9;</code>
     *
     * <pre>
     *场次id
     * </pre>
     */
    public int getDetailId() {
      return detailId_;
    }

    // optional int32 outputType = 10;
    public static final int OUTPUTTYPE_FIELD_NUMBER = 10;
    private int outputType_;
    /**
     * <code>optional int32 outputType = 10;</code>
     *
     * <pre>
     *产出数值类型1百分比2实际数值
     * </pre>
     */
    public boolean hasOutputType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 outputType = 10;</code>
     *
     * <pre>
     *产出数值类型1百分比2实际数值
     * </pre>
     */
    public int getOutputType() {
      return outputType_;
    }

    private void initFields() {
      accountId_ = 0L;
      gameTypeIndex_ = 0;
      roundLevel_ = 0;
      exciteIds_ = java.util.Collections.emptyList();
      optimalOutput_ = 0;
      categoryName_ = "";
      roomId_ = 0;
      optimalCategoryId_ = 0L;
      detailId_ = 0;
      outputType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAccountId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roundLevel_);
      }
      for (int i = 0; i < exciteIds_.size(); i++) {
        output.writeInt32(4, exciteIds_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, optimalOutput_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getCategoryNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, roomId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(8, optimalCategoryId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, detailId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, outputType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameTypeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roundLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exciteIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(exciteIds_.get(i));
        }
        size += dataSize;
        size += 1 * getExciteIdsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, optimalOutput_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCategoryNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, roomId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, optimalCategoryId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, detailId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, outputType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CornucopiaAwardProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaAwardProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaAwardProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        roundLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        exciteIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        optimalOutput_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        categoryName_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        optimalCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        detailId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        outputType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaAwardProto_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto build() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto result = new protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roundLevel_ = roundLevel_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          exciteIds_ = java.util.Collections.unmodifiableList(exciteIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.exciteIds_ = exciteIds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.optimalOutput_ = optimalOutput_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.categoryName_ = categoryName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.optimalCategoryId_ = optimalCategoryId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.detailId_ = detailId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.outputType_ = outputType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (other.hasRoundLevel()) {
          setRoundLevel(other.getRoundLevel());
        }
        if (!other.exciteIds_.isEmpty()) {
          if (exciteIds_.isEmpty()) {
            exciteIds_ = other.exciteIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExciteIdsIsMutable();
            exciteIds_.addAll(other.exciteIds_);
          }
          onChanged();
        }
        if (other.hasOptimalOutput()) {
          setOptimalOutput(other.getOptimalOutput());
        }
        if (other.hasCategoryName()) {
          bitField0_ |= 0x00000020;
          categoryName_ = other.categoryName_;
          onChanged();
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasOptimalCategoryId()) {
          setOptimalCategoryId(other.getOptimalCategoryId());
        }
        if (other.hasDetailId()) {
          setDetailId(other.getDetailId());
        }
        if (other.hasOutputType()) {
          setOutputType(other.getOutputType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccountId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CornucopiaAwardProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 gameTypeIndex = 2;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 gameTypeIndex = 2;</code>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 gameTypeIndex = 2;</code>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 gameTypeIndex = 2;</code>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000002;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameTypeIndex = 2;</code>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 roundLevel = 3;
      private int roundLevel_ ;
      /**
       * <code>optional int32 roundLevel = 3;</code>
       */
      public boolean hasRoundLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 roundLevel = 3;</code>
       */
      public int getRoundLevel() {
        return roundLevel_;
      }
      /**
       * <code>optional int32 roundLevel = 3;</code>
       */
      public Builder setRoundLevel(int value) {
        bitField0_ |= 0x00000004;
        roundLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roundLevel = 3;</code>
       */
      public Builder clearRoundLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roundLevel_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 exciteIds = 4;
      private java.util.List<java.lang.Integer> exciteIds_ = java.util.Collections.emptyList();
      private void ensureExciteIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          exciteIds_ = new java.util.ArrayList<java.lang.Integer>(exciteIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getExciteIdsList() {
        return java.util.Collections.unmodifiableList(exciteIds_);
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public int getExciteIdsCount() {
        return exciteIds_.size();
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public int getExciteIds(int index) {
        return exciteIds_.get(index);
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public Builder setExciteIds(
          int index, int value) {
        ensureExciteIdsIsMutable();
        exciteIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public Builder addExciteIds(int value) {
        ensureExciteIdsIsMutable();
        exciteIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public Builder addAllExciteIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExciteIdsIsMutable();
        super.addAll(values, exciteIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 exciteIds = 4;</code>
       *
       * <pre>
       *达成条件id列表
       * </pre>
       */
      public Builder clearExciteIds() {
        exciteIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 optimalOutput = 5;
      private int optimalOutput_ ;
      /**
       * <code>optional int32 optimalOutput = 5;</code>
       *
       * <pre>
       *最优倍数
       * </pre>
       */
      public boolean hasOptimalOutput() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 optimalOutput = 5;</code>
       *
       * <pre>
       *最优倍数
       * </pre>
       */
      public int getOptimalOutput() {
        return optimalOutput_;
      }
      /**
       * <code>optional int32 optimalOutput = 5;</code>
       *
       * <pre>
       *最优倍数
       * </pre>
       */
      public Builder setOptimalOutput(int value) {
        bitField0_ |= 0x00000010;
        optimalOutput_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 optimalOutput = 5;</code>
       *
       * <pre>
       *最优倍数
       * </pre>
       */
      public Builder clearOptimalOutput() {
        bitField0_ = (bitField0_ & ~0x00000010);
        optimalOutput_ = 0;
        onChanged();
        return this;
      }

      // optional string categoryName = 6;
      private java.lang.Object categoryName_ = "";
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public boolean hasCategoryName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public java.lang.String getCategoryName() {
        java.lang.Object ref = categoryName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          categoryName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCategoryNameBytes() {
        java.lang.Object ref = categoryName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          categoryName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public Builder setCategoryName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        categoryName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public Builder clearCategoryName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        categoryName_ = getDefaultInstance().getCategoryName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string categoryName = 6;</code>
       *
       * <pre>
       *最优奖励的牌型名称
       * </pre>
       */
      public Builder setCategoryNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        categoryName_ = value;
        onChanged();
        return this;
      }

      // optional int32 roomId = 7;
      private int roomId_ ;
      /**
       * <code>optional int32 roomId = 7;</code>
       *
       * <pre>
       *房间id
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 roomId = 7;</code>
       *
       * <pre>
       *房间id
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 roomId = 7;</code>
       *
       * <pre>
       *房间id
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000040;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomId = 7;</code>
       *
       * <pre>
       *房间id
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 optimalCategoryId = 8;
      private long optimalCategoryId_ ;
      /**
       * <code>optional int64 optimalCategoryId = 8;</code>
       *
       * <pre>
       *最优奖励的牌型Id
       * </pre>
       */
      public boolean hasOptimalCategoryId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 optimalCategoryId = 8;</code>
       *
       * <pre>
       *最优奖励的牌型Id
       * </pre>
       */
      public long getOptimalCategoryId() {
        return optimalCategoryId_;
      }
      /**
       * <code>optional int64 optimalCategoryId = 8;</code>
       *
       * <pre>
       *最优奖励的牌型Id
       * </pre>
       */
      public Builder setOptimalCategoryId(long value) {
        bitField0_ |= 0x00000080;
        optimalCategoryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 optimalCategoryId = 8;</code>
       *
       * <pre>
       *最优奖励的牌型Id
       * </pre>
       */
      public Builder clearOptimalCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        optimalCategoryId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 detailId = 9;
      private int detailId_ ;
      /**
       * <code>optional int32 detailId = 9;</code>
       *
       * <pre>
       *场次id
       * </pre>
       */
      public boolean hasDetailId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 detailId = 9;</code>
       *
       * <pre>
       *场次id
       * </pre>
       */
      public int getDetailId() {
        return detailId_;
      }
      /**
       * <code>optional int32 detailId = 9;</code>
       *
       * <pre>
       *场次id
       * </pre>
       */
      public Builder setDetailId(int value) {
        bitField0_ |= 0x00000100;
        detailId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 detailId = 9;</code>
       *
       * <pre>
       *场次id
       * </pre>
       */
      public Builder clearDetailId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        detailId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 outputType = 10;
      private int outputType_ ;
      /**
       * <code>optional int32 outputType = 10;</code>
       *
       * <pre>
       *产出数值类型1百分比2实际数值
       * </pre>
       */
      public boolean hasOutputType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 outputType = 10;</code>
       *
       * <pre>
       *产出数值类型1百分比2实际数值
       * </pre>
       */
      public int getOutputType() {
        return outputType_;
      }
      /**
       * <code>optional int32 outputType = 10;</code>
       *
       * <pre>
       *产出数值类型1百分比2实际数值
       * </pre>
       */
      public Builder setOutputType(int value) {
        bitField0_ |= 0x00000200;
        outputType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 outputType = 10;</code>
       *
       * <pre>
       *产出数值类型1百分比2实际数值
       * </pre>
       */
      public Builder clearOutputType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        outputType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.CornucopiaAwardProto)
    }

    static {
      defaultInstance = new CornucopiaAwardProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CornucopiaAwardProto)
  }

  public interface CornucopiaScoreDBProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gameTypeIndex = 1;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    int getGameTypeIndex();

    // repeated .coin.PlayerScoreDBEntry entrys = 2;
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> 
        getEntrysList();
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry getEntrys(int index);
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    int getEntrysCount();
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder> 
        getEntrysOrBuilderList();
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder getEntrysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code coin.CornucopiaScoreDBProto}
   *
   * <pre>
   *入库数据
   * </pre>
   */
  public static final class CornucopiaScoreDBProto extends
      com.google.protobuf.GeneratedMessage
      implements CornucopiaScoreDBProtoOrBuilder {
    // Use CornucopiaScoreDBProto.newBuilder() to construct.
    private CornucopiaScoreDBProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CornucopiaScoreDBProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CornucopiaScoreDBProto defaultInstance;
    public static CornucopiaScoreDBProto getDefaultInstance() {
      return defaultInstance;
    }

    public CornucopiaScoreDBProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CornucopiaScoreDBProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                entrys_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry>();
                mutable_bitField0_ |= 0x00000002;
              }
              entrys_.add(input.readMessage(protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          entrys_ = java.util.Collections.unmodifiableList(entrys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaScoreDBProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaScoreDBProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.Builder.class);
    }

    public static com.google.protobuf.Parser<CornucopiaScoreDBProto> PARSER =
        new com.google.protobuf.AbstractParser<CornucopiaScoreDBProto>() {
      public CornucopiaScoreDBProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CornucopiaScoreDBProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CornucopiaScoreDBProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gameTypeIndex = 1;
    public static final int GAMETYPEINDEX_FIELD_NUMBER = 1;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // repeated .coin.PlayerScoreDBEntry entrys = 2;
    public static final int ENTRYS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> entrys_;
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    public java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> getEntrysList() {
      return entrys_;
    }
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder> 
        getEntrysOrBuilderList() {
      return entrys_;
    }
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    public int getEntrysCount() {
      return entrys_.size();
    }
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry getEntrys(int index) {
      return entrys_.get(index);
    }
    /**
     * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
     */
    public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder getEntrysOrBuilder(
        int index) {
      return entrys_.get(index);
    }

    private void initFields() {
      gameTypeIndex_ = 0;
      entrys_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getEntrysCount(); i++) {
        if (!getEntrys(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameTypeIndex_);
      }
      for (int i = 0; i < entrys_.size(); i++) {
        output.writeMessage(2, entrys_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameTypeIndex_);
      }
      for (int i = 0; i < entrys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, entrys_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CornucopiaScoreDBProto}
     *
     * <pre>
     *入库数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaScoreDBProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaScoreDBProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntrysFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (entrysBuilder_ == null) {
          entrys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          entrysBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaScoreDBProto_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto build() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto result = new protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (entrysBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            entrys_ = java.util.Collections.unmodifiableList(entrys_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.entrys_ = entrys_;
        } else {
          result.entrys_ = entrysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto.getDefaultInstance()) return this;
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (entrysBuilder_ == null) {
          if (!other.entrys_.isEmpty()) {
            if (entrys_.isEmpty()) {
              entrys_ = other.entrys_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEntrysIsMutable();
              entrys_.addAll(other.entrys_);
            }
            onChanged();
          }
        } else {
          if (!other.entrys_.isEmpty()) {
            if (entrysBuilder_.isEmpty()) {
              entrysBuilder_.dispose();
              entrysBuilder_ = null;
              entrys_ = other.entrys_;
              bitField0_ = (bitField0_ & ~0x00000002);
              entrysBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntrysFieldBuilder() : null;
            } else {
              entrysBuilder_.addAllMessages(other.entrys_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getEntrysCount(); i++) {
          if (!getEntrys(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CornucopiaScoreDBProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gameTypeIndex = 1;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000001;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated .coin.PlayerScoreDBEntry entrys = 2;
      private java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> entrys_ =
        java.util.Collections.emptyList();
      private void ensureEntrysIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          entrys_ = new java.util.ArrayList<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry>(entrys_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder> entrysBuilder_;

      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> getEntrysList() {
        if (entrysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entrys_);
        } else {
          return entrysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public int getEntrysCount() {
        if (entrysBuilder_ == null) {
          return entrys_.size();
        } else {
          return entrysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry getEntrys(int index) {
        if (entrysBuilder_ == null) {
          return entrys_.get(index);
        } else {
          return entrysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder setEntrys(
          int index, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry value) {
        if (entrysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntrysIsMutable();
          entrys_.set(index, value);
          onChanged();
        } else {
          entrysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder setEntrys(
          int index, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder builderForValue) {
        if (entrysBuilder_ == null) {
          ensureEntrysIsMutable();
          entrys_.set(index, builderForValue.build());
          onChanged();
        } else {
          entrysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder addEntrys(protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry value) {
        if (entrysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntrysIsMutable();
          entrys_.add(value);
          onChanged();
        } else {
          entrysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder addEntrys(
          int index, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry value) {
        if (entrysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntrysIsMutable();
          entrys_.add(index, value);
          onChanged();
        } else {
          entrysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder addEntrys(
          protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder builderForValue) {
        if (entrysBuilder_ == null) {
          ensureEntrysIsMutable();
          entrys_.add(builderForValue.build());
          onChanged();
        } else {
          entrysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder addEntrys(
          int index, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder builderForValue) {
        if (entrysBuilder_ == null) {
          ensureEntrysIsMutable();
          entrys_.add(index, builderForValue.build());
          onChanged();
        } else {
          entrysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder addAllEntrys(
          java.lang.Iterable<? extends protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry> values) {
        if (entrysBuilder_ == null) {
          ensureEntrysIsMutable();
          super.addAll(values, entrys_);
          onChanged();
        } else {
          entrysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder clearEntrys() {
        if (entrysBuilder_ == null) {
          entrys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          entrysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public Builder removeEntrys(int index) {
        if (entrysBuilder_ == null) {
          ensureEntrysIsMutable();
          entrys_.remove(index);
          onChanged();
        } else {
          entrysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder getEntrysBuilder(
          int index) {
        return getEntrysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder getEntrysOrBuilder(
          int index) {
        if (entrysBuilder_ == null) {
          return entrys_.get(index);  } else {
          return entrysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder> 
           getEntrysOrBuilderList() {
        if (entrysBuilder_ != null) {
          return entrysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entrys_);
        }
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder addEntrysBuilder() {
        return getEntrysFieldBuilder().addBuilder(
            protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder addEntrysBuilder(
          int index) {
        return getEntrysFieldBuilder().addBuilder(
            index, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .coin.PlayerScoreDBEntry entrys = 2;</code>
       */
      public java.util.List<protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder> 
           getEntrysBuilderList() {
        return getEntrysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder> 
          getEntrysFieldBuilder() {
        if (entrysBuilder_ == null) {
          entrysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder>(
                  entrys_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          entrys_ = null;
        }
        return entrysBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:coin.CornucopiaScoreDBProto)
    }

    static {
      defaultInstance = new CornucopiaScoreDBProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CornucopiaScoreDBProto)
  }

  public interface PlayerScoreDBEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 accountId = 1;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>required int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional int32 money = 2;
    /**
     * <code>optional int32 money = 2;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int32 money = 2;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    int getMoney();

    // optional int32 date = 3;
    /**
     * <code>optional int32 date = 3;</code>
     *
     * <pre>
     *大概最近的日期
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>optional int32 date = 3;</code>
     *
     * <pre>
     *大概最近的日期
     * </pre>
     */
    int getDate();
  }
  /**
   * Protobuf type {@code coin.PlayerScoreDBEntry}
   */
  public static final class PlayerScoreDBEntry extends
      com.google.protobuf.GeneratedMessage
      implements PlayerScoreDBEntryOrBuilder {
    // Use PlayerScoreDBEntry.newBuilder() to construct.
    private PlayerScoreDBEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerScoreDBEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerScoreDBEntry defaultInstance;
    public static PlayerScoreDBEntry getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerScoreDBEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerScoreDBEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              money_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              date_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_PlayerScoreDBEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_PlayerScoreDBEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.class, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerScoreDBEntry> PARSER =
        new com.google.protobuf.AbstractParser<PlayerScoreDBEntry>() {
      public PlayerScoreDBEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerScoreDBEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerScoreDBEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional int32 money = 2;
    public static final int MONEY_FIELD_NUMBER = 2;
    private int money_;
    /**
     * <code>optional int32 money = 2;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 money = 2;</code>
     *
     * <pre>
     *分数
     * </pre>
     */
    public int getMoney() {
      return money_;
    }

    // optional int32 date = 3;
    public static final int DATE_FIELD_NUMBER = 3;
    private int date_;
    /**
     * <code>optional int32 date = 3;</code>
     *
     * <pre>
     *大概最近的日期
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 date = 3;</code>
     *
     * <pre>
     *大概最近的日期
     * </pre>
     */
    public int getDate() {
      return date_;
    }

    private void initFields() {
      accountId_ = 0L;
      money_ = 0;
      date_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAccountId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, money_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, date_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, money_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, date_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.PlayerScoreDBEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_PlayerScoreDBEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_PlayerScoreDBEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.class, protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        money_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_PlayerScoreDBEntry_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry build() {
        protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry result = new protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.date_ = date_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccountId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.PlayerScoreDBEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 money = 2;
      private int money_ ;
      /**
       * <code>optional int32 money = 2;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 money = 2;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public int getMoney() {
        return money_;
      }
      /**
       * <code>optional int32 money = 2;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public Builder setMoney(int value) {
        bitField0_ |= 0x00000002;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 money = 2;</code>
       *
       * <pre>
       *分数
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000002);
        money_ = 0;
        onChanged();
        return this;
      }

      // optional int32 date = 3;
      private int date_ ;
      /**
       * <code>optional int32 date = 3;</code>
       *
       * <pre>
       *大概最近的日期
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 date = 3;</code>
       *
       * <pre>
       *大概最近的日期
       * </pre>
       */
      public int getDate() {
        return date_;
      }
      /**
       * <code>optional int32 date = 3;</code>
       *
       * <pre>
       *大概最近的日期
       * </pre>
       */
      public Builder setDate(int value) {
        bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 date = 3;</code>
       *
       * <pre>
       *大概最近的日期
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        date_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.PlayerScoreDBEntry)
    }

    static {
      defaultInstance = new PlayerScoreDBEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.PlayerScoreDBEntry)
  }

  public interface CoinPlayerProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 accountId = 1;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>required int64 accountId = 1;</code>
     */
    long getAccountId();

    // optional string nickName = 2;
    /**
     * <code>optional string nickName = 2;</code>
     */
    boolean hasNickName();
    /**
     * <code>optional string nickName = 2;</code>
     */
    java.lang.String getNickName();
    /**
     * <code>optional string nickName = 2;</code>
     */
    com.google.protobuf.ByteString
        getNickNameBytes();

    // optional string headImg = 3;
    /**
     * <code>optional string headImg = 3;</code>
     */
    boolean hasHeadImg();
    /**
     * <code>optional string headImg = 3;</code>
     */
    java.lang.String getHeadImg();
    /**
     * <code>optional string headImg = 3;</code>
     */
    com.google.protobuf.ByteString
        getHeadImgBytes();

    // optional int32 sex = 4;
    /**
     * <code>optional int32 sex = 4;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 4;</code>
     */
    int getSex();

    // optional bool cornucopia = 5;
    /**
     * <code>optional bool cornucopia = 5;</code>
     *
     * <pre>
     *参与聚宝盆？
     * </pre>
     */
    boolean hasCornucopia();
    /**
     * <code>optional bool cornucopia = 5;</code>
     *
     * <pre>
     *参与聚宝盆？
     * </pre>
     */
    boolean getCornucopia();
  }
  /**
   * Protobuf type {@code coin.CoinPlayerProto}
   */
  public static final class CoinPlayerProto extends
      com.google.protobuf.GeneratedMessage
      implements CoinPlayerProtoOrBuilder {
    // Use CoinPlayerProto.newBuilder() to construct.
    private CoinPlayerProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CoinPlayerProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CoinPlayerProto defaultInstance;
    public static CoinPlayerProto getDefaultInstance() {
      return defaultInstance;
    }

    public CoinPlayerProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CoinPlayerProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nickName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImg_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cornucopia_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.class, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder.class);
    }

    public static com.google.protobuf.Parser<CoinPlayerProto> PARSER =
        new com.google.protobuf.AbstractParser<CoinPlayerProto>() {
      public CoinPlayerProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CoinPlayerProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CoinPlayerProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 accountId = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 accountId = 1;</code>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string nickName = 2;
    public static final int NICKNAME_FIELD_NUMBER = 2;
    private java.lang.Object nickName_;
    /**
     * <code>optional string nickName = 2;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string nickName = 2;</code>
     */
    public java.lang.String getNickName() {
      java.lang.Object ref = nickName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nickName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nickName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      java.lang.Object ref = nickName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string headImg = 3;
    public static final int HEADIMG_FIELD_NUMBER = 3;
    private java.lang.Object headImg_;
    /**
     * <code>optional string headImg = 3;</code>
     */
    public boolean hasHeadImg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string headImg = 3;</code>
     */
    public java.lang.String getHeadImg() {
      java.lang.Object ref = headImg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headImg = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHeadImgBytes() {
      java.lang.Object ref = headImg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private int sex_;
    /**
     * <code>optional int32 sex = 4;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 sex = 4;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional bool cornucopia = 5;
    public static final int CORNUCOPIA_FIELD_NUMBER = 5;
    private boolean cornucopia_;
    /**
     * <code>optional bool cornucopia = 5;</code>
     *
     * <pre>
     *参与聚宝盆？
     * </pre>
     */
    public boolean hasCornucopia() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool cornucopia = 5;</code>
     *
     * <pre>
     *参与聚宝盆？
     * </pre>
     */
    public boolean getCornucopia() {
      return cornucopia_;
    }

    private void initFields() {
      accountId_ = 0L;
      nickName_ = "";
      headImg_ = "";
      sex_ = 0;
      cornucopia_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAccountId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNickNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, cornucopia_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNickNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, cornucopia_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CoinPlayerProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.class, protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        nickName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImg_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cornucopia_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinPlayerProto_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto build() {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto result = new protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nickName_ = nickName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImg_ = headImg_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cornucopia_ = cornucopia_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasNickName()) {
          bitField0_ |= 0x00000002;
          nickName_ = other.nickName_;
          onChanged();
        }
        if (other.hasHeadImg()) {
          bitField0_ |= 0x00000004;
          headImg_ = other.headImg_;
          onChanged();
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasCornucopia()) {
          setCornucopia(other.getCornucopia());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccountId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CoinPlayerProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 accountId = 1;
      private long accountId_ ;
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 accountId = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string nickName = 2;
      private java.lang.Object nickName_ = "";
      /**
       * <code>optional string nickName = 2;</code>
       */
      public boolean hasNickName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string nickName = 2;</code>
       */
      public java.lang.String getNickName() {
        java.lang.Object ref = nickName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nickName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nickName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNickNameBytes() {
        java.lang.Object ref = nickName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nickName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nickName = 2;</code>
       */
      public Builder setNickName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nickName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nickName = 2;</code>
       */
      public Builder clearNickName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nickName_ = getDefaultInstance().getNickName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nickName = 2;</code>
       */
      public Builder setNickNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nickName_ = value;
        onChanged();
        return this;
      }

      // optional string headImg = 3;
      private java.lang.Object headImg_ = "";
      /**
       * <code>optional string headImg = 3;</code>
       */
      public boolean hasHeadImg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string headImg = 3;</code>
       */
      public java.lang.String getHeadImg() {
        java.lang.Object ref = headImg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headImg = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHeadImgBytes() {
        java.lang.Object ref = headImg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headImg = 3;</code>
       */
      public Builder setHeadImg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImg = 3;</code>
       */
      public Builder clearHeadImg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImg_ = getDefaultInstance().getHeadImg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImg = 3;</code>
       */
      public Builder setHeadImgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImg_ = value;
        onChanged();
        return this;
      }

      // optional int32 sex = 4;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000008;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional bool cornucopia = 5;
      private boolean cornucopia_ ;
      /**
       * <code>optional bool cornucopia = 5;</code>
       *
       * <pre>
       *参与聚宝盆？
       * </pre>
       */
      public boolean hasCornucopia() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool cornucopia = 5;</code>
       *
       * <pre>
       *参与聚宝盆？
       * </pre>
       */
      public boolean getCornucopia() {
        return cornucopia_;
      }
      /**
       * <code>optional bool cornucopia = 5;</code>
       *
       * <pre>
       *参与聚宝盆？
       * </pre>
       */
      public Builder setCornucopia(boolean value) {
        bitField0_ |= 0x00000010;
        cornucopia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool cornucopia = 5;</code>
       *
       * <pre>
       *参与聚宝盆？
       * </pre>
       */
      public Builder clearCornucopia() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cornucopia_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:coin.CoinPlayerProto)
    }

    static {
      defaultInstance = new CoinPlayerProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CoinPlayerProto)
  }

  public interface CornucopiaRecycleCoinProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gameTypeIndex = 1;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    int getGameTypeIndex();

    // repeated .CommonLI accrual = 2;
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    java.util.List<protobuf.clazz.Common.CommonLI> 
        getAccrualList();
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    protobuf.clazz.Common.CommonLI getAccrual(int index);
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    int getAccrualCount();
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getAccrualOrBuilderList();
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    protobuf.clazz.Common.CommonLIOrBuilder getAccrualOrBuilder(
        int index);

    // repeated .CommonLI expenses = 3;
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    java.util.List<protobuf.clazz.Common.CommonLI> 
        getExpensesList();
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    protobuf.clazz.Common.CommonLI getExpenses(int index);
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    int getExpensesCount();
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getExpensesOrBuilderList();
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    protobuf.clazz.Common.CommonLIOrBuilder getExpensesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code coin.CornucopiaRecycleCoinProto}
   *
   * <pre>
   *聚宝盆回收金币数量
   * </pre>
   */
  public static final class CornucopiaRecycleCoinProto extends
      com.google.protobuf.GeneratedMessage
      implements CornucopiaRecycleCoinProtoOrBuilder {
    // Use CornucopiaRecycleCoinProto.newBuilder() to construct.
    private CornucopiaRecycleCoinProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CornucopiaRecycleCoinProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CornucopiaRecycleCoinProto defaultInstance;
    public static CornucopiaRecycleCoinProto getDefaultInstance() {
      return defaultInstance;
    }

    public CornucopiaRecycleCoinProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CornucopiaRecycleCoinProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                accrual_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>();
                mutable_bitField0_ |= 0x00000002;
              }
              accrual_.add(input.readMessage(protobuf.clazz.Common.CommonLI.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                expenses_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>();
                mutable_bitField0_ |= 0x00000004;
              }
              expenses_.add(input.readMessage(protobuf.clazz.Common.CommonLI.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          accrual_ = java.util.Collections.unmodifiableList(accrual_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          expenses_ = java.util.Collections.unmodifiableList(expenses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaRecycleCoinProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaRecycleCoinProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.Builder.class);
    }

    public static com.google.protobuf.Parser<CornucopiaRecycleCoinProto> PARSER =
        new com.google.protobuf.AbstractParser<CornucopiaRecycleCoinProto>() {
      public CornucopiaRecycleCoinProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CornucopiaRecycleCoinProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CornucopiaRecycleCoinProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gameTypeIndex = 1;
    public static final int GAMETYPEINDEX_FIELD_NUMBER = 1;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // repeated .CommonLI accrual = 2;
    public static final int ACCRUAL_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Common.CommonLI> accrual_;
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    public java.util.List<protobuf.clazz.Common.CommonLI> getAccrualList() {
      return accrual_;
    }
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getAccrualOrBuilderList() {
      return accrual_;
    }
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    public int getAccrualCount() {
      return accrual_.size();
    }
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    public protobuf.clazz.Common.CommonLI getAccrual(int index) {
      return accrual_.get(index);
    }
    /**
     * <code>repeated .CommonLI accrual = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量　利息费用
     * </pre>
     */
    public protobuf.clazz.Common.CommonLIOrBuilder getAccrualOrBuilder(
        int index) {
      return accrual_.get(index);
    }

    // repeated .CommonLI expenses = 3;
    public static final int EXPENSES_FIELD_NUMBER = 3;
    private java.util.List<protobuf.clazz.Common.CommonLI> expenses_;
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    public java.util.List<protobuf.clazz.Common.CommonLI> getExpensesList() {
      return expenses_;
    }
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getExpensesOrBuilderList() {
      return expenses_;
    }
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    public int getExpensesCount() {
      return expenses_.size();
    }
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    public protobuf.clazz.Common.CommonLI getExpenses(int index) {
      return expenses_.get(index);
    }
    /**
     * <code>repeated .CommonLI expenses = 3;</code>
     *
     * <pre>
     *k:accountId,v:数量 报名费
     * </pre>
     */
    public protobuf.clazz.Common.CommonLIOrBuilder getExpensesOrBuilder(
        int index) {
      return expenses_.get(index);
    }

    private void initFields() {
      gameTypeIndex_ = 0;
      accrual_ = java.util.Collections.emptyList();
      expenses_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAccrualCount(); i++) {
        if (!getAccrual(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExpensesCount(); i++) {
        if (!getExpenses(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameTypeIndex_);
      }
      for (int i = 0; i < accrual_.size(); i++) {
        output.writeMessage(2, accrual_.get(i));
      }
      for (int i = 0; i < expenses_.size(); i++) {
        output.writeMessage(3, expenses_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameTypeIndex_);
      }
      for (int i = 0; i < accrual_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, accrual_.get(i));
      }
      for (int i = 0; i < expenses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, expenses_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CornucopiaRecycleCoinProto}
     *
     * <pre>
     *聚宝盆回收金币数量
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaRecycleCoinProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaRecycleCoinProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.class, protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAccrualFieldBuilder();
          getExpensesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (accrualBuilder_ == null) {
          accrual_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          accrualBuilder_.clear();
        }
        if (expensesBuilder_ == null) {
          expenses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          expensesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CornucopiaRecycleCoinProto_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto build() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto result = new protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (accrualBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            accrual_ = java.util.Collections.unmodifiableList(accrual_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.accrual_ = accrual_;
        } else {
          result.accrual_ = accrualBuilder_.build();
        }
        if (expensesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            expenses_ = java.util.Collections.unmodifiableList(expenses_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.expenses_ = expenses_;
        } else {
          result.expenses_ = expensesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto.getDefaultInstance()) return this;
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (accrualBuilder_ == null) {
          if (!other.accrual_.isEmpty()) {
            if (accrual_.isEmpty()) {
              accrual_ = other.accrual_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAccrualIsMutable();
              accrual_.addAll(other.accrual_);
            }
            onChanged();
          }
        } else {
          if (!other.accrual_.isEmpty()) {
            if (accrualBuilder_.isEmpty()) {
              accrualBuilder_.dispose();
              accrualBuilder_ = null;
              accrual_ = other.accrual_;
              bitField0_ = (bitField0_ & ~0x00000002);
              accrualBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccrualFieldBuilder() : null;
            } else {
              accrualBuilder_.addAllMessages(other.accrual_);
            }
          }
        }
        if (expensesBuilder_ == null) {
          if (!other.expenses_.isEmpty()) {
            if (expenses_.isEmpty()) {
              expenses_ = other.expenses_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureExpensesIsMutable();
              expenses_.addAll(other.expenses_);
            }
            onChanged();
          }
        } else {
          if (!other.expenses_.isEmpty()) {
            if (expensesBuilder_.isEmpty()) {
              expensesBuilder_.dispose();
              expensesBuilder_ = null;
              expenses_ = other.expenses_;
              bitField0_ = (bitField0_ & ~0x00000004);
              expensesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpensesFieldBuilder() : null;
            } else {
              expensesBuilder_.addAllMessages(other.expenses_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAccrualCount(); i++) {
          if (!getAccrual(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExpensesCount(); i++) {
          if (!getExpenses(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CornucopiaRecycleCoinProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gameTypeIndex = 1;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000001;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated .CommonLI accrual = 2;
      private java.util.List<protobuf.clazz.Common.CommonLI> accrual_ =
        java.util.Collections.emptyList();
      private void ensureAccrualIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          accrual_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>(accrual_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> accrualBuilder_;

      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI> getAccrualList() {
        if (accrualBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accrual_);
        } else {
          return accrualBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public int getAccrualCount() {
        if (accrualBuilder_ == null) {
          return accrual_.size();
        } else {
          return accrualBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI getAccrual(int index) {
        if (accrualBuilder_ == null) {
          return accrual_.get(index);
        } else {
          return accrualBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder setAccrual(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (accrualBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccrualIsMutable();
          accrual_.set(index, value);
          onChanged();
        } else {
          accrualBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder setAccrual(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (accrualBuilder_ == null) {
          ensureAccrualIsMutable();
          accrual_.set(index, builderForValue.build());
          onChanged();
        } else {
          accrualBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder addAccrual(protobuf.clazz.Common.CommonLI value) {
        if (accrualBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccrualIsMutable();
          accrual_.add(value);
          onChanged();
        } else {
          accrualBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder addAccrual(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (accrualBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccrualIsMutable();
          accrual_.add(index, value);
          onChanged();
        } else {
          accrualBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder addAccrual(
          protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (accrualBuilder_ == null) {
          ensureAccrualIsMutable();
          accrual_.add(builderForValue.build());
          onChanged();
        } else {
          accrualBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder addAccrual(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (accrualBuilder_ == null) {
          ensureAccrualIsMutable();
          accrual_.add(index, builderForValue.build());
          onChanged();
        } else {
          accrualBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder addAllAccrual(
          java.lang.Iterable<? extends protobuf.clazz.Common.CommonLI> values) {
        if (accrualBuilder_ == null) {
          ensureAccrualIsMutable();
          super.addAll(values, accrual_);
          onChanged();
        } else {
          accrualBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder clearAccrual() {
        if (accrualBuilder_ == null) {
          accrual_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          accrualBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public Builder removeAccrual(int index) {
        if (accrualBuilder_ == null) {
          ensureAccrualIsMutable();
          accrual_.remove(index);
          onChanged();
        } else {
          accrualBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder getAccrualBuilder(
          int index) {
        return getAccrualFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public protobuf.clazz.Common.CommonLIOrBuilder getAccrualOrBuilder(
          int index) {
        if (accrualBuilder_ == null) {
          return accrual_.get(index);  } else {
          return accrualBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
           getAccrualOrBuilderList() {
        if (accrualBuilder_ != null) {
          return accrualBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accrual_);
        }
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addAccrualBuilder() {
        return getAccrualFieldBuilder().addBuilder(
            protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addAccrualBuilder(
          int index) {
        return getAccrualFieldBuilder().addBuilder(
            index, protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI accrual = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量　利息费用
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI.Builder> 
           getAccrualBuilderList() {
        return getAccrualFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> 
          getAccrualFieldBuilder() {
        if (accrualBuilder_ == null) {
          accrualBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder>(
                  accrual_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          accrual_ = null;
        }
        return accrualBuilder_;
      }

      // repeated .CommonLI expenses = 3;
      private java.util.List<protobuf.clazz.Common.CommonLI> expenses_ =
        java.util.Collections.emptyList();
      private void ensureExpensesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          expenses_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>(expenses_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> expensesBuilder_;

      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI> getExpensesList() {
        if (expensesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(expenses_);
        } else {
          return expensesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public int getExpensesCount() {
        if (expensesBuilder_ == null) {
          return expenses_.size();
        } else {
          return expensesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI getExpenses(int index) {
        if (expensesBuilder_ == null) {
          return expenses_.get(index);
        } else {
          return expensesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder setExpenses(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (expensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpensesIsMutable();
          expenses_.set(index, value);
          onChanged();
        } else {
          expensesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder setExpenses(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (expensesBuilder_ == null) {
          ensureExpensesIsMutable();
          expenses_.set(index, builderForValue.build());
          onChanged();
        } else {
          expensesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder addExpenses(protobuf.clazz.Common.CommonLI value) {
        if (expensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpensesIsMutable();
          expenses_.add(value);
          onChanged();
        } else {
          expensesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder addExpenses(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (expensesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpensesIsMutable();
          expenses_.add(index, value);
          onChanged();
        } else {
          expensesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder addExpenses(
          protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (expensesBuilder_ == null) {
          ensureExpensesIsMutable();
          expenses_.add(builderForValue.build());
          onChanged();
        } else {
          expensesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder addExpenses(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (expensesBuilder_ == null) {
          ensureExpensesIsMutable();
          expenses_.add(index, builderForValue.build());
          onChanged();
        } else {
          expensesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder addAllExpenses(
          java.lang.Iterable<? extends protobuf.clazz.Common.CommonLI> values) {
        if (expensesBuilder_ == null) {
          ensureExpensesIsMutable();
          super.addAll(values, expenses_);
          onChanged();
        } else {
          expensesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder clearExpenses() {
        if (expensesBuilder_ == null) {
          expenses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          expensesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public Builder removeExpenses(int index) {
        if (expensesBuilder_ == null) {
          ensureExpensesIsMutable();
          expenses_.remove(index);
          onChanged();
        } else {
          expensesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder getExpensesBuilder(
          int index) {
        return getExpensesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public protobuf.clazz.Common.CommonLIOrBuilder getExpensesOrBuilder(
          int index) {
        if (expensesBuilder_ == null) {
          return expenses_.get(index);  } else {
          return expensesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
           getExpensesOrBuilderList() {
        if (expensesBuilder_ != null) {
          return expensesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expenses_);
        }
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addExpensesBuilder() {
        return getExpensesFieldBuilder().addBuilder(
            protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addExpensesBuilder(
          int index) {
        return getExpensesFieldBuilder().addBuilder(
            index, protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI expenses = 3;</code>
       *
       * <pre>
       *k:accountId,v:数量 报名费
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI.Builder> 
           getExpensesBuilderList() {
        return getExpensesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> 
          getExpensesFieldBuilder() {
        if (expensesBuilder_ == null) {
          expensesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder>(
                  expenses_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          expenses_ = null;
        }
        return expensesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:coin.CornucopiaRecycleCoinProto)
    }

    static {
      defaultInstance = new CornucopiaRecycleCoinProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CornucopiaRecycleCoinProto)
  }

  public interface CoinBoxRewardScoreProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gameTypeIndex = 1;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    boolean hasGameTypeIndex();
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    int getGameTypeIndex();

    // repeated .CommonLI originalWinCoin = 2;
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    java.util.List<protobuf.clazz.Common.CommonLI> 
        getOriginalWinCoinList();
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    protobuf.clazz.Common.CommonLI getOriginalWinCoin(int index);
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    int getOriginalWinCoinCount();
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getOriginalWinCoinOrBuilderList();
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    protobuf.clazz.Common.CommonLIOrBuilder getOriginalWinCoinOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code coin.CoinBoxRewardScoreProto}
   *
   * <pre>
   *金币场宝箱
   * </pre>
   */
  public static final class CoinBoxRewardScoreProto extends
      com.google.protobuf.GeneratedMessage
      implements CoinBoxRewardScoreProtoOrBuilder {
    // Use CoinBoxRewardScoreProto.newBuilder() to construct.
    private CoinBoxRewardScoreProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CoinBoxRewardScoreProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CoinBoxRewardScoreProto defaultInstance;
    public static CoinBoxRewardScoreProto getDefaultInstance() {
      return defaultInstance;
    }

    public CoinBoxRewardScoreProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CoinBoxRewardScoreProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameTypeIndex_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                originalWinCoin_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>();
                mutable_bitField0_ |= 0x00000002;
              }
              originalWinCoin_.add(input.readMessage(protobuf.clazz.Common.CommonLI.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          originalWinCoin_ = java.util.Collections.unmodifiableList(originalWinCoin_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinBoxRewardScoreProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinBoxRewardScoreProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.class, protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.Builder.class);
    }

    public static com.google.protobuf.Parser<CoinBoxRewardScoreProto> PARSER =
        new com.google.protobuf.AbstractParser<CoinBoxRewardScoreProto>() {
      public CoinBoxRewardScoreProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CoinBoxRewardScoreProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CoinBoxRewardScoreProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gameTypeIndex = 1;
    public static final int GAMETYPEINDEX_FIELD_NUMBER = 1;
    private int gameTypeIndex_;
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public boolean hasGameTypeIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gameTypeIndex = 1;</code>
     */
    public int getGameTypeIndex() {
      return gameTypeIndex_;
    }

    // repeated .CommonLI originalWinCoin = 2;
    public static final int ORIGINALWINCOIN_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Common.CommonLI> originalWinCoin_;
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    public java.util.List<protobuf.clazz.Common.CommonLI> getOriginalWinCoinList() {
      return originalWinCoin_;
    }
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
        getOriginalWinCoinOrBuilderList() {
      return originalWinCoin_;
    }
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    public int getOriginalWinCoinCount() {
      return originalWinCoin_.size();
    }
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    public protobuf.clazz.Common.CommonLI getOriginalWinCoin(int index) {
      return originalWinCoin_.get(index);
    }
    /**
     * <code>repeated .CommonLI originalWinCoin = 2;</code>
     *
     * <pre>
     *k:accountId,v:数量 宝箱奖分
     * </pre>
     */
    public protobuf.clazz.Common.CommonLIOrBuilder getOriginalWinCoinOrBuilder(
        int index) {
      return originalWinCoin_.get(index);
    }

    private void initFields() {
      gameTypeIndex_ = 0;
      originalWinCoin_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getOriginalWinCoinCount(); i++) {
        if (!getOriginalWinCoin(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gameTypeIndex_);
      }
      for (int i = 0; i < originalWinCoin_.size(); i++) {
        output.writeMessage(2, originalWinCoin_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gameTypeIndex_);
      }
      for (int i = 0; i < originalWinCoin_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, originalWinCoin_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code coin.CoinBoxRewardScoreProto}
     *
     * <pre>
     *金币场宝箱
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinBoxRewardScoreProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinBoxRewardScoreProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.class, protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.Builder.class);
      }

      // Construct using protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginalWinCoinFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameTypeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (originalWinCoinBuilder_ == null) {
          originalWinCoin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          originalWinCoinBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.coin.CoinServerProtocol.internal_static_coin_CoinBoxRewardScoreProto_descriptor;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto getDefaultInstanceForType() {
        return protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.getDefaultInstance();
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto build() {
        protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto buildPartial() {
        protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto result = new protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameTypeIndex_ = gameTypeIndex_;
        if (originalWinCoinBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            originalWinCoin_ = java.util.Collections.unmodifiableList(originalWinCoin_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.originalWinCoin_ = originalWinCoin_;
        } else {
          result.originalWinCoin_ = originalWinCoinBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto) {
          return mergeFrom((protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto other) {
        if (other == protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto.getDefaultInstance()) return this;
        if (other.hasGameTypeIndex()) {
          setGameTypeIndex(other.getGameTypeIndex());
        }
        if (originalWinCoinBuilder_ == null) {
          if (!other.originalWinCoin_.isEmpty()) {
            if (originalWinCoin_.isEmpty()) {
              originalWinCoin_ = other.originalWinCoin_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOriginalWinCoinIsMutable();
              originalWinCoin_.addAll(other.originalWinCoin_);
            }
            onChanged();
          }
        } else {
          if (!other.originalWinCoin_.isEmpty()) {
            if (originalWinCoinBuilder_.isEmpty()) {
              originalWinCoinBuilder_.dispose();
              originalWinCoinBuilder_ = null;
              originalWinCoin_ = other.originalWinCoin_;
              bitField0_ = (bitField0_ & ~0x00000002);
              originalWinCoinBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOriginalWinCoinFieldBuilder() : null;
            } else {
              originalWinCoinBuilder_.addAllMessages(other.originalWinCoin_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOriginalWinCoinCount(); i++) {
          if (!getOriginalWinCoin(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.coin.CoinServerProtocol.CoinBoxRewardScoreProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gameTypeIndex = 1;
      private int gameTypeIndex_ ;
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public boolean hasGameTypeIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public int getGameTypeIndex() {
        return gameTypeIndex_;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder setGameTypeIndex(int value) {
        bitField0_ |= 0x00000001;
        gameTypeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameTypeIndex = 1;</code>
       */
      public Builder clearGameTypeIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTypeIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated .CommonLI originalWinCoin = 2;
      private java.util.List<protobuf.clazz.Common.CommonLI> originalWinCoin_ =
        java.util.Collections.emptyList();
      private void ensureOriginalWinCoinIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          originalWinCoin_ = new java.util.ArrayList<protobuf.clazz.Common.CommonLI>(originalWinCoin_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> originalWinCoinBuilder_;

      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI> getOriginalWinCoinList() {
        if (originalWinCoinBuilder_ == null) {
          return java.util.Collections.unmodifiableList(originalWinCoin_);
        } else {
          return originalWinCoinBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public int getOriginalWinCoinCount() {
        if (originalWinCoinBuilder_ == null) {
          return originalWinCoin_.size();
        } else {
          return originalWinCoinBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI getOriginalWinCoin(int index) {
        if (originalWinCoinBuilder_ == null) {
          return originalWinCoin_.get(index);
        } else {
          return originalWinCoinBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder setOriginalWinCoin(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (originalWinCoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.set(index, value);
          onChanged();
        } else {
          originalWinCoinBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder setOriginalWinCoin(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (originalWinCoinBuilder_ == null) {
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.set(index, builderForValue.build());
          onChanged();
        } else {
          originalWinCoinBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder addOriginalWinCoin(protobuf.clazz.Common.CommonLI value) {
        if (originalWinCoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.add(value);
          onChanged();
        } else {
          originalWinCoinBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder addOriginalWinCoin(
          int index, protobuf.clazz.Common.CommonLI value) {
        if (originalWinCoinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.add(index, value);
          onChanged();
        } else {
          originalWinCoinBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder addOriginalWinCoin(
          protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (originalWinCoinBuilder_ == null) {
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.add(builderForValue.build());
          onChanged();
        } else {
          originalWinCoinBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder addOriginalWinCoin(
          int index, protobuf.clazz.Common.CommonLI.Builder builderForValue) {
        if (originalWinCoinBuilder_ == null) {
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.add(index, builderForValue.build());
          onChanged();
        } else {
          originalWinCoinBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder addAllOriginalWinCoin(
          java.lang.Iterable<? extends protobuf.clazz.Common.CommonLI> values) {
        if (originalWinCoinBuilder_ == null) {
          ensureOriginalWinCoinIsMutable();
          super.addAll(values, originalWinCoin_);
          onChanged();
        } else {
          originalWinCoinBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder clearOriginalWinCoin() {
        if (originalWinCoinBuilder_ == null) {
          originalWinCoin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          originalWinCoinBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public Builder removeOriginalWinCoin(int index) {
        if (originalWinCoinBuilder_ == null) {
          ensureOriginalWinCoinIsMutable();
          originalWinCoin_.remove(index);
          onChanged();
        } else {
          originalWinCoinBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder getOriginalWinCoinBuilder(
          int index) {
        return getOriginalWinCoinFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public protobuf.clazz.Common.CommonLIOrBuilder getOriginalWinCoinOrBuilder(
          int index) {
        if (originalWinCoinBuilder_ == null) {
          return originalWinCoin_.get(index);  } else {
          return originalWinCoinBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Common.CommonLIOrBuilder> 
           getOriginalWinCoinOrBuilderList() {
        if (originalWinCoinBuilder_ != null) {
          return originalWinCoinBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(originalWinCoin_);
        }
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addOriginalWinCoinBuilder() {
        return getOriginalWinCoinFieldBuilder().addBuilder(
            protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public protobuf.clazz.Common.CommonLI.Builder addOriginalWinCoinBuilder(
          int index) {
        return getOriginalWinCoinFieldBuilder().addBuilder(
            index, protobuf.clazz.Common.CommonLI.getDefaultInstance());
      }
      /**
       * <code>repeated .CommonLI originalWinCoin = 2;</code>
       *
       * <pre>
       *k:accountId,v:数量 宝箱奖分
       * </pre>
       */
      public java.util.List<protobuf.clazz.Common.CommonLI.Builder> 
           getOriginalWinCoinBuilderList() {
        return getOriginalWinCoinFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder> 
          getOriginalWinCoinFieldBuilder() {
        if (originalWinCoinBuilder_ == null) {
          originalWinCoinBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Common.CommonLI, protobuf.clazz.Common.CommonLI.Builder, protobuf.clazz.Common.CommonLIOrBuilder>(
                  originalWinCoin_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          originalWinCoin_ = null;
        }
        return originalWinCoinBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:coin.CoinBoxRewardScoreProto)
    }

    static {
      defaultInstance = new CoinBoxRewardScoreProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:coin.CoinBoxRewardScoreProto)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SGameMatchRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SGameMatchRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SCoineRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SCoineRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SMatchSuccessRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SMatchSuccessRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SGameEnterRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SGameEnterRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SGameExitRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SGameExitRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SGameReliefRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SGameReliefRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SCoinMsgStat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SCoinMsgStat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CoinPlayerMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CoinPlayerMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_S2SCoinStoreStat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_S2SCoinStoreStat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CornucopiaAwardProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CornucopiaAwardProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CornucopiaScoreDBProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CornucopiaScoreDBProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_PlayerScoreDBEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_PlayerScoreDBEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CoinPlayerProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CoinPlayerProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CornucopiaRecycleCoinProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CornucopiaRecycleCoinProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_coin_CoinBoxRewardScoreProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_coin_CoinBoxRewardScoreProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035coin/CoinServerProtocol.proto\022\004coin\032\027c" +
      "oin/CoinProtocol.proto\032\022basic/common.pro" +
      "to\"R\n\023S2SGameMatchRequest\022\021\n\taccountId\030\001" +
      " \001(\003\022(\n\010matchReq\030\002 \001(\0132\026.coin.GameMatchR" +
      "equest\"$\n\017S2SCoineRequest\022\021\n\taccountId\030\001" +
      " \001(\003\"v\n\026S2SMatchSuccessRequest\022\'\n\010accoun" +
      "ts\030\001 \003(\0132\025.coin.CoinPlayerProto\022\016\n\006gameI" +
      "d\030\002 \001(\005\022\020\n\010detailId\030\003 \001(\005\022\021\n\tcoinIndex\030\004" +
      " \001(\005\"9\n\023S2SGameEnterRequest\022\021\n\taccountId" +
      "\030\001 \001(\003\022\017\n\007proxyId\030\002 \001(\005\"\'\n\022S2SGameExitRe",
      "quest\022\021\n\taccountId\030\001 \001(\003\"K\n\024S2SGameRelie" +
      "fRequest\022\021\n\taccountId\030\001 \001(\003\022\016\n\006gameId\030\002 " +
      "\001(\005\022\020\n\010detailId\030\003 \001(\005\"g\n\016S2SCoinMsgStat\022" +
      "\016\n\006gameId\030\001 \001(\005\022\020\n\010detailId\030\002 \001(\005\022!\n\004msg" +
      "s\030\004 \003(\0132\023.coin.CoinPlayerMsg\022\020\n\010playTime" +
      "\030\005 \001(\005\"\204\002\n\rCoinPlayerMsg\022\021\n\taccountId\030\001 " +
      "\001(\003\022\017\n\007isRobot\030\002 \001(\010\022\017\n\007winCoin\030\003 \001(\005\022\022\n" +
      "\nisBankrupt\030\004 \001(\010\022\020\n\010baseCoin\030\005 \001(\005\022\020\n\010p" +
      "layTime\030\006 \001(\003\022\022\n\ncreateTime\030\007 \001(\003\022\017\n\007now" +
      "Time\030\010 \001(\003\022\022\n\ncornucopia\030\t \001(\010\022\023\n\013recycl",
      "eCoin\030\n \001(\005\022\026\n\016cornucopiaCost\030\013 \001(\005\022 \n\rc" +
      "ardTypeValue\030\014 \003(\0132\t.CommonLI\"\202\001\n\020S2SCoi" +
      "nStoreStat\022\021\n\taccountId\030\001 \001(\003\022\016\n\006opType\030" +
      "\002 \001(\005\022\014\n\004gold\030\003 \001(\005\022\014\n\004coin\030\004 \001(\005\022\016\n\006uiT" +
      "ype\030\005 \001(\005\022\021\n\tsubUiType\030\006 \001(\005\022\014\n\004opId\030\007 \001" +
      "(\005\"\345\001\n\024CornucopiaAwardProto\022\021\n\taccountId" +
      "\030\001 \002(\003\022\025\n\rgameTypeIndex\030\002 \001(\005\022\022\n\nroundLe" +
      "vel\030\003 \001(\005\022\021\n\texciteIds\030\004 \003(\005\022\025\n\roptimalO" +
      "utput\030\005 \001(\005\022\024\n\014categoryName\030\006 \001(\t\022\016\n\006roo" +
      "mId\030\007 \001(\005\022\031\n\021optimalCategoryId\030\010 \001(\003\022\020\n\010",
      "detailId\030\t \001(\005\022\022\n\noutputType\030\n \001(\005\"Y\n\026Co" +
      "rnucopiaScoreDBProto\022\025\n\rgameTypeIndex\030\001 " +
      "\001(\005\022(\n\006entrys\030\002 \003(\0132\030.coin.PlayerScoreDB" +
      "Entry\"D\n\022PlayerScoreDBEntry\022\021\n\taccountId" +
      "\030\001 \002(\003\022\r\n\005money\030\002 \001(\005\022\014\n\004date\030\003 \001(\005\"h\n\017C" +
      "oinPlayerProto\022\021\n\taccountId\030\001 \002(\003\022\020\n\010nic" +
      "kName\030\002 \001(\t\022\017\n\007headImg\030\003 \001(\t\022\013\n\003sex\030\004 \001(" +
      "\005\022\022\n\ncornucopia\030\005 \001(\010\"l\n\032CornucopiaRecyc" +
      "leCoinProto\022\025\n\rgameTypeIndex\030\001 \001(\005\022\032\n\007ac" +
      "crual\030\002 \003(\0132\t.CommonLI\022\033\n\010expenses\030\003 \003(\013",
      "2\t.CommonLI\"T\n\027CoinBoxRewardScoreProto\022\025" +
      "\n\rgameTypeIndex\030\001 \001(\005\022\"\n\017originalWinCoin" +
      "\030\002 \003(\0132\t.CommonLIB)\n\023protobuf.clazz.coin" +
      "B\022CoinServerProtocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_coin_S2SGameMatchRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_coin_S2SGameMatchRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SGameMatchRequest_descriptor,
              new java.lang.String[] { "AccountId", "MatchReq", });
          internal_static_coin_S2SCoineRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_coin_S2SCoineRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SCoineRequest_descriptor,
              new java.lang.String[] { "AccountId", });
          internal_static_coin_S2SMatchSuccessRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_coin_S2SMatchSuccessRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SMatchSuccessRequest_descriptor,
              new java.lang.String[] { "Accounts", "GameId", "DetailId", "CoinIndex", });
          internal_static_coin_S2SGameEnterRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_coin_S2SGameEnterRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SGameEnterRequest_descriptor,
              new java.lang.String[] { "AccountId", "ProxyId", });
          internal_static_coin_S2SGameExitRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_coin_S2SGameExitRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SGameExitRequest_descriptor,
              new java.lang.String[] { "AccountId", });
          internal_static_coin_S2SGameReliefRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_coin_S2SGameReliefRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SGameReliefRequest_descriptor,
              new java.lang.String[] { "AccountId", "GameId", "DetailId", });
          internal_static_coin_S2SCoinMsgStat_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_coin_S2SCoinMsgStat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SCoinMsgStat_descriptor,
              new java.lang.String[] { "GameId", "DetailId", "Msgs", "PlayTime", });
          internal_static_coin_CoinPlayerMsg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_coin_CoinPlayerMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CoinPlayerMsg_descriptor,
              new java.lang.String[] { "AccountId", "IsRobot", "WinCoin", "IsBankrupt", "BaseCoin", "PlayTime", "CreateTime", "NowTime", "Cornucopia", "RecycleCoin", "CornucopiaCost", "CardTypeValue", });
          internal_static_coin_S2SCoinStoreStat_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_coin_S2SCoinStoreStat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_S2SCoinStoreStat_descriptor,
              new java.lang.String[] { "AccountId", "OpType", "Gold", "Coin", "UiType", "SubUiType", "OpId", });
          internal_static_coin_CornucopiaAwardProto_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_coin_CornucopiaAwardProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CornucopiaAwardProto_descriptor,
              new java.lang.String[] { "AccountId", "GameTypeIndex", "RoundLevel", "ExciteIds", "OptimalOutput", "CategoryName", "RoomId", "OptimalCategoryId", "DetailId", "OutputType", });
          internal_static_coin_CornucopiaScoreDBProto_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_coin_CornucopiaScoreDBProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CornucopiaScoreDBProto_descriptor,
              new java.lang.String[] { "GameTypeIndex", "Entrys", });
          internal_static_coin_PlayerScoreDBEntry_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_coin_PlayerScoreDBEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_PlayerScoreDBEntry_descriptor,
              new java.lang.String[] { "AccountId", "Money", "Date", });
          internal_static_coin_CoinPlayerProto_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_coin_CoinPlayerProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CoinPlayerProto_descriptor,
              new java.lang.String[] { "AccountId", "NickName", "HeadImg", "Sex", "Cornucopia", });
          internal_static_coin_CornucopiaRecycleCoinProto_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_coin_CornucopiaRecycleCoinProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CornucopiaRecycleCoinProto_descriptor,
              new java.lang.String[] { "GameTypeIndex", "Accrual", "Expenses", });
          internal_static_coin_CoinBoxRewardScoreProto_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_coin_CoinBoxRewardScoreProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_coin_CoinBoxRewardScoreProto_descriptor,
              new java.lang.String[] { "GameTypeIndex", "OriginalWinCoin", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.coin.CoinProtocol.getDescriptor(),
          protobuf.clazz.Common.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
