// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btz/BtzProto.proto

package protobuf.clazz.btz;

public final class BTZRsp {
  private BTZRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomPlayerResponseBTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 account_id = 1;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    long getAccountId();

    // optional string user_name = 2;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string head_img_url = 3;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImgUrl();
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgUrlBytes();

    // optional int32 seat_index = 4;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    int getSeatIndex();

    // optional string ip = 5;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 online = 6;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    int getOnline();

    // optional int32 sex = 7;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 7;</code>
     */
    int getSex();

    // optional float score = 8;
    /**
     * <code>optional float score = 8;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 8;</code>
     */
    float getScore();

    // optional int32 ready = 9;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    int getReady();

    // optional string ip_addr = 10;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    boolean hasIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    java.lang.String getIpAddr();
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    // optional .LocationInfor locationInfor = 11;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    boolean hasLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInfor getLocationInfor();
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder();

    // optional bool is_trustee = 12;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    boolean getIsTrustee();

    // optional int64 money = 13;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    long getMoney();

    // optional int64 gold = 14;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    long getGold();

    // optional int32 you = 15;
    /**
     * <code>optional int32 you = 15;</code>
     *
     * <pre>
     * 游数
     * </pre>
     */
    boolean hasYou();
    /**
     * <code>optional int32 you = 15;</code>
     *
     * <pre>
     * 游数
     * </pre>
     */
    int getYou();
  }
  /**
   * Protobuf type {@code pdk.RoomPlayerResponseBTZ}
   *
   * <pre>
   *房间的玩家
   * </pre>
   */
  public static final class RoomPlayerResponseBTZ extends
      com.google.protobuf.GeneratedMessage
      implements RoomPlayerResponseBTZOrBuilder {
    // Use RoomPlayerResponseBTZ.newBuilder() to construct.
    private RoomPlayerResponseBTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomPlayerResponseBTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomPlayerResponseBTZ defaultInstance;
    public static RoomPlayerResponseBTZ getDefaultInstance() {
      return defaultInstance;
    }

    public RoomPlayerResponseBTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomPlayerResponseBTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              headImgUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ip_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              online_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sex_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              score_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ready_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ipAddr_ = input.readBytes();
              break;
            }
            case 90: {
              protobuf.clazz.Protocol.LocationInfor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = locationInfor_.toBuilder();
              }
              locationInfor_ = input.readMessage(protobuf.clazz.Protocol.LocationInfor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(locationInfor_);
                locationInfor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isTrustee_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              money_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              gold_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              you_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_RoomPlayerResponseBTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_RoomPlayerResponseBTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.class, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomPlayerResponseBTZ> PARSER =
        new com.google.protobuf.AbstractParser<RoomPlayerResponseBTZ>() {
      public RoomPlayerResponseBTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomPlayerResponseBTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomPlayerResponseBTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private long accountId_;
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 account_id = 1;</code>
     *
     * <pre>
     *账号id
     * </pre>
     */
    public long getAccountId() {
      return accountId_;
    }

    // optional string user_name = 2;
    public static final int USER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 2;</code>
     *
     * <pre>
     *角色名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head_img_url = 3;
    public static final int HEAD_IMG_URL_FIELD_NUMBER = 3;
    private java.lang.Object headImgUrl_;
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImgUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImgUrl() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_img_url = 3;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgUrlBytes() {
      java.lang.Object ref = headImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_index = 4;
    public static final int SEAT_INDEX_FIELD_NUMBER = 4;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seat_index = 4;</code>
     *
     * <pre>
     *玩家位置索引
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional string ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 5;</code>
     *
     * <pre>
     *玩家IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 online = 6;
    public static final int ONLINE_FIELD_NUMBER = 6;
    private int online_;
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 online = 6;</code>
     *
     * <pre>
     *1在线0断线
     * </pre>
     */
    public int getOnline() {
      return online_;
    }

    // optional int32 sex = 7;
    public static final int SEX_FIELD_NUMBER = 7;
    private int sex_;
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 sex = 7;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional float score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private float score_;
    /**
     * <code>optional float score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float score = 8;</code>
     */
    public float getScore() {
      return score_;
    }

    // optional int32 ready = 9;
    public static final int READY_FIELD_NUMBER = 9;
    private int ready_;
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 ready = 9;</code>
     *
     * <pre>
     *0没准备,1准备
     * </pre>
     */
    public int getReady() {
      return ready_;
    }

    // optional string ip_addr = 10;
    public static final int IP_ADDR_FIELD_NUMBER = 10;
    private java.lang.Object ipAddr_;
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip_addr = 10;</code>
     *
     * <pre>
     *物理地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .LocationInfor locationInfor = 11;
    public static final int LOCATIONINFOR_FIELD_NUMBER = 11;
    private protobuf.clazz.Protocol.LocationInfor locationInfor_;
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public boolean hasLocationInfor() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
      return locationInfor_;
    }
    /**
     * <code>optional .LocationInfor locationInfor = 11;</code>
     */
    public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
      return locationInfor_;
    }

    // optional bool is_trustee = 12;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 12;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_trustee = 12;</code>
     *
     * <pre>
     *true托管 false 取消
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    // optional int64 money = 13;
    public static final int MONEY_FIELD_NUMBER = 13;
    private long money_;
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 money = 13;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    // optional int64 gold = 14;
    public static final int GOLD_FIELD_NUMBER = 14;
    private long gold_;
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 gold = 14;</code>
     *
     * <pre>
     *闲逸豆
     * </pre>
     */
    public long getGold() {
      return gold_;
    }

    // optional int32 you = 15;
    public static final int YOU_FIELD_NUMBER = 15;
    private int you_;
    /**
     * <code>optional int32 you = 15;</code>
     *
     * <pre>
     * 游数
     * </pre>
     */
    public boolean hasYou() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 you = 15;</code>
     *
     * <pre>
     * 游数
     * </pre>
     */
    public int getYou() {
      return you_;
    }

    private void initFields() {
      accountId_ = 0L;
      userName_ = "";
      headImgUrl_ = "";
      seatIndex_ = 0;
      ip_ = "";
      online_ = 0;
      sex_ = 0;
      score_ = 0F;
      ready_ = 0;
      ipAddr_ = "";
      locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      isTrustee_ = false;
      money_ = 0L;
      gold_ = 0L;
      you_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, gold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, you_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHeadImgUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, online_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, sex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, score_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, ready_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, locationInfor_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isTrustee_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, money_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, gold_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, you_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.RoomPlayerResponseBTZ}
     *
     * <pre>
     *房间的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_RoomPlayerResponseBTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_RoomPlayerResponseBTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.class, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationInforFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ready_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        gold_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        you_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_RoomPlayerResponseBTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ build() {
        protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ result = new protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headImgUrl_ = headImgUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ready_ = ready_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (locationInforBuilder_ == null) {
          result.locationInfor_ = locationInfor_;
        } else {
          result.locationInfor_ = locationInforBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isTrustee_ = isTrustee_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.you_ = you_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000002;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasHeadImgUrl()) {
          bitField0_ |= 0x00000004;
          headImgUrl_ = other.headImgUrl_;
          onChanged();
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000200;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasLocationInfor()) {
          mergeLocationInfor(other.getLocationInfor());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasYou()) {
          setYou(other.getYou());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 account_id = 1;
      private long accountId_ ;
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public long getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder setAccountId(long value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 account_id = 1;</code>
       *
       * <pre>
       *账号id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0L;
        onChanged();
        return this;
      }

      // optional string user_name = 2;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 2;</code>
       *
       * <pre>
       *角色名
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string head_img_url = 3;
      private java.lang.Object headImgUrl_ = "";
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImgUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImgUrl() {
        java.lang.Object ref = headImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgUrlBytes() {
        java.lang.Object ref = headImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImgUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_img_url = 3;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headImgUrl_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 4;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000008;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 4;</code>
       *
       * <pre>
       *玩家位置索引
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 5;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 5;</code>
       *
       * <pre>
       *玩家IP
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 online = 6;
      private int online_ ;
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public int getOnline() {
        return online_;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder setOnline(int value) {
        bitField0_ |= 0x00000020;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 online = 6;</code>
       *
       * <pre>
       *1在线0断线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000020);
        online_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 7;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000040;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 7;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional float score = 8;
      private float score_ ;
      /**
       * <code>optional float score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ready = 9;
      private int ready_ ;
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder setReady(int value) {
        bitField0_ |= 0x00000100;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ready = 9;</code>
       *
       * <pre>
       *0没准备,1准备
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ready_ = 0;
        onChanged();
        return this;
      }

      // optional string ip_addr = 10;
      private java.lang.Object ipAddr_ = "";
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ipAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip_addr = 10;</code>
       *
       * <pre>
       *物理地址
       * </pre>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      // optional .LocationInfor locationInfor = 11;
      private protobuf.clazz.Protocol.LocationInfor locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> locationInforBuilder_;
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public boolean hasLocationInfor() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor getLocationInfor() {
        if (locationInforBuilder_ == null) {
          return locationInfor_;
        } else {
          return locationInforBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          locationInfor_ = value;
          onChanged();
        } else {
          locationInforBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder setLocationInfor(
          protobuf.clazz.Protocol.LocationInfor.Builder builderForValue) {
        if (locationInforBuilder_ == null) {
          locationInfor_ = builderForValue.build();
          onChanged();
        } else {
          locationInforBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder mergeLocationInfor(protobuf.clazz.Protocol.LocationInfor value) {
        if (locationInforBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              locationInfor_ != protobuf.clazz.Protocol.LocationInfor.getDefaultInstance()) {
            locationInfor_ =
              protobuf.clazz.Protocol.LocationInfor.newBuilder(locationInfor_).mergeFrom(value).buildPartial();
          } else {
            locationInfor_ = value;
          }
          onChanged();
        } else {
          locationInforBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public Builder clearLocationInfor() {
        if (locationInforBuilder_ == null) {
          locationInfor_ = protobuf.clazz.Protocol.LocationInfor.getDefaultInstance();
          onChanged();
        } else {
          locationInforBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInfor.Builder getLocationInforBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLocationInforFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      public protobuf.clazz.Protocol.LocationInforOrBuilder getLocationInforOrBuilder() {
        if (locationInforBuilder_ != null) {
          return locationInforBuilder_.getMessageOrBuilder();
        } else {
          return locationInfor_;
        }
      }
      /**
       * <code>optional .LocationInfor locationInfor = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder> 
          getLocationInforFieldBuilder() {
        if (locationInforBuilder_ == null) {
          locationInforBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.LocationInfor, protobuf.clazz.Protocol.LocationInfor.Builder, protobuf.clazz.Protocol.LocationInforOrBuilder>(
                  locationInfor_,
                  getParentForChildren(),
                  isClean());
          locationInfor_ = null;
        }
        return locationInforBuilder_;
      }

      // optional bool is_trustee = 12;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000800;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 12;</code>
       *
       * <pre>
       *true托管 false 取消
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // optional int64 money = 13;
      private long money_ ;
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00001000;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 13;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00001000);
        money_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 gold = 14;
      private long gold_ ;
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public long getGold() {
        return gold_;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder setGold(long value) {
        bitField0_ |= 0x00002000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 gold = 14;</code>
       *
       * <pre>
       *闲逸豆
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gold_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 you = 15;
      private int you_ ;
      /**
       * <code>optional int32 you = 15;</code>
       *
       * <pre>
       * 游数
       * </pre>
       */
      public boolean hasYou() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 you = 15;</code>
       *
       * <pre>
       * 游数
       * </pre>
       */
      public int getYou() {
        return you_;
      }
      /**
       * <code>optional int32 you = 15;</code>
       *
       * <pre>
       * 游数
       * </pre>
       */
      public Builder setYou(int value) {
        bitField0_ |= 0x00004000;
        you_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 you = 15;</code>
       *
       * <pre>
       * 游数
       * </pre>
       */
      public Builder clearYou() {
        bitField0_ = (bitField0_ & ~0x00004000);
        you_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.RoomPlayerResponseBTZ)
    }

    static {
      defaultInstance = new RoomPlayerResponseBTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.RoomPlayerResponseBTZ)
  }

  public interface PukeGameEndBTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 win_counts = 9;
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinCountsList();
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    int getWinCountsCount();
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    int getWinCounts(int index);

    // repeated int32 lose_counts = 10;
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    java.util.List<java.lang.Integer> getLoseCountsList();
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    int getLoseCountsCount();
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    int getLoseCounts(int index);

    // repeated int32 score_max = 11;
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getScoreMaxList();
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    int getScoreMaxCount();
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    int getScoreMax(int index);

    // repeated float score = 12;
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    java.util.List<java.lang.Float> getScoreList();
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    int getScoreCount();
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    float getScore(int index);
  }
  /**
   * Protobuf type {@code pdk.PukeGameEndBTZ}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class PukeGameEndBTZ extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndBTZOrBuilder {
    // Use PukeGameEndBTZ.newBuilder() to construct.
    private PukeGameEndBTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndBTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndBTZ defaultInstance;
    public static PukeGameEndBTZ getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndBTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndBTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                winCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              winCounts_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                winCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                winCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                loseCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              loseCounts_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                loseCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                loseCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                scoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              scoreMax_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                scoreMax_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                scoreMax_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 101: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                score_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              score_.add(input.readFloat());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                score_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                score_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          winCounts_ = java.util.Collections.unmodifiableList(winCounts_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          loseCounts_ = java.util.Collections.unmodifiableList(loseCounts_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          scoreMax_ = java.util.Collections.unmodifiableList(scoreMax_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          score_ = java.util.Collections.unmodifiableList(score_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_PukeGameEndBTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_PukeGameEndBTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.class, protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndBTZ> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndBTZ>() {
      public PukeGameEndBTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndBTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndBTZ> getParserForType() {
      return PARSER;
    }

    // repeated int32 win_counts = 9;
    public static final int WIN_COUNTS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> winCounts_;
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinCountsList() {
      return winCounts_;
    }
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    public int getWinCountsCount() {
      return winCounts_.size();
    }
    /**
     * <code>repeated int32 win_counts = 9;</code>
     *
     * <pre>
     * 赢局数
     * </pre>
     */
    public int getWinCounts(int index) {
      return winCounts_.get(index);
    }

    // repeated int32 lose_counts = 10;
    public static final int LOSE_COUNTS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> loseCounts_;
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLoseCountsList() {
      return loseCounts_;
    }
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    public int getLoseCountsCount() {
      return loseCounts_.size();
    }
    /**
     * <code>repeated int32 lose_counts = 10;</code>
     *
     * <pre>
     *输局数
     * </pre>
     */
    public int getLoseCounts(int index) {
      return loseCounts_.get(index);
    }

    // repeated int32 score_max = 11;
    public static final int SCORE_MAX_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> scoreMax_;
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScoreMaxList() {
      return scoreMax_;
    }
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    public int getScoreMaxCount() {
      return scoreMax_.size();
    }
    /**
     * <code>repeated int32 score_max = 11;</code>
     *
     * <pre>
     * 赢的最大分数
     * </pre>
     */
    public int getScoreMax(int index) {
      return scoreMax_.get(index);
    }

    // repeated float score = 12;
    public static final int SCORE_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Float> score_;
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getScoreList() {
      return score_;
    }
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    public int getScoreCount() {
      return score_.size();
    }
    /**
     * <code>repeated float score = 12;</code>
     *
     * <pre>
     *当期分数
     * </pre>
     */
    public float getScore(int index) {
      return score_.get(index);
    }

    private void initFields() {
      winCounts_ = java.util.Collections.emptyList();
      loseCounts_ = java.util.Collections.emptyList();
      scoreMax_ = java.util.Collections.emptyList();
      score_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < winCounts_.size(); i++) {
        output.writeInt32(9, winCounts_.get(i));
      }
      for (int i = 0; i < loseCounts_.size(); i++) {
        output.writeInt32(10, loseCounts_.get(i));
      }
      for (int i = 0; i < scoreMax_.size(); i++) {
        output.writeInt32(11, scoreMax_.get(i));
      }
      for (int i = 0; i < score_.size(); i++) {
        output.writeFloat(12, score_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < winCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getWinCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < loseCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(loseCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getLoseCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scoreMax_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scoreMax_.get(i));
        }
        size += dataSize;
        size += 1 * getScoreMaxList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getScoreList().size();
        size += dataSize;
        size += 1 * getScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.PukeGameEndBTZ}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.PukeGameEndBTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_PukeGameEndBTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_PukeGameEndBTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.class, protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        winCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        loseCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        scoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_PukeGameEndBTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ build() {
        protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ result = new protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          winCounts_ = java.util.Collections.unmodifiableList(winCounts_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.winCounts_ = winCounts_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          loseCounts_ = java.util.Collections.unmodifiableList(loseCounts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.loseCounts_ = loseCounts_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          scoreMax_ = java.util.Collections.unmodifiableList(scoreMax_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.scoreMax_ = scoreMax_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          score_ = java.util.Collections.unmodifiableList(score_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.score_ = score_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ.getDefaultInstance()) return this;
        if (!other.winCounts_.isEmpty()) {
          if (winCounts_.isEmpty()) {
            winCounts_ = other.winCounts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWinCountsIsMutable();
            winCounts_.addAll(other.winCounts_);
          }
          onChanged();
        }
        if (!other.loseCounts_.isEmpty()) {
          if (loseCounts_.isEmpty()) {
            loseCounts_ = other.loseCounts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLoseCountsIsMutable();
            loseCounts_.addAll(other.loseCounts_);
          }
          onChanged();
        }
        if (!other.scoreMax_.isEmpty()) {
          if (scoreMax_.isEmpty()) {
            scoreMax_ = other.scoreMax_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureScoreMaxIsMutable();
            scoreMax_.addAll(other.scoreMax_);
          }
          onChanged();
        }
        if (!other.score_.isEmpty()) {
          if (score_.isEmpty()) {
            score_ = other.score_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureScoreIsMutable();
            score_.addAll(other.score_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.PukeGameEndBTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 win_counts = 9;
      private java.util.List<java.lang.Integer> winCounts_ = java.util.Collections.emptyList();
      private void ensureWinCountsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          winCounts_ = new java.util.ArrayList<java.lang.Integer>(winCounts_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinCountsList() {
        return java.util.Collections.unmodifiableList(winCounts_);
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public int getWinCountsCount() {
        return winCounts_.size();
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public int getWinCounts(int index) {
        return winCounts_.get(index);
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public Builder setWinCounts(
          int index, int value) {
        ensureWinCountsIsMutable();
        winCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public Builder addWinCounts(int value) {
        ensureWinCountsIsMutable();
        winCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public Builder addAllWinCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinCountsIsMutable();
        super.addAll(values, winCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_counts = 9;</code>
       *
       * <pre>
       * 赢局数
       * </pre>
       */
      public Builder clearWinCounts() {
        winCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 lose_counts = 10;
      private java.util.List<java.lang.Integer> loseCounts_ = java.util.Collections.emptyList();
      private void ensureLoseCountsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          loseCounts_ = new java.util.ArrayList<java.lang.Integer>(loseCounts_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLoseCountsList() {
        return java.util.Collections.unmodifiableList(loseCounts_);
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public int getLoseCountsCount() {
        return loseCounts_.size();
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public int getLoseCounts(int index) {
        return loseCounts_.get(index);
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public Builder setLoseCounts(
          int index, int value) {
        ensureLoseCountsIsMutable();
        loseCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public Builder addLoseCounts(int value) {
        ensureLoseCountsIsMutable();
        loseCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public Builder addAllLoseCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLoseCountsIsMutable();
        super.addAll(values, loseCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lose_counts = 10;</code>
       *
       * <pre>
       *输局数
       * </pre>
       */
      public Builder clearLoseCounts() {
        loseCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 score_max = 11;
      private java.util.List<java.lang.Integer> scoreMax_ = java.util.Collections.emptyList();
      private void ensureScoreMaxIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          scoreMax_ = new java.util.ArrayList<java.lang.Integer>(scoreMax_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScoreMaxList() {
        return java.util.Collections.unmodifiableList(scoreMax_);
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public int getScoreMaxCount() {
        return scoreMax_.size();
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public int getScoreMax(int index) {
        return scoreMax_.get(index);
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public Builder setScoreMax(
          int index, int value) {
        ensureScoreMaxIsMutable();
        scoreMax_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public Builder addScoreMax(int value) {
        ensureScoreMaxIsMutable();
        scoreMax_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public Builder addAllScoreMax(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScoreMaxIsMutable();
        super.addAll(values, scoreMax_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 score_max = 11;</code>
       *
       * <pre>
       * 赢的最大分数
       * </pre>
       */
      public Builder clearScoreMax() {
        scoreMax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated float score = 12;
      private java.util.List<java.lang.Float> score_ = java.util.Collections.emptyList();
      private void ensureScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          score_ = new java.util.ArrayList<java.lang.Float>(score_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getScoreList() {
        return java.util.Collections.unmodifiableList(score_);
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public int getScoreCount() {
        return score_.size();
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public float getScore(int index) {
        return score_.get(index);
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public Builder setScore(
          int index, float value) {
        ensureScoreIsMutable();
        score_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public Builder addScore(float value) {
        ensureScoreIsMutable();
        score_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public Builder addAllScore(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureScoreIsMutable();
        super.addAll(values, score_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float score = 12;</code>
       *
       * <pre>
       *当期分数
       * </pre>
       */
      public Builder clearScore() {
        score_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.PukeGameEndBTZ)
    }

    static {
      defaultInstance = new PukeGameEndBTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.PukeGameEndBTZ)
  }

  public interface TableResponse_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cell_score = 1;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *单元积分
     * </pre>
     */
    boolean hasCellScore();
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *单元积分
     * </pre>
     */
    int getCellScore();

    // optional int32 banker_player = 2;
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家用户
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家用户
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 3;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前用户
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前用户
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 scene_info = 4;
    /**
     * <code>optional int32 scene_info = 4;</code>
     */
    boolean hasSceneInfo();
    /**
     * <code>optional int32 scene_info = 4;</code>
     */
    int getSceneInfo();

    // repeated int32 add_jetter = 5;
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    java.util.List<java.lang.Integer> getAddJetterList();
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    int getAddJetterCount();
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    int getAddJetter(int index);

    // repeated bool trustee = 6;
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    java.util.List<java.lang.Boolean> getTrusteeList();
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    int getTrusteeCount();
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    boolean getTrustee(int index);

    // repeated int32 winner_order = 7;
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    java.util.List<java.lang.Integer> getWinnerOrderList();
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    int getWinnerOrderCount();
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    int getWinnerOrder(int index);

    // repeated int32 card_count = 8;
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 9;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated bool open_card = 10;
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    java.util.List<java.lang.Boolean> getOpenCardList();
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    int getOpenCardCount();
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    boolean getOpenCard(int index);

    // optional int32 end_score = 12;
    /**
     * <code>optional int32 end_score = 12;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    boolean hasEndScore();
    /**
     * <code>optional int32 end_score = 12;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    int getEndScore();

    // repeated int32 call_banker_info = 13;
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallBankerInfoList();
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    int getCallBankerInfoCount();
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    int getCallBankerInfo(int index);

    // optional bool player_status = 14;
    /**
     * <code>optional bool player_status = 14;</code>
     *
     * <pre>
     * 是否在游戏
     * </pre>
     */
    boolean hasPlayerStatus();
    /**
     * <code>optional bool player_status = 14;</code>
     *
     * <pre>
     * 是否在游戏
     * </pre>
     */
    boolean getPlayerStatus();

    // repeated int32 card_type = 15;
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    int getCardType(int index);

    // repeated int32 game_time = 16;
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameTimeList();
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    int getGameTimeCount();
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    int getGameTime(int index);

    // repeated float point = 24;
    /**
     * <code>repeated float point = 24;</code>
     */
    java.util.List<java.lang.Float> getPointList();
    /**
     * <code>repeated float point = 24;</code>
     */
    int getPointCount();
    /**
     * <code>repeated float point = 24;</code>
     */
    float getPoint(int index);

    // optional int32 trustee_type = 17;
    /**
     * <code>optional int32 trustee_type = 17;</code>
     *
     * <pre>
     *托管的内容
     * </pre>
     */
    boolean hasTrusteeType();
    /**
     * <code>optional int32 trustee_type = 17;</code>
     *
     * <pre>
     *托管的内容
     * </pre>
     */
    int getTrusteeType();

    // optional .RoomInfo room_info = 20;
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .pdk.RoomPlayerResponseBTZ players = 21;
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> 
        getPlayersList();
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ getPlayers(int index);
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    java.util.List<? extends protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 display_time = 18;
    /**
     * <code>optional int32 display_time = 18;</code>
     *
     * <pre>
     *当期操作的播放时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 18;</code>
     *
     * <pre>
     *当期操作的播放时间
     * </pre>
     */
    int getDisplayTime();

    // optional .pdk.CardType_BTZ send_card = 19;
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    boolean hasSendCard();
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.CardType_BTZ getSendCard();
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder getSendCardOrBuilder();

    // optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    boolean hasMyCallBankerInfo();
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ getMyCallBankerInfo();
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder getMyCallBankerInfoOrBuilder();

    // optional .pdk.GameStart_BTZ game_start = 23;
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    boolean hasGameStart();
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.GameStart_BTZ getGameStart();
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder getGameStartOrBuilder();
  }
  /**
   * Protobuf type {@code pdk.TableResponse_BTZ}
   */
  public static final class TableResponse_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements TableResponse_BTZOrBuilder {
    // Use TableResponse_BTZ.newBuilder() to construct.
    private TableResponse_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse_BTZ defaultInstance;
    public static TableResponse_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cellScore_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sceneInfo_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                addJetter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              addJetter_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                addJetter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                addJetter_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              trustee_.add(input.readBool());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                trustee_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                winnerOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              winnerOrder_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                winnerOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                winnerOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000100;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              openCard_.add(input.readBool());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                openCard_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                openCard_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000010;
              endScore_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              callBankerInfo_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                callBankerInfo_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000020;
              playerStatus_ = input.readBool();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                gameTime_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              gameTime_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                gameTime_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameTime_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              bitField0_ |= 0x00000040;
              trusteeType_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000100;
              displayTime_ = input.readInt32();
              break;
            }
            case 154: {
              protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = sendCard_.toBuilder();
              }
              sendCard_ = input.readMessage(protobuf.clazz.btz.BTZRsp.CardType_BTZ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sendCard_);
                sendCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 162: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ>();
                mutable_bitField0_ |= 0x00040000;
              }
              players_.add(input.readMessage(protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.PARSER, extensionRegistry));
              break;
            }
            case 178: {
              protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = myCallBankerInfo_.toBuilder();
              }
              myCallBankerInfo_ = input.readMessage(protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myCallBankerInfo_);
                myCallBankerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 186: {
              protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = gameStart_.toBuilder();
              }
              gameStart_ = input.readMessage(protobuf.clazz.btz.BTZRsp.GameStart_BTZ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gameStart_);
                gameStart_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 197: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                point_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00008000;
              }
              point_.add(input.readFloat());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                point_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                point_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          addJetter_ = java.util.Collections.unmodifiableList(addJetter_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          winnerOrder_ = java.util.Collections.unmodifiableList(winnerOrder_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          callBankerInfo_ = java.util.Collections.unmodifiableList(callBankerInfo_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          gameTime_ = java.util.Collections.unmodifiableList(gameTime_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          point_ = java.util.Collections.unmodifiableList(point_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_TableResponse_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_TableResponse_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.class, protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse_BTZ>() {
      public TableResponse_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cell_score = 1;
    public static final int CELL_SCORE_FIELD_NUMBER = 1;
    private int cellScore_;
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *单元积分
     * </pre>
     */
    public boolean hasCellScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cell_score = 1;</code>
     *
     * <pre>
     *单元积分
     * </pre>
     */
    public int getCellScore() {
      return cellScore_;
    }

    // optional int32 banker_player = 2;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 2;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家用户
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 banker_player = 2;</code>
     *
     * <pre>
     *庄家用户
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 3;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 3;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前用户
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 current_player = 3;</code>
     *
     * <pre>
     *当前用户
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 scene_info = 4;
    public static final int SCENE_INFO_FIELD_NUMBER = 4;
    private int sceneInfo_;
    /**
     * <code>optional int32 scene_info = 4;</code>
     */
    public boolean hasSceneInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 scene_info = 4;</code>
     */
    public int getSceneInfo() {
      return sceneInfo_;
    }

    // repeated int32 add_jetter = 5;
    public static final int ADD_JETTER_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> addJetter_;
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAddJetterList() {
      return addJetter_;
    }
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    public int getAddJetterCount() {
      return addJetter_.size();
    }
    /**
     * <code>repeated int32 add_jetter = 5;</code>
     *
     * <pre>
     *下注信息
     * </pre>
     */
    public int getAddJetter(int index) {
      return addJetter_.get(index);
    }

    // repeated bool trustee = 6;
    public static final int TRUSTEE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Boolean> trustee_;
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getTrusteeList() {
      return trustee_;
    }
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public int getTrusteeCount() {
      return trustee_.size();
    }
    /**
     * <code>repeated bool trustee = 6;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public boolean getTrustee(int index) {
      return trustee_.get(index);
    }

    // repeated int32 winner_order = 7;
    public static final int WINNER_ORDER_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> winnerOrder_;
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getWinnerOrderList() {
      return winnerOrder_;
    }
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    public int getWinnerOrderCount() {
      return winnerOrder_.size();
    }
    /**
     * <code>repeated int32 winner_order = 7;</code>
     */
    public int getWinnerOrder(int index) {
      return winnerOrder_.get(index);
    }

    // repeated int32 card_count = 8;
    public static final int CARD_COUNT_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 8;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 9;
    public static final int CARDS_DATA_FIELD_NUMBER = 9;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated bool open_card = 10;
    public static final int OPEN_CARD_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Boolean> openCard_;
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getOpenCardList() {
      return openCard_;
    }
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    public int getOpenCardCount() {
      return openCard_.size();
    }
    /**
     * <code>repeated bool open_card = 10;</code>
     *
     * <pre>
     *摊牌
     * </pre>
     */
    public boolean getOpenCard(int index) {
      return openCard_.get(index);
    }

    // optional int32 end_score = 12;
    public static final int END_SCORE_FIELD_NUMBER = 12;
    private int endScore_;
    /**
     * <code>optional int32 end_score = 12;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public boolean hasEndScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 end_score = 12;</code>
     *
     * <pre>
     *用户分数
     * </pre>
     */
    public int getEndScore() {
      return endScore_;
    }

    // repeated int32 call_banker_info = 13;
    public static final int CALL_BANKER_INFO_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> callBankerInfo_;
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallBankerInfoList() {
      return callBankerInfo_;
    }
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    public int getCallBankerInfoCount() {
      return callBankerInfo_.size();
    }
    /**
     * <code>repeated int32 call_banker_info = 13;</code>
     *
     * <pre>
     *叫庄
     * </pre>
     */
    public int getCallBankerInfo(int index) {
      return callBankerInfo_.get(index);
    }

    // optional bool player_status = 14;
    public static final int PLAYER_STATUS_FIELD_NUMBER = 14;
    private boolean playerStatus_;
    /**
     * <code>optional bool player_status = 14;</code>
     *
     * <pre>
     * 是否在游戏
     * </pre>
     */
    public boolean hasPlayerStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool player_status = 14;</code>
     *
     * <pre>
     * 是否在游戏
     * </pre>
     */
    public boolean getPlayerStatus() {
      return playerStatus_;
    }

    // repeated int32 card_type = 15;
    public static final int CARD_TYPE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 15;</code>
     *
     * <pre>
     *牌的类型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // repeated int32 game_time = 16;
    public static final int GAME_TIME_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> gameTime_;
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameTimeList() {
      return gameTime_;
    }
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    public int getGameTimeCount() {
      return gameTime_.size();
    }
    /**
     * <code>repeated int32 game_time = 16;</code>
     *
     * <pre>
     *牌倍数
     * </pre>
     */
    public int getGameTime(int index) {
      return gameTime_.get(index);
    }

    // repeated float point = 24;
    public static final int POINT_FIELD_NUMBER = 24;
    private java.util.List<java.lang.Float> point_;
    /**
     * <code>repeated float point = 24;</code>
     */
    public java.util.List<java.lang.Float>
        getPointList() {
      return point_;
    }
    /**
     * <code>repeated float point = 24;</code>
     */
    public int getPointCount() {
      return point_.size();
    }
    /**
     * <code>repeated float point = 24;</code>
     */
    public float getPoint(int index) {
      return point_.get(index);
    }

    // optional int32 trustee_type = 17;
    public static final int TRUSTEE_TYPE_FIELD_NUMBER = 17;
    private int trusteeType_;
    /**
     * <code>optional int32 trustee_type = 17;</code>
     *
     * <pre>
     *托管的内容
     * </pre>
     */
    public boolean hasTrusteeType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 trustee_type = 17;</code>
     *
     * <pre>
     *托管的内容
     * </pre>
     */
    public int getTrusteeType() {
      return trusteeType_;
    }

    // optional .RoomInfo room_info = 20;
    public static final int ROOM_INFO_FIELD_NUMBER = 20;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 20;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .pdk.RoomPlayerResponseBTZ players = 21;
    public static final int PLAYERS_FIELD_NUMBER = 21;
    private java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> players_;
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    public java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    public java.util.List<? extends protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
     */
    public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 display_time = 18;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 18;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 18;</code>
     *
     * <pre>
     *当期操作的播放时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 display_time = 18;</code>
     *
     * <pre>
     *当期操作的播放时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional .pdk.CardType_BTZ send_card = 19;
    public static final int SEND_CARD_FIELD_NUMBER = 19;
    private protobuf.clazz.btz.BTZRsp.CardType_BTZ sendCard_;
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    public boolean hasSendCard() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.CardType_BTZ getSendCard() {
      return sendCard_;
    }
    /**
     * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
     *
     * <pre>
     *发牌 (开牌阶段)
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder getSendCardOrBuilder() {
      return sendCard_;
    }

    // optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;
    public static final int MY_CALL_BANKER_INFO_FIELD_NUMBER = 22;
    private protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ myCallBankerInfo_;
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    public boolean hasMyCallBankerInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ getMyCallBankerInfo() {
      return myCallBankerInfo_;
    }
    /**
     * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
     *
     * <pre>
     *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder getMyCallBankerInfoOrBuilder() {
      return myCallBankerInfo_;
    }

    // optional .pdk.GameStart_BTZ game_start = 23;
    public static final int GAME_START_FIELD_NUMBER = 23;
    private protobuf.clazz.btz.BTZRsp.GameStart_BTZ gameStart_;
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    public boolean hasGameStart() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.GameStart_BTZ getGameStart() {
      return gameStart_;
    }
    /**
     * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
     *
     * <pre>
     *游戏开始（下注阶段）
     * </pre>
     */
    public protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder getGameStartOrBuilder() {
      return gameStart_;
    }

    private void initFields() {
      cellScore_ = 0;
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      sceneInfo_ = 0;
      addJetter_ = java.util.Collections.emptyList();
      trustee_ = java.util.Collections.emptyList();
      winnerOrder_ = java.util.Collections.emptyList();
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      openCard_ = java.util.Collections.emptyList();
      endScore_ = 0;
      callBankerInfo_ = java.util.Collections.emptyList();
      playerStatus_ = false;
      cardType_ = java.util.Collections.emptyList();
      gameTime_ = java.util.Collections.emptyList();
      point_ = java.util.Collections.emptyList();
      trusteeType_ = 0;
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      sendCard_ = protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance();
      myCallBankerInfo_ = protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance();
      gameStart_ = protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cellScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sceneInfo_);
      }
      for (int i = 0; i < addJetter_.size(); i++) {
        output.writeInt32(5, addJetter_.get(i));
      }
      for (int i = 0; i < trustee_.size(); i++) {
        output.writeBool(6, trustee_.get(i));
      }
      for (int i = 0; i < winnerOrder_.size(); i++) {
        output.writeInt32(7, winnerOrder_.get(i));
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(8, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(9, cardsData_.get(i));
      }
      for (int i = 0; i < openCard_.size(); i++) {
        output.writeBool(10, openCard_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(12, endScore_);
      }
      for (int i = 0; i < callBankerInfo_.size(); i++) {
        output.writeInt32(13, callBankerInfo_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(14, playerStatus_);
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(15, cardType_.get(i));
      }
      for (int i = 0; i < gameTime_.size(); i++) {
        output.writeInt32(16, gameTime_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(17, trusteeType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(18, displayTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(19, sendCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(20, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(21, players_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(22, myCallBankerInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(23, gameStart_);
      }
      for (int i = 0; i < point_.size(); i++) {
        output.writeFloat(24, point_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cellScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sceneInfo_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addJetter_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(addJetter_.get(i));
        }
        size += dataSize;
        size += 1 * getAddJetterList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTrusteeList().size();
        size += dataSize;
        size += 1 * getTrusteeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winnerOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winnerOrder_.get(i));
        }
        size += dataSize;
        size += 1 * getWinnerOrderList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 1 * getOpenCardList().size();
        size += dataSize;
        size += 1 * getOpenCardList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, endScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callBankerInfo_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callBankerInfo_.get(i));
        }
        size += dataSize;
        size += 1 * getCallBankerInfoList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, playerStatus_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameTime_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameTime_.get(i));
        }
        size += dataSize;
        size += 2 * getGameTimeList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, trusteeType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, displayTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, sendCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, players_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, myCallBankerInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, gameStart_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPointList().size();
        size += dataSize;
        size += 2 * getPointList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.TableResponse_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.TableResponse_BTZ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.TableResponse_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_TableResponse_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_TableResponse_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.class, protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
          getSendCardFieldBuilder();
          getMyCallBankerInfoFieldBuilder();
          getGameStartFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cellScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sceneInfo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        addJetter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        winnerOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          cardsDataBuilder_.clear();
        }
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        endScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        callBankerInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        playerStatus_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        gameTime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        point_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        trusteeType_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          playersBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        if (sendCardBuilder_ == null) {
          sendCard_ = protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance();
        } else {
          sendCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (myCallBankerInfoBuilder_ == null) {
          myCallBankerInfo_ = protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance();
        } else {
          myCallBankerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (gameStartBuilder_ == null) {
          gameStart_ = protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance();
        } else {
          gameStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_TableResponse_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.TableResponse_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.TableResponse_BTZ build() {
        protobuf.clazz.btz.BTZRsp.TableResponse_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.TableResponse_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.TableResponse_BTZ result = new protobuf.clazz.btz.BTZRsp.TableResponse_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cellScore_ = cellScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sceneInfo_ = sceneInfo_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          addJetter_ = java.util.Collections.unmodifiableList(addJetter_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.addJetter_ = addJetter_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.trustee_ = trustee_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          winnerOrder_ = java.util.Collections.unmodifiableList(winnerOrder_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.winnerOrder_ = winnerOrder_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          openCard_ = java.util.Collections.unmodifiableList(openCard_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.openCard_ = openCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endScore_ = endScore_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          callBankerInfo_ = java.util.Collections.unmodifiableList(callBankerInfo_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.callBankerInfo_ = callBankerInfo_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerStatus_ = playerStatus_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.cardType_ = cardType_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          gameTime_ = java.util.Collections.unmodifiableList(gameTime_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.gameTime_ = gameTime_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          point_ = java.util.Collections.unmodifiableList(point_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.trusteeType_ = trusteeType_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000080;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00000200;
        }
        if (sendCardBuilder_ == null) {
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (myCallBankerInfoBuilder_ == null) {
          result.myCallBankerInfo_ = myCallBankerInfo_;
        } else {
          result.myCallBankerInfo_ = myCallBankerInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (gameStartBuilder_ == null) {
          result.gameStart_ = gameStart_;
        } else {
          result.gameStart_ = gameStartBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.TableResponse_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.TableResponse_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.TableResponse_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.TableResponse_BTZ.getDefaultInstance()) return this;
        if (other.hasCellScore()) {
          setCellScore(other.getCellScore());
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasSceneInfo()) {
          setSceneInfo(other.getSceneInfo());
        }
        if (!other.addJetter_.isEmpty()) {
          if (addJetter_.isEmpty()) {
            addJetter_ = other.addJetter_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAddJetterIsMutable();
            addJetter_.addAll(other.addJetter_);
          }
          onChanged();
        }
        if (!other.trustee_.isEmpty()) {
          if (trustee_.isEmpty()) {
            trustee_ = other.trustee_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTrusteeIsMutable();
            trustee_.addAll(other.trustee_);
          }
          onChanged();
        }
        if (!other.winnerOrder_.isEmpty()) {
          if (winnerOrder_.isEmpty()) {
            winnerOrder_ = other.winnerOrder_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureWinnerOrderIsMutable();
            winnerOrder_.addAll(other.winnerOrder_);
          }
          onChanged();
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000100);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.openCard_.isEmpty()) {
          if (openCard_.isEmpty()) {
            openCard_ = other.openCard_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureOpenCardIsMutable();
            openCard_.addAll(other.openCard_);
          }
          onChanged();
        }
        if (other.hasEndScore()) {
          setEndScore(other.getEndScore());
        }
        if (!other.callBankerInfo_.isEmpty()) {
          if (callBankerInfo_.isEmpty()) {
            callBankerInfo_ = other.callBankerInfo_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCallBankerInfoIsMutable();
            callBankerInfo_.addAll(other.callBankerInfo_);
          }
          onChanged();
        }
        if (other.hasPlayerStatus()) {
          setPlayerStatus(other.getPlayerStatus());
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (!other.gameTime_.isEmpty()) {
          if (gameTime_.isEmpty()) {
            gameTime_ = other.gameTime_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureGameTimeIsMutable();
            gameTime_.addAll(other.gameTime_);
          }
          onChanged();
        }
        if (!other.point_.isEmpty()) {
          if (point_.isEmpty()) {
            point_ = other.point_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensurePointIsMutable();
            point_.addAll(other.point_);
          }
          onChanged();
        }
        if (other.hasTrusteeType()) {
          setTrusteeType(other.getTrusteeType());
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasSendCard()) {
          mergeSendCard(other.getSendCard());
        }
        if (other.hasMyCallBankerInfo()) {
          mergeMyCallBankerInfo(other.getMyCallBankerInfo());
        }
        if (other.hasGameStart()) {
          mergeGameStart(other.getGameStart());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.TableResponse_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.TableResponse_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cell_score = 1;
      private int cellScore_ ;
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *单元积分
       * </pre>
       */
      public boolean hasCellScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *单元积分
       * </pre>
       */
      public int getCellScore() {
        return cellScore_;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *单元积分
       * </pre>
       */
      public Builder setCellScore(int value) {
        bitField0_ |= 0x00000001;
        cellScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cell_score = 1;</code>
       *
       * <pre>
       *单元积分
       * </pre>
       */
      public Builder clearCellScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cellScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 banker_player = 2;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家用户
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家用户
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家用户
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000002;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 2;</code>
       *
       * <pre>
       *庄家用户
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 3;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前用户
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前用户
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前用户
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000004;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 3;</code>
       *
       * <pre>
       *当前用户
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 scene_info = 4;
      private int sceneInfo_ ;
      /**
       * <code>optional int32 scene_info = 4;</code>
       */
      public boolean hasSceneInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 scene_info = 4;</code>
       */
      public int getSceneInfo() {
        return sceneInfo_;
      }
      /**
       * <code>optional int32 scene_info = 4;</code>
       */
      public Builder setSceneInfo(int value) {
        bitField0_ |= 0x00000008;
        sceneInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 scene_info = 4;</code>
       */
      public Builder clearSceneInfo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sceneInfo_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 add_jetter = 5;
      private java.util.List<java.lang.Integer> addJetter_ = java.util.Collections.emptyList();
      private void ensureAddJetterIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          addJetter_ = new java.util.ArrayList<java.lang.Integer>(addJetter_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAddJetterList() {
        return java.util.Collections.unmodifiableList(addJetter_);
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public int getAddJetterCount() {
        return addJetter_.size();
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public int getAddJetter(int index) {
        return addJetter_.get(index);
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public Builder setAddJetter(
          int index, int value) {
        ensureAddJetterIsMutable();
        addJetter_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public Builder addAddJetter(int value) {
        ensureAddJetterIsMutable();
        addJetter_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public Builder addAllAddJetter(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddJetterIsMutable();
        super.addAll(values, addJetter_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 add_jetter = 5;</code>
       *
       * <pre>
       *下注信息
       * </pre>
       */
      public Builder clearAddJetter() {
        addJetter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated bool trustee = 6;
      private java.util.List<java.lang.Boolean> trustee_ = java.util.Collections.emptyList();
      private void ensureTrusteeIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          trustee_ = new java.util.ArrayList<java.lang.Boolean>(trustee_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getTrusteeList() {
        return java.util.Collections.unmodifiableList(trustee_);
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public int getTrusteeCount() {
        return trustee_.size();
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public boolean getTrustee(int index) {
        return trustee_.get(index);
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder setTrustee(
          int index, boolean value) {
        ensureTrusteeIsMutable();
        trustee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addTrustee(boolean value) {
        ensureTrusteeIsMutable();
        trustee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addAllTrustee(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTrusteeIsMutable();
        super.addAll(values, trustee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 6;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder clearTrustee() {
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 winner_order = 7;
      private java.util.List<java.lang.Integer> winnerOrder_ = java.util.Collections.emptyList();
      private void ensureWinnerOrderIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          winnerOrder_ = new java.util.ArrayList<java.lang.Integer>(winnerOrder_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getWinnerOrderList() {
        return java.util.Collections.unmodifiableList(winnerOrder_);
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public int getWinnerOrderCount() {
        return winnerOrder_.size();
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public int getWinnerOrder(int index) {
        return winnerOrder_.get(index);
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public Builder setWinnerOrder(
          int index, int value) {
        ensureWinnerOrderIsMutable();
        winnerOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public Builder addWinnerOrder(int value) {
        ensureWinnerOrderIsMutable();
        winnerOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public Builder addAllWinnerOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinnerOrderIsMutable();
        super.addAll(values, winnerOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winner_order = 7;</code>
       */
      public Builder clearWinnerOrder() {
        winnerOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 card_count = 8;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 8;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 9;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 9;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated bool open_card = 10;
      private java.util.List<java.lang.Boolean> openCard_ = java.util.Collections.emptyList();
      private void ensureOpenCardIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          openCard_ = new java.util.ArrayList<java.lang.Boolean>(openCard_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getOpenCardList() {
        return java.util.Collections.unmodifiableList(openCard_);
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public int getOpenCardCount() {
        return openCard_.size();
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public boolean getOpenCard(int index) {
        return openCard_.get(index);
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public Builder setOpenCard(
          int index, boolean value) {
        ensureOpenCardIsMutable();
        openCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public Builder addOpenCard(boolean value) {
        ensureOpenCardIsMutable();
        openCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public Builder addAllOpenCard(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureOpenCardIsMutable();
        super.addAll(values, openCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool open_card = 10;</code>
       *
       * <pre>
       *摊牌
       * </pre>
       */
      public Builder clearOpenCard() {
        openCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 end_score = 12;
      private int endScore_ ;
      /**
       * <code>optional int32 end_score = 12;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public boolean hasEndScore() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 end_score = 12;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public int getEndScore() {
        return endScore_;
      }
      /**
       * <code>optional int32 end_score = 12;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder setEndScore(int value) {
        bitField0_ |= 0x00000400;
        endScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_score = 12;</code>
       *
       * <pre>
       *用户分数
       * </pre>
       */
      public Builder clearEndScore() {
        bitField0_ = (bitField0_ & ~0x00000400);
        endScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 call_banker_info = 13;
      private java.util.List<java.lang.Integer> callBankerInfo_ = java.util.Collections.emptyList();
      private void ensureCallBankerInfoIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>(callBankerInfo_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallBankerInfoList() {
        return java.util.Collections.unmodifiableList(callBankerInfo_);
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public int getCallBankerInfoCount() {
        return callBankerInfo_.size();
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public int getCallBankerInfo(int index) {
        return callBankerInfo_.get(index);
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public Builder setCallBankerInfo(
          int index, int value) {
        ensureCallBankerInfoIsMutable();
        callBankerInfo_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public Builder addCallBankerInfo(int value) {
        ensureCallBankerInfoIsMutable();
        callBankerInfo_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public Builder addAllCallBankerInfo(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallBankerInfoIsMutable();
        super.addAll(values, callBankerInfo_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 13;</code>
       *
       * <pre>
       *叫庄
       * </pre>
       */
      public Builder clearCallBankerInfo() {
        callBankerInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional bool player_status = 14;
      private boolean playerStatus_ ;
      /**
       * <code>optional bool player_status = 14;</code>
       *
       * <pre>
       * 是否在游戏
       * </pre>
       */
      public boolean hasPlayerStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool player_status = 14;</code>
       *
       * <pre>
       * 是否在游戏
       * </pre>
       */
      public boolean getPlayerStatus() {
        return playerStatus_;
      }
      /**
       * <code>optional bool player_status = 14;</code>
       *
       * <pre>
       * 是否在游戏
       * </pre>
       */
      public Builder setPlayerStatus(boolean value) {
        bitField0_ |= 0x00001000;
        playerStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool player_status = 14;</code>
       *
       * <pre>
       * 是否在游戏
       * </pre>
       */
      public Builder clearPlayerStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        playerStatus_ = false;
        onChanged();
        return this;
      }

      // repeated int32 card_type = 15;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 15;</code>
       *
       * <pre>
       *牌的类型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 game_time = 16;
      private java.util.List<java.lang.Integer> gameTime_ = java.util.Collections.emptyList();
      private void ensureGameTimeIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          gameTime_ = new java.util.ArrayList<java.lang.Integer>(gameTime_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameTimeList() {
        return java.util.Collections.unmodifiableList(gameTime_);
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public int getGameTimeCount() {
        return gameTime_.size();
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public int getGameTime(int index) {
        return gameTime_.get(index);
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public Builder setGameTime(
          int index, int value) {
        ensureGameTimeIsMutable();
        gameTime_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public Builder addGameTime(int value) {
        ensureGameTimeIsMutable();
        gameTime_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public Builder addAllGameTime(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameTimeIsMutable();
        super.addAll(values, gameTime_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_time = 16;</code>
       *
       * <pre>
       *牌倍数
       * </pre>
       */
      public Builder clearGameTime() {
        gameTime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated float point = 24;
      private java.util.List<java.lang.Float> point_ = java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          point_ = new java.util.ArrayList<java.lang.Float>(point_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public java.util.List<java.lang.Float>
          getPointList() {
        return java.util.Collections.unmodifiableList(point_);
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public int getPointCount() {
        return point_.size();
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public float getPoint(int index) {
        return point_.get(index);
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public Builder setPoint(
          int index, float value) {
        ensurePointIsMutable();
        point_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public Builder addPoint(float value) {
        ensurePointIsMutable();
        point_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public Builder addAllPoint(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePointIsMutable();
        super.addAll(values, point_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float point = 24;</code>
       */
      public Builder clearPoint() {
        point_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional int32 trustee_type = 17;
      private int trusteeType_ ;
      /**
       * <code>optional int32 trustee_type = 17;</code>
       *
       * <pre>
       *托管的内容
       * </pre>
       */
      public boolean hasTrusteeType() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 trustee_type = 17;</code>
       *
       * <pre>
       *托管的内容
       * </pre>
       */
      public int getTrusteeType() {
        return trusteeType_;
      }
      /**
       * <code>optional int32 trustee_type = 17;</code>
       *
       * <pre>
       *托管的内容
       * </pre>
       */
      public Builder setTrusteeType(int value) {
        bitField0_ |= 0x00010000;
        trusteeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 trustee_type = 17;</code>
       *
       * <pre>
       *托管的内容
       * </pre>
       */
      public Builder clearTrusteeType() {
        bitField0_ = (bitField0_ & ~0x00010000);
        trusteeType_ = 0;
        onChanged();
        return this;
      }

      // optional .RoomInfo room_info = 20;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .pdk.RoomPlayerResponseBTZ players = 21;
      private java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ>(players_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder> playersBuilder_;

      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder addPlayers(protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public java.util.List<? extends protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.getDefaultInstance());
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.getDefaultInstance());
      }
      /**
       * <code>repeated .pdk.RoomPlayerResponseBTZ players = 21;</code>
       */
      public java.util.List<protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZ.Builder, protobuf.clazz.btz.BTZRsp.RoomPlayerResponseBTZOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 display_time = 18;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 18;</code>
       *
       * <pre>
       *当期操作的播放时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 display_time = 18;</code>
       *
       * <pre>
       *当期操作的播放时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 18;</code>
       *
       * <pre>
       *当期操作的播放时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00080000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 18;</code>
       *
       * <pre>
       *当期操作的播放时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00080000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional .pdk.CardType_BTZ send_card = 19;
      private protobuf.clazz.btz.BTZRsp.CardType_BTZ sendCard_ = protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.CardType_BTZ, protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder> sendCardBuilder_;
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public boolean hasSendCard() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CardType_BTZ getSendCard() {
        if (sendCardBuilder_ == null) {
          return sendCard_;
        } else {
          return sendCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public Builder setSendCard(protobuf.clazz.btz.BTZRsp.CardType_BTZ value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sendCard_ = value;
          onChanged();
        } else {
          sendCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public Builder setSendCard(
          protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          sendCard_ = builderForValue.build();
          onChanged();
        } else {
          sendCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public Builder mergeSendCard(protobuf.clazz.btz.BTZRsp.CardType_BTZ value) {
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              sendCard_ != protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance()) {
            sendCard_ =
              protobuf.clazz.btz.BTZRsp.CardType_BTZ.newBuilder(sendCard_).mergeFrom(value).buildPartial();
          } else {
            sendCard_ = value;
          }
          onChanged();
        } else {
          sendCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance();
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder getSendCardBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getSendCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder getSendCardOrBuilder() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilder();
        } else {
          return sendCard_;
        }
      }
      /**
       * <code>optional .pdk.CardType_BTZ send_card = 19;</code>
       *
       * <pre>
       *发牌 (开牌阶段)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.CardType_BTZ, protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.btz.BTZRsp.CardType_BTZ, protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder>(
                  sendCard_,
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;
      private protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ myCallBankerInfo_ = protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder> myCallBankerInfoBuilder_;
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public boolean hasMyCallBankerInfo() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ getMyCallBankerInfo() {
        if (myCallBankerInfoBuilder_ == null) {
          return myCallBankerInfo_;
        } else {
          return myCallBankerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public Builder setMyCallBankerInfo(protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ value) {
        if (myCallBankerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myCallBankerInfo_ = value;
          onChanged();
        } else {
          myCallBankerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public Builder setMyCallBankerInfo(
          protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder builderForValue) {
        if (myCallBankerInfoBuilder_ == null) {
          myCallBankerInfo_ = builderForValue.build();
          onChanged();
        } else {
          myCallBankerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public Builder mergeMyCallBankerInfo(protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ value) {
        if (myCallBankerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              myCallBankerInfo_ != protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance()) {
            myCallBankerInfo_ =
              protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.newBuilder(myCallBankerInfo_).mergeFrom(value).buildPartial();
          } else {
            myCallBankerInfo_ = value;
          }
          onChanged();
        } else {
          myCallBankerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public Builder clearMyCallBankerInfo() {
        if (myCallBankerInfoBuilder_ == null) {
          myCallBankerInfo_ = protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance();
          onChanged();
        } else {
          myCallBankerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder getMyCallBankerInfoBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getMyCallBankerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder getMyCallBankerInfoOrBuilder() {
        if (myCallBankerInfoBuilder_ != null) {
          return myCallBankerInfoBuilder_.getMessageOrBuilder();
        } else {
          return myCallBankerInfo_;
        }
      }
      /**
       * <code>optional .pdk.CallBankerInfo_BTZ my_call_banker_info = 22;</code>
       *
       * <pre>
       *用户叫庄信息（如果有 里有有玩家的叫分数据）（叫庄阶段）
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder> 
          getMyCallBankerInfoFieldBuilder() {
        if (myCallBankerInfoBuilder_ == null) {
          myCallBankerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder>(
                  myCallBankerInfo_,
                  getParentForChildren(),
                  isClean());
          myCallBankerInfo_ = null;
        }
        return myCallBankerInfoBuilder_;
      }

      // optional .pdk.GameStart_BTZ game_start = 23;
      private protobuf.clazz.btz.BTZRsp.GameStart_BTZ gameStart_ = protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.GameStart_BTZ, protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder, protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder> gameStartBuilder_;
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public boolean hasGameStart() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.GameStart_BTZ getGameStart() {
        if (gameStartBuilder_ == null) {
          return gameStart_;
        } else {
          return gameStartBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public Builder setGameStart(protobuf.clazz.btz.BTZRsp.GameStart_BTZ value) {
        if (gameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gameStart_ = value;
          onChanged();
        } else {
          gameStartBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public Builder setGameStart(
          protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder builderForValue) {
        if (gameStartBuilder_ == null) {
          gameStart_ = builderForValue.build();
          onChanged();
        } else {
          gameStartBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public Builder mergeGameStart(protobuf.clazz.btz.BTZRsp.GameStart_BTZ value) {
        if (gameStartBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              gameStart_ != protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance()) {
            gameStart_ =
              protobuf.clazz.btz.BTZRsp.GameStart_BTZ.newBuilder(gameStart_).mergeFrom(value).buildPartial();
          } else {
            gameStart_ = value;
          }
          onChanged();
        } else {
          gameStartBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public Builder clearGameStart() {
        if (gameStartBuilder_ == null) {
          gameStart_ = protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance();
          onChanged();
        } else {
          gameStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder getGameStartBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getGameStartFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      public protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder getGameStartOrBuilder() {
        if (gameStartBuilder_ != null) {
          return gameStartBuilder_.getMessageOrBuilder();
        } else {
          return gameStart_;
        }
      }
      /**
       * <code>optional .pdk.GameStart_BTZ game_start = 23;</code>
       *
       * <pre>
       *游戏开始（下注阶段）
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.btz.BTZRsp.GameStart_BTZ, protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder, protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder> 
          getGameStartFieldBuilder() {
        if (gameStartBuilder_ == null) {
          gameStartBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.btz.BTZRsp.GameStart_BTZ, protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder, protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder>(
                  gameStart_,
                  getParentForChildren(),
                  isClean());
          gameStart_ = null;
        }
        return gameStartBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pdk.TableResponse_BTZ)
    }

    static {
      defaultInstance = new TableResponse_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.TableResponse_BTZ)
  }

  public interface CallBanker_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 call_banker = 1;
    /**
     * <code>optional int32 call_banker = 1;</code>
     *
     * <pre>
     *叫庄的用户
     * </pre>
     */
    boolean hasCallBanker();
    /**
     * <code>optional int32 call_banker = 1;</code>
     *
     * <pre>
     *叫庄的用户
     * </pre>
     */
    int getCallBanker();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    int getSeatIndex();
  }
  /**
   * Protobuf type {@code pdk.CallBanker_BTZ}
   *
   * <pre>
   *用户叫庄
   * </pre>
   */
  public static final class CallBanker_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements CallBanker_BTZOrBuilder {
    // Use CallBanker_BTZ.newBuilder() to construct.
    private CallBanker_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CallBanker_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CallBanker_BTZ defaultInstance;
    public static CallBanker_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public CallBanker_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CallBanker_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              callBanker_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBanker_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBanker_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.class, protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<CallBanker_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<CallBanker_BTZ>() {
      public CallBanker_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallBanker_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CallBanker_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 call_banker = 1;
    public static final int CALL_BANKER_FIELD_NUMBER = 1;
    private int callBanker_;
    /**
     * <code>optional int32 call_banker = 1;</code>
     *
     * <pre>
     *叫庄的用户
     * </pre>
     */
    public boolean hasCallBanker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 call_banker = 1;</code>
     *
     * <pre>
     *叫庄的用户
     * </pre>
     */
    public int getCallBanker() {
      return callBanker_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    private void initFields() {
      callBanker_ = 0;
      seatIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, callBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, callBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.CallBanker_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.CallBanker_BTZ}
     *
     * <pre>
     *用户叫庄
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.CallBanker_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBanker_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBanker_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.class, protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBanker_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.CallBanker_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.CallBanker_BTZ build() {
        protobuf.clazz.btz.BTZRsp.CallBanker_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.CallBanker_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.CallBanker_BTZ result = new protobuf.clazz.btz.BTZRsp.CallBanker_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.callBanker_ = callBanker_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.CallBanker_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.CallBanker_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.CallBanker_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.CallBanker_BTZ.getDefaultInstance()) return this;
        if (other.hasCallBanker()) {
          setCallBanker(other.getCallBanker());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.CallBanker_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.CallBanker_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 call_banker = 1;
      private int callBanker_ ;
      /**
       * <code>optional int32 call_banker = 1;</code>
       *
       * <pre>
       *叫庄的用户
       * </pre>
       */
      public boolean hasCallBanker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       *
       * <pre>
       *叫庄的用户
       * </pre>
       */
      public int getCallBanker() {
        return callBanker_;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       *
       * <pre>
       *叫庄的用户
       * </pre>
       */
      public Builder setCallBanker(int value) {
        bitField0_ |= 0x00000001;
        callBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 call_banker = 1;</code>
       *
       * <pre>
       *叫庄的用户
       * </pre>
       */
      public Builder clearCallBanker() {
        bitField0_ = (bitField0_ & ~0x00000001);
        callBanker_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.CallBanker_BTZ)
    }

    static {
      defaultInstance = new CallBanker_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.CallBanker_BTZ)
  }

  public interface CallBankerInfo_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 call_banker_info = 1;
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCallBankerInfoList();
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    int getCallBankerInfoCount();
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    int getCallBankerInfo(int index);

    // optional int32 display_time = 2;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code pdk.CallBankerInfo_BTZ}
   *
   * <pre>
   *用户叫庄信息
   * </pre>
   */
  public static final class CallBankerInfo_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements CallBankerInfo_BTZOrBuilder {
    // Use CallBankerInfo_BTZ.newBuilder() to construct.
    private CallBankerInfo_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CallBankerInfo_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CallBankerInfo_BTZ defaultInstance;
    public static CallBankerInfo_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public CallBankerInfo_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CallBankerInfo_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              callBankerInfo_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                callBankerInfo_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          callBankerInfo_ = java.util.Collections.unmodifiableList(callBankerInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBankerInfo_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBankerInfo_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.class, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<CallBankerInfo_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<CallBankerInfo_BTZ>() {
      public CallBankerInfo_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallBankerInfo_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CallBankerInfo_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 call_banker_info = 1;
    public static final int CALL_BANKER_INFO_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> callBankerInfo_;
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCallBankerInfoList() {
      return callBankerInfo_;
    }
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public int getCallBankerInfoCount() {
      return callBankerInfo_.size();
    }
    /**
     * <code>repeated int32 call_banker_info = 1;</code>
     *
     * <pre>
     *叫庄数据
     * </pre>
     */
    public int getCallBankerInfo(int index) {
      return callBankerInfo_.get(index);
    }

    // optional int32 display_time = 2;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 2;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      callBankerInfo_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < callBankerInfo_.size(); i++) {
        output.writeInt32(1, callBankerInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < callBankerInfo_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callBankerInfo_.get(i));
        }
        size += dataSize;
        size += 1 * getCallBankerInfoList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.CallBankerInfo_BTZ}
     *
     * <pre>
     *用户叫庄信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBankerInfo_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBankerInfo_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.class, protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callBankerInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CallBankerInfo_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ build() {
        protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ result = new protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          callBankerInfo_ = java.util.Collections.unmodifiableList(callBankerInfo_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.callBankerInfo_ = callBankerInfo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ.getDefaultInstance()) return this;
        if (!other.callBankerInfo_.isEmpty()) {
          if (callBankerInfo_.isEmpty()) {
            callBankerInfo_ = other.callBankerInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCallBankerInfoIsMutable();
            callBankerInfo_.addAll(other.callBankerInfo_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.CallBankerInfo_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 call_banker_info = 1;
      private java.util.List<java.lang.Integer> callBankerInfo_ = java.util.Collections.emptyList();
      private void ensureCallBankerInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          callBankerInfo_ = new java.util.ArrayList<java.lang.Integer>(callBankerInfo_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCallBankerInfoList() {
        return java.util.Collections.unmodifiableList(callBankerInfo_);
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public int getCallBankerInfoCount() {
        return callBankerInfo_.size();
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public int getCallBankerInfo(int index) {
        return callBankerInfo_.get(index);
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder setCallBankerInfo(
          int index, int value) {
        ensureCallBankerInfoIsMutable();
        callBankerInfo_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder addCallBankerInfo(int value) {
        ensureCallBankerInfoIsMutable();
        callBankerInfo_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder addAllCallBankerInfo(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallBankerInfoIsMutable();
        super.addAll(values, callBankerInfo_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 call_banker_info = 1;</code>
       *
       * <pre>
       *叫庄数据
       * </pre>
       */
      public Builder clearCallBankerInfo() {
        callBankerInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 display_time = 2;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000002;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.CallBankerInfo_BTZ)
    }

    static {
      defaultInstance = new CallBankerInfo_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.CallBankerInfo_BTZ)
  }

  public interface GameStart_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse jetton_cell = 1;
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getJettonCellList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getJettonCell(int index);
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    int getJettonCellCount();
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonCellOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonCellOrBuilder(
        int index);

    // optional int32 cur_banker = 3;
    /**
     * <code>optional int32 cur_banker = 3;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasCurBanker();
    /**
     * <code>optional int32 cur_banker = 3;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getCurBanker();

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code pdk.GameStart_BTZ}
   *
   * <pre>
   *确认庄家游戏开始
   * </pre>
   */
  public static final class GameStart_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements GameStart_BTZOrBuilder {
    // Use GameStart_BTZ.newBuilder() to construct.
    private GameStart_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStart_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStart_BTZ defaultInstance;
    public static GameStart_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public GameStart_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStart_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                jettonCell_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              jettonCell_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              curBanker_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          jettonCell_ = java.util.Collections.unmodifiableList(jettonCell_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_GameStart_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_GameStart_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.GameStart_BTZ.class, protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStart_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<GameStart_BTZ>() {
      public GameStart_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStart_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStart_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse jetton_cell = 1;
    public static final int JETTON_CELL_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonCell_;
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonCellList() {
      return jettonCell_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getJettonCellOrBuilderList() {
      return jettonCell_;
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    public int getJettonCellCount() {
      return jettonCell_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getJettonCell(int index) {
      return jettonCell_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
     *
     * <pre>
     *下注筹码
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonCellOrBuilder(
        int index) {
      return jettonCell_.get(index);
    }

    // optional int32 cur_banker = 3;
    public static final int CUR_BANKER_FIELD_NUMBER = 3;
    private int curBanker_;
    /**
     * <code>optional int32 cur_banker = 3;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasCurBanker() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cur_banker = 3;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getCurBanker() {
      return curBanker_;
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      jettonCell_ = java.util.Collections.emptyList();
      curBanker_ = 0;
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < jettonCell_.size(); i++) {
        output.writeMessage(1, jettonCell_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, curBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < jettonCell_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, jettonCell_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, curBanker_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.GameStart_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.GameStart_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.GameStart_BTZ}
     *
     * <pre>
     *确认庄家游戏开始
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.GameStart_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_GameStart_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_GameStart_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.GameStart_BTZ.class, protobuf.clazz.btz.BTZRsp.GameStart_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.GameStart_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJettonCellFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (jettonCellBuilder_ == null) {
          jettonCell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          jettonCellBuilder_.clear();
        }
        curBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_GameStart_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.GameStart_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.GameStart_BTZ build() {
        protobuf.clazz.btz.BTZRsp.GameStart_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.GameStart_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.GameStart_BTZ result = new protobuf.clazz.btz.BTZRsp.GameStart_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (jettonCellBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            jettonCell_ = java.util.Collections.unmodifiableList(jettonCell_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.jettonCell_ = jettonCell_;
        } else {
          result.jettonCell_ = jettonCellBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.curBanker_ = curBanker_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.GameStart_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.GameStart_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.GameStart_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.GameStart_BTZ.getDefaultInstance()) return this;
        if (jettonCellBuilder_ == null) {
          if (!other.jettonCell_.isEmpty()) {
            if (jettonCell_.isEmpty()) {
              jettonCell_ = other.jettonCell_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureJettonCellIsMutable();
              jettonCell_.addAll(other.jettonCell_);
            }
            onChanged();
          }
        } else {
          if (!other.jettonCell_.isEmpty()) {
            if (jettonCellBuilder_.isEmpty()) {
              jettonCellBuilder_.dispose();
              jettonCellBuilder_ = null;
              jettonCell_ = other.jettonCell_;
              bitField0_ = (bitField0_ & ~0x00000001);
              jettonCellBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJettonCellFieldBuilder() : null;
            } else {
              jettonCellBuilder_.addAllMessages(other.jettonCell_);
            }
          }
        }
        if (other.hasCurBanker()) {
          setCurBanker(other.getCurBanker());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.GameStart_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.GameStart_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse jetton_cell = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> jettonCell_ =
        java.util.Collections.emptyList();
      private void ensureJettonCellIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          jettonCell_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(jettonCell_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> jettonCellBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getJettonCellList() {
        if (jettonCellBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jettonCell_);
        } else {
          return jettonCellBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public int getJettonCellCount() {
        if (jettonCellBuilder_ == null) {
          return jettonCell_.size();
        } else {
          return jettonCellBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getJettonCell(int index) {
        if (jettonCellBuilder_ == null) {
          return jettonCell_.get(index);
        } else {
          return jettonCellBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder setJettonCell(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonCellIsMutable();
          jettonCell_.set(index, value);
          onChanged();
        } else {
          jettonCellBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder setJettonCell(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonCellBuilder_ == null) {
          ensureJettonCellIsMutable();
          jettonCell_.set(index, builderForValue.build());
          onChanged();
        } else {
          jettonCellBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder addJettonCell(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonCellIsMutable();
          jettonCell_.add(value);
          onChanged();
        } else {
          jettonCellBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder addJettonCell(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (jettonCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJettonCellIsMutable();
          jettonCell_.add(index, value);
          onChanged();
        } else {
          jettonCellBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder addJettonCell(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonCellBuilder_ == null) {
          ensureJettonCellIsMutable();
          jettonCell_.add(builderForValue.build());
          onChanged();
        } else {
          jettonCellBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder addJettonCell(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (jettonCellBuilder_ == null) {
          ensureJettonCellIsMutable();
          jettonCell_.add(index, builderForValue.build());
          onChanged();
        } else {
          jettonCellBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder addAllJettonCell(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (jettonCellBuilder_ == null) {
          ensureJettonCellIsMutable();
          super.addAll(values, jettonCell_);
          onChanged();
        } else {
          jettonCellBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder clearJettonCell() {
        if (jettonCellBuilder_ == null) {
          jettonCell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          jettonCellBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public Builder removeJettonCell(int index) {
        if (jettonCellBuilder_ == null) {
          ensureJettonCellIsMutable();
          jettonCell_.remove(index);
          onChanged();
        } else {
          jettonCellBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getJettonCellBuilder(
          int index) {
        return getJettonCellFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getJettonCellOrBuilder(
          int index) {
        if (jettonCellBuilder_ == null) {
          return jettonCell_.get(index);  } else {
          return jettonCellBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getJettonCellOrBuilderList() {
        if (jettonCellBuilder_ != null) {
          return jettonCellBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jettonCell_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonCellBuilder() {
        return getJettonCellFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addJettonCellBuilder(
          int index) {
        return getJettonCellFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse jetton_cell = 1;</code>
       *
       * <pre>
       *下注筹码
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getJettonCellBuilderList() {
        return getJettonCellFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getJettonCellFieldBuilder() {
        if (jettonCellBuilder_ == null) {
          jettonCellBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  jettonCell_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          jettonCell_ = null;
        }
        return jettonCellBuilder_;
      }

      // optional int32 cur_banker = 3;
      private int curBanker_ ;
      /**
       * <code>optional int32 cur_banker = 3;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasCurBanker() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_banker = 3;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getCurBanker() {
        return curBanker_;
      }
      /**
       * <code>optional int32 cur_banker = 3;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setCurBanker(int value) {
        bitField0_ |= 0x00000002;
        curBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_banker = 3;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearCurBanker() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curBanker_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.GameStart_BTZ)
    }

    static {
      defaultInstance = new GameStart_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.GameStart_BTZ)
  }

  public interface AddJetton_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 jetton_score = 1;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    boolean hasJettonScore();
    /**
     * <code>optional int32 jetton_score = 1;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    int getJettonScore();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    int getSeatIndex();
  }
  /**
   * Protobuf type {@code pdk.AddJetton_BTZ}
   *
   * <pre>
   *用户下注
   * </pre>
   */
  public static final class AddJetton_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements AddJetton_BTZOrBuilder {
    // Use AddJetton_BTZ.newBuilder() to construct.
    private AddJetton_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AddJetton_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AddJetton_BTZ defaultInstance;
    public static AddJetton_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public AddJetton_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AddJetton_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jettonScore_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_AddJetton_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_AddJetton_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.class, protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<AddJetton_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<AddJetton_BTZ>() {
      public AddJetton_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddJetton_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddJetton_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 jetton_score = 1;
    public static final int JETTON_SCORE_FIELD_NUMBER = 1;
    private int jettonScore_;
    /**
     * <code>optional int32 jetton_score = 1;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public boolean hasJettonScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 jetton_score = 1;</code>
     *
     * <pre>
     *下注分数
     * </pre>
     */
    public int getJettonScore() {
      return jettonScore_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *下注用户
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    private void initFields() {
      jettonScore_ = 0;
      seatIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jettonScore_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.AddJetton_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.AddJetton_BTZ}
     *
     * <pre>
     *用户下注
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.AddJetton_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_AddJetton_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_AddJetton_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.class, protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jettonScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_AddJetton_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.AddJetton_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.AddJetton_BTZ build() {
        protobuf.clazz.btz.BTZRsp.AddJetton_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.AddJetton_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.AddJetton_BTZ result = new protobuf.clazz.btz.BTZRsp.AddJetton_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jettonScore_ = jettonScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.AddJetton_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.AddJetton_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.AddJetton_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.AddJetton_BTZ.getDefaultInstance()) return this;
        if (other.hasJettonScore()) {
          setJettonScore(other.getJettonScore());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.AddJetton_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.AddJetton_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 jetton_score = 1;
      private int jettonScore_ ;
      /**
       * <code>optional int32 jetton_score = 1;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public boolean hasJettonScore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public int getJettonScore() {
        return jettonScore_;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder setJettonScore(int value) {
        bitField0_ |= 0x00000001;
        jettonScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jetton_score = 1;</code>
       *
       * <pre>
       *下注分数
       * </pre>
       */
      public Builder clearJettonScore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jettonScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *下注用户
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.AddJetton_BTZ)
    }

    static {
      defaultInstance = new AddJetton_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.AddJetton_BTZ)
  }

  public interface SendCard_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Int32ArrayResponse send_card = 1;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getSendCardList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index);
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    int getSendCardCount();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index);

    // optional int32 display_time = 2;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 tou_zi = 3;
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    java.util.List<java.lang.Integer> getTouZiList();
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    int getTouZiCount();
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    int getTouZi(int index);
  }
  /**
   * Protobuf type {@code pdk.SendCard_BTZ}
   *
   * <pre>
   *发牌数据包
   * </pre>
   */
  public static final class SendCard_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements SendCard_BTZOrBuilder {
    // Use SendCard_BTZ.newBuilder() to construct.
    private SendCard_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCard_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCard_BTZ defaultInstance;
    public static SendCard_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public SendCard_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCard_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              sendCard_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                touZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              touZi_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                touZi_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                touZi_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          touZi_ = java.util.Collections.unmodifiableList(touZi_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_SendCard_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_SendCard_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.SendCard_BTZ.class, protobuf.clazz.btz.BTZRsp.SendCard_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCard_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<SendCard_BTZ>() {
      public SendCard_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCard_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCard_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Int32ArrayResponse send_card = 1;
    public static final int SEND_CARD_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_;
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getSendCardOrBuilderList() {
      return sendCard_;
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    public int getSendCardCount() {
      return sendCard_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
      return sendCard_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse send_card = 1;</code>
     *
     * <pre>
     *牌数据包
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
        int index) {
      return sendCard_.get(index);
    }

    // optional int32 display_time = 2;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 2;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 2;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 tou_zi = 3;
    public static final int TOU_ZI_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> touZi_;
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTouZiList() {
      return touZi_;
    }
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    public int getTouZiCount() {
      return touZi_.size();
    }
    /**
     * <code>repeated int32 tou_zi = 3;</code>
     *
     * <pre>
     *骰子
     * </pre>
     */
    public int getTouZi(int index) {
      return touZi_.get(index);
    }

    private void initFields() {
      sendCard_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      touZi_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < sendCard_.size(); i++) {
        output.writeMessage(1, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, displayTime_);
      }
      for (int i = 0; i < touZi_.size(); i++) {
        output.writeInt32(3, touZi_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sendCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, sendCard_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < touZi_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(touZi_.get(i));
        }
        size += dataSize;
        size += 1 * getTouZiList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.SendCard_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.SendCard_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.SendCard_BTZ}
     *
     * <pre>
     *发牌数据包
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.SendCard_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_SendCard_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_SendCard_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.SendCard_BTZ.class, protobuf.clazz.btz.BTZRsp.SendCard_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.SendCard_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSendCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sendCardBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        touZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_SendCard_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.SendCard_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.SendCard_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.SendCard_BTZ build() {
        protobuf.clazz.btz.BTZRsp.SendCard_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.SendCard_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.SendCard_BTZ result = new protobuf.clazz.btz.BTZRsp.SendCard_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sendCardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            sendCard_ = java.util.Collections.unmodifiableList(sendCard_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sendCard_ = sendCard_;
        } else {
          result.sendCard_ = sendCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          touZi_ = java.util.Collections.unmodifiableList(touZi_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.touZi_ = touZi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.SendCard_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.SendCard_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.SendCard_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.SendCard_BTZ.getDefaultInstance()) return this;
        if (sendCardBuilder_ == null) {
          if (!other.sendCard_.isEmpty()) {
            if (sendCard_.isEmpty()) {
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSendCardIsMutable();
              sendCard_.addAll(other.sendCard_);
            }
            onChanged();
          }
        } else {
          if (!other.sendCard_.isEmpty()) {
            if (sendCardBuilder_.isEmpty()) {
              sendCardBuilder_.dispose();
              sendCardBuilder_ = null;
              sendCard_ = other.sendCard_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sendCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSendCardFieldBuilder() : null;
            } else {
              sendCardBuilder_.addAllMessages(other.sendCard_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.touZi_.isEmpty()) {
          if (touZi_.isEmpty()) {
            touZi_ = other.touZi_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTouZiIsMutable();
            touZi_.addAll(other.touZi_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.SendCard_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.SendCard_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Int32ArrayResponse send_card = 1;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> sendCard_ =
        java.util.Collections.emptyList();
      private void ensureSendCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sendCard_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(sendCard_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> sendCardBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getSendCardList() {
        if (sendCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sendCard_);
        } else {
          return sendCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public int getSendCardCount() {
        if (sendCardBuilder_ == null) {
          return sendCard_.size();
        } else {
          return sendCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getSendCard(int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);
        } else {
          return sendCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.set(index, value);
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder setSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder addSendCard(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (sendCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSendCardIsMutable();
          sendCard_.add(index, value);
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder addSendCard(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder addSendCard(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          sendCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder addAllSendCard(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          super.addAll(values, sendCard_);
          onChanged();
        } else {
          sendCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder clearSendCard() {
        if (sendCardBuilder_ == null) {
          sendCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sendCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public Builder removeSendCard(int index) {
        if (sendCardBuilder_ == null) {
          ensureSendCardIsMutable();
          sendCard_.remove(index);
          onChanged();
        } else {
          sendCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getSendCardOrBuilder(
          int index) {
        if (sendCardBuilder_ == null) {
          return sendCard_.get(index);  } else {
          return sendCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getSendCardOrBuilderList() {
        if (sendCardBuilder_ != null) {
          return sendCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sendCard_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder() {
        return getSendCardFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addSendCardBuilder(
          int index) {
        return getSendCardFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse send_card = 1;</code>
       *
       * <pre>
       *牌数据包
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getSendCardBuilderList() {
        return getSendCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getSendCardFieldBuilder() {
        if (sendCardBuilder_ == null) {
          sendCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  sendCard_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sendCard_ = null;
        }
        return sendCardBuilder_;
      }

      // optional int32 display_time = 2;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000002;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 2;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 tou_zi = 3;
      private java.util.List<java.lang.Integer> touZi_ = java.util.Collections.emptyList();
      private void ensureTouZiIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          touZi_ = new java.util.ArrayList<java.lang.Integer>(touZi_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTouZiList() {
        return java.util.Collections.unmodifiableList(touZi_);
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public int getTouZiCount() {
        return touZi_.size();
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public int getTouZi(int index) {
        return touZi_.get(index);
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public Builder setTouZi(
          int index, int value) {
        ensureTouZiIsMutable();
        touZi_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public Builder addTouZi(int value) {
        ensureTouZiIsMutable();
        touZi_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public Builder addAllTouZi(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTouZiIsMutable();
        super.addAll(values, touZi_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tou_zi = 3;</code>
       *
       * <pre>
       *骰子
       * </pre>
       */
      public Builder clearTouZi() {
        touZi_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.SendCard_BTZ)
    }

    static {
      defaultInstance = new SendCard_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.SendCard_BTZ)
  }

  public interface OpenCard_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *摊牌用户
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *摊牌用户
     * </pre>
     */
    int getSeatIndex();

    // optional bool open = 2;
    /**
     * <code>optional bool open = 2;</code>
     *
     * <pre>
     *是否摊牌
     * </pre>
     */
    boolean hasOpen();
    /**
     * <code>optional bool open = 2;</code>
     *
     * <pre>
     *是否摊牌
     * </pre>
     */
    boolean getOpen();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    int getCards(int index);

    // optional int32 card_type = 4;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    int getCardType();

    // optional int32 time = 5;
    /**
     * <code>optional int32 time = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>optional int32 time = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTime();

    // optional float point = 6;
    /**
     * <code>optional float point = 6;</code>
     */
    boolean hasPoint();
    /**
     * <code>optional float point = 6;</code>
     */
    float getPoint();
  }
  /**
   * Protobuf type {@code pdk.OpenCard_BTZ}
   *
   * <pre>
   *用户摊牌
   * </pre>
   */
  public static final class OpenCard_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements OpenCard_BTZOrBuilder {
    // Use OpenCard_BTZ.newBuilder() to construct.
    private OpenCard_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OpenCard_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OpenCard_BTZ defaultInstance;
    public static OpenCard_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public OpenCard_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCard_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              open_ = input.readBool();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              time_ = input.readInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000010;
              point_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_OpenCard_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_OpenCard_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.class, protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<OpenCard_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<OpenCard_BTZ>() {
      public OpenCard_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCard_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OpenCard_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *摊牌用户
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *摊牌用户
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // optional bool open = 2;
    public static final int OPEN_FIELD_NUMBER = 2;
    private boolean open_;
    /**
     * <code>optional bool open = 2;</code>
     *
     * <pre>
     *是否摊牌
     * </pre>
     */
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool open = 2;</code>
     *
     * <pre>
     *是否摊牌
     * </pre>
     */
    public boolean getOpen() {
      return open_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *牌数据
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 card_type = 4;
    public static final int CARD_TYPE_FIELD_NUMBER = 4;
    private int cardType_;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 time = 5;
    public static final int TIME_FIELD_NUMBER = 5;
    private int time_;
    /**
     * <code>optional int32 time = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 time = 5;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTime() {
      return time_;
    }

    // optional float point = 6;
    public static final int POINT_FIELD_NUMBER = 6;
    private float point_;
    /**
     * <code>optional float point = 6;</code>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float point = 6;</code>
     */
    public float getPoint() {
      return point_;
    }

    private void initFields() {
      seatIndex_ = 0;
      open_ = false;
      cards_ = java.util.Collections.emptyList();
      cardType_ = 0;
      time_ = 0;
      point_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, open_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(6, point_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, open_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, point_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.OpenCard_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.OpenCard_BTZ}
     *
     * <pre>
     *用户摊牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.OpenCard_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_OpenCard_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_OpenCard_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.class, protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        open_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        point_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_OpenCard_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.OpenCard_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.OpenCard_BTZ build() {
        protobuf.clazz.btz.BTZRsp.OpenCard_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.OpenCard_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.OpenCard_BTZ result = new protobuf.clazz.btz.BTZRsp.OpenCard_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.open_ = open_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.point_ = point_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.OpenCard_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.OpenCard_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.OpenCard_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.OpenCard_BTZ.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.OpenCard_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.OpenCard_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *摊牌用户
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *摊牌用户
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *摊牌用户
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *摊牌用户
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // optional bool open = 2;
      private boolean open_ ;
      /**
       * <code>optional bool open = 2;</code>
       *
       * <pre>
       *是否摊牌
       * </pre>
       */
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool open = 2;</code>
       *
       * <pre>
       *是否摊牌
       * </pre>
       */
      public boolean getOpen() {
        return open_;
      }
      /**
       * <code>optional bool open = 2;</code>
       *
       * <pre>
       *是否摊牌
       * </pre>
       */
      public Builder setOpen(boolean value) {
        bitField0_ |= 0x00000002;
        open_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open = 2;</code>
       *
       * <pre>
       *是否摊牌
       * </pre>
       */
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        open_ = false;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *牌数据
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 card_type = 4;
      private int cardType_ ;
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000008;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 time = 5;
      private int time_ ;
      /**
       * <code>optional int32 time = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 time = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional int32 time = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000010;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 time = 5;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        time_ = 0;
        onChanged();
        return this;
      }

      // optional float point = 6;
      private float point_ ;
      /**
       * <code>optional float point = 6;</code>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float point = 6;</code>
       */
      public float getPoint() {
        return point_;
      }
      /**
       * <code>optional float point = 6;</code>
       */
      public Builder setPoint(float value) {
        bitField0_ |= 0x00000020;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float point = 6;</code>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        point_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.OpenCard_BTZ)
    }

    static {
      defaultInstance = new OpenCard_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.OpenCard_BTZ)
  }

  public interface CardType_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card_type = 1;
    /**
     * <code>optional int32 card_type = 1;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 card_type = 1;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    int getCardType();

    // optional int32 time = 2;
    /**
     * <code>optional int32 time = 2;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>optional int32 time = 2;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTime();
  }
  /**
   * Protobuf type {@code pdk.CardType_BTZ}
   */
  public static final class CardType_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements CardType_BTZOrBuilder {
    // Use CardType_BTZ.newBuilder() to construct.
    private CardType_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CardType_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CardType_BTZ defaultInstance;
    public static CardType_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public CardType_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CardType_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CardType_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CardType_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.CardType_BTZ.class, protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<CardType_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<CardType_BTZ>() {
      public CardType_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CardType_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CardType_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card_type = 1;
    public static final int CARD_TYPE_FIELD_NUMBER = 1;
    private int cardType_;
    /**
     * <code>optional int32 card_type = 1;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_type = 1;</code>
     *
     * <pre>
     *牌类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>optional int32 time = 2;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 time = 2;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTime() {
      return time_;
    }

    private void initFields() {
      cardType_ = 0;
      time_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cardType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cardType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.CardType_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.CardType_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.CardType_BTZ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.CardType_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CardType_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CardType_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.CardType_BTZ.class, protobuf.clazz.btz.BTZRsp.CardType_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.CardType_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_CardType_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.CardType_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.CardType_BTZ build() {
        protobuf.clazz.btz.BTZRsp.CardType_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.CardType_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.CardType_BTZ result = new protobuf.clazz.btz.BTZRsp.CardType_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.CardType_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.CardType_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.CardType_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.CardType_BTZ.getDefaultInstance()) return this;
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.CardType_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.CardType_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card_type = 1;
      private int cardType_ ;
      /**
       * <code>optional int32 card_type = 1;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card_type = 1;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 card_type = 1;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000001;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_type = 1;</code>
       *
       * <pre>
       *牌类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 time = 2;
      private int time_ ;
      /**
       * <code>optional int32 time = 2;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 time = 2;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional int32 time = 2;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 time = 2;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.CardType_BTZ)
    }

    static {
      defaultInstance = new CardType_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.CardType_BTZ)
  }

  public interface Timer_OX_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 display_time = 1;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code pdk.Timer_OX_BTZ}
   */
  public static final class Timer_OX_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements Timer_OX_BTZOrBuilder {
    // Use Timer_OX_BTZ.newBuilder() to construct.
    private Timer_OX_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Timer_OX_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Timer_OX_BTZ defaultInstance;
    public static Timer_OX_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public Timer_OX_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Timer_OX_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Timer_OX_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Timer_OX_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.class, protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<Timer_OX_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<Timer_OX_BTZ>() {
      public Timer_OX_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Timer_OX_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Timer_OX_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 display_time = 1;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 1;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 display_time = 1;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.Timer_OX_BTZ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.Timer_OX_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Timer_OX_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Timer_OX_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.class, protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Timer_OX_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ build() {
        protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ result = new protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ.getDefaultInstance()) return this;
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.Timer_OX_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 display_time = 1;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000001;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 1;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.Timer_OX_BTZ)
    }

    static {
      defaultInstance = new Timer_OX_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.Timer_OX_BTZ)
  }

  public interface Trustee_BTZOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 add_jetton = 1;
    /**
     * <code>optional int32 add_jetton = 1;</code>
     *
     * <pre>
     * 下分
     * </pre>
     */
    boolean hasAddJetton();
    /**
     * <code>optional int32 add_jetton = 1;</code>
     *
     * <pre>
     * 下分
     * </pre>
     */
    int getAddJetton();

    // optional bool is_call_banker = 2;
    /**
     * <code>optional bool is_call_banker = 2;</code>
     *
     * <pre>
     * 是否抢庄
     * </pre>
     */
    boolean hasIsCallBanker();
    /**
     * <code>optional bool is_call_banker = 2;</code>
     *
     * <pre>
     * 是否抢庄
     * </pre>
     */
    boolean getIsCallBanker();

    // optional bool is_add_jetten = 3;
    /**
     * <code>optional bool is_add_jetten = 3;</code>
     *
     * <pre>
     * 是否下分
     * </pre>
     */
    boolean hasIsAddJetten();
    /**
     * <code>optional bool is_add_jetten = 3;</code>
     *
     * <pre>
     * 是否下分
     * </pre>
     */
    boolean getIsAddJetten();

    // optional bool is_trustee = 4;
    /**
     * <code>optional bool is_trustee = 4;</code>
     *
     * <pre>
     * 是否托管
     * </pre>
     */
    boolean hasIsTrustee();
    /**
     * <code>optional bool is_trustee = 4;</code>
     *
     * <pre>
     * 是否托管
     * </pre>
     */
    boolean getIsTrustee();
  }
  /**
   * Protobuf type {@code pdk.Trustee_BTZ}
   *
   * <pre>
   * 托管信息
   * </pre>
   */
  public static final class Trustee_BTZ extends
      com.google.protobuf.GeneratedMessage
      implements Trustee_BTZOrBuilder {
    // Use Trustee_BTZ.newBuilder() to construct.
    private Trustee_BTZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Trustee_BTZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Trustee_BTZ defaultInstance;
    public static Trustee_BTZ getDefaultInstance() {
      return defaultInstance;
    }

    public Trustee_BTZ getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Trustee_BTZ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              addJetton_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isCallBanker_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isAddJetten_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isTrustee_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Trustee_BTZ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Trustee_BTZ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.btz.BTZRsp.Trustee_BTZ.class, protobuf.clazz.btz.BTZRsp.Trustee_BTZ.Builder.class);
    }

    public static com.google.protobuf.Parser<Trustee_BTZ> PARSER =
        new com.google.protobuf.AbstractParser<Trustee_BTZ>() {
      public Trustee_BTZ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trustee_BTZ(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Trustee_BTZ> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 add_jetton = 1;
    public static final int ADD_JETTON_FIELD_NUMBER = 1;
    private int addJetton_;
    /**
     * <code>optional int32 add_jetton = 1;</code>
     *
     * <pre>
     * 下分
     * </pre>
     */
    public boolean hasAddJetton() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 add_jetton = 1;</code>
     *
     * <pre>
     * 下分
     * </pre>
     */
    public int getAddJetton() {
      return addJetton_;
    }

    // optional bool is_call_banker = 2;
    public static final int IS_CALL_BANKER_FIELD_NUMBER = 2;
    private boolean isCallBanker_;
    /**
     * <code>optional bool is_call_banker = 2;</code>
     *
     * <pre>
     * 是否抢庄
     * </pre>
     */
    public boolean hasIsCallBanker() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_call_banker = 2;</code>
     *
     * <pre>
     * 是否抢庄
     * </pre>
     */
    public boolean getIsCallBanker() {
      return isCallBanker_;
    }

    // optional bool is_add_jetten = 3;
    public static final int IS_ADD_JETTEN_FIELD_NUMBER = 3;
    private boolean isAddJetten_;
    /**
     * <code>optional bool is_add_jetten = 3;</code>
     *
     * <pre>
     * 是否下分
     * </pre>
     */
    public boolean hasIsAddJetten() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_add_jetten = 3;</code>
     *
     * <pre>
     * 是否下分
     * </pre>
     */
    public boolean getIsAddJetten() {
      return isAddJetten_;
    }

    // optional bool is_trustee = 4;
    public static final int IS_TRUSTEE_FIELD_NUMBER = 4;
    private boolean isTrustee_;
    /**
     * <code>optional bool is_trustee = 4;</code>
     *
     * <pre>
     * 是否托管
     * </pre>
     */
    public boolean hasIsTrustee() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool is_trustee = 4;</code>
     *
     * <pre>
     * 是否托管
     * </pre>
     */
    public boolean getIsTrustee() {
      return isTrustee_;
    }

    private void initFields() {
      addJetton_ = 0;
      isCallBanker_ = false;
      isAddJetten_ = false;
      isTrustee_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, addJetton_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isCallBanker_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isAddJetten_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isTrustee_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, addJetton_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isCallBanker_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isAddJetten_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isTrustee_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.btz.BTZRsp.Trustee_BTZ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.btz.BTZRsp.Trustee_BTZ prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pdk.Trustee_BTZ}
     *
     * <pre>
     * 托管信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.btz.BTZRsp.Trustee_BTZOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Trustee_BTZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Trustee_BTZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.btz.BTZRsp.Trustee_BTZ.class, protobuf.clazz.btz.BTZRsp.Trustee_BTZ.Builder.class);
      }

      // Construct using protobuf.clazz.btz.BTZRsp.Trustee_BTZ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addJetton_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isCallBanker_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isAddJetten_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        isTrustee_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.btz.BTZRsp.internal_static_pdk_Trustee_BTZ_descriptor;
      }

      public protobuf.clazz.btz.BTZRsp.Trustee_BTZ getDefaultInstanceForType() {
        return protobuf.clazz.btz.BTZRsp.Trustee_BTZ.getDefaultInstance();
      }

      public protobuf.clazz.btz.BTZRsp.Trustee_BTZ build() {
        protobuf.clazz.btz.BTZRsp.Trustee_BTZ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.btz.BTZRsp.Trustee_BTZ buildPartial() {
        protobuf.clazz.btz.BTZRsp.Trustee_BTZ result = new protobuf.clazz.btz.BTZRsp.Trustee_BTZ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addJetton_ = addJetton_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isCallBanker_ = isCallBanker_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isAddJetten_ = isAddJetten_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isTrustee_ = isTrustee_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.btz.BTZRsp.Trustee_BTZ) {
          return mergeFrom((protobuf.clazz.btz.BTZRsp.Trustee_BTZ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.btz.BTZRsp.Trustee_BTZ other) {
        if (other == protobuf.clazz.btz.BTZRsp.Trustee_BTZ.getDefaultInstance()) return this;
        if (other.hasAddJetton()) {
          setAddJetton(other.getAddJetton());
        }
        if (other.hasIsCallBanker()) {
          setIsCallBanker(other.getIsCallBanker());
        }
        if (other.hasIsAddJetten()) {
          setIsAddJetten(other.getIsAddJetten());
        }
        if (other.hasIsTrustee()) {
          setIsTrustee(other.getIsTrustee());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.btz.BTZRsp.Trustee_BTZ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.btz.BTZRsp.Trustee_BTZ) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 add_jetton = 1;
      private int addJetton_ ;
      /**
       * <code>optional int32 add_jetton = 1;</code>
       *
       * <pre>
       * 下分
       * </pre>
       */
      public boolean hasAddJetton() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 add_jetton = 1;</code>
       *
       * <pre>
       * 下分
       * </pre>
       */
      public int getAddJetton() {
        return addJetton_;
      }
      /**
       * <code>optional int32 add_jetton = 1;</code>
       *
       * <pre>
       * 下分
       * </pre>
       */
      public Builder setAddJetton(int value) {
        bitField0_ |= 0x00000001;
        addJetton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 add_jetton = 1;</code>
       *
       * <pre>
       * 下分
       * </pre>
       */
      public Builder clearAddJetton() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addJetton_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_call_banker = 2;
      private boolean isCallBanker_ ;
      /**
       * <code>optional bool is_call_banker = 2;</code>
       *
       * <pre>
       * 是否抢庄
       * </pre>
       */
      public boolean hasIsCallBanker() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_call_banker = 2;</code>
       *
       * <pre>
       * 是否抢庄
       * </pre>
       */
      public boolean getIsCallBanker() {
        return isCallBanker_;
      }
      /**
       * <code>optional bool is_call_banker = 2;</code>
       *
       * <pre>
       * 是否抢庄
       * </pre>
       */
      public Builder setIsCallBanker(boolean value) {
        bitField0_ |= 0x00000002;
        isCallBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_call_banker = 2;</code>
       *
       * <pre>
       * 是否抢庄
       * </pre>
       */
      public Builder clearIsCallBanker() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isCallBanker_ = false;
        onChanged();
        return this;
      }

      // optional bool is_add_jetten = 3;
      private boolean isAddJetten_ ;
      /**
       * <code>optional bool is_add_jetten = 3;</code>
       *
       * <pre>
       * 是否下分
       * </pre>
       */
      public boolean hasIsAddJetten() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_add_jetten = 3;</code>
       *
       * <pre>
       * 是否下分
       * </pre>
       */
      public boolean getIsAddJetten() {
        return isAddJetten_;
      }
      /**
       * <code>optional bool is_add_jetten = 3;</code>
       *
       * <pre>
       * 是否下分
       * </pre>
       */
      public Builder setIsAddJetten(boolean value) {
        bitField0_ |= 0x00000004;
        isAddJetten_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_add_jetten = 3;</code>
       *
       * <pre>
       * 是否下分
       * </pre>
       */
      public Builder clearIsAddJetten() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isAddJetten_ = false;
        onChanged();
        return this;
      }

      // optional bool is_trustee = 4;
      private boolean isTrustee_ ;
      /**
       * <code>optional bool is_trustee = 4;</code>
       *
       * <pre>
       * 是否托管
       * </pre>
       */
      public boolean hasIsTrustee() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool is_trustee = 4;</code>
       *
       * <pre>
       * 是否托管
       * </pre>
       */
      public boolean getIsTrustee() {
        return isTrustee_;
      }
      /**
       * <code>optional bool is_trustee = 4;</code>
       *
       * <pre>
       * 是否托管
       * </pre>
       */
      public Builder setIsTrustee(boolean value) {
        bitField0_ |= 0x00000008;
        isTrustee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_trustee = 4;</code>
       *
       * <pre>
       * 是否托管
       * </pre>
       */
      public Builder clearIsTrustee() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isTrustee_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pdk.Trustee_BTZ)
    }

    static {
      defaultInstance = new Trustee_BTZ(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pdk.Trustee_BTZ)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_RoomPlayerResponseBTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_RoomPlayerResponseBTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_PukeGameEndBTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_PukeGameEndBTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_TableResponse_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_TableResponse_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_CallBanker_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_CallBanker_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_CallBankerInfo_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_CallBankerInfo_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_GameStart_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_GameStart_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_AddJetton_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_AddJetton_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_SendCard_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_SendCard_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_OpenCard_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_OpenCard_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_CardType_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_CardType_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_Timer_OX_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_Timer_OX_BTZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pdk_Trustee_BTZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pdk_Trustee_BTZ_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022btz/BtzProto.proto\022\003pdk\032\024basic/protoco" +
      "l.proto\"\245\002\n\025RoomPlayerResponseBTZ\022\022\n\nacc" +
      "ount_id\030\001 \001(\003\022\021\n\tuser_name\030\002 \001(\t\022\024\n\014head" +
      "_img_url\030\003 \001(\t\022\022\n\nseat_index\030\004 \001(\005\022\n\n\002ip" +
      "\030\005 \001(\t\022\016\n\006online\030\006 \001(\005\022\013\n\003sex\030\007 \001(\005\022\r\n\005s" +
      "core\030\010 \001(\002\022\r\n\005ready\030\t \001(\005\022\017\n\007ip_addr\030\n \001" +
      "(\t\022%\n\rlocationInfor\030\013 \001(\0132\016.LocationInfo" +
      "r\022\022\n\nis_trustee\030\014 \001(\010\022\r\n\005money\030\r \001(\003\022\014\n\004" +
      "gold\030\016 \001(\003\022\013\n\003you\030\017 \001(\005\"[\n\016PukeGameEndBT" +
      "Z\022\022\n\nwin_counts\030\t \003(\005\022\023\n\013lose_counts\030\n \003",
      "(\005\022\021\n\tscore_max\030\013 \003(\005\022\r\n\005score\030\014 \003(\002\"\351\004\n" +
      "\021TableResponse_BTZ\022\022\n\ncell_score\030\001 \001(\005\022\025" +
      "\n\rbanker_player\030\002 \001(\005\022\026\n\016current_player\030" +
      "\003 \001(\005\022\022\n\nscene_info\030\004 \001(\005\022\022\n\nadd_jetter\030" +
      "\005 \003(\005\022\017\n\007trustee\030\006 \003(\010\022\024\n\014winner_order\030\007" +
      " \003(\005\022\022\n\ncard_count\030\010 \003(\005\022\'\n\ncards_data\030\t" +
      " \003(\0132\023.Int32ArrayResponse\022\021\n\topen_card\030\n" +
      " \003(\010\022\021\n\tend_score\030\014 \001(\005\022\030\n\020call_banker_i" +
      "nfo\030\r \003(\005\022\025\n\rplayer_status\030\016 \001(\010\022\021\n\tcard" +
      "_type\030\017 \003(\005\022\021\n\tgame_time\030\020 \003(\005\022\r\n\005point\030",
      "\030 \003(\002\022\024\n\014trustee_type\030\021 \001(\005\022\034\n\troom_info" +
      "\030\024 \001(\0132\t.RoomInfo\022+\n\007players\030\025 \003(\0132\032.pdk" +
      ".RoomPlayerResponseBTZ\022\024\n\014display_time\030\022" +
      " \001(\005\022$\n\tsend_card\030\023 \001(\0132\021.pdk.CardType_B" +
      "TZ\0224\n\023my_call_banker_info\030\026 \001(\0132\027.pdk.Ca" +
      "llBankerInfo_BTZ\022&\n\ngame_start\030\027 \001(\0132\022.p" +
      "dk.GameStart_BTZ\"9\n\016CallBanker_BTZ\022\023\n\013ca" +
      "ll_banker\030\001 \001(\005\022\022\n\nseat_index\030\002 \001(\005\"D\n\022C" +
      "allBankerInfo_BTZ\022\030\n\020call_banker_info\030\001 " +
      "\003(\005\022\024\n\014display_time\030\002 \001(\005\"c\n\rGameStart_B",
      "TZ\022(\n\013jetton_cell\030\001 \003(\0132\023.Int32ArrayResp" +
      "onse\022\022\n\ncur_banker\030\003 \001(\005\022\024\n\014display_time" +
      "\030\004 \001(\005\"9\n\rAddJetton_BTZ\022\024\n\014jetton_score\030" +
      "\001 \001(\005\022\022\n\nseat_index\030\002 \001(\005\"\\\n\014SendCard_BT" +
      "Z\022&\n\tsend_card\030\001 \003(\0132\023.Int32ArrayRespons" +
      "e\022\024\n\014display_time\030\002 \001(\005\022\016\n\006tou_zi\030\003 \003(\005\"" +
      "o\n\014OpenCard_BTZ\022\022\n\nseat_index\030\001 \001(\005\022\014\n\004o" +
      "pen\030\002 \001(\010\022\r\n\005cards\030\003 \003(\005\022\021\n\tcard_type\030\004 " +
      "\001(\005\022\014\n\004time\030\005 \001(\005\022\r\n\005point\030\006 \001(\002\"/\n\014Card" +
      "Type_BTZ\022\021\n\tcard_type\030\001 \001(\005\022\014\n\004time\030\002 \001(",
      "\005\"$\n\014Timer_OX_BTZ\022\024\n\014display_time\030\001 \001(\005\"" +
      "d\n\013Trustee_BTZ\022\022\n\nadd_jetton\030\001 \001(\005\022\026\n\016is" +
      "_call_banker\030\002 \001(\010\022\025\n\ris_add_jetten\030\003 \001(" +
      "\010\022\022\n\nis_trustee\030\004 \001(\010B\034\n\022protobuf.clazz." +
      "btzB\006BTZRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pdk_RoomPlayerResponseBTZ_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pdk_RoomPlayerResponseBTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_RoomPlayerResponseBTZ_descriptor,
              new java.lang.String[] { "AccountId", "UserName", "HeadImgUrl", "SeatIndex", "Ip", "Online", "Sex", "Score", "Ready", "IpAddr", "LocationInfor", "IsTrustee", "Money", "Gold", "You", });
          internal_static_pdk_PukeGameEndBTZ_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_pdk_PukeGameEndBTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_PukeGameEndBTZ_descriptor,
              new java.lang.String[] { "WinCounts", "LoseCounts", "ScoreMax", "Score", });
          internal_static_pdk_TableResponse_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_pdk_TableResponse_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_TableResponse_BTZ_descriptor,
              new java.lang.String[] { "CellScore", "BankerPlayer", "CurrentPlayer", "SceneInfo", "AddJetter", "Trustee", "WinnerOrder", "CardCount", "CardsData", "OpenCard", "EndScore", "CallBankerInfo", "PlayerStatus", "CardType", "GameTime", "Point", "TrusteeType", "RoomInfo", "Players", "DisplayTime", "SendCard", "MyCallBankerInfo", "GameStart", });
          internal_static_pdk_CallBanker_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_pdk_CallBanker_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_CallBanker_BTZ_descriptor,
              new java.lang.String[] { "CallBanker", "SeatIndex", });
          internal_static_pdk_CallBankerInfo_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_pdk_CallBankerInfo_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_CallBankerInfo_BTZ_descriptor,
              new java.lang.String[] { "CallBankerInfo", "DisplayTime", });
          internal_static_pdk_GameStart_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_pdk_GameStart_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_GameStart_BTZ_descriptor,
              new java.lang.String[] { "JettonCell", "CurBanker", "DisplayTime", });
          internal_static_pdk_AddJetton_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_pdk_AddJetton_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_AddJetton_BTZ_descriptor,
              new java.lang.String[] { "JettonScore", "SeatIndex", });
          internal_static_pdk_SendCard_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_pdk_SendCard_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_SendCard_BTZ_descriptor,
              new java.lang.String[] { "SendCard", "DisplayTime", "TouZi", });
          internal_static_pdk_OpenCard_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_pdk_OpenCard_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_OpenCard_BTZ_descriptor,
              new java.lang.String[] { "SeatIndex", "Open", "Cards", "CardType", "Time", "Point", });
          internal_static_pdk_CardType_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_pdk_CardType_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_CardType_BTZ_descriptor,
              new java.lang.String[] { "CardType", "Time", });
          internal_static_pdk_Timer_OX_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_pdk_Timer_OX_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_Timer_OX_BTZ_descriptor,
              new java.lang.String[] { "DisplayTime", });
          internal_static_pdk_Trustee_BTZ_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_pdk_Trustee_BTZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pdk_Trustee_BTZ_descriptor,
              new java.lang.String[] { "AddJetton", "IsCallBanker", "IsAddJetten", "IsTrustee", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
