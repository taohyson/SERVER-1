// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wsk/yxzd.proto

package protobuf.clazz.yxzd;

public final class yxzdkRsp {
  private yxzdkRsp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GameStart_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 2;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code yxzd.GameStart_yxzd}
   *
   * <pre>
   *1001
   * </pre>
   */
  public static final class GameStart_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements GameStart_yxzdOrBuilder {
    // Use GameStart_yxzd.newBuilder() to construct.
    private GameStart_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameStart_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameStart_yxzd defaultInstance;
    public static GameStart_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public GameStart_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameStart_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_GameStart_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_GameStart_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<GameStart_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<GameStart_yxzd>() {
      public GameStart_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameStart_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameStart_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 2;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, players_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.GameStart_yxzd}
     *
     * <pre>
     *1001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_GameStart_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_GameStart_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playersBuilder_.clear();
        }
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_GameStart_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.GameStart_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 2;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 2;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.GameStart_yxzd)
    }

    static {
      defaultInstance = new GameStart_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.GameStart_yxzd)
  }

  public interface OutCardDataWsk_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 out_card_player = 1;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    boolean hasOutCardPlayer();
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    int getOutCardPlayer();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 cards_count = 3;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    boolean hasCardsCount();
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getCardsCount();

    // optional int32 card_type = 4;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType();

    // optional int32 cur_player = 5;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurPlayer();
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurPlayer();

    // repeated int32 pr_cards_data = 6;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 7;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 8;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional bool is_first_out = 9;
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    boolean getIsFirstOut();

    // optional int32 display_time = 10;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 user_can_out_data = 11;
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutDataList();
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutData(int index);

    // optional int32 user_can_out_count = 12;
    /**
     * <code>optional int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    boolean hasUserCanOutCount();
    /**
     * <code>optional int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCount();

    // repeated int32 user_get_score = 13;
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserGetScoreList();
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    int getUserGetScoreCount();
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    int getUserGetScore(int index);

    // repeated int32 hand_card_count = 14;
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 15;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);

    // repeated int32 win_order = 16;
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);

    // optional int32 is_current_first_out = 17;
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    boolean hasIsCurrentFirstOut();
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    int getIsCurrentFirstOut();

    // optional bool is_can_out_friendcards = 18;
    /**
     * <code>optional bool is_can_out_friendcards = 18;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    boolean hasIsCanOutFriendcards();
    /**
     * <code>optional bool is_can_out_friendcards = 18;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    boolean getIsCanOutFriendcards();

    // optional bool is_can_opreate = 19;
    /**
     * <code>optional bool is_can_opreate = 19;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    boolean hasIsCanOpreate();
    /**
     * <code>optional bool is_can_opreate = 19;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    boolean getIsCanOpreate();
  }
  /**
   * Protobuf type {@code yxzd.OutCardDataWsk_yxzd}
   *
   * <pre>
   *用户出牌 1002
   * </pre>
   */
  public static final class OutCardDataWsk_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements OutCardDataWsk_yxzdOrBuilder {
    // Use OutCardDataWsk_yxzd.newBuilder() to construct.
    private OutCardDataWsk_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OutCardDataWsk_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OutCardDataWsk_yxzd defaultInstance;
    public static OutCardDataWsk_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public OutCardDataWsk_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OutCardDataWsk_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              outCardPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardsCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              curPlayer_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              isFirstOut_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              userCanOutData_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              userCanOutCount_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              userGetScore_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                userGetScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userGetScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00004000;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              bitField0_ |= 0x00000200;
              isCurrentFirstOut_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000400;
              isCanOutFriendcards_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00000800;
              isCanOpreate_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_OutCardDataWsk_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_OutCardDataWsk_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<OutCardDataWsk_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<OutCardDataWsk_yxzd>() {
      public OutCardDataWsk_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutCardDataWsk_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OutCardDataWsk_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 out_card_player = 1;
    public static final int OUT_CARD_PLAYER_FIELD_NUMBER = 1;
    private int outCardPlayer_;
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public boolean hasOutCardPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 out_card_player = 1;</code>
     *
     * <pre>
     *出牌玩家
     * </pre>
     */
    public int getOutCardPlayer() {
      return outCardPlayer_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 cards_count = 3;
    public static final int CARDS_COUNT_FIELD_NUMBER = 3;
    private int cardsCount_;
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public boolean hasCardsCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cards_count = 3;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getCardsCount() {
      return cardsCount_;
    }

    // optional int32 card_type = 4;
    public static final int CARD_TYPE_FIELD_NUMBER = 4;
    private int cardType_;
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 cur_player = 5;
    public static final int CUR_PLAYER_FIELD_NUMBER = 5;
    private int curPlayer_;
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cur_player = 5;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurPlayer() {
      return curPlayer_;
    }

    // repeated int32 pr_cards_data = 6;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 6;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 7;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 7;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 7;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 8;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 8;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional bool is_first_out = 9;
    public static final int IS_FIRST_OUT_FIELD_NUMBER = 9;
    private boolean isFirstOut_;
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_first_out = 9;</code>
     *
     * <pre>
     *出牌玩家是否首出
     * </pre>
     */
    public boolean getIsFirstOut() {
      return isFirstOut_;
    }

    // optional int32 display_time = 10;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 10;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 10;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 user_can_out_data = 11;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> userCanOutData_;
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated int32 user_can_out_data = 11;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }

    // optional int32 user_can_out_count = 12;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 12;
    private int userCanOutCount_;
    /**
     * <code>optional int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public boolean hasUserCanOutCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 user_can_out_count = 12;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCount() {
      return userCanOutCount_;
    }

    // repeated int32 user_get_score = 13;
    public static final int USER_GET_SCORE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> userGetScore_;
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserGetScoreList() {
      return userGetScore_;
    }
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public int getUserGetScoreCount() {
      return userGetScore_.size();
    }
    /**
     * <code>repeated int32 user_get_score = 13;</code>
     *
     * <pre>
     *玩家抓分
     * </pre>
     */
    public int getUserGetScore(int index) {
      return userGetScore_.get(index);
    }

    // repeated int32 hand_card_count = 14;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 14;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 15;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 15;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    // repeated int32 win_order = 16;
    public static final int WIN_ORDER_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 16;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    // optional int32 is_current_first_out = 17;
    public static final int IS_CURRENT_FIRST_OUT_FIELD_NUMBER = 17;
    private int isCurrentFirstOut_;
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    public boolean hasIsCurrentFirstOut() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 is_current_first_out = 17;</code>
     *
     * <pre>
     *当前操作玩家是否首出
     * </pre>
     */
    public int getIsCurrentFirstOut() {
      return isCurrentFirstOut_;
    }

    // optional bool is_can_out_friendcards = 18;
    public static final int IS_CAN_OUT_FRIENDCARDS_FIELD_NUMBER = 18;
    private boolean isCanOutFriendcards_;
    /**
     * <code>optional bool is_can_out_friendcards = 18;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    public boolean hasIsCanOutFriendcards() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool is_can_out_friendcards = 18;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    public boolean getIsCanOutFriendcards() {
      return isCanOutFriendcards_;
    }

    // optional bool is_can_opreate = 19;
    public static final int IS_CAN_OPREATE_FIELD_NUMBER = 19;
    private boolean isCanOpreate_;
    /**
     * <code>optional bool is_can_opreate = 19;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    public boolean hasIsCanOpreate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_can_opreate = 19;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    public boolean getIsCanOpreate() {
      return isCanOpreate_;
    }

    private void initFields() {
      outCardPlayer_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardsCount_ = 0;
      cardType_ = 0;
      curPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      isFirstOut_ = false;
      displayTime_ = 0;
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = 0;
      userGetScore_ = java.util.Collections.emptyList();
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
      winOrder_ = java.util.Collections.emptyList();
      isCurrentFirstOut_ = 0;
      isCanOutFriendcards_ = false;
      isCanOpreate_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, outCardPlayer_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, curPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(6, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(9, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, displayTime_);
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeInt32(11, userCanOutData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, userCanOutCount_);
      }
      for (int i = 0; i < userGetScore_.size(); i++) {
        output.writeInt32(13, userGetScore_.get(i));
      }
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(14, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(15, handCardsData_.get(i));
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(16, winOrder_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(17, isCurrentFirstOut_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(18, isCanOutFriendcards_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(19, isCanOpreate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardsCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, curPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutData_.get(i));
        }
        size += dataSize;
        size += 1 * getUserCanOutDataList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, userCanOutCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userGetScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userGetScore_.get(i));
        }
        size += dataSize;
        size += 1 * getUserGetScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, handCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 2 * getWinOrderList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, isCurrentFirstOut_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, isCanOutFriendcards_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, isCanOpreate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.OutCardDataWsk_yxzd}
     *
     * <pre>
     *用户出牌 1002
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_OutCardDataWsk_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_OutCardDataWsk_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        outCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        curPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        isFirstOut_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        userCanOutCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          handCardsDataBuilder_.clear();
        }
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        isCurrentFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        isCanOutFriendcards_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        isCanOpreate_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_OutCardDataWsk_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outCardPlayer_ = outCardPlayer_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardsCount_ = cardsCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curPlayer_ = curPlayer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.userCanOutData_ = userCanOutData_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          userGetScore_ = java.util.Collections.unmodifiableList(userGetScore_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.userGetScore_ = userGetScore_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.winOrder_ = winOrder_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isCurrentFirstOut_ = isCurrentFirstOut_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isCanOutFriendcards_ = isCanOutFriendcards_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isCanOpreate_ = isCanOpreate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd.getDefaultInstance()) return this;
        if (other.hasOutCardPlayer()) {
          setOutCardPlayer(other.getOutCardPlayer());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardsCount()) {
          setCardsCount(other.getCardsCount());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasCurPlayer()) {
          setCurPlayer(other.getCurPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.userCanOutData_.isEmpty()) {
          if (userCanOutData_.isEmpty()) {
            userCanOutData_ = other.userCanOutData_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureUserCanOutDataIsMutable();
            userCanOutData_.addAll(other.userCanOutData_);
          }
          onChanged();
        }
        if (other.hasUserCanOutCount()) {
          setUserCanOutCount(other.getUserCanOutCount());
        }
        if (!other.userGetScore_.isEmpty()) {
          if (userGetScore_.isEmpty()) {
            userGetScore_ = other.userGetScore_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureUserGetScoreIsMutable();
            userGetScore_.addAll(other.userGetScore_);
          }
          onChanged();
        }
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00004000);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        if (other.hasIsCurrentFirstOut()) {
          setIsCurrentFirstOut(other.getIsCurrentFirstOut());
        }
        if (other.hasIsCanOutFriendcards()) {
          setIsCanOutFriendcards(other.getIsCanOutFriendcards());
        }
        if (other.hasIsCanOpreate()) {
          setIsCanOpreate(other.getIsCanOpreate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.OutCardDataWsk_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 out_card_player = 1;
      private int outCardPlayer_ ;
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public boolean hasOutCardPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public int getOutCardPlayer() {
        return outCardPlayer_;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder setOutCardPlayer(int value) {
        bitField0_ |= 0x00000001;
        outCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 out_card_player = 1;</code>
       *
       * <pre>
       *出牌玩家
       * </pre>
       */
      public Builder clearOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 cards_count = 3;
      private int cardsCount_ ;
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public boolean hasCardsCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getCardsCount() {
        return cardsCount_;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setCardsCount(int value) {
        bitField0_ |= 0x00000004;
        cardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cards_count = 3;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_type = 4;
      private int cardType_ ;
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000008;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_player = 5;
      private int curPlayer_ ;
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurPlayer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurPlayer() {
        return curPlayer_;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurPlayer(int value) {
        bitField0_ |= 0x00000010;
        curPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_player = 5;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurPlayer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        curPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 6;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 6;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 7;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000040;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 7;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 8;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000080;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_first_out = 9;
      private boolean isFirstOut_ ;
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public boolean getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public Builder setIsFirstOut(boolean value) {
        bitField0_ |= 0x00000100;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_first_out = 9;</code>
       *
       * <pre>
       *出牌玩家是否首出
       * </pre>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isFirstOut_ = false;
        onChanged();
        return this;
      }

      // optional int32 display_time = 10;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000200;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 10;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 user_can_out_data = 11;
      private java.util.List<java.lang.Integer> userCanOutData_ = java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          userCanOutData_ = new java.util.ArrayList<java.lang.Integer>(userCanOutData_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutDataList() {
        return java.util.Collections.unmodifiableList(userCanOutData_);
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        return userCanOutData_.size();
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutData(int index) {
        return userCanOutData_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutDataIsMutable();
        super.addAll(values, userCanOutData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 11;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional int32 user_can_out_count = 12;
      private int userCanOutCount_ ;
      /**
       * <code>optional int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public boolean hasUserCanOutCount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCount() {
        return userCanOutCount_;
      }
      /**
       * <code>optional int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setUserCanOutCount(int value) {
        bitField0_ |= 0x00000800;
        userCanOutCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_can_out_count = 12;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        userCanOutCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 user_get_score = 13;
      private java.util.List<java.lang.Integer> userGetScore_ = java.util.Collections.emptyList();
      private void ensureUserGetScoreIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          userGetScore_ = new java.util.ArrayList<java.lang.Integer>(userGetScore_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserGetScoreList() {
        return java.util.Collections.unmodifiableList(userGetScore_);
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public int getUserGetScoreCount() {
        return userGetScore_.size();
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public int getUserGetScore(int index) {
        return userGetScore_.get(index);
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder setUserGetScore(
          int index, int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder addUserGetScore(int value) {
        ensureUserGetScoreIsMutable();
        userGetScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder addAllUserGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserGetScoreIsMutable();
        super.addAll(values, userGetScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_get_score = 13;</code>
       *
       * <pre>
       *玩家抓分
       * </pre>
       */
      public Builder clearUserGetScore() {
        userGetScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 hand_card_count = 14;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 14;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 15;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 15;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // repeated int32 win_order = 16;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 16;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional int32 is_current_first_out = 17;
      private int isCurrentFirstOut_ ;
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public boolean hasIsCurrentFirstOut() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public int getIsCurrentFirstOut() {
        return isCurrentFirstOut_;
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public Builder setIsCurrentFirstOut(int value) {
        bitField0_ |= 0x00010000;
        isCurrentFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_current_first_out = 17;</code>
       *
       * <pre>
       *当前操作玩家是否首出
       * </pre>
       */
      public Builder clearIsCurrentFirstOut() {
        bitField0_ = (bitField0_ & ~0x00010000);
        isCurrentFirstOut_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_can_out_friendcards = 18;
      private boolean isCanOutFriendcards_ ;
      /**
       * <code>optional bool is_can_out_friendcards = 18;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public boolean hasIsCanOutFriendcards() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool is_can_out_friendcards = 18;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public boolean getIsCanOutFriendcards() {
        return isCanOutFriendcards_;
      }
      /**
       * <code>optional bool is_can_out_friendcards = 18;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public Builder setIsCanOutFriendcards(boolean value) {
        bitField0_ |= 0x00020000;
        isCanOutFriendcards_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_can_out_friendcards = 18;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public Builder clearIsCanOutFriendcards() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isCanOutFriendcards_ = false;
        onChanged();
        return this;
      }

      // optional bool is_can_opreate = 19;
      private boolean isCanOpreate_ ;
      /**
       * <code>optional bool is_can_opreate = 19;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public boolean hasIsCanOpreate() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool is_can_opreate = 19;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public boolean getIsCanOpreate() {
        return isCanOpreate_;
      }
      /**
       * <code>optional bool is_can_opreate = 19;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public Builder setIsCanOpreate(boolean value) {
        bitField0_ |= 0x00040000;
        isCanOpreate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_can_opreate = 19;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public Builder clearIsCanOpreate() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isCanOpreate_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.OutCardDataWsk_yxzd)
    }

    static {
      defaultInstance = new OutCardDataWsk_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.OutCardDataWsk_yxzd)
  }

  public interface RefreshScore_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 get_score = 1;
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getGetScoreList();
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getGetScoreCount();
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getGetScore(int index);

    // optional int32 table_score = 2;
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    boolean hasTableScore();
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    int getTableScore();

    // repeated int32 seat_team = 3;
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    java.util.List<java.lang.Integer> getSeatTeamList();
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    int getSeatTeamCount();
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    int getSeatTeam(int index);

    // repeated int32 game_score = 4;
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    java.util.List<java.lang.Integer> getGameScoreList();
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getGameScoreCount();
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getGameScore(int index);
  }
  /**
   * Protobuf type {@code yxzd.RefreshScore_yxzd}
   *
   * <pre>
   *刷新用户抓分 1003
   * </pre>
   */
  public static final class RefreshScore_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements RefreshScore_yxzdOrBuilder {
    // Use RefreshScore_yxzd.newBuilder() to construct.
    private RefreshScore_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshScore_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshScore_yxzd defaultInstance;
    public static RefreshScore_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshScore_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshScore_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              getScore_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                getScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              tableScore_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                seatTeam_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              seatTeam_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                seatTeam_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                seatTeam_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          seatTeam_ = java.util.Collections.unmodifiableList(seatTeam_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameScore_ = java.util.Collections.unmodifiableList(gameScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshScore_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshScore_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshScore_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<RefreshScore_yxzd>() {
      public RefreshScore_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshScore_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshScore_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 get_score = 1;
    public static final int GET_SCORE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> getScore_;
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGetScoreList() {
      return getScore_;
    }
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getGetScoreCount() {
      return getScore_.size();
    }
    /**
     * <code>repeated int32 get_score = 1;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getGetScore(int index) {
      return getScore_.get(index);
    }

    // optional int32 table_score = 2;
    public static final int TABLE_SCORE_FIELD_NUMBER = 2;
    private int tableScore_;
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    public boolean hasTableScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 table_score = 2;</code>
     *
     * <pre>
     *桌面分
     * </pre>
     */
    public int getTableScore() {
      return tableScore_;
    }

    // repeated int32 seat_team = 3;
    public static final int SEAT_TEAM_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> seatTeam_;
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSeatTeamList() {
      return seatTeam_;
    }
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    public int getSeatTeamCount() {
      return seatTeam_.size();
    }
    /**
     * <code>repeated int32 seat_team = 3;</code>
     *
     * <pre>
     *队伍
     * </pre>
     */
    public int getSeatTeam(int index) {
      return seatTeam_.get(index);
    }

    // repeated int32 game_score = 4;
    public static final int GAME_SCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> gameScore_;
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGameScoreList() {
      return gameScore_;
    }
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getGameScoreCount() {
      return gameScore_.size();
    }
    /**
     * <code>repeated int32 game_score = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getGameScore(int index) {
      return gameScore_.get(index);
    }

    private void initFields() {
      getScore_ = java.util.Collections.emptyList();
      tableScore_ = 0;
      seatTeam_ = java.util.Collections.emptyList();
      gameScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < getScore_.size(); i++) {
        output.writeInt32(1, getScore_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, tableScore_);
      }
      for (int i = 0; i < seatTeam_.size(); i++) {
        output.writeInt32(3, seatTeam_.get(i));
      }
      for (int i = 0; i < gameScore_.size(); i++) {
        output.writeInt32(4, gameScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < getScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(getScore_.get(i));
        }
        size += dataSize;
        size += 1 * getGetScoreList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tableScore_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seatTeam_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(seatTeam_.get(i));
        }
        size += dataSize;
        size += 1 * getSeatTeamList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gameScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gameScore_.get(i));
        }
        size += dataSize;
        size += 1 * getGameScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.RefreshScore_yxzd}
     *
     * <pre>
     *刷新用户抓分 1003
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshScore_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshScore_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        tableScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        seatTeam_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        gameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshScore_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.getScore_ = getScore_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableScore_ = tableScore_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          seatTeam_ = java.util.Collections.unmodifiableList(seatTeam_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.seatTeam_ = seatTeam_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameScore_ = java.util.Collections.unmodifiableList(gameScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameScore_ = gameScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd.getDefaultInstance()) return this;
        if (!other.getScore_.isEmpty()) {
          if (getScore_.isEmpty()) {
            getScore_ = other.getScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGetScoreIsMutable();
            getScore_.addAll(other.getScore_);
          }
          onChanged();
        }
        if (other.hasTableScore()) {
          setTableScore(other.getTableScore());
        }
        if (!other.seatTeam_.isEmpty()) {
          if (seatTeam_.isEmpty()) {
            seatTeam_ = other.seatTeam_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSeatTeamIsMutable();
            seatTeam_.addAll(other.seatTeam_);
          }
          onChanged();
        }
        if (!other.gameScore_.isEmpty()) {
          if (gameScore_.isEmpty()) {
            gameScore_ = other.gameScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameScoreIsMutable();
            gameScore_.addAll(other.gameScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.RefreshScore_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 get_score = 1;
      private java.util.List<java.lang.Integer> getScore_ = java.util.Collections.emptyList();
      private void ensureGetScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          getScore_ = new java.util.ArrayList<java.lang.Integer>(getScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGetScoreList() {
        return java.util.Collections.unmodifiableList(getScore_);
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getGetScoreCount() {
        return getScore_.size();
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getGetScore(int index) {
        return getScore_.get(index);
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder setGetScore(
          int index, int value) {
        ensureGetScoreIsMutable();
        getScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addGetScore(int value) {
        ensureGetScoreIsMutable();
        getScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addAllGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGetScoreIsMutable();
        super.addAll(values, getScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 1;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder clearGetScore() {
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 table_score = 2;
      private int tableScore_ ;
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public boolean hasTableScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public int getTableScore() {
        return tableScore_;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public Builder setTableScore(int value) {
        bitField0_ |= 0x00000002;
        tableScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_score = 2;</code>
       *
       * <pre>
       *桌面分
       * </pre>
       */
      public Builder clearTableScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableScore_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 seat_team = 3;
      private java.util.List<java.lang.Integer> seatTeam_ = java.util.Collections.emptyList();
      private void ensureSeatTeamIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          seatTeam_ = new java.util.ArrayList<java.lang.Integer>(seatTeam_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSeatTeamList() {
        return java.util.Collections.unmodifiableList(seatTeam_);
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public int getSeatTeamCount() {
        return seatTeam_.size();
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public int getSeatTeam(int index) {
        return seatTeam_.get(index);
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public Builder setSeatTeam(
          int index, int value) {
        ensureSeatTeamIsMutable();
        seatTeam_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public Builder addSeatTeam(int value) {
        ensureSeatTeamIsMutable();
        seatTeam_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public Builder addAllSeatTeam(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSeatTeamIsMutable();
        super.addAll(values, seatTeam_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 3;</code>
       *
       * <pre>
       *队伍
       * </pre>
       */
      public Builder clearSeatTeam() {
        seatTeam_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 game_score = 4;
      private java.util.List<java.lang.Integer> gameScore_ = java.util.Collections.emptyList();
      private void ensureGameScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameScore_ = new java.util.ArrayList<java.lang.Integer>(gameScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGameScoreList() {
        return java.util.Collections.unmodifiableList(gameScore_);
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getGameScoreCount() {
        return gameScore_.size();
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getGameScore(int index) {
        return gameScore_.get(index);
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setGameScore(
          int index, int value) {
        ensureGameScoreIsMutable();
        gameScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder addGameScore(int value) {
        ensureGameScoreIsMutable();
        gameScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder addAllGameScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameScoreIsMutable();
        super.addAll(values, gameScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 game_score = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearGameScore() {
        gameScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.RefreshScore_yxzd)
    }

    static {
      defaultInstance = new RefreshScore_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.RefreshScore_yxzd)
  }

  public interface FanPai_Result_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 chair = 1;
    /**
     * <code>optional int32 chair = 1;</code>
     *
     * <pre>
     *首出牌玩家
     * </pre>
     */
    boolean hasChair();
    /**
     * <code>optional int32 chair = 1;</code>
     *
     * <pre>
     *首出牌玩家
     * </pre>
     */
    int getChair();

    // optional int32 card_data = 2;
    /**
     * <code>optional int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    boolean hasCardData();
    /**
     * <code>optional int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    int getCardData();
  }
  /**
   * Protobuf type {@code yxzd.FanPai_Result_yxzd}
   *
   * <pre>
   *翻牌结果 1004
   * </pre>
   */
  public static final class FanPai_Result_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements FanPai_Result_yxzdOrBuilder {
    // Use FanPai_Result_yxzd.newBuilder() to construct.
    private FanPai_Result_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FanPai_Result_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FanPai_Result_yxzd defaultInstance;
    public static FanPai_Result_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public FanPai_Result_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FanPai_Result_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              chair_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardData_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Result_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Result_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<FanPai_Result_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<FanPai_Result_yxzd>() {
      public FanPai_Result_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FanPai_Result_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FanPai_Result_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 chair = 1;
    public static final int CHAIR_FIELD_NUMBER = 1;
    private int chair_;
    /**
     * <code>optional int32 chair = 1;</code>
     *
     * <pre>
     *首出牌玩家
     * </pre>
     */
    public boolean hasChair() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 chair = 1;</code>
     *
     * <pre>
     *首出牌玩家
     * </pre>
     */
    public int getChair() {
      return chair_;
    }

    // optional int32 card_data = 2;
    public static final int CARD_DATA_FIELD_NUMBER = 2;
    private int cardData_;
    /**
     * <code>optional int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public boolean hasCardData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public int getCardData() {
      return cardData_;
    }

    private void initFields() {
      chair_ = 0;
      cardData_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, chair_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chair_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.FanPai_Result_yxzd}
     *
     * <pre>
     *翻牌结果 1004
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Result_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Result_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chair_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Result_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chair_ = chair_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardData_ = cardData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd.getDefaultInstance()) return this;
        if (other.hasChair()) {
          setChair(other.getChair());
        }
        if (other.hasCardData()) {
          setCardData(other.getCardData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.FanPai_Result_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 chair = 1;
      private int chair_ ;
      /**
       * <code>optional int32 chair = 1;</code>
       *
       * <pre>
       *首出牌玩家
       * </pre>
       */
      public boolean hasChair() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 chair = 1;</code>
       *
       * <pre>
       *首出牌玩家
       * </pre>
       */
      public int getChair() {
        return chair_;
      }
      /**
       * <code>optional int32 chair = 1;</code>
       *
       * <pre>
       *首出牌玩家
       * </pre>
       */
      public Builder setChair(int value) {
        bitField0_ |= 0x00000001;
        chair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chair = 1;</code>
       *
       * <pre>
       *首出牌玩家
       * </pre>
       */
      public Builder clearChair() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chair_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_data = 2;
      private int cardData_ ;
      /**
       * <code>optional int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public boolean hasCardData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public int getCardData() {
        return cardData_;
      }
      /**
       * <code>optional int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder setCardData(int value) {
        bitField0_ |= 0x00000002;
        cardData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder clearCardData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardData_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.FanPai_Result_yxzd)
    }

    static {
      defaultInstance = new FanPai_Result_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.FanPai_Result_yxzd)
  }

  public interface PukeGameEndWsk_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoomInfo room_info = 1;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // optional int32 cur_round = 2;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    boolean hasCurRound();
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    int getCurRound();

    // optional int32 game_round = 3;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    int getGameRound();

    // repeated int32 card_count = 4;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // repeated int32 end_score = 7;
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    java.util.List<java.lang.Integer> getEndScoreList();
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    int getEndScoreCount();
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    int getEndScore(int index);

    // repeated int32 reward_score = 8;
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    java.util.List<java.lang.Integer> getRewardScoreList();
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    int getRewardScoreCount();
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    int getRewardScore(int index);

    // optional int32 banker_player = 11;
    /**
     * <code>optional int32 banker_player = 11;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 11;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 reason = 12;
    /**
     * <code>optional int32 reason = 12;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 12;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    int getReason();

    // repeated int32 di_fen = 13;
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    java.util.List<java.lang.Integer> getDiFenList();
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    int getDiFenCount();
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    int getDiFen(int index);

    // repeated int32 win_order = 14;
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);

    // repeated int32 get_score = 18;
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    java.util.List<java.lang.Integer> getGetScoreList();
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getGetScoreCount();
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    int getGetScore(int index);

    // repeated int32 seat_team = 20;
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    java.util.List<java.lang.Integer> getSeatTeamList();
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    int getSeatTeamCount();
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    int getSeatTeam(int index);

    // repeated int32 di_pai_card = 22;
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    java.util.List<java.lang.Integer> getDiPaiCardList();
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    int getDiPaiCardCount();
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    int getDiPaiCard(int index);

    // repeated int32 all_end_score = 15;
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    java.util.List<java.lang.Integer> getAllEndScoreList();
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScoreCount();
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    int getAllEndScore(int index);

    // repeated .Int32ArrayResponse end_score_info = 16;
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getEndScoreInfoList();
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getEndScoreInfo(int index);
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    int getEndScoreInfoCount();
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getEndScoreInfoOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getEndScoreInfoOrBuilder(
        int index);

    // repeated .Int32ArrayResponse win_order_info = 17;
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getWinOrderInfoList();
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getWinOrderInfo(int index);
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderInfoCount();
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getWinOrderInfoOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getWinOrderInfoOrBuilder(
        int index);

    // repeated .Int32ArrayResponse get_score_info = 19;
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getGetScoreInfoList();
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getGetScoreInfo(int index);
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    int getGetScoreInfoCount();
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getGetScoreInfoOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getGetScoreInfoOrBuilder(
        int index);

    // repeated .RoomPlayerResponse players = 21;
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code yxzd.PukeGameEndWsk_yxzd}
   *
   * <pre>
   *结算 1005
   * </pre>
   */
  public static final class PukeGameEndWsk_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements PukeGameEndWsk_yxzdOrBuilder {
    // Use PukeGameEndWsk_yxzd.newBuilder() to construct.
    private PukeGameEndWsk_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PukeGameEndWsk_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PukeGameEndWsk_yxzd defaultInstance;
    public static PukeGameEndWsk_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public PukeGameEndWsk_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PukeGameEndWsk_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curRound_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              endScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                endScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                endScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                rewardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              rewardScore_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                rewardScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000010;
              reason_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                diFen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              diFen_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                diFen_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                diFen_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              allEndScore_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                allEndScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                allEndScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                endScoreInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00008000;
              }
              endScoreInfo_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                winOrderInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00010000;
              }
              winOrderInfo_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              getScore_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                getScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                getScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                getScoreInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00020000;
              }
              getScoreInfo_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                seatTeam_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              seatTeam_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                seatTeam_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                seatTeam_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00040000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                diPaiCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              diPaiCard_.add(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                diPaiCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                diPaiCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          rewardScore_ = java.util.Collections.unmodifiableList(rewardScore_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          diFen_ = java.util.Collections.unmodifiableList(diFen_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          endScoreInfo_ = java.util.Collections.unmodifiableList(endScoreInfo_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          winOrderInfo_ = java.util.Collections.unmodifiableList(winOrderInfo_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          getScoreInfo_ = java.util.Collections.unmodifiableList(getScoreInfo_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          seatTeam_ = java.util.Collections.unmodifiableList(seatTeam_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          diPaiCard_ = java.util.Collections.unmodifiableList(diPaiCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_PukeGameEndWsk_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<PukeGameEndWsk_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<PukeGameEndWsk_yxzd>() {
      public PukeGameEndWsk_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PukeGameEndWsk_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PukeGameEndWsk_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoomInfo room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 1;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // optional int32 cur_round = 2;
    public static final int CUR_ROUND_FIELD_NUMBER = 2;
    private int curRound_;
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public boolean hasCurRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cur_round = 2;</code>
     *
     * <pre>
     *当前圈数
     * </pre>
     */
    public int getCurRound() {
      return curRound_;
    }

    // optional int32 game_round = 3;
    public static final int GAME_ROUND_FIELD_NUMBER = 3;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 3;</code>
     *
     * <pre>
     *游戏圈数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // repeated int32 card_count = 4;
    public static final int CARD_COUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 4;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 5;
    public static final int CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // repeated int32 end_score = 7;
    public static final int END_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> endScore_;
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEndScoreList() {
      return endScore_;
    }
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public int getEndScoreCount() {
      return endScore_.size();
    }
    /**
     * <code>repeated int32 end_score = 7;</code>
     *
     * <pre>
     *总分
     * </pre>
     */
    public int getEndScore(int index) {
      return endScore_.get(index);
    }

    // repeated int32 reward_score = 8;
    public static final int REWARD_SCORE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> rewardScore_;
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRewardScoreList() {
      return rewardScore_;
    }
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public int getRewardScoreCount() {
      return rewardScore_.size();
    }
    /**
     * <code>repeated int32 reward_score = 8;</code>
     *
     * <pre>
     *奖分
     * </pre>
     */
    public int getRewardScore(int index) {
      return rewardScore_.get(index);
    }

    // optional int32 banker_player = 11;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 11;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 11;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 banker_player = 11;</code>
     *
     * <pre>
     *庄家
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 reason = 12;
    public static final int REASON_FIELD_NUMBER = 12;
    private int reason_;
    /**
     * <code>optional int32 reason = 12;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reason = 12;</code>
     *
     * <pre>
     *结束类型
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    // repeated int32 di_fen = 13;
    public static final int DI_FEN_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> diFen_;
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDiFenList() {
      return diFen_;
    }
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public int getDiFenCount() {
      return diFen_.size();
    }
    /**
     * <code>repeated int32 di_fen = 13;</code>
     *
     * <pre>
     *底分
     * </pre>
     */
    public int getDiFen(int index) {
      return diFen_.get(index);
    }

    // repeated int32 win_order = 14;
    public static final int WIN_ORDER_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 14;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    // repeated int32 get_score = 18;
    public static final int GET_SCORE_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> getScore_;
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGetScoreList() {
      return getScore_;
    }
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getGetScoreCount() {
      return getScore_.size();
    }
    /**
     * <code>repeated int32 get_score = 18;</code>
     *
     * <pre>
     *抓分
     * </pre>
     */
    public int getGetScore(int index) {
      return getScore_.get(index);
    }

    // repeated int32 seat_team = 20;
    public static final int SEAT_TEAM_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> seatTeam_;
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    public java.util.List<java.lang.Integer>
        getSeatTeamList() {
      return seatTeam_;
    }
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    public int getSeatTeamCount() {
      return seatTeam_.size();
    }
    /**
     * <code>repeated int32 seat_team = 20;</code>
     */
    public int getSeatTeam(int index) {
      return seatTeam_.get(index);
    }

    // repeated int32 di_pai_card = 22;
    public static final int DI_PAI_CARD_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> diPaiCard_;
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    public java.util.List<java.lang.Integer>
        getDiPaiCardList() {
      return diPaiCard_;
    }
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    public int getDiPaiCardCount() {
      return diPaiCard_.size();
    }
    /**
     * <code>repeated int32 di_pai_card = 22;</code>
     */
    public int getDiPaiCard(int index) {
      return diPaiCard_.get(index);
    }

    // repeated int32 all_end_score = 15;
    public static final int ALL_END_SCORE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> allEndScore_;
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAllEndScoreList() {
      return allEndScore_;
    }
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScoreCount() {
      return allEndScore_.size();
    }
    /**
     * <code>repeated int32 all_end_score = 15;</code>
     *
     * <pre>
     *总结算
     * </pre>
     */
    public int getAllEndScore(int index) {
      return allEndScore_.get(index);
    }

    // repeated .Int32ArrayResponse end_score_info = 16;
    public static final int END_SCORE_INFO_FIELD_NUMBER = 16;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> endScoreInfo_;
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getEndScoreInfoList() {
      return endScoreInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getEndScoreInfoOrBuilderList() {
      return endScoreInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    public int getEndScoreInfoCount() {
      return endScoreInfo_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getEndScoreInfo(int index) {
      return endScoreInfo_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
     *
     * <pre>
     *分数明细
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getEndScoreInfoOrBuilder(
        int index) {
      return endScoreInfo_.get(index);
    }

    // repeated .Int32ArrayResponse win_order_info = 17;
    public static final int WIN_ORDER_INFO_FIELD_NUMBER = 17;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> winOrderInfo_;
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getWinOrderInfoList() {
      return winOrderInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getWinOrderInfoOrBuilderList() {
      return winOrderInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderInfoCount() {
      return winOrderInfo_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getWinOrderInfo(int index) {
      return winOrderInfo_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getWinOrderInfoOrBuilder(
        int index) {
      return winOrderInfo_.get(index);
    }

    // repeated .Int32ArrayResponse get_score_info = 19;
    public static final int GET_SCORE_INFO_FIELD_NUMBER = 19;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getScoreInfo_;
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getGetScoreInfoList() {
      return getScoreInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getGetScoreInfoOrBuilderList() {
      return getScoreInfo_;
    }
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    public int getGetScoreInfoCount() {
      return getScoreInfo_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getGetScoreInfo(int index) {
      return getScoreInfo_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
     *
     * <pre>
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getGetScoreInfoOrBuilder(
        int index) {
      return getScoreInfo_.get(index);
    }

    // repeated .RoomPlayerResponse players = 21;
    public static final int PLAYERS_FIELD_NUMBER = 21;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 21;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      curRound_ = 0;
      gameRound_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      endScore_ = java.util.Collections.emptyList();
      rewardScore_ = java.util.Collections.emptyList();
      bankerPlayer_ = 0;
      reason_ = 0;
      diFen_ = java.util.Collections.emptyList();
      winOrder_ = java.util.Collections.emptyList();
      getScore_ = java.util.Collections.emptyList();
      seatTeam_ = java.util.Collections.emptyList();
      diPaiCard_ = java.util.Collections.emptyList();
      allEndScore_ = java.util.Collections.emptyList();
      endScoreInfo_ = java.util.Collections.emptyList();
      winOrderInfo_ = java.util.Collections.emptyList();
      getScoreInfo_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameRound_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(4, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(5, cardsData_.get(i));
      }
      for (int i = 0; i < endScore_.size(); i++) {
        output.writeInt32(7, endScore_.get(i));
      }
      for (int i = 0; i < rewardScore_.size(); i++) {
        output.writeInt32(8, rewardScore_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(11, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(12, reason_);
      }
      for (int i = 0; i < diFen_.size(); i++) {
        output.writeInt32(13, diFen_.get(i));
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(14, winOrder_.get(i));
      }
      for (int i = 0; i < allEndScore_.size(); i++) {
        output.writeInt32(15, allEndScore_.get(i));
      }
      for (int i = 0; i < endScoreInfo_.size(); i++) {
        output.writeMessage(16, endScoreInfo_.get(i));
      }
      for (int i = 0; i < winOrderInfo_.size(); i++) {
        output.writeMessage(17, winOrderInfo_.get(i));
      }
      for (int i = 0; i < getScore_.size(); i++) {
        output.writeInt32(18, getScore_.get(i));
      }
      for (int i = 0; i < getScoreInfo_.size(); i++) {
        output.writeMessage(19, getScoreInfo_.get(i));
      }
      for (int i = 0; i < seatTeam_.size(); i++) {
        output.writeInt32(20, seatTeam_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(21, players_.get(i));
      }
      for (int i = 0; i < diPaiCard_.size(); i++) {
        output.writeInt32(22, diPaiCard_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curRound_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < endScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(endScore_.get(i));
        }
        size += dataSize;
        size += 1 * getEndScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rewardScore_.get(i));
        }
        size += dataSize;
        size += 1 * getRewardScoreList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, reason_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < diFen_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(diFen_.get(i));
        }
        size += dataSize;
        size += 1 * getDiFenList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 1 * getWinOrderList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allEndScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allEndScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAllEndScoreList().size();
      }
      for (int i = 0; i < endScoreInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, endScoreInfo_.get(i));
      }
      for (int i = 0; i < winOrderInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, winOrderInfo_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < getScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(getScore_.get(i));
        }
        size += dataSize;
        size += 2 * getGetScoreList().size();
      }
      for (int i = 0; i < getScoreInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getScoreInfo_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seatTeam_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(seatTeam_.get(i));
        }
        size += dataSize;
        size += 2 * getSeatTeamList().size();
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < diPaiCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(diPaiCard_.get(i));
        }
        size += dataSize;
        size += 2 * getDiPaiCardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.PukeGameEndWsk_yxzd}
     *
     * <pre>
     *结算 1005
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_PukeGameEndWsk_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
          getCardsDataFieldBuilder();
          getEndScoreInfoFieldBuilder();
          getWinOrderInfoFieldBuilder();
          getGetScoreInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        curRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          cardsDataBuilder_.clear();
        }
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        rewardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        diFen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        seatTeam_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        diPaiCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (endScoreInfoBuilder_ == null) {
          endScoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          endScoreInfoBuilder_.clear();
        }
        if (winOrderInfoBuilder_ == null) {
          winOrderInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          winOrderInfoBuilder_.clear();
        }
        if (getScoreInfoBuilder_ == null) {
          getScoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          getScoreInfoBuilder_.clear();
        }
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curRound_ = curRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = java.util.Collections.unmodifiableList(endScore_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.endScore_ = endScore_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          rewardScore_ = java.util.Collections.unmodifiableList(rewardScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.rewardScore_ = rewardScore_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          diFen_ = java.util.Collections.unmodifiableList(diFen_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.diFen_ = diFen_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.winOrder_ = winOrder_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          getScore_ = java.util.Collections.unmodifiableList(getScore_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.getScore_ = getScore_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          seatTeam_ = java.util.Collections.unmodifiableList(seatTeam_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.seatTeam_ = seatTeam_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          diPaiCard_ = java.util.Collections.unmodifiableList(diPaiCard_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.diPaiCard_ = diPaiCard_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          allEndScore_ = java.util.Collections.unmodifiableList(allEndScore_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.allEndScore_ = allEndScore_;
        if (endScoreInfoBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            endScoreInfo_ = java.util.Collections.unmodifiableList(endScoreInfo_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.endScoreInfo_ = endScoreInfo_;
        } else {
          result.endScoreInfo_ = endScoreInfoBuilder_.build();
        }
        if (winOrderInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            winOrderInfo_ = java.util.Collections.unmodifiableList(winOrderInfo_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.winOrderInfo_ = winOrderInfo_;
        } else {
          result.winOrderInfo_ = winOrderInfoBuilder_.build();
        }
        if (getScoreInfoBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            getScoreInfo_ = java.util.Collections.unmodifiableList(getScoreInfo_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.getScoreInfo_ = getScoreInfo_;
        } else {
          result.getScoreInfo_ = getScoreInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd.getDefaultInstance()) return this;
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (other.hasCurRound()) {
          setCurRound(other.getCurRound());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (!other.endScore_.isEmpty()) {
          if (endScore_.isEmpty()) {
            endScore_ = other.endScore_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEndScoreIsMutable();
            endScore_.addAll(other.endScore_);
          }
          onChanged();
        }
        if (!other.rewardScore_.isEmpty()) {
          if (rewardScore_.isEmpty()) {
            rewardScore_ = other.rewardScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRewardScoreIsMutable();
            rewardScore_.addAll(other.rewardScore_);
          }
          onChanged();
        }
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (!other.diFen_.isEmpty()) {
          if (diFen_.isEmpty()) {
            diFen_ = other.diFen_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureDiFenIsMutable();
            diFen_.addAll(other.diFen_);
          }
          onChanged();
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        if (!other.getScore_.isEmpty()) {
          if (getScore_.isEmpty()) {
            getScore_ = other.getScore_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureGetScoreIsMutable();
            getScore_.addAll(other.getScore_);
          }
          onChanged();
        }
        if (!other.seatTeam_.isEmpty()) {
          if (seatTeam_.isEmpty()) {
            seatTeam_ = other.seatTeam_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureSeatTeamIsMutable();
            seatTeam_.addAll(other.seatTeam_);
          }
          onChanged();
        }
        if (!other.diPaiCard_.isEmpty()) {
          if (diPaiCard_.isEmpty()) {
            diPaiCard_ = other.diPaiCard_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDiPaiCardIsMutable();
            diPaiCard_.addAll(other.diPaiCard_);
          }
          onChanged();
        }
        if (!other.allEndScore_.isEmpty()) {
          if (allEndScore_.isEmpty()) {
            allEndScore_ = other.allEndScore_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureAllEndScoreIsMutable();
            allEndScore_.addAll(other.allEndScore_);
          }
          onChanged();
        }
        if (endScoreInfoBuilder_ == null) {
          if (!other.endScoreInfo_.isEmpty()) {
            if (endScoreInfo_.isEmpty()) {
              endScoreInfo_ = other.endScoreInfo_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureEndScoreInfoIsMutable();
              endScoreInfo_.addAll(other.endScoreInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.endScoreInfo_.isEmpty()) {
            if (endScoreInfoBuilder_.isEmpty()) {
              endScoreInfoBuilder_.dispose();
              endScoreInfoBuilder_ = null;
              endScoreInfo_ = other.endScoreInfo_;
              bitField0_ = (bitField0_ & ~0x00008000);
              endScoreInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEndScoreInfoFieldBuilder() : null;
            } else {
              endScoreInfoBuilder_.addAllMessages(other.endScoreInfo_);
            }
          }
        }
        if (winOrderInfoBuilder_ == null) {
          if (!other.winOrderInfo_.isEmpty()) {
            if (winOrderInfo_.isEmpty()) {
              winOrderInfo_ = other.winOrderInfo_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureWinOrderInfoIsMutable();
              winOrderInfo_.addAll(other.winOrderInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.winOrderInfo_.isEmpty()) {
            if (winOrderInfoBuilder_.isEmpty()) {
              winOrderInfoBuilder_.dispose();
              winOrderInfoBuilder_ = null;
              winOrderInfo_ = other.winOrderInfo_;
              bitField0_ = (bitField0_ & ~0x00010000);
              winOrderInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWinOrderInfoFieldBuilder() : null;
            } else {
              winOrderInfoBuilder_.addAllMessages(other.winOrderInfo_);
            }
          }
        }
        if (getScoreInfoBuilder_ == null) {
          if (!other.getScoreInfo_.isEmpty()) {
            if (getScoreInfo_.isEmpty()) {
              getScoreInfo_ = other.getScoreInfo_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureGetScoreInfoIsMutable();
              getScoreInfo_.addAll(other.getScoreInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.getScoreInfo_.isEmpty()) {
            if (getScoreInfoBuilder_.isEmpty()) {
              getScoreInfoBuilder_.dispose();
              getScoreInfoBuilder_ = null;
              getScoreInfo_ = other.getScoreInfo_;
              bitField0_ = (bitField0_ & ~0x00020000);
              getScoreInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGetScoreInfoFieldBuilder() : null;
            } else {
              getScoreInfoBuilder_.addAllMessages(other.getScoreInfo_);
            }
          }
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00040000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.PukeGameEndWsk_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoomInfo room_info = 1;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // optional int32 cur_round = 2;
      private int curRound_ ;
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public boolean hasCurRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public int getCurRound() {
        return curRound_;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder setCurRound(int value) {
        bitField0_ |= 0x00000002;
        curRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_round = 2;</code>
       *
       * <pre>
       *当前圈数
       * </pre>
       */
      public Builder clearCurRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 3;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000004;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 3;</code>
       *
       * <pre>
       *游戏圈数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 4;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 4;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 5;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // repeated int32 end_score = 7;
      private java.util.List<java.lang.Integer> endScore_ = java.util.Collections.emptyList();
      private void ensureEndScoreIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          endScore_ = new java.util.ArrayList<java.lang.Integer>(endScore_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEndScoreList() {
        return java.util.Collections.unmodifiableList(endScore_);
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public int getEndScoreCount() {
        return endScore_.size();
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public int getEndScore(int index) {
        return endScore_.get(index);
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder setEndScore(
          int index, int value) {
        ensureEndScoreIsMutable();
        endScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder addEndScore(int value) {
        ensureEndScoreIsMutable();
        endScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder addAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEndScoreIsMutable();
        super.addAll(values, endScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 end_score = 7;</code>
       *
       * <pre>
       *总分
       * </pre>
       */
      public Builder clearEndScore() {
        endScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 reward_score = 8;
      private java.util.List<java.lang.Integer> rewardScore_ = java.util.Collections.emptyList();
      private void ensureRewardScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          rewardScore_ = new java.util.ArrayList<java.lang.Integer>(rewardScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRewardScoreList() {
        return java.util.Collections.unmodifiableList(rewardScore_);
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public int getRewardScoreCount() {
        return rewardScore_.size();
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public int getRewardScore(int index) {
        return rewardScore_.get(index);
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder setRewardScore(
          int index, int value) {
        ensureRewardScoreIsMutable();
        rewardScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder addRewardScore(int value) {
        ensureRewardScoreIsMutable();
        rewardScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder addAllRewardScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardScoreIsMutable();
        super.addAll(values, rewardScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 reward_score = 8;</code>
       *
       * <pre>
       *奖分
       * </pre>
       */
      public Builder clearRewardScore() {
        rewardScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 banker_player = 11;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 11;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 banker_player = 11;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 11;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000080;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 11;</code>
       *
       * <pre>
       *庄家
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 12;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 12;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 reason = 12;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 12;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000100;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 12;</code>
       *
       * <pre>
       *结束类型
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reason_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 di_fen = 13;
      private java.util.List<java.lang.Integer> diFen_ = java.util.Collections.emptyList();
      private void ensureDiFenIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          diFen_ = new java.util.ArrayList<java.lang.Integer>(diFen_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDiFenList() {
        return java.util.Collections.unmodifiableList(diFen_);
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public int getDiFenCount() {
        return diFen_.size();
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public int getDiFen(int index) {
        return diFen_.get(index);
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder setDiFen(
          int index, int value) {
        ensureDiFenIsMutable();
        diFen_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder addDiFen(int value) {
        ensureDiFenIsMutable();
        diFen_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder addAllDiFen(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiFenIsMutable();
        super.addAll(values, diFen_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_fen = 13;</code>
       *
       * <pre>
       *底分
       * </pre>
       */
      public Builder clearDiFen() {
        diFen_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 win_order = 14;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 14;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 get_score = 18;
      private java.util.List<java.lang.Integer> getScore_ = java.util.Collections.emptyList();
      private void ensureGetScoreIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          getScore_ = new java.util.ArrayList<java.lang.Integer>(getScore_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGetScoreList() {
        return java.util.Collections.unmodifiableList(getScore_);
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getGetScoreCount() {
        return getScore_.size();
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public int getGetScore(int index) {
        return getScore_.get(index);
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder setGetScore(
          int index, int value) {
        ensureGetScoreIsMutable();
        getScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addGetScore(int value) {
        ensureGetScoreIsMutable();
        getScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder addAllGetScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGetScoreIsMutable();
        super.addAll(values, getScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 get_score = 18;</code>
       *
       * <pre>
       *抓分
       * </pre>
       */
      public Builder clearGetScore() {
        getScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 seat_team = 20;
      private java.util.List<java.lang.Integer> seatTeam_ = java.util.Collections.emptyList();
      private void ensureSeatTeamIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          seatTeam_ = new java.util.ArrayList<java.lang.Integer>(seatTeam_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public java.util.List<java.lang.Integer>
          getSeatTeamList() {
        return java.util.Collections.unmodifiableList(seatTeam_);
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public int getSeatTeamCount() {
        return seatTeam_.size();
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public int getSeatTeam(int index) {
        return seatTeam_.get(index);
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public Builder setSeatTeam(
          int index, int value) {
        ensureSeatTeamIsMutable();
        seatTeam_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public Builder addSeatTeam(int value) {
        ensureSeatTeamIsMutable();
        seatTeam_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public Builder addAllSeatTeam(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSeatTeamIsMutable();
        super.addAll(values, seatTeam_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 seat_team = 20;</code>
       */
      public Builder clearSeatTeam() {
        seatTeam_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 di_pai_card = 22;
      private java.util.List<java.lang.Integer> diPaiCard_ = java.util.Collections.emptyList();
      private void ensureDiPaiCardIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          diPaiCard_ = new java.util.ArrayList<java.lang.Integer>(diPaiCard_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public java.util.List<java.lang.Integer>
          getDiPaiCardList() {
        return java.util.Collections.unmodifiableList(diPaiCard_);
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public int getDiPaiCardCount() {
        return diPaiCard_.size();
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public int getDiPaiCard(int index) {
        return diPaiCard_.get(index);
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public Builder setDiPaiCard(
          int index, int value) {
        ensureDiPaiCardIsMutable();
        diPaiCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public Builder addDiPaiCard(int value) {
        ensureDiPaiCardIsMutable();
        diPaiCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public Builder addAllDiPaiCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiPaiCardIsMutable();
        super.addAll(values, diPaiCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 di_pai_card = 22;</code>
       */
      public Builder clearDiPaiCard() {
        diPaiCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 all_end_score = 15;
      private java.util.List<java.lang.Integer> allEndScore_ = java.util.Collections.emptyList();
      private void ensureAllEndScoreIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          allEndScore_ = new java.util.ArrayList<java.lang.Integer>(allEndScore_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAllEndScoreList() {
        return java.util.Collections.unmodifiableList(allEndScore_);
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScoreCount() {
        return allEndScore_.size();
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public int getAllEndScore(int index) {
        return allEndScore_.get(index);
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder setAllEndScore(
          int index, int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllEndScore(int value) {
        ensureAllEndScoreIsMutable();
        allEndScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder addAllAllEndScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllEndScoreIsMutable();
        super.addAll(values, allEndScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 all_end_score = 15;</code>
       *
       * <pre>
       *总结算
       * </pre>
       */
      public Builder clearAllEndScore() {
        allEndScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse end_score_info = 16;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> endScoreInfo_ =
        java.util.Collections.emptyList();
      private void ensureEndScoreInfoIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          endScoreInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(endScoreInfo_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> endScoreInfoBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getEndScoreInfoList() {
        if (endScoreInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(endScoreInfo_);
        } else {
          return endScoreInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public int getEndScoreInfoCount() {
        if (endScoreInfoBuilder_ == null) {
          return endScoreInfo_.size();
        } else {
          return endScoreInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getEndScoreInfo(int index) {
        if (endScoreInfoBuilder_ == null) {
          return endScoreInfo_.get(index);
        } else {
          return endScoreInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder setEndScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (endScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.set(index, value);
          onChanged();
        } else {
          endScoreInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder setEndScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (endScoreInfoBuilder_ == null) {
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          endScoreInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder addEndScoreInfo(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (endScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.add(value);
          onChanged();
        } else {
          endScoreInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder addEndScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (endScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.add(index, value);
          onChanged();
        } else {
          endScoreInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder addEndScoreInfo(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (endScoreInfoBuilder_ == null) {
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.add(builderForValue.build());
          onChanged();
        } else {
          endScoreInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder addEndScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (endScoreInfoBuilder_ == null) {
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          endScoreInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder addAllEndScoreInfo(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (endScoreInfoBuilder_ == null) {
          ensureEndScoreInfoIsMutable();
          super.addAll(values, endScoreInfo_);
          onChanged();
        } else {
          endScoreInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder clearEndScoreInfo() {
        if (endScoreInfoBuilder_ == null) {
          endScoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          endScoreInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public Builder removeEndScoreInfo(int index) {
        if (endScoreInfoBuilder_ == null) {
          ensureEndScoreInfoIsMutable();
          endScoreInfo_.remove(index);
          onChanged();
        } else {
          endScoreInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getEndScoreInfoBuilder(
          int index) {
        return getEndScoreInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getEndScoreInfoOrBuilder(
          int index) {
        if (endScoreInfoBuilder_ == null) {
          return endScoreInfo_.get(index);  } else {
          return endScoreInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getEndScoreInfoOrBuilderList() {
        if (endScoreInfoBuilder_ != null) {
          return endScoreInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(endScoreInfo_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addEndScoreInfoBuilder() {
        return getEndScoreInfoFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addEndScoreInfoBuilder(
          int index) {
        return getEndScoreInfoFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse end_score_info = 16;</code>
       *
       * <pre>
       *分数明细
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getEndScoreInfoBuilderList() {
        return getEndScoreInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getEndScoreInfoFieldBuilder() {
        if (endScoreInfoBuilder_ == null) {
          endScoreInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  endScoreInfo_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          endScoreInfo_ = null;
        }
        return endScoreInfoBuilder_;
      }

      // repeated .Int32ArrayResponse win_order_info = 17;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> winOrderInfo_ =
        java.util.Collections.emptyList();
      private void ensureWinOrderInfoIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          winOrderInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(winOrderInfo_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> winOrderInfoBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getWinOrderInfoList() {
        if (winOrderInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(winOrderInfo_);
        } else {
          return winOrderInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderInfoCount() {
        if (winOrderInfoBuilder_ == null) {
          return winOrderInfo_.size();
        } else {
          return winOrderInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getWinOrderInfo(int index) {
        if (winOrderInfoBuilder_ == null) {
          return winOrderInfo_.get(index);
        } else {
          return winOrderInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrderInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (winOrderInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.set(index, value);
          onChanged();
        } else {
          winOrderInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrderInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (winOrderInfoBuilder_ == null) {
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          winOrderInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrderInfo(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (winOrderInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.add(value);
          onChanged();
        } else {
          winOrderInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrderInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (winOrderInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.add(index, value);
          onChanged();
        } else {
          winOrderInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrderInfo(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (winOrderInfoBuilder_ == null) {
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.add(builderForValue.build());
          onChanged();
        } else {
          winOrderInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrderInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (winOrderInfoBuilder_ == null) {
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          winOrderInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrderInfo(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (winOrderInfoBuilder_ == null) {
          ensureWinOrderInfoIsMutable();
          super.addAll(values, winOrderInfo_);
          onChanged();
        } else {
          winOrderInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrderInfo() {
        if (winOrderInfoBuilder_ == null) {
          winOrderInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          winOrderInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder removeWinOrderInfo(int index) {
        if (winOrderInfoBuilder_ == null) {
          ensureWinOrderInfoIsMutable();
          winOrderInfo_.remove(index);
          onChanged();
        } else {
          winOrderInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getWinOrderInfoBuilder(
          int index) {
        return getWinOrderInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getWinOrderInfoOrBuilder(
          int index) {
        if (winOrderInfoBuilder_ == null) {
          return winOrderInfo_.get(index);  } else {
          return winOrderInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getWinOrderInfoOrBuilderList() {
        if (winOrderInfoBuilder_ != null) {
          return winOrderInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(winOrderInfo_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addWinOrderInfoBuilder() {
        return getWinOrderInfoFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addWinOrderInfoBuilder(
          int index) {
        return getWinOrderInfoFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse win_order_info = 17;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getWinOrderInfoBuilderList() {
        return getWinOrderInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getWinOrderInfoFieldBuilder() {
        if (winOrderInfoBuilder_ == null) {
          winOrderInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  winOrderInfo_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          winOrderInfo_ = null;
        }
        return winOrderInfoBuilder_;
      }

      // repeated .Int32ArrayResponse get_score_info = 19;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getScoreInfo_ =
        java.util.Collections.emptyList();
      private void ensureGetScoreInfoIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          getScoreInfo_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(getScoreInfo_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> getScoreInfoBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getGetScoreInfoList() {
        if (getScoreInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(getScoreInfo_);
        } else {
          return getScoreInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public int getGetScoreInfoCount() {
        if (getScoreInfoBuilder_ == null) {
          return getScoreInfo_.size();
        } else {
          return getScoreInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getGetScoreInfo(int index) {
        if (getScoreInfoBuilder_ == null) {
          return getScoreInfo_.get(index);
        } else {
          return getScoreInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setGetScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (getScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.set(index, value);
          onChanged();
        } else {
          getScoreInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setGetScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (getScoreInfoBuilder_ == null) {
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          getScoreInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addGetScoreInfo(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (getScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.add(value);
          onChanged();
        } else {
          getScoreInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addGetScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (getScoreInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.add(index, value);
          onChanged();
        } else {
          getScoreInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addGetScoreInfo(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (getScoreInfoBuilder_ == null) {
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.add(builderForValue.build());
          onChanged();
        } else {
          getScoreInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addGetScoreInfo(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (getScoreInfoBuilder_ == null) {
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          getScoreInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllGetScoreInfo(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (getScoreInfoBuilder_ == null) {
          ensureGetScoreInfoIsMutable();
          super.addAll(values, getScoreInfo_);
          onChanged();
        } else {
          getScoreInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearGetScoreInfo() {
        if (getScoreInfoBuilder_ == null) {
          getScoreInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          getScoreInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder removeGetScoreInfo(int index) {
        if (getScoreInfoBuilder_ == null) {
          ensureGetScoreInfoIsMutable();
          getScoreInfo_.remove(index);
          onChanged();
        } else {
          getScoreInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getGetScoreInfoBuilder(
          int index) {
        return getGetScoreInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getGetScoreInfoOrBuilder(
          int index) {
        if (getScoreInfoBuilder_ == null) {
          return getScoreInfo_.get(index);  } else {
          return getScoreInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getGetScoreInfoOrBuilderList() {
        if (getScoreInfoBuilder_ != null) {
          return getScoreInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(getScoreInfo_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addGetScoreInfoBuilder() {
        return getGetScoreInfoFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addGetScoreInfoBuilder(
          int index) {
        return getGetScoreInfoFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse get_score_info = 19;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getGetScoreInfoBuilderList() {
        return getGetScoreInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getGetScoreInfoFieldBuilder() {
        if (getScoreInfoBuilder_ == null) {
          getScoreInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  getScoreInfo_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          getScoreInfo_ = null;
        }
        return getScoreInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 21;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 21;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.PukeGameEndWsk_yxzd)
    }

    static {
      defaultInstance = new PukeGameEndWsk_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.PukeGameEndWsk_yxzd)
  }

  public interface TableResponse_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 banker_player = 1;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    boolean hasBankerPlayer();
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    int getBankerPlayer();

    // optional int32 current_player = 2;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    boolean hasCurrentPlayer();
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    int getCurrentPlayer();

    // optional int32 prev_player = 3;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    boolean hasPrevPlayer();
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    int getPrevPlayer();

    // repeated bool trustee = 4;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    java.util.List<java.lang.Boolean> getTrusteeList();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    int getTrusteeCount();
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    boolean getTrustee(int index);

    // repeated .Int32ArrayResponse out_cards_data = 5;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getOutCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    int getOutCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index);

    // repeated int32 out_cards_count = 6;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsCountList();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCountCount();
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    int getOutCardsCount(int index);

    // repeated int32 player_pass = 7;
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayerPassList();
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    int getPlayerPassCount();
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    int getPlayerPass(int index);

    // repeated int32 card_type = 8;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardTypeList();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardTypeCount();
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getCardType(int index);

    // optional int32 pr_out_card_player = 9;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    boolean hasPrOutCardPlayer();
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    int getPrOutCardPlayer();

    // repeated int32 pr_cards_data = 10;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrCardsDataList();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsDataCount();
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    int getPrCardsData(int index);

    // optional int32 pr_cards_count = 11;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    boolean hasPrCardsCount();
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    int getPrCardsCount();

    // optional int32 pr_out_card_type = 12;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasPrOutCardType();
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getPrOutCardType();

    // optional int32 is_first_out = 13;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    int getIsFirstOut();

    // optional int32 display_time = 14;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // repeated int32 card_count = 15;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 16;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);

    // optional .RoomInfo room_info = 17;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    boolean hasRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfo getRoomInfo();
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder();

    // repeated .RoomPlayerResponse players = 18;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> 
        getPlayersList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index);
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index);

    // repeated int32 user_can_out_data = 19;
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    java.util.List<java.lang.Integer> getUserCanOutDataList();
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutDataCount();
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    int getUserCanOutData(int index);

    // optional int32 user_can_out_count = 20;
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    boolean hasUserCanOutCount();
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    int getUserCanOutCount();

    // repeated int32 win_order = 21;
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinOrderList();
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrderCount();
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    int getWinOrder(int index);

    // optional bool is_can_out_friendcards = 22;
    /**
     * <code>optional bool is_can_out_friendcards = 22;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    boolean hasIsCanOutFriendcards();
    /**
     * <code>optional bool is_can_out_friendcards = 22;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    boolean getIsCanOutFriendcards();

    // optional bool is_can_opreate = 23;
    /**
     * <code>optional bool is_can_opreate = 23;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    boolean hasIsCanOpreate();
    /**
     * <code>optional bool is_can_opreate = 23;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    boolean getIsCanOpreate();
  }
  /**
   * Protobuf type {@code yxzd.TableResponse_yxzd}
   *
   * <pre>
   *1006
   * </pre>
   */
  public static final class TableResponse_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements TableResponse_yxzdOrBuilder {
    // Use TableResponse_yxzd.newBuilder() to construct.
    private TableResponse_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse_yxzd defaultInstance;
    public static TableResponse_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentPlayer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevPlayer_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              trustee_.add(input.readBool());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                trustee_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                trustee_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000010;
              }
              outCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              outCardsCount_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                outCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCardsCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                playerPass_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              playerPass_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                playerPass_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerPass_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardType_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cardType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              prOutCardPlayer_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              prCardsData_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                prCardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                prCardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              prCardsCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              prOutCardType_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              isFirstOut_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              displayTime_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00008000;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              protobuf.clazz.Protocol.RoomInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = roomInfo_.toBuilder();
              }
              roomInfo_ = input.readMessage(protobuf.clazz.Protocol.RoomInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roomInfo_);
                roomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>();
                mutable_bitField0_ |= 0x00020000;
              }
              players_.add(input.readMessage(protobuf.clazz.Protocol.RoomPlayerResponse.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              userCanOutData_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                userCanOutData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userCanOutData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              bitField0_ |= 0x00000200;
              userCanOutCount_ = input.readInt32();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              winOrder_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                winOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winOrder_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              bitField0_ |= 0x00000400;
              isCanOutFriendcards_ = input.readBool();
              break;
            }
            case 184: {
              bitField0_ |= 0x00000800;
              isCanOpreate_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = java.util.Collections.unmodifiableList(playerPass_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_TableResponse_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_TableResponse_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse_yxzd>() {
      public TableResponse_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 banker_player = 1;
    public static final int BANKER_PLAYER_FIELD_NUMBER = 1;
    private int bankerPlayer_;
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public boolean hasBankerPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 banker_player = 1;</code>
     *
     * <pre>
     *游戏变量
     * </pre>
     */
    public int getBankerPlayer() {
      return bankerPlayer_;
    }

    // optional int32 current_player = 2;
    public static final int CURRENT_PLAYER_FIELD_NUMBER = 2;
    private int currentPlayer_;
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public boolean hasCurrentPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 current_player = 2;</code>
     *
     * <pre>
     *当前玩家
     * </pre>
     */
    public int getCurrentPlayer() {
      return currentPlayer_;
    }

    // optional int32 prev_player = 3;
    public static final int PREV_PLAYER_FIELD_NUMBER = 3;
    private int prevPlayer_;
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public boolean hasPrevPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_player = 3;</code>
     *
     * <pre>
     *上一玩家
     * </pre>
     */
    public int getPrevPlayer() {
      return prevPlayer_;
    }

    // repeated bool trustee = 4;
    public static final int TRUSTEE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Boolean> trustee_;
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getTrusteeList() {
      return trustee_;
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public int getTrusteeCount() {
      return trustee_.size();
    }
    /**
     * <code>repeated bool trustee = 4;</code>
     *
     * <pre>
     *状态变量
     * </pre>
     */
    public boolean getTrustee(int index) {
      return trustee_.get(index);
    }

    // repeated .Int32ArrayResponse out_cards_data = 5;
    public static final int OUT_CARDS_DATA_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getOutCardsDataOrBuilderList() {
      return outCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public int getOutCardsDataCount() {
      return outCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
      return outCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
     *
     * <pre>
     *扑克数据
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
        int index) {
      return outCardsData_.get(index);
    }

    // repeated int32 out_cards_count = 6;
    public static final int OUT_CARDS_COUNT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> outCardsCount_;
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsCountList() {
      return outCardsCount_;
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCountCount() {
      return outCardsCount_.size();
    }
    /**
     * <code>repeated int32 out_cards_count = 6;</code>
     *
     * <pre>
     *本轮牌数量
     * </pre>
     */
    public int getOutCardsCount(int index) {
      return outCardsCount_.get(index);
    }

    // repeated int32 player_pass = 7;
    public static final int PLAYER_PASS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> playerPass_;
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayerPassList() {
      return playerPass_;
    }
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public int getPlayerPassCount() {
      return playerPass_.size();
    }
    /**
     * <code>repeated int32 player_pass = 7;</code>
     *
     * <pre>
     *本轮不出数据
     * </pre>
     */
    public int getPlayerPass(int index) {
      return playerPass_.get(index);
    }

    // repeated int32 card_type = 8;
    public static final int CARD_TYPE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cardType_;
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardTypeList() {
      return cardType_;
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardTypeCount() {
      return cardType_.size();
    }
    /**
     * <code>repeated int32 card_type = 8;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getCardType(int index) {
      return cardType_.get(index);
    }

    // optional int32 pr_out_card_player = 9;
    public static final int PR_OUT_CARD_PLAYER_FIELD_NUMBER = 9;
    private int prOutCardPlayer_;
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public boolean hasPrOutCardPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 pr_out_card_player = 9;</code>
     *
     * <pre>
     *上一出牌玩家
     * </pre>
     */
    public int getPrOutCardPlayer() {
      return prOutCardPlayer_;
    }

    // repeated int32 pr_cards_data = 10;
    public static final int PR_CARDS_DATA_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> prCardsData_;
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrCardsDataList() {
      return prCardsData_;
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsDataCount() {
      return prCardsData_.size();
    }
    /**
     * <code>repeated int32 pr_cards_data = 10;</code>
     *
     * <pre>
     *上一玩家出牌数据
     * </pre>
     */
    public int getPrCardsData(int index) {
      return prCardsData_.get(index);
    }

    // optional int32 pr_cards_count = 11;
    public static final int PR_CARDS_COUNT_FIELD_NUMBER = 11;
    private int prCardsCount_;
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public boolean hasPrCardsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pr_cards_count = 11;</code>
     *
     * <pre>
     *上一玩家出牌数量
     * </pre>
     */
    public int getPrCardsCount() {
      return prCardsCount_;
    }

    // optional int32 pr_out_card_type = 12;
    public static final int PR_OUT_CARD_TYPE_FIELD_NUMBER = 12;
    private int prOutCardType_;
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasPrOutCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pr_out_card_type = 12;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getPrOutCardType() {
      return prOutCardType_;
    }

    // optional int32 is_first_out = 13;
    public static final int IS_FIRST_OUT_FIELD_NUMBER = 13;
    private int isFirstOut_;
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 is_first_out = 13;</code>
     *
     * <pre>
     *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
     * </pre>
     */
    public int getIsFirstOut() {
      return isFirstOut_;
    }

    // optional int32 display_time = 14;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 14;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 display_time = 14;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // repeated int32 card_count = 15;
    public static final int CARD_COUNT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 15;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 16;
    public static final int CARDS_DATA_FIELD_NUMBER = 16;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    // optional .RoomInfo room_info = 17;
    public static final int ROOM_INFO_FIELD_NUMBER = 17;
    private protobuf.clazz.Protocol.RoomInfo roomInfo_;
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public boolean hasRoomInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
      return roomInfo_;
    }
    /**
     * <code>optional .RoomInfo room_info = 17;</code>
     */
    public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
      return roomInfo_;
    }

    // repeated .RoomPlayerResponse players = 18;
    public static final int PLAYERS_FIELD_NUMBER = 18;
    private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_;
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .RoomPlayerResponse players = 18;</code>
     */
    public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated int32 user_can_out_data = 19;
    public static final int USER_CAN_OUT_DATA_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> userCanOutData_;
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUserCanOutDataList() {
      return userCanOutData_;
    }
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutDataCount() {
      return userCanOutData_.size();
    }
    /**
     * <code>repeated int32 user_can_out_data = 19;</code>
     *
     * <pre>
     *出牌数据
     * </pre>
     */
    public int getUserCanOutData(int index) {
      return userCanOutData_.get(index);
    }

    // optional int32 user_can_out_count = 20;
    public static final int USER_CAN_OUT_COUNT_FIELD_NUMBER = 20;
    private int userCanOutCount_;
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public boolean hasUserCanOutCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 user_can_out_count = 20;</code>
     *
     * <pre>
     *出牌数量
     * </pre>
     */
    public int getUserCanOutCount() {
      return userCanOutCount_;
    }

    // repeated int32 win_order = 21;
    public static final int WIN_ORDER_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> winOrder_;
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinOrderList() {
      return winOrder_;
    }
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrderCount() {
      return winOrder_.size();
    }
    /**
     * <code>repeated int32 win_order = 21;</code>
     *
     * <pre>
     *输赢排序
     * </pre>
     */
    public int getWinOrder(int index) {
      return winOrder_.get(index);
    }

    // optional bool is_can_out_friendcards = 22;
    public static final int IS_CAN_OUT_FRIENDCARDS_FIELD_NUMBER = 22;
    private boolean isCanOutFriendcards_;
    /**
     * <code>optional bool is_can_out_friendcards = 22;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    public boolean hasIsCanOutFriendcards() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool is_can_out_friendcards = 22;</code>
     *
     * <pre>
     *能操作对方的牌
     * </pre>
     */
    public boolean getIsCanOutFriendcards() {
      return isCanOutFriendcards_;
    }

    // optional bool is_can_opreate = 23;
    public static final int IS_CAN_OPREATE_FIELD_NUMBER = 23;
    private boolean isCanOpreate_;
    /**
     * <code>optional bool is_can_opreate = 23;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    public boolean hasIsCanOpreate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_can_opreate = 23;</code>
     *
     * <pre>
     *是否可操作
     * </pre>
     */
    public boolean getIsCanOpreate() {
      return isCanOpreate_;
    }

    private void initFields() {
      bankerPlayer_ = 0;
      currentPlayer_ = 0;
      prevPlayer_ = 0;
      trustee_ = java.util.Collections.emptyList();
      outCardsData_ = java.util.Collections.emptyList();
      outCardsCount_ = java.util.Collections.emptyList();
      playerPass_ = java.util.Collections.emptyList();
      cardType_ = java.util.Collections.emptyList();
      prOutCardPlayer_ = 0;
      prCardsData_ = java.util.Collections.emptyList();
      prCardsCount_ = 0;
      prOutCardType_ = 0;
      isFirstOut_ = 0;
      displayTime_ = 0;
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
      roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      userCanOutData_ = java.util.Collections.emptyList();
      userCanOutCount_ = 0;
      winOrder_ = java.util.Collections.emptyList();
      isCanOutFriendcards_ = false;
      isCanOpreate_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevPlayer_);
      }
      for (int i = 0; i < trustee_.size(); i++) {
        output.writeBool(4, trustee_.get(i));
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        output.writeMessage(5, outCardsData_.get(i));
      }
      for (int i = 0; i < outCardsCount_.size(); i++) {
        output.writeInt32(6, outCardsCount_.get(i));
      }
      for (int i = 0; i < playerPass_.size(); i++) {
        output.writeInt32(7, playerPass_.get(i));
      }
      for (int i = 0; i < cardType_.size(); i++) {
        output.writeInt32(8, cardType_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, prOutCardPlayer_);
      }
      for (int i = 0; i < prCardsData_.size(); i++) {
        output.writeInt32(10, prCardsData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, displayTime_);
      }
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(15, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(18, players_.get(i));
      }
      for (int i = 0; i < userCanOutData_.size(); i++) {
        output.writeInt32(19, userCanOutData_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(20, userCanOutCount_);
      }
      for (int i = 0; i < winOrder_.size(); i++) {
        output.writeInt32(21, winOrder_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(22, isCanOutFriendcards_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(23, isCanOpreate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentPlayer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevPlayer_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getTrusteeList().size();
        size += dataSize;
        size += 1 * getTrusteeList().size();
      }
      for (int i = 0; i < outCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outCardsData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCardsCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCardsCount_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerPass_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerPass_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerPassList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardType_.get(i));
        }
        size += dataSize;
        size += 1 * getCardTypeList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, prOutCardPlayer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prCardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(prCardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getPrCardsDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, prCardsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, prOutCardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isFirstOut_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, displayTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, roomInfo_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, players_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCanOutData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCanOutData_.get(i));
        }
        size += dataSize;
        size += 2 * getUserCanOutDataList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, userCanOutCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winOrder_.get(i));
        }
        size += dataSize;
        size += 2 * getWinOrderList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, isCanOutFriendcards_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, isCanOpreate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.TableResponse_yxzd}
     *
     * <pre>
     *1006
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_TableResponse_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_TableResponse_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutCardsDataFieldBuilder();
          getCardsDataFieldBuilder();
          getRoomInfoFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          outCardsDataBuilder_.clear();
        }
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        playerPass_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        prOutCardPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        prCardsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        prOutCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        isFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          cardsDataBuilder_.clear();
        }
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          playersBuilder_.clear();
        }
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        userCanOutCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        isCanOutFriendcards_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        isCanOpreate_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_TableResponse_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPlayer_ = bankerPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPlayer_ = currentPlayer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevPlayer_ = prevPlayer_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = java.util.Collections.unmodifiableList(trustee_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.trustee_ = trustee_;
        if (outCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            outCardsData_ = java.util.Collections.unmodifiableList(outCardsData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outCardsData_ = outCardsData_;
        } else {
          result.outCardsData_ = outCardsDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = java.util.Collections.unmodifiableList(outCardsCount_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.outCardsCount_ = outCardsCount_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = java.util.Collections.unmodifiableList(playerPass_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.playerPass_ = playerPass_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = java.util.Collections.unmodifiableList(cardType_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prOutCardPlayer_ = prOutCardPlayer_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = java.util.Collections.unmodifiableList(prCardsData_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.prCardsData_ = prCardsData_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000010;
        }
        result.prCardsCount_ = prCardsCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000020;
        }
        result.prOutCardType_ = prOutCardType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.displayTime_ = displayTime_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (roomInfoBuilder_ == null) {
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = java.util.Collections.unmodifiableList(userCanOutData_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.userCanOutData_ = userCanOutData_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.userCanOutCount_ = userCanOutCount_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          winOrder_ = java.util.Collections.unmodifiableList(winOrder_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.winOrder_ = winOrder_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isCanOutFriendcards_ = isCanOutFriendcards_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isCanOpreate_ = isCanOpreate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd.getDefaultInstance()) return this;
        if (other.hasBankerPlayer()) {
          setBankerPlayer(other.getBankerPlayer());
        }
        if (other.hasCurrentPlayer()) {
          setCurrentPlayer(other.getCurrentPlayer());
        }
        if (other.hasPrevPlayer()) {
          setPrevPlayer(other.getPrevPlayer());
        }
        if (!other.trustee_.isEmpty()) {
          if (trustee_.isEmpty()) {
            trustee_ = other.trustee_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTrusteeIsMutable();
            trustee_.addAll(other.trustee_);
          }
          onChanged();
        }
        if (outCardsDataBuilder_ == null) {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsData_.isEmpty()) {
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutCardsDataIsMutable();
              outCardsData_.addAll(other.outCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.outCardsData_.isEmpty()) {
            if (outCardsDataBuilder_.isEmpty()) {
              outCardsDataBuilder_.dispose();
              outCardsDataBuilder_ = null;
              outCardsData_ = other.outCardsData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutCardsDataFieldBuilder() : null;
            } else {
              outCardsDataBuilder_.addAllMessages(other.outCardsData_);
            }
          }
        }
        if (!other.outCardsCount_.isEmpty()) {
          if (outCardsCount_.isEmpty()) {
            outCardsCount_ = other.outCardsCount_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureOutCardsCountIsMutable();
            outCardsCount_.addAll(other.outCardsCount_);
          }
          onChanged();
        }
        if (!other.playerPass_.isEmpty()) {
          if (playerPass_.isEmpty()) {
            playerPass_ = other.playerPass_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePlayerPassIsMutable();
            playerPass_.addAll(other.playerPass_);
          }
          onChanged();
        }
        if (!other.cardType_.isEmpty()) {
          if (cardType_.isEmpty()) {
            cardType_ = other.cardType_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardTypeIsMutable();
            cardType_.addAll(other.cardType_);
          }
          onChanged();
        }
        if (other.hasPrOutCardPlayer()) {
          setPrOutCardPlayer(other.getPrOutCardPlayer());
        }
        if (!other.prCardsData_.isEmpty()) {
          if (prCardsData_.isEmpty()) {
            prCardsData_ = other.prCardsData_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePrCardsDataIsMutable();
            prCardsData_.addAll(other.prCardsData_);
          }
          onChanged();
        }
        if (other.hasPrCardsCount()) {
          setPrCardsCount(other.getPrCardsCount());
        }
        if (other.hasPrOutCardType()) {
          setPrOutCardType(other.getPrOutCardType());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00008000);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        if (other.hasRoomInfo()) {
          mergeRoomInfo(other.getRoomInfo());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00020000);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (!other.userCanOutData_.isEmpty()) {
          if (userCanOutData_.isEmpty()) {
            userCanOutData_ = other.userCanOutData_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureUserCanOutDataIsMutable();
            userCanOutData_.addAll(other.userCanOutData_);
          }
          onChanged();
        }
        if (other.hasUserCanOutCount()) {
          setUserCanOutCount(other.getUserCanOutCount());
        }
        if (!other.winOrder_.isEmpty()) {
          if (winOrder_.isEmpty()) {
            winOrder_ = other.winOrder_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureWinOrderIsMutable();
            winOrder_.addAll(other.winOrder_);
          }
          onChanged();
        }
        if (other.hasIsCanOutFriendcards()) {
          setIsCanOutFriendcards(other.getIsCanOutFriendcards());
        }
        if (other.hasIsCanOpreate()) {
          setIsCanOpreate(other.getIsCanOpreate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.TableResponse_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 banker_player = 1;
      private int bankerPlayer_ ;
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public boolean hasBankerPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public int getBankerPlayer() {
        return bankerPlayer_;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder setBankerPlayer(int value) {
        bitField0_ |= 0x00000001;
        bankerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker_player = 1;</code>
       *
       * <pre>
       *游戏变量
       * </pre>
       */
      public Builder clearBankerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 current_player = 2;
      private int currentPlayer_ ;
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public boolean hasCurrentPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public int getCurrentPlayer() {
        return currentPlayer_;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder setCurrentPlayer(int value) {
        bitField0_ |= 0x00000002;
        currentPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 current_player = 2;</code>
       *
       * <pre>
       *当前玩家
       * </pre>
       */
      public Builder clearCurrentPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPlayer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prev_player = 3;
      private int prevPlayer_ ;
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public boolean hasPrevPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public int getPrevPlayer() {
        return prevPlayer_;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder setPrevPlayer(int value) {
        bitField0_ |= 0x00000004;
        prevPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_player = 3;</code>
       *
       * <pre>
       *上一玩家
       * </pre>
       */
      public Builder clearPrevPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated bool trustee = 4;
      private java.util.List<java.lang.Boolean> trustee_ = java.util.Collections.emptyList();
      private void ensureTrusteeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          trustee_ = new java.util.ArrayList<java.lang.Boolean>(trustee_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getTrusteeList() {
        return java.util.Collections.unmodifiableList(trustee_);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public int getTrusteeCount() {
        return trustee_.size();
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public boolean getTrustee(int index) {
        return trustee_.get(index);
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder setTrustee(
          int index, boolean value) {
        ensureTrusteeIsMutable();
        trustee_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addTrustee(boolean value) {
        ensureTrusteeIsMutable();
        trustee_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder addAllTrustee(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureTrusteeIsMutable();
        super.addAll(values, trustee_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool trustee = 4;</code>
       *
       * <pre>
       *状态变量
       * </pre>
       */
      public Builder clearTrustee() {
        trustee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse out_cards_data = 5;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> outCardsData_ =
        java.util.Collections.emptyList();
      private void ensureOutCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          outCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(outCardsData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> outCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getOutCardsDataList() {
        if (outCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outCardsData_);
        } else {
          return outCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public int getOutCardsDataCount() {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.size();
        } else {
          return outCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);
        } else {
          return outCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder setOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (outCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, value);
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addOutCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          outCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder addAllOutCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          super.addAll(values, outCardsData_);
          onChanged();
        } else {
          outCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder clearOutCardsData() {
        if (outCardsDataBuilder_ == null) {
          outCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public Builder removeOutCardsData(int index) {
        if (outCardsDataBuilder_ == null) {
          ensureOutCardsDataIsMutable();
          outCardsData_.remove(index);
          onChanged();
        } else {
          outCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getOutCardsDataOrBuilder(
          int index) {
        if (outCardsDataBuilder_ == null) {
          return outCardsData_.get(index);  } else {
          return outCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getOutCardsDataOrBuilderList() {
        if (outCardsDataBuilder_ != null) {
          return outCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder() {
        return getOutCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addOutCardsDataBuilder(
          int index) {
        return getOutCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse out_cards_data = 5;</code>
       *
       * <pre>
       *扑克数据
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getOutCardsDataBuilderList() {
        return getOutCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getOutCardsDataFieldBuilder() {
        if (outCardsDataBuilder_ == null) {
          outCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  outCardsData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          outCardsData_ = null;
        }
        return outCardsDataBuilder_;
      }

      // repeated int32 out_cards_count = 6;
      private java.util.List<java.lang.Integer> outCardsCount_ = java.util.Collections.emptyList();
      private void ensureOutCardsCountIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          outCardsCount_ = new java.util.ArrayList<java.lang.Integer>(outCardsCount_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsCountList() {
        return java.util.Collections.unmodifiableList(outCardsCount_);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCountCount() {
        return outCardsCount_.size();
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public int getOutCardsCount(int index) {
        return outCardsCount_.get(index);
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder setOutCardsCount(
          int index, int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addOutCardsCount(int value) {
        ensureOutCardsCountIsMutable();
        outCardsCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder addAllOutCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsCountIsMutable();
        super.addAll(values, outCardsCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards_count = 6;</code>
       *
       * <pre>
       *本轮牌数量
       * </pre>
       */
      public Builder clearOutCardsCount() {
        outCardsCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 player_pass = 7;
      private java.util.List<java.lang.Integer> playerPass_ = java.util.Collections.emptyList();
      private void ensurePlayerPassIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          playerPass_ = new java.util.ArrayList<java.lang.Integer>(playerPass_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayerPassList() {
        return java.util.Collections.unmodifiableList(playerPass_);
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public int getPlayerPassCount() {
        return playerPass_.size();
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public int getPlayerPass(int index) {
        return playerPass_.get(index);
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder setPlayerPass(
          int index, int value) {
        ensurePlayerPassIsMutable();
        playerPass_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder addPlayerPass(int value) {
        ensurePlayerPassIsMutable();
        playerPass_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder addAllPlayerPass(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerPassIsMutable();
        super.addAll(values, playerPass_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 player_pass = 7;</code>
       *
       * <pre>
       *本轮不出数据
       * </pre>
       */
      public Builder clearPlayerPass() {
        playerPass_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 card_type = 8;
      private java.util.List<java.lang.Integer> cardType_ = java.util.Collections.emptyList();
      private void ensureCardTypeIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardType_ = new java.util.ArrayList<java.lang.Integer>(cardType_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardTypeList() {
        return java.util.Collections.unmodifiableList(cardType_);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardTypeCount() {
        return cardType_.size();
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getCardType(int index) {
        return cardType_.get(index);
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setCardType(
          int index, int value) {
        ensureCardTypeIsMutable();
        cardType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addCardType(int value) {
        ensureCardTypeIsMutable();
        cardType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder addAllCardType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardTypeIsMutable();
        super.addAll(values, cardType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_type = 8;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearCardType() {
        cardType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_player = 9;
      private int prOutCardPlayer_ ;
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public boolean hasPrOutCardPlayer() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public int getPrOutCardPlayer() {
        return prOutCardPlayer_;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder setPrOutCardPlayer(int value) {
        bitField0_ |= 0x00000100;
        prOutCardPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_player = 9;</code>
       *
       * <pre>
       *上一出牌玩家
       * </pre>
       */
      public Builder clearPrOutCardPlayer() {
        bitField0_ = (bitField0_ & ~0x00000100);
        prOutCardPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 pr_cards_data = 10;
      private java.util.List<java.lang.Integer> prCardsData_ = java.util.Collections.emptyList();
      private void ensurePrCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          prCardsData_ = new java.util.ArrayList<java.lang.Integer>(prCardsData_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrCardsDataList() {
        return java.util.Collections.unmodifiableList(prCardsData_);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsDataCount() {
        return prCardsData_.size();
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public int getPrCardsData(int index) {
        return prCardsData_.get(index);
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder setPrCardsData(
          int index, int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addPrCardsData(int value) {
        ensurePrCardsDataIsMutable();
        prCardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder addAllPrCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrCardsDataIsMutable();
        super.addAll(values, prCardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pr_cards_data = 10;</code>
       *
       * <pre>
       *上一玩家出牌数据
       * </pre>
       */
      public Builder clearPrCardsData() {
        prCardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 pr_cards_count = 11;
      private int prCardsCount_ ;
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public boolean hasPrCardsCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public int getPrCardsCount() {
        return prCardsCount_;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder setPrCardsCount(int value) {
        bitField0_ |= 0x00000400;
        prCardsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_cards_count = 11;</code>
       *
       * <pre>
       *上一玩家出牌数量
       * </pre>
       */
      public Builder clearPrCardsCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        prCardsCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pr_out_card_type = 12;
      private int prOutCardType_ ;
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasPrOutCardType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getPrOutCardType() {
        return prOutCardType_;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setPrOutCardType(int value) {
        bitField0_ |= 0x00000800;
        prOutCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pr_out_card_type = 12;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearPrOutCardType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        prOutCardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_first_out = 13;
      private int isFirstOut_ ;
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public int getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder setIsFirstOut(int value) {
        bitField0_ |= 0x00001000;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_first_out = 13;</code>
       *
       * <pre>
       *是否首出 //0不是首出 1已经出过牌的首出 2还未出牌的首出
       * </pre>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isFirstOut_ = 0;
        onChanged();
        return this;
      }

      // optional int32 display_time = 14;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00002000;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 14;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_count = 15;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 15;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 16;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 16;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // optional .RoomInfo room_info = 17;
      private protobuf.clazz.Protocol.RoomInfo roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> roomInfoBuilder_;
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public boolean hasRoomInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo getRoomInfo() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_;
        } else {
          return roomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomInfo_ = value;
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder setRoomInfo(
          protobuf.clazz.Protocol.RoomInfo.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = builderForValue.build();
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder mergeRoomInfo(protobuf.clazz.Protocol.RoomInfo value) {
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              roomInfo_ != protobuf.clazz.Protocol.RoomInfo.getDefaultInstance()) {
            roomInfo_ =
              protobuf.clazz.Protocol.RoomInfo.newBuilder(roomInfo_).mergeFrom(value).buildPartial();
          } else {
            roomInfo_ = value;
          }
          onChanged();
        } else {
          roomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = protobuf.clazz.Protocol.RoomInfo.getDefaultInstance();
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfo.Builder getRoomInfoBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      public protobuf.clazz.Protocol.RoomInfoOrBuilder getRoomInfoOrBuilder() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilder();
        } else {
          return roomInfo_;
        }
      }
      /**
       * <code>optional .RoomInfo room_info = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protobuf.clazz.Protocol.RoomInfo, protobuf.clazz.Protocol.RoomInfo.Builder, protobuf.clazz.Protocol.RoomInfoOrBuilder>(
                  roomInfo_,
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated .RoomPlayerResponse players = 18;
      private java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          players_ = new java.util.ArrayList<protobuf.clazz.Protocol.RoomPlayerResponse>(players_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> playersBuilder_;

      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder setPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addPlayers(
          int index, protobuf.clazz.Protocol.RoomPlayerResponse.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.RoomPlayerResponse> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public protobuf.clazz.Protocol.RoomPlayerResponse.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.RoomPlayerResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .RoomPlayerResponse players = 18;</code>
       */
      public java.util.List<protobuf.clazz.Protocol.RoomPlayerResponse.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.RoomPlayerResponse, protobuf.clazz.Protocol.RoomPlayerResponse.Builder, protobuf.clazz.Protocol.RoomPlayerResponseOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated int32 user_can_out_data = 19;
      private java.util.List<java.lang.Integer> userCanOutData_ = java.util.Collections.emptyList();
      private void ensureUserCanOutDataIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          userCanOutData_ = new java.util.ArrayList<java.lang.Integer>(userCanOutData_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUserCanOutDataList() {
        return java.util.Collections.unmodifiableList(userCanOutData_);
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutDataCount() {
        return userCanOutData_.size();
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public int getUserCanOutData(int index) {
        return userCanOutData_.get(index);
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder setUserCanOutData(
          int index, int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addUserCanOutData(int value) {
        ensureUserCanOutDataIsMutable();
        userCanOutData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder addAllUserCanOutData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCanOutDataIsMutable();
        super.addAll(values, userCanOutData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 user_can_out_data = 19;</code>
       *
       * <pre>
       *出牌数据
       * </pre>
       */
      public Builder clearUserCanOutData() {
        userCanOutData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // optional int32 user_can_out_count = 20;
      private int userCanOutCount_ ;
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public boolean hasUserCanOutCount() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public int getUserCanOutCount() {
        return userCanOutCount_;
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder setUserCanOutCount(int value) {
        bitField0_ |= 0x00080000;
        userCanOutCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_can_out_count = 20;</code>
       *
       * <pre>
       *出牌数量
       * </pre>
       */
      public Builder clearUserCanOutCount() {
        bitField0_ = (bitField0_ & ~0x00080000);
        userCanOutCount_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 win_order = 21;
      private java.util.List<java.lang.Integer> winOrder_ = java.util.Collections.emptyList();
      private void ensureWinOrderIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          winOrder_ = new java.util.ArrayList<java.lang.Integer>(winOrder_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinOrderList() {
        return java.util.Collections.unmodifiableList(winOrder_);
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrderCount() {
        return winOrder_.size();
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public int getWinOrder(int index) {
        return winOrder_.get(index);
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder setWinOrder(
          int index, int value) {
        ensureWinOrderIsMutable();
        winOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addWinOrder(int value) {
        ensureWinOrderIsMutable();
        winOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder addAllWinOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinOrderIsMutable();
        super.addAll(values, winOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 win_order = 21;</code>
       *
       * <pre>
       *输赢排序
       * </pre>
       */
      public Builder clearWinOrder() {
        winOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional bool is_can_out_friendcards = 22;
      private boolean isCanOutFriendcards_ ;
      /**
       * <code>optional bool is_can_out_friendcards = 22;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public boolean hasIsCanOutFriendcards() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool is_can_out_friendcards = 22;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public boolean getIsCanOutFriendcards() {
        return isCanOutFriendcards_;
      }
      /**
       * <code>optional bool is_can_out_friendcards = 22;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public Builder setIsCanOutFriendcards(boolean value) {
        bitField0_ |= 0x00200000;
        isCanOutFriendcards_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_can_out_friendcards = 22;</code>
       *
       * <pre>
       *能操作对方的牌
       * </pre>
       */
      public Builder clearIsCanOutFriendcards() {
        bitField0_ = (bitField0_ & ~0x00200000);
        isCanOutFriendcards_ = false;
        onChanged();
        return this;
      }

      // optional bool is_can_opreate = 23;
      private boolean isCanOpreate_ ;
      /**
       * <code>optional bool is_can_opreate = 23;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public boolean hasIsCanOpreate() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool is_can_opreate = 23;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public boolean getIsCanOpreate() {
        return isCanOpreate_;
      }
      /**
       * <code>optional bool is_can_opreate = 23;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public Builder setIsCanOpreate(boolean value) {
        bitField0_ |= 0x00400000;
        isCanOpreate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_can_opreate = 23;</code>
       *
       * <pre>
       *是否可操作
       * </pre>
       */
      public Builder clearIsCanOpreate() {
        bitField0_ = (bitField0_ & ~0x00400000);
        isCanOpreate_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.TableResponse_yxzd)
    }

    static {
      defaultInstance = new TableResponse_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.TableResponse_yxzd)
  }

  public interface RefreshCardData_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 hand_card_count = 1;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardCountList();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCountCount();
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getHandCardCount(int index);

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getHandCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getHandCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code yxzd.RefreshCardData_yxzd}
   *
   * <pre>
   *1007
   * </pre>
   */
  public static final class RefreshCardData_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements RefreshCardData_yxzdOrBuilder {
    // Use RefreshCardData_yxzd.newBuilder() to construct.
    private RefreshCardData_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RefreshCardData_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RefreshCardData_yxzd defaultInstance;
    public static RefreshCardData_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public RefreshCardData_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RefreshCardData_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              handCardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                handCardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              handCardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshCardData_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshCardData_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<RefreshCardData_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<RefreshCardData_yxzd>() {
      public RefreshCardData_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefreshCardData_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RefreshCardData_yxzd> getParserForType() {
      return PARSER;
    }

    // repeated int32 hand_card_count = 1;
    public static final int HAND_CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> handCardCount_;
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardCountList() {
      return handCardCount_;
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCountCount() {
      return handCardCount_.size();
    }
    /**
     * <code>repeated int32 hand_card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getHandCardCount(int index) {
      return handCardCount_.get(index);
    }

    // repeated .Int32ArrayResponse hand_cards_data = 2;
    public static final int HAND_CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_;
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getHandCardsDataOrBuilderList() {
      return handCardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getHandCardsDataCount() {
      return handCardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
      return handCardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
        int index) {
      return handCardsData_.get(index);
    }

    private void initFields() {
      handCardCount_ = java.util.Collections.emptyList();
      handCardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < handCardCount_.size(); i++) {
        output.writeInt32(1, handCardCount_.get(i));
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        output.writeMessage(2, handCardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handCardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardCountList().size();
      }
      for (int i = 0; i < handCardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, handCardsData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.RefreshCardData_yxzd}
     *
     * <pre>
     *1007
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshCardData_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshCardData_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_RefreshCardData_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = java.util.Collections.unmodifiableList(handCardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handCardCount_ = handCardCount_;
        if (handCardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            handCardsData_ = java.util.Collections.unmodifiableList(handCardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.handCardsData_ = handCardsData_;
        } else {
          result.handCardsData_ = handCardsDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd.getDefaultInstance()) return this;
        if (!other.handCardCount_.isEmpty()) {
          if (handCardCount_.isEmpty()) {
            handCardCount_ = other.handCardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandCardCountIsMutable();
            handCardCount_.addAll(other.handCardCount_);
          }
          onChanged();
        }
        if (handCardsDataBuilder_ == null) {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsData_.isEmpty()) {
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHandCardsDataIsMutable();
              handCardsData_.addAll(other.handCardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.handCardsData_.isEmpty()) {
            if (handCardsDataBuilder_.isEmpty()) {
              handCardsDataBuilder_.dispose();
              handCardsDataBuilder_ = null;
              handCardsData_ = other.handCardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              handCardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHandCardsDataFieldBuilder() : null;
            } else {
              handCardsDataBuilder_.addAllMessages(other.handCardsData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.RefreshCardData_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 hand_card_count = 1;
      private java.util.List<java.lang.Integer> handCardCount_ = java.util.Collections.emptyList();
      private void ensureHandCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardCount_ = new java.util.ArrayList<java.lang.Integer>(handCardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardCountList() {
        return java.util.Collections.unmodifiableList(handCardCount_);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCountCount() {
        return handCardCount_.size();
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getHandCardCount(int index) {
        return handCardCount_.get(index);
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setHandCardCount(
          int index, int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addHandCardCount(int value) {
        ensureHandCardCountIsMutable();
        handCardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllHandCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardCountIsMutable();
        super.addAll(values, handCardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearHandCardCount() {
        handCardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse hand_cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> handCardsData_ =
        java.util.Collections.emptyList();
      private void ensureHandCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handCardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(handCardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> handCardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getHandCardsDataList() {
        if (handCardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(handCardsData_);
        } else {
          return handCardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getHandCardsDataCount() {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.size();
        } else {
          return handCardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);
        } else {
          return handCardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (handCardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, value);
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addHandCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          handCardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllHandCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          super.addAll(values, handCardsData_);
          onChanged();
        } else {
          handCardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearHandCardsData() {
        if (handCardsDataBuilder_ == null) {
          handCardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          handCardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeHandCardsData(int index) {
        if (handCardsDataBuilder_ == null) {
          ensureHandCardsDataIsMutable();
          handCardsData_.remove(index);
          onChanged();
        } else {
          handCardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getHandCardsDataOrBuilder(
          int index) {
        if (handCardsDataBuilder_ == null) {
          return handCardsData_.get(index);  } else {
          return handCardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getHandCardsDataOrBuilderList() {
        if (handCardsDataBuilder_ != null) {
          return handCardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(handCardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder() {
        return getHandCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addHandCardsDataBuilder(
          int index) {
        return getHandCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse hand_cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getHandCardsDataBuilderList() {
        return getHandCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getHandCardsDataFieldBuilder() {
        if (handCardsDataBuilder_ == null) {
          handCardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  handCardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          handCardsData_ = null;
        }
        return handCardsDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.RefreshCardData_yxzd)
    }

    static {
      defaultInstance = new RefreshCardData_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.RefreshCardData_yxzd)
  }

  public interface Refresh_Pai_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_index = 1;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *队友位置
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *队友位置
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards_data = 2;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 card_count = 3;
    /**
     * <code>optional int32 card_count = 3;</code>
     *
     * <pre>
     *牌的数量
     * </pre>
     */
    boolean hasCardCount();
    /**
     * <code>optional int32 card_count = 3;</code>
     *
     * <pre>
     *牌的数量
     * </pre>
     */
    int getCardCount();
  }
  /**
   * Protobuf type {@code yxzd.Refresh_Pai_yxzd}
   *
   * <pre>
   *刷新队友牌值 1008
   * </pre>
   */
  public static final class Refresh_Pai_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements Refresh_Pai_yxzdOrBuilder {
    // Use Refresh_Pai_yxzd.newBuilder() to construct.
    private Refresh_Pai_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Refresh_Pai_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Refresh_Pai_yxzd defaultInstance;
    public static Refresh_Pai_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public Refresh_Pai_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Refresh_Pai_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Refresh_Pai_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Refresh_Pai_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<Refresh_Pai_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<Refresh_Pai_yxzd>() {
      public Refresh_Pai_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Refresh_Pai_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Refresh_Pai_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_index = 1;
    public static final int SEAT_INDEX_FIELD_NUMBER = 1;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *队友位置
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_index = 1;</code>
     *
     * <pre>
     *队友位置
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 card_count = 3;
    public static final int CARD_COUNT_FIELD_NUMBER = 3;
    private int cardCount_;
    /**
     * <code>optional int32 card_count = 3;</code>
     *
     * <pre>
     *牌的数量
     * </pre>
     */
    public boolean hasCardCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_count = 3;</code>
     *
     * <pre>
     *牌的数量
     * </pre>
     */
    public int getCardCount() {
      return cardCount_;
    }

    private void initFields() {
      seatIndex_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      cardCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatIndex_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(2, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cardCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cardCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.Refresh_Pai_yxzd}
     *
     * <pre>
     *刷新队友牌值 1008
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Refresh_Pai_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Refresh_Pai_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Refresh_Pai_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardCount_ = cardCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd.getDefaultInstance()) return this;
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasCardCount()) {
          setCardCount(other.getCardCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.Refresh_Pai_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_index = 1;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *队友位置
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *队友位置
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *队友位置
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000001;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 1;</code>
       *
       * <pre>
       *队友位置
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 2;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 card_count = 3;
      private int cardCount_ ;
      /**
       * <code>optional int32 card_count = 3;</code>
       *
       * <pre>
       *牌的数量
       * </pre>
       */
      public boolean hasCardCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 card_count = 3;</code>
       *
       * <pre>
       *牌的数量
       * </pre>
       */
      public int getCardCount() {
        return cardCount_;
      }
      /**
       * <code>optional int32 card_count = 3;</code>
       *
       * <pre>
       *牌的数量
       * </pre>
       */
      public Builder setCardCount(int value) {
        bitField0_ |= 0x00000004;
        cardCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_count = 3;</code>
       *
       * <pre>
       *牌的数量
       * </pre>
       */
      public Builder clearCardCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.Refresh_Pai_yxzd)
    }

    static {
      defaultInstance = new Refresh_Pai_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.Refresh_Pai_yxzd)
  }

  public interface FanPai_Response_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 control_index = 1;
    /**
     * <code>optional int32 control_index = 1;</code>
     *
     * <pre>
     *翻牌过的玩家
     * </pre>
     */
    boolean hasControlIndex();
    /**
     * <code>optional int32 control_index = 1;</code>
     *
     * <pre>
     *翻牌过的玩家
     * </pre>
     */
    int getControlIndex();

    // optional int32 card_index = 2;
    /**
     * <code>optional int32 card_index = 2;</code>
     *
     * <pre>
     *翻的牌的索引
     * </pre>
     */
    boolean hasCardIndex();
    /**
     * <code>optional int32 card_index = 2;</code>
     *
     * <pre>
     *翻的牌的索引
     * </pre>
     */
    int getCardIndex();

    // repeated int32 card_data = 3;
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardDataList();
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    int getCardDataCount();
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    int getCardData(int index);

    // optional int32 display_time = 4;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();

    // optional int32 cur_index = 5;
    /**
     * <code>optional int32 cur_index = 5;</code>
     *
     * <pre>
     *当前操作玩家
     * </pre>
     */
    boolean hasCurIndex();
    /**
     * <code>optional int32 cur_index = 5;</code>
     *
     * <pre>
     *当前操作玩家
     * </pre>
     */
    int getCurIndex();
  }
  /**
   * Protobuf type {@code yxzd.FanPai_Response_yxzd}
   *
   * <pre>
   *翻牌回复 1009
   * </pre>
   */
  public static final class FanPai_Response_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements FanPai_Response_yxzdOrBuilder {
    // Use FanPai_Response_yxzd.newBuilder() to construct.
    private FanPai_Response_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FanPai_Response_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FanPai_Response_yxzd defaultInstance;
    public static FanPai_Response_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public FanPai_Response_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FanPai_Response_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              controlIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardData_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              displayTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              curIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Response_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Response_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<FanPai_Response_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<FanPai_Response_yxzd>() {
      public FanPai_Response_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FanPai_Response_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FanPai_Response_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 control_index = 1;
    public static final int CONTROL_INDEX_FIELD_NUMBER = 1;
    private int controlIndex_;
    /**
     * <code>optional int32 control_index = 1;</code>
     *
     * <pre>
     *翻牌过的玩家
     * </pre>
     */
    public boolean hasControlIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 control_index = 1;</code>
     *
     * <pre>
     *翻牌过的玩家
     * </pre>
     */
    public int getControlIndex() {
      return controlIndex_;
    }

    // optional int32 card_index = 2;
    public static final int CARD_INDEX_FIELD_NUMBER = 2;
    private int cardIndex_;
    /**
     * <code>optional int32 card_index = 2;</code>
     *
     * <pre>
     *翻的牌的索引
     * </pre>
     */
    public boolean hasCardIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_index = 2;</code>
     *
     * <pre>
     *翻的牌的索引
     * </pre>
     */
    public int getCardIndex() {
      return cardIndex_;
    }

    // repeated int32 card_data = 3;
    public static final int CARD_DATA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardData_;
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated int32 card_data = 3;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public int getCardData(int index) {
      return cardData_.get(index);
    }

    // optional int32 display_time = 4;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 4;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 display_time = 4;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    // optional int32 cur_index = 5;
    public static final int CUR_INDEX_FIELD_NUMBER = 5;
    private int curIndex_;
    /**
     * <code>optional int32 cur_index = 5;</code>
     *
     * <pre>
     *当前操作玩家
     * </pre>
     */
    public boolean hasCurIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 cur_index = 5;</code>
     *
     * <pre>
     *当前操作玩家
     * </pre>
     */
    public int getCurIndex() {
      return curIndex_;
    }

    private void initFields() {
      controlIndex_ = 0;
      cardIndex_ = 0;
      cardData_ = java.util.Collections.emptyList();
      displayTime_ = 0;
      curIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, controlIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardIndex_);
      }
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeInt32(3, cardData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, curIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, controlIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardDataList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, displayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, curIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.FanPai_Response_yxzd}
     *
     * <pre>
     *翻牌回复 1009
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Response_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Response_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        controlIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        curIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Response_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.controlIndex_ = controlIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardIndex_ = cardIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardData_ = cardData_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.displayTime_ = displayTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curIndex_ = curIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd.getDefaultInstance()) return this;
        if (other.hasControlIndex()) {
          setControlIndex(other.getControlIndex());
        }
        if (other.hasCardIndex()) {
          setCardIndex(other.getCardIndex());
        }
        if (!other.cardData_.isEmpty()) {
          if (cardData_.isEmpty()) {
            cardData_ = other.cardData_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardDataIsMutable();
            cardData_.addAll(other.cardData_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        if (other.hasCurIndex()) {
          setCurIndex(other.getCurIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.FanPai_Response_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 control_index = 1;
      private int controlIndex_ ;
      /**
       * <code>optional int32 control_index = 1;</code>
       *
       * <pre>
       *翻牌过的玩家
       * </pre>
       */
      public boolean hasControlIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 control_index = 1;</code>
       *
       * <pre>
       *翻牌过的玩家
       * </pre>
       */
      public int getControlIndex() {
        return controlIndex_;
      }
      /**
       * <code>optional int32 control_index = 1;</code>
       *
       * <pre>
       *翻牌过的玩家
       * </pre>
       */
      public Builder setControlIndex(int value) {
        bitField0_ |= 0x00000001;
        controlIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 control_index = 1;</code>
       *
       * <pre>
       *翻牌过的玩家
       * </pre>
       */
      public Builder clearControlIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        controlIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_index = 2;
      private int cardIndex_ ;
      /**
       * <code>optional int32 card_index = 2;</code>
       *
       * <pre>
       *翻的牌的索引
       * </pre>
       */
      public boolean hasCardIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_index = 2;</code>
       *
       * <pre>
       *翻的牌的索引
       * </pre>
       */
      public int getCardIndex() {
        return cardIndex_;
      }
      /**
       * <code>optional int32 card_index = 2;</code>
       *
       * <pre>
       *翻的牌的索引
       * </pre>
       */
      public Builder setCardIndex(int value) {
        bitField0_ |= 0x00000002;
        cardIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_index = 2;</code>
       *
       * <pre>
       *翻的牌的索引
       * </pre>
       */
      public Builder clearCardIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_data = 3;
      private java.util.List<java.lang.Integer> cardData_ = java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardData_ = new java.util.ArrayList<java.lang.Integer>(cardData_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardDataList() {
        return java.util.Collections.unmodifiableList(cardData_);
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public int getCardDataCount() {
        return cardData_.size();
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public int getCardData(int index) {
        return cardData_.get(index);
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder setCardData(
          int index, int value) {
        ensureCardDataIsMutable();
        cardData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder addCardData(int value) {
        ensureCardDataIsMutable();
        cardData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataIsMutable();
        super.addAll(values, cardData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 3;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder clearCardData() {
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 display_time = 4;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000008;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 4;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cur_index = 5;
      private int curIndex_ ;
      /**
       * <code>optional int32 cur_index = 5;</code>
       *
       * <pre>
       *当前操作玩家
       * </pre>
       */
      public boolean hasCurIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 cur_index = 5;</code>
       *
       * <pre>
       *当前操作玩家
       * </pre>
       */
      public int getCurIndex() {
        return curIndex_;
      }
      /**
       * <code>optional int32 cur_index = 5;</code>
       *
       * <pre>
       *当前操作玩家
       * </pre>
       */
      public Builder setCurIndex(int value) {
        bitField0_ |= 0x00000010;
        curIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_index = 5;</code>
       *
       * <pre>
       *当前操作玩家
       * </pre>
       */
      public Builder clearCurIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        curIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.FanPai_Response_yxzd)
    }

    static {
      defaultInstance = new FanPai_Response_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.FanPai_Response_yxzd)
  }

  public interface FanPai_Begin_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cur_index = 1;
    /**
     * <code>optional int32 cur_index = 1;</code>
     *
     * <pre>
     *首翻牌玩家
     * </pre>
     */
    boolean hasCurIndex();
    /**
     * <code>optional int32 cur_index = 1;</code>
     *
     * <pre>
     *首翻牌玩家
     * </pre>
     */
    int getCurIndex();

    // repeated int32 card_data = 2;
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardDataList();
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    int getCardDataCount();
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    int getCardData(int index);

    // optional int32 display_time = 3;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    boolean hasDisplayTime();
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    int getDisplayTime();
  }
  /**
   * Protobuf type {@code yxzd.FanPai_Begin_yxzd}
   *
   * <pre>
   *翻牌开始 1010
   * </pre>
   */
  public static final class FanPai_Begin_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements FanPai_Begin_yxzdOrBuilder {
    // Use FanPai_Begin_yxzd.newBuilder() to construct.
    private FanPai_Begin_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FanPai_Begin_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FanPai_Begin_yxzd defaultInstance;
    public static FanPai_Begin_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public FanPai_Begin_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FanPai_Begin_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              curIndex_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardData_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              displayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Begin_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Begin_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<FanPai_Begin_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<FanPai_Begin_yxzd>() {
      public FanPai_Begin_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FanPai_Begin_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FanPai_Begin_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cur_index = 1;
    public static final int CUR_INDEX_FIELD_NUMBER = 1;
    private int curIndex_;
    /**
     * <code>optional int32 cur_index = 1;</code>
     *
     * <pre>
     *首翻牌玩家
     * </pre>
     */
    public boolean hasCurIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cur_index = 1;</code>
     *
     * <pre>
     *首翻牌玩家
     * </pre>
     */
    public int getCurIndex() {
      return curIndex_;
    }

    // repeated int32 card_data = 2;
    public static final int CARD_DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardData_;
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardDataList() {
      return cardData_;
    }
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public int getCardDataCount() {
      return cardData_.size();
    }
    /**
     * <code>repeated int32 card_data = 2;</code>
     *
     * <pre>
     *操作扑克
     * </pre>
     */
    public int getCardData(int index) {
      return cardData_.get(index);
    }

    // optional int32 display_time = 3;
    public static final int DISPLAY_TIME_FIELD_NUMBER = 3;
    private int displayTime_;
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public boolean hasDisplayTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 display_time = 3;</code>
     *
     * <pre>
     *显示时间
     * </pre>
     */
    public int getDisplayTime() {
      return displayTime_;
    }

    private void initFields() {
      curIndex_ = 0;
      cardData_ = java.util.Collections.emptyList();
      displayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, curIndex_);
      }
      for (int i = 0; i < cardData_.size(); i++) {
        output.writeInt32(2, cardData_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, displayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, curIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardDataList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, displayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.FanPai_Begin_yxzd}
     *
     * <pre>
     *翻牌开始 1010
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Begin_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Begin_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        curIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        displayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_FanPai_Begin_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.curIndex_ = curIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardData_ = java.util.Collections.unmodifiableList(cardData_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardData_ = cardData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.displayTime_ = displayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd.getDefaultInstance()) return this;
        if (other.hasCurIndex()) {
          setCurIndex(other.getCurIndex());
        }
        if (!other.cardData_.isEmpty()) {
          if (cardData_.isEmpty()) {
            cardData_ = other.cardData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardDataIsMutable();
            cardData_.addAll(other.cardData_);
          }
          onChanged();
        }
        if (other.hasDisplayTime()) {
          setDisplayTime(other.getDisplayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.FanPai_Begin_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cur_index = 1;
      private int curIndex_ ;
      /**
       * <code>optional int32 cur_index = 1;</code>
       *
       * <pre>
       *首翻牌玩家
       * </pre>
       */
      public boolean hasCurIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cur_index = 1;</code>
       *
       * <pre>
       *首翻牌玩家
       * </pre>
       */
      public int getCurIndex() {
        return curIndex_;
      }
      /**
       * <code>optional int32 cur_index = 1;</code>
       *
       * <pre>
       *首翻牌玩家
       * </pre>
       */
      public Builder setCurIndex(int value) {
        bitField0_ |= 0x00000001;
        curIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_index = 1;</code>
       *
       * <pre>
       *首翻牌玩家
       * </pre>
       */
      public Builder clearCurIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        curIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_data = 2;
      private java.util.List<java.lang.Integer> cardData_ = java.util.Collections.emptyList();
      private void ensureCardDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardData_ = new java.util.ArrayList<java.lang.Integer>(cardData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardDataList() {
        return java.util.Collections.unmodifiableList(cardData_);
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public int getCardDataCount() {
        return cardData_.size();
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public int getCardData(int index) {
        return cardData_.get(index);
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder setCardData(
          int index, int value) {
        ensureCardDataIsMutable();
        cardData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder addCardData(int value) {
        ensureCardDataIsMutable();
        cardData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder addAllCardData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardDataIsMutable();
        super.addAll(values, cardData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_data = 2;</code>
       *
       * <pre>
       *操作扑克
       * </pre>
       */
      public Builder clearCardData() {
        cardData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 display_time = 3;
      private int displayTime_ ;
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public boolean hasDisplayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public int getDisplayTime() {
        return displayTime_;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder setDisplayTime(int value) {
        bitField0_ |= 0x00000004;
        displayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 display_time = 3;</code>
       *
       * <pre>
       *显示时间
       * </pre>
       */
      public Builder clearDisplayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        displayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.FanPai_Begin_yxzd)
    }

    static {
      defaultInstance = new FanPai_Begin_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.FanPai_Begin_yxzd)
  }

  public interface Contorl_Toward_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code yxzd.Contorl_Toward_yxzd}
   *
   * <pre>
   *一拖二 1011
   * </pre>
   */
  public static final class Contorl_Toward_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements Contorl_Toward_yxzdOrBuilder {
    // Use Contorl_Toward_yxzd.newBuilder() to construct.
    private Contorl_Toward_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Contorl_Toward_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Contorl_Toward_yxzd defaultInstance;
    public static Contorl_Toward_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public Contorl_Toward_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Contorl_Toward_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Contorl_Toward_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Contorl_Toward_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<Contorl_Toward_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<Contorl_Toward_yxzd>() {
      public Contorl_Toward_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Contorl_Toward_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Contorl_Toward_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.Contorl_Toward_yxzd}
     *
     * <pre>
     *一拖二 1011
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Contorl_Toward_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Contorl_Toward_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Contorl_Toward_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.Contorl_Toward_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *1显示 2:站起 3：隐藏 4:接管 5：取消接管 6：被接管
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.Contorl_Toward_yxzd)
    }

    static {
      defaultInstance = new Contorl_Toward_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.Contorl_Toward_yxzd)
  }

  public interface SendCard_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_count = 1;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardCountList();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCountCount();
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    int getCardCount(int index);

    // repeated .Int32ArrayResponse cards_data = 2;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> 
        getCardsDataList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index);
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList();
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code yxzd.SendCard_yxzd}
   *
   * <pre>
   *发牌1012
   * </pre>
   */
  public static final class SendCard_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements SendCard_yxzdOrBuilder {
    // Use SendCard_yxzd.newBuilder() to construct.
    private SendCard_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCard_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCard_yxzd defaultInstance;
    public static SendCard_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public SendCard_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCard_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardCount_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsData_.add(input.readMessage(protobuf.clazz.Protocol.Int32ArrayResponse.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_SendCard_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_SendCard_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCard_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<SendCard_yxzd>() {
      public SendCard_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCard_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCard_yxzd> getParserForType() {
      return PARSER;
    }

    // repeated int32 card_count = 1;
    public static final int CARD_COUNT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardCount_;
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardCountList() {
      return cardCount_;
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCountCount() {
      return cardCount_.size();
    }
    /**
     * <code>repeated int32 card_count = 1;</code>
     *
     * <pre>
     *扑克数目
     * </pre>
     */
    public int getCardCount(int index) {
      return cardCount_.get(index);
    }

    // repeated .Int32ArrayResponse cards_data = 2;
    public static final int CARDS_DATA_FIELD_NUMBER = 2;
    private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_;
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
        getCardsDataOrBuilderList() {
      return cardsData_;
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
      return cardsData_.get(index);
    }
    /**
     * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
     *
     * <pre>
     *扑克列表
     * </pre>
     */
    public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
        int index) {
      return cardsData_.get(index);
    }

    private void initFields() {
      cardCount_ = java.util.Collections.emptyList();
      cardsData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardCount_.size(); i++) {
        output.writeInt32(1, cardCount_.get(i));
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeMessage(2, cardsData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCardCountList().size();
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cardsData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.SendCard_yxzd}
     *
     * <pre>
     *发牌1012
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_SendCard_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_SendCard_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_SendCard_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = java.util.Collections.unmodifiableList(cardCount_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardCount_ = cardCount_;
        if (cardsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cardsData_ = cardsData_;
        } else {
          result.cardsData_ = cardsDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd.getDefaultInstance()) return this;
        if (!other.cardCount_.isEmpty()) {
          if (cardCount_.isEmpty()) {
            cardCount_ = other.cardCount_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardCountIsMutable();
            cardCount_.addAll(other.cardCount_);
          }
          onChanged();
        }
        if (cardsDataBuilder_ == null) {
          if (!other.cardsData_.isEmpty()) {
            if (cardsData_.isEmpty()) {
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsDataIsMutable();
              cardsData_.addAll(other.cardsData_);
            }
            onChanged();
          }
        } else {
          if (!other.cardsData_.isEmpty()) {
            if (cardsDataBuilder_.isEmpty()) {
              cardsDataBuilder_.dispose();
              cardsDataBuilder_ = null;
              cardsData_ = other.cardsData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsDataFieldBuilder() : null;
            } else {
              cardsDataBuilder_.addAllMessages(other.cardsData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.SendCard_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_count = 1;
      private java.util.List<java.lang.Integer> cardCount_ = java.util.Collections.emptyList();
      private void ensureCardCountIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardCount_ = new java.util.ArrayList<java.lang.Integer>(cardCount_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardCountList() {
        return java.util.Collections.unmodifiableList(cardCount_);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCountCount() {
        return cardCount_.size();
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public int getCardCount(int index) {
        return cardCount_.get(index);
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder setCardCount(
          int index, int value) {
        ensureCardCountIsMutable();
        cardCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addCardCount(int value) {
        ensureCardCountIsMutable();
        cardCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder addAllCardCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardCountIsMutable();
        super.addAll(values, cardCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_count = 1;</code>
       *
       * <pre>
       *扑克数目
       * </pre>
       */
      public Builder clearCardCount() {
        cardCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .Int32ArrayResponse cards_data = 2;
      private java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> cardsData_ =
        java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsData_ = new java.util.ArrayList<protobuf.clazz.Protocol.Int32ArrayResponse>(cardsData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> cardsDataBuilder_;

      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse> getCardsDataList() {
        if (cardsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardsData_);
        } else {
          return cardsDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public int getCardsDataCount() {
        if (cardsDataBuilder_ == null) {
          return cardsData_.size();
        } else {
          return cardsDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse getCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);
        } else {
          return cardsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.set(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder setCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse value) {
        if (cardsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsDataIsMutable();
          cardsData_.add(index, value);
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addCardsData(
          int index, protobuf.clazz.Protocol.Int32ArrayResponse.Builder builderForValue) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends protobuf.clazz.Protocol.Int32ArrayResponse> values) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          super.addAll(values, cardsData_);
          onChanged();
        } else {
          cardsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder clearCardsData() {
        if (cardsDataBuilder_ == null) {
          cardsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public Builder removeCardsData(int index) {
        if (cardsDataBuilder_ == null) {
          ensureCardsDataIsMutable();
          cardsData_.remove(index);
          onChanged();
        } else {
          cardsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder getCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder getCardsDataOrBuilder(
          int index) {
        if (cardsDataBuilder_ == null) {
          return cardsData_.get(index);  } else {
          return cardsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
           getCardsDataOrBuilderList() {
        if (cardsDataBuilder_ != null) {
          return cardsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardsData_);
        }
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder() {
        return getCardsDataFieldBuilder().addBuilder(
            protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public protobuf.clazz.Protocol.Int32ArrayResponse.Builder addCardsDataBuilder(
          int index) {
        return getCardsDataFieldBuilder().addBuilder(
            index, protobuf.clazz.Protocol.Int32ArrayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .Int32ArrayResponse cards_data = 2;</code>
       *
       * <pre>
       *扑克列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.Protocol.Int32ArrayResponse.Builder> 
           getCardsDataBuilderList() {
        return getCardsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder> 
          getCardsDataFieldBuilder() {
        if (cardsDataBuilder_ == null) {
          cardsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.Protocol.Int32ArrayResponse, protobuf.clazz.Protocol.Int32ArrayResponse.Builder, protobuf.clazz.Protocol.Int32ArrayResponseOrBuilder>(
                  cardsData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cardsData_ = null;
        }
        return cardsDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.SendCard_yxzd)
    }

    static {
      defaultInstance = new SendCard_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.SendCard_yxzd)
  }

  public interface Opreate_RequestWsk_yxzdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 opreate_type = 1;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
     * </pre>
     */
    boolean hasOpreateType();
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
     * </pre>
     */
    int getOpreateType();

    // optional int32 seat_index = 2;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *出牌位置
     * </pre>
     */
    boolean hasSeatIndex();
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *出牌位置
     * </pre>
     */
    int getSeatIndex();

    // repeated int32 cards_data = 3;
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsDataList();
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    int getCardsDataCount();
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    int getCardsData(int index);

    // optional int32 out_type = 4;
    /**
     * <code>optional int32 out_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasOutType();
    /**
     * <code>optional int32 out_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getOutType();

    // optional int32 fan_pai_index = 5;
    /**
     * <code>optional int32 fan_pai_index = 5;</code>
     */
    boolean hasFanPaiIndex();
    /**
     * <code>optional int32 fan_pai_index = 5;</code>
     */
    int getFanPaiIndex();
  }
  /**
   * Protobuf type {@code yxzd.Opreate_RequestWsk_yxzd}
   *
   * <pre>
   *请求 1082
   * </pre>
   */
  public static final class Opreate_RequestWsk_yxzd extends
      com.google.protobuf.GeneratedMessage
      implements Opreate_RequestWsk_yxzdOrBuilder {
    // Use Opreate_RequestWsk_yxzd.newBuilder() to construct.
    private Opreate_RequestWsk_yxzd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Opreate_RequestWsk_yxzd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Opreate_RequestWsk_yxzd defaultInstance;
    public static Opreate_RequestWsk_yxzd getDefaultInstance() {
      return defaultInstance;
    }

    public Opreate_RequestWsk_yxzd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Opreate_RequestWsk_yxzd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opreateType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatIndex_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardsData_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardsData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              outType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              fanPaiIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Opreate_RequestWsk_yxzd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.Builder.class);
    }

    public static com.google.protobuf.Parser<Opreate_RequestWsk_yxzd> PARSER =
        new com.google.protobuf.AbstractParser<Opreate_RequestWsk_yxzd>() {
      public Opreate_RequestWsk_yxzd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Opreate_RequestWsk_yxzd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Opreate_RequestWsk_yxzd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 opreate_type = 1;
    public static final int OPREATE_TYPE_FIELD_NUMBER = 1;
    private int opreateType_;
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
     * </pre>
     */
    public boolean hasOpreateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 opreate_type = 1;</code>
     *
     * <pre>
     *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
     * </pre>
     */
    public int getOpreateType() {
      return opreateType_;
    }

    // optional int32 seat_index = 2;
    public static final int SEAT_INDEX_FIELD_NUMBER = 2;
    private int seatIndex_;
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *出牌位置
     * </pre>
     */
    public boolean hasSeatIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_index = 2;</code>
     *
     * <pre>
     *出牌位置
     * </pre>
     */
    public int getSeatIndex() {
      return seatIndex_;
    }

    // repeated int32 cards_data = 3;
    public static final int CARDS_DATA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardsData_;
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsDataList() {
      return cardsData_;
    }
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public int getCardsDataCount() {
      return cardsData_.size();
    }
    /**
     * <code>repeated int32 cards_data = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public int getCardsData(int index) {
      return cardsData_.get(index);
    }

    // optional int32 out_type = 4;
    public static final int OUT_TYPE_FIELD_NUMBER = 4;
    private int outType_;
    /**
     * <code>optional int32 out_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasOutType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 out_type = 4;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getOutType() {
      return outType_;
    }

    // optional int32 fan_pai_index = 5;
    public static final int FAN_PAI_INDEX_FIELD_NUMBER = 5;
    private int fanPaiIndex_;
    /**
     * <code>optional int32 fan_pai_index = 5;</code>
     */
    public boolean hasFanPaiIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fan_pai_index = 5;</code>
     */
    public int getFanPaiIndex() {
      return fanPaiIndex_;
    }

    private void initFields() {
      opreateType_ = 0;
      seatIndex_ = 0;
      cardsData_ = java.util.Collections.emptyList();
      outType_ = 0;
      fanPaiIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatIndex_);
      }
      for (int i = 0; i < cardsData_.size(); i++) {
        output.writeInt32(3, cardsData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, outType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, fanPaiIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opreateType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsData_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsDataList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, outType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, fanPaiIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yxzd.Opreate_RequestWsk_yxzd}
     *
     * <pre>
     *请求 1082
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Opreate_RequestWsk_yxzd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.class, protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.Builder.class);
      }

      // Construct using protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opreateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        outType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fanPaiIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd getDefaultInstanceForType() {
        return protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.getDefaultInstance();
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd build() {
        protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd buildPartial() {
        protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd result = new protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opreateType_ = opreateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatIndex_ = seatIndex_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = java.util.Collections.unmodifiableList(cardsData_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardsData_ = cardsData_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.outType_ = outType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fanPaiIndex_ = fanPaiIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd) {
          return mergeFrom((protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd other) {
        if (other == protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd.getDefaultInstance()) return this;
        if (other.hasOpreateType()) {
          setOpreateType(other.getOpreateType());
        }
        if (other.hasSeatIndex()) {
          setSeatIndex(other.getSeatIndex());
        }
        if (!other.cardsData_.isEmpty()) {
          if (cardsData_.isEmpty()) {
            cardsData_ = other.cardsData_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsDataIsMutable();
            cardsData_.addAll(other.cardsData_);
          }
          onChanged();
        }
        if (other.hasOutType()) {
          setOutType(other.getOutType());
        }
        if (other.hasFanPaiIndex()) {
          setFanPaiIndex(other.getFanPaiIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.yxzd.yxzdkRsp.Opreate_RequestWsk_yxzd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 opreate_type = 1;
      private int opreateType_ ;
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
       * </pre>
       */
      public boolean hasOpreateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
       * </pre>
       */
      public int getOpreateType() {
        return opreateType_;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
       * </pre>
       */
      public Builder setOpreateType(int value) {
        bitField0_ |= 0x00000001;
        opreateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 opreate_type = 1;</code>
       *
       * <pre>
       *1：出牌 2翻牌 3一拖二 4:接管队友手牌  5：取消接管队友手牌
       * </pre>
       */
      public Builder clearOpreateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opreateType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_index = 2;
      private int seatIndex_ ;
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *出牌位置
       * </pre>
       */
      public boolean hasSeatIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *出牌位置
       * </pre>
       */
      public int getSeatIndex() {
        return seatIndex_;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *出牌位置
       * </pre>
       */
      public Builder setSeatIndex(int value) {
        bitField0_ |= 0x00000002;
        seatIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_index = 2;</code>
       *
       * <pre>
       *出牌位置
       * </pre>
       */
      public Builder clearSeatIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards_data = 3;
      private java.util.List<java.lang.Integer> cardsData_ = java.util.Collections.emptyList();
      private void ensureCardsDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsData_ = new java.util.ArrayList<java.lang.Integer>(cardsData_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsDataList() {
        return java.util.Collections.unmodifiableList(cardsData_);
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public int getCardsDataCount() {
        return cardsData_.size();
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public int getCardsData(int index) {
        return cardsData_.get(index);
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setCardsData(
          int index, int value) {
        ensureCardsDataIsMutable();
        cardsData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addCardsData(int value) {
        ensureCardsDataIsMutable();
        cardsData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllCardsData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsDataIsMutable();
        super.addAll(values, cardsData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards_data = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearCardsData() {
        cardsData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 out_type = 4;
      private int outType_ ;
      /**
       * <code>optional int32 out_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasOutType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 out_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getOutType() {
        return outType_;
      }
      /**
       * <code>optional int32 out_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setOutType(int value) {
        bitField0_ |= 0x00000008;
        outType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 out_type = 4;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearOutType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        outType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fan_pai_index = 5;
      private int fanPaiIndex_ ;
      /**
       * <code>optional int32 fan_pai_index = 5;</code>
       */
      public boolean hasFanPaiIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 fan_pai_index = 5;</code>
       */
      public int getFanPaiIndex() {
        return fanPaiIndex_;
      }
      /**
       * <code>optional int32 fan_pai_index = 5;</code>
       */
      public Builder setFanPaiIndex(int value) {
        bitField0_ |= 0x00000010;
        fanPaiIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fan_pai_index = 5;</code>
       */
      public Builder clearFanPaiIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fanPaiIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:yxzd.Opreate_RequestWsk_yxzd)
    }

    static {
      defaultInstance = new Opreate_RequestWsk_yxzd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:yxzd.Opreate_RequestWsk_yxzd)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_GameStart_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_GameStart_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_OutCardDataWsk_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_OutCardDataWsk_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_RefreshScore_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_RefreshScore_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_FanPai_Result_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_FanPai_Result_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_PukeGameEndWsk_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_TableResponse_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_TableResponse_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_RefreshCardData_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_RefreshCardData_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_Refresh_Pai_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_Refresh_Pai_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_FanPai_Response_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_FanPai_Response_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_FanPai_Begin_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_FanPai_Begin_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_Contorl_Toward_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_Contorl_Toward_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_SendCard_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_SendCard_yxzd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_yxzd_Opreate_RequestWsk_yxzd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016wsk/yxzd.proto\022\004yxzd\032\024basic/protocol.p" +
      "roto\"j\n\016GameStart_yxzd\022\034\n\troom_info\030\001 \001(" +
      "\0132\t.RoomInfo\022$\n\007players\030\002 \003(\0132\023.RoomPlay" +
      "erResponse\022\024\n\014display_time\030\003 \001(\005\"\362\003\n\023Out" +
      "CardDataWsk_yxzd\022\027\n\017out_card_player\030\001 \001(" +
      "\005\022\022\n\ncards_data\030\002 \003(\005\022\023\n\013cards_count\030\003 \001" +
      "(\005\022\021\n\tcard_type\030\004 \001(\005\022\022\n\ncur_player\030\005 \001(" +
      "\005\022\025\n\rpr_cards_data\030\006 \003(\005\022\026\n\016pr_cards_cou" +
      "nt\030\007 \001(\005\022\030\n\020pr_out_card_type\030\010 \001(\005\022\024\n\014is" +
      "_first_out\030\t \001(\010\022\024\n\014display_time\030\n \001(\005\022\031",
      "\n\021user_can_out_data\030\013 \003(\005\022\032\n\022user_can_ou" +
      "t_count\030\014 \001(\005\022\026\n\016user_get_score\030\r \003(\005\022\027\n" +
      "\017hand_card_count\030\016 \003(\005\022,\n\017hand_cards_dat" +
      "a\030\017 \003(\0132\023.Int32ArrayResponse\022\021\n\twin_orde" +
      "r\030\020 \003(\005\022\034\n\024is_current_first_out\030\021 \001(\005\022\036\n" +
      "\026is_can_out_friendcards\030\022 \001(\010\022\026\n\016is_can_" +
      "opreate\030\023 \001(\010\"b\n\021RefreshScore_yxzd\022\021\n\tge" +
      "t_score\030\001 \003(\005\022\023\n\013table_score\030\002 \001(\005\022\021\n\tse" +
      "at_team\030\003 \003(\005\022\022\n\ngame_score\030\004 \003(\005\"6\n\022Fan" +
      "Pai_Result_yxzd\022\r\n\005chair\030\001 \001(\005\022\021\n\tcard_d",
      "ata\030\002 \001(\005\"\211\004\n\023PukeGameEndWsk_yxzd\022\034\n\troo" +
      "m_info\030\001 \001(\0132\t.RoomInfo\022\021\n\tcur_round\030\002 \001" +
      "(\005\022\022\n\ngame_round\030\003 \001(\005\022\022\n\ncard_count\030\004 \003" +
      "(\005\022\'\n\ncards_data\030\005 \003(\0132\023.Int32ArrayRespo" +
      "nse\022\021\n\tend_score\030\007 \003(\005\022\024\n\014reward_score\030\010" +
      " \003(\005\022\025\n\rbanker_player\030\013 \001(\005\022\016\n\006reason\030\014 " +
      "\001(\005\022\016\n\006di_fen\030\r \003(\005\022\021\n\twin_order\030\016 \003(\005\022\021" +
      "\n\tget_score\030\022 \003(\005\022\021\n\tseat_team\030\024 \003(\005\022\023\n\013" +
      "di_pai_card\030\026 \003(\005\022\025\n\rall_end_score\030\017 \003(\005" +
      "\022+\n\016end_score_info\030\020 \003(\0132\023.Int32ArrayRes",
      "ponse\022+\n\016win_order_info\030\021 \003(\0132\023.Int32Arr" +
      "ayResponse\022+\n\016get_score_info\030\023 \003(\0132\023.Int" +
      "32ArrayResponse\022$\n\007players\030\025 \003(\0132\023.RoomP" +
      "layerResponse\"\353\004\n\022TableResponse_yxzd\022\025\n\r" +
      "banker_player\030\001 \001(\005\022\026\n\016current_player\030\002 " +
      "\001(\005\022\023\n\013prev_player\030\003 \001(\005\022\017\n\007trustee\030\004 \003(" +
      "\010\022+\n\016out_cards_data\030\005 \003(\0132\023.Int32ArrayRe" +
      "sponse\022\027\n\017out_cards_count\030\006 \003(\005\022\023\n\013playe" +
      "r_pass\030\007 \003(\005\022\021\n\tcard_type\030\010 \003(\005\022\032\n\022pr_ou" +
      "t_card_player\030\t \001(\005\022\025\n\rpr_cards_data\030\n \003",
      "(\005\022\026\n\016pr_cards_count\030\013 \001(\005\022\030\n\020pr_out_car" +
      "d_type\030\014 \001(\005\022\024\n\014is_first_out\030\r \001(\005\022\024\n\014di" +
      "splay_time\030\016 \001(\005\022\022\n\ncard_count\030\017 \003(\005\022\'\n\n" +
      "cards_data\030\020 \003(\0132\023.Int32ArrayResponse\022\034\n" +
      "\troom_info\030\021 \001(\0132\t.RoomInfo\022$\n\007players\030\022" +
      " \003(\0132\023.RoomPlayerResponse\022\031\n\021user_can_ou" +
      "t_data\030\023 \003(\005\022\032\n\022user_can_out_count\030\024 \001(\005" +
      "\022\021\n\twin_order\030\025 \003(\005\022\036\n\026is_can_out_friend" +
      "cards\030\026 \001(\010\022\026\n\016is_can_opreate\030\027 \001(\010\"]\n\024R" +
      "efreshCardData_yxzd\022\027\n\017hand_card_count\030\001",
      " \003(\005\022,\n\017hand_cards_data\030\002 \003(\0132\023.Int32Arr" +
      "ayResponse\"N\n\020Refresh_Pai_yxzd\022\022\n\nseat_i" +
      "ndex\030\001 \001(\005\022\022\n\ncards_data\030\002 \003(\005\022\022\n\ncard_c" +
      "ount\030\003 \001(\005\"}\n\024FanPai_Response_yxzd\022\025\n\rco" +
      "ntrol_index\030\001 \001(\005\022\022\n\ncard_index\030\002 \001(\005\022\021\n" +
      "\tcard_data\030\003 \003(\005\022\024\n\014display_time\030\004 \001(\005\022\021" +
      "\n\tcur_index\030\005 \001(\005\"O\n\021FanPai_Begin_yxzd\022\021" +
      "\n\tcur_index\030\001 \001(\005\022\021\n\tcard_data\030\002 \003(\005\022\024\n\014" +
      "display_time\030\003 \001(\005\"#\n\023Contorl_Toward_yxz" +
      "d\022\014\n\004type\030\001 \001(\005\"L\n\rSendCard_yxzd\022\022\n\ncard",
      "_count\030\001 \003(\005\022\'\n\ncards_data\030\002 \003(\0132\023.Int32" +
      "ArrayResponse\"\200\001\n\027Opreate_RequestWsk_yxz" +
      "d\022\024\n\014opreate_type\030\001 \001(\005\022\022\n\nseat_index\030\002 " +
      "\001(\005\022\022\n\ncards_data\030\003 \003(\005\022\020\n\010out_type\030\004 \001(" +
      "\005\022\025\n\rfan_pai_index\030\005 \001(\005B\037\n\023protobuf.cla" +
      "zz.yxzdB\010yxzdkRsp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_yxzd_GameStart_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_yxzd_GameStart_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_GameStart_yxzd_descriptor,
              new java.lang.String[] { "RoomInfo", "Players", "DisplayTime", });
          internal_static_yxzd_OutCardDataWsk_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_yxzd_OutCardDataWsk_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_OutCardDataWsk_yxzd_descriptor,
              new java.lang.String[] { "OutCardPlayer", "CardsData", "CardsCount", "CardType", "CurPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "IsFirstOut", "DisplayTime", "UserCanOutData", "UserCanOutCount", "UserGetScore", "HandCardCount", "HandCardsData", "WinOrder", "IsCurrentFirstOut", "IsCanOutFriendcards", "IsCanOpreate", });
          internal_static_yxzd_RefreshScore_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_yxzd_RefreshScore_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_RefreshScore_yxzd_descriptor,
              new java.lang.String[] { "GetScore", "TableScore", "SeatTeam", "GameScore", });
          internal_static_yxzd_FanPai_Result_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_yxzd_FanPai_Result_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_FanPai_Result_yxzd_descriptor,
              new java.lang.String[] { "Chair", "CardData", });
          internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_yxzd_PukeGameEndWsk_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_PukeGameEndWsk_yxzd_descriptor,
              new java.lang.String[] { "RoomInfo", "CurRound", "GameRound", "CardCount", "CardsData", "EndScore", "RewardScore", "BankerPlayer", "Reason", "DiFen", "WinOrder", "GetScore", "SeatTeam", "DiPaiCard", "AllEndScore", "EndScoreInfo", "WinOrderInfo", "GetScoreInfo", "Players", });
          internal_static_yxzd_TableResponse_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_yxzd_TableResponse_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_TableResponse_yxzd_descriptor,
              new java.lang.String[] { "BankerPlayer", "CurrentPlayer", "PrevPlayer", "Trustee", "OutCardsData", "OutCardsCount", "PlayerPass", "CardType", "PrOutCardPlayer", "PrCardsData", "PrCardsCount", "PrOutCardType", "IsFirstOut", "DisplayTime", "CardCount", "CardsData", "RoomInfo", "Players", "UserCanOutData", "UserCanOutCount", "WinOrder", "IsCanOutFriendcards", "IsCanOpreate", });
          internal_static_yxzd_RefreshCardData_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_yxzd_RefreshCardData_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_RefreshCardData_yxzd_descriptor,
              new java.lang.String[] { "HandCardCount", "HandCardsData", });
          internal_static_yxzd_Refresh_Pai_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_yxzd_Refresh_Pai_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_Refresh_Pai_yxzd_descriptor,
              new java.lang.String[] { "SeatIndex", "CardsData", "CardCount", });
          internal_static_yxzd_FanPai_Response_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_yxzd_FanPai_Response_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_FanPai_Response_yxzd_descriptor,
              new java.lang.String[] { "ControlIndex", "CardIndex", "CardData", "DisplayTime", "CurIndex", });
          internal_static_yxzd_FanPai_Begin_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_yxzd_FanPai_Begin_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_FanPai_Begin_yxzd_descriptor,
              new java.lang.String[] { "CurIndex", "CardData", "DisplayTime", });
          internal_static_yxzd_Contorl_Toward_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_yxzd_Contorl_Toward_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_Contorl_Toward_yxzd_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_yxzd_SendCard_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_yxzd_SendCard_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_SendCard_yxzd_descriptor,
              new java.lang.String[] { "CardCount", "CardsData", });
          internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_yxzd_Opreate_RequestWsk_yxzd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_yxzd_Opreate_RequestWsk_yxzd_descriptor,
              new java.lang.String[] { "OpreateType", "SeatIndex", "CardsData", "OutType", "FanPaiIndex", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
